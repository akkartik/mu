===: main
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((stdin channel-address)) <- ((init-channel)) ((1 literal))) -- nil
c{0: 2 (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal))) -- nil
c{0: 3 (((initial-position integer-array-address)) <- ((init-array)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal))) -- nil
c{0: 4 (((b board-address)) <- ((init-board)) ((initial-position integer-array-address))) -- nil
c{0: 5 (((m move-address)) <- ((new)) ((move literal))) -- nil
c{0: 6 (((f integer-integer-pair-address)) <- ((get-address)) ((m move-address) (deref)) ((from offset))) -- nil
c{0: 7 (((dest integer-address)) <- ((get-address)) ((f integer-integer-pair-address) (deref)) ((0 offset))) -- nil
c{0: 8 (((dest integer-address) (deref)) <- ((copy)) ((0 literal))) -- nil
c{0: 9 (((dest integer-address)) <- ((get-address)) ((f integer-integer-pair-address) (deref)) ((1 offset))) -- nil
c{0: 10 (((dest integer-address) (deref)) <- ((copy)) ((1 literal))) -- nil
c{0: 11 (((t0 integer-integer-pair-address)) <- ((get-address)) ((m move-address) (deref)) ((to offset))) -- nil
c{0: 12 (((dest integer-address)) <- ((get-address)) ((t0 integer-integer-pair-address) (deref)) ((0 offset))) -- nil
c{0: 13 (((dest integer-address) (deref)) <- ((copy)) ((0 literal))) -- nil
c{0: 14 (((dest integer-address)) <- ((get-address)) ((t0 integer-integer-pair-address) (deref)) ((1 offset))) -- nil
c{0: 15 (((dest integer-address) (deref)) <- ((copy)) ((3 literal))) -- nil
c{0: 16 (((b board-address)) <- ((make-move)) ((b board-address)) ((m move-address))) -- nil
c{0: 17 (((print-board)) ((screen terminal-address)) ((b board-address))) -- nil
c{0: 18 (((1 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((stdin channel-address)) <- ((init-channel)) ((1 literal)))
c{1: 2 ✓ (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
c{1: 3 ✓ (((initial-position integer-array-address)) <- ((init-array)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)))
c{1: 4 ✓ (((b board-address)) <- ((init-board)) ((initial-position integer-array-address)))
c{1: 5 ✓ (((m move-address)) <- ((new)) ((move literal)))
c{1: 6 ✓ (((f integer-integer-pair-address)) <- ((get-address)) ((m move-address) (deref)) ((from offset)))
c{1: 7 ✓ (((dest integer-address)) <- ((get-address)) ((f integer-integer-pair-address) (deref)) ((0 offset)))
c{1: 8 ✓ (((dest integer-address) (deref)) <- ((copy)) ((0 literal)))
c{1: 9 ✓ (((dest integer-address)) <- ((get-address)) ((f integer-integer-pair-address) (deref)) ((1 offset)))
c{1: 10 ✓ (((dest integer-address) (deref)) <- ((copy)) ((1 literal)))
c{1: 11 ✓ (((t0 integer-integer-pair-address)) <- ((get-address)) ((m move-address) (deref)) ((to offset)))
c{1: 12 ✓ (((dest integer-address)) <- ((get-address)) ((t0 integer-integer-pair-address) (deref)) ((0 offset)))
c{1: 13 ✓ (((dest integer-address) (deref)) <- ((copy)) ((0 literal)))
c{1: 14 ✓ (((dest integer-address)) <- ((get-address)) ((t0 integer-integer-pair-address) (deref)) ((1 offset)))
c{1: 15 ✓ (((dest integer-address) (deref)) <- ((copy)) ((3 literal)))
c{1: 16 ✓ (((b board-address)) <- ((make-move)) ((b board-address)) ((m move-address)))
c{1: 17 ✓ (((print-board)) ((screen terminal-address)) ((b board-address)))
c{1: 18 ✓ (((1 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset)))
cn0: convert-names in main
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((stdin channel-address)) <- ((init-channel)) ((1 literal))) nil nil
cn0: checking arg ((1 literal))
cn0: checking oarg ((stdin channel-address))
maybe-add: ((stdin channel-address))
cn0: location for oarg ((stdin channel-address)): 1
cn0: (((screen terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal))) ((stdin 1)) nil
cn0: checking arg ((20 literal))
cn0: checking arg ((10 literal))
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 2
cn0: (((initial-position integer-array-address)) <- ((init-array)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal))) ((screen 2) (stdin 1)) nil
cn0: checking arg ((R literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((r literal))
cn0: checking arg ((N literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((n literal))
cn0: checking arg ((B literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((b literal))
cn0: checking arg ((Q literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((q literal))
cn0: checking arg ((K literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((k literal))
cn0: checking arg ((B literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((b literal))
cn0: checking arg ((N literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((n literal))
cn0: checking arg ((R literal))
cn0: checking arg ((P literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((_ literal))
cn0: checking arg ((p literal))
cn0: checking arg ((r literal))
cn0: checking oarg ((initial-position integer-array-address))
maybe-add: ((initial-position integer-array-address))
cn0: location for oarg ((initial-position integer-array-address)): 3
cn0: (((b board-address)) <- ((init-board)) ((initial-position integer-array-address))) ((initial-position 3) (screen 2) (stdin 1)) nil
cn0: checking arg ((initial-position integer-array-address))
maybe-add: ((initial-position integer-array-address))
cn0: checking oarg ((b board-address))
maybe-add: ((b board-address))
cn0: location for oarg ((b board-address)): 4
cn0: (((m move-address)) <- ((new)) ((move literal))) ((b 4) (initial-position 3) (screen 2) (stdin 1)) nil
cn0: checking arg ((move literal))
cn0: checking oarg ((m move-address))
maybe-add: ((m move-address))
cn0: location for oarg ((m move-address)): 5
cn0: (((f integer-integer-pair-address)) <- ((get-address)) ((m move-address) (deref)) ((from offset))) ((b 4) (initial-position 3) (m 5) (screen 2) (stdin 1)) nil
cn0: field-access from in mmove-addressderef of type move
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((m move-address) (deref))
maybe-add: ((m move-address) (deref))
cn0: checking arg ((from offset))
cn0: checking oarg ((f integer-integer-pair-address))
maybe-add: ((f integer-integer-pair-address))
cn0: location for oarg ((f integer-integer-pair-address)): 6
cn0: (((dest integer-address)) <- ((get-address)) ((f integer-integer-pair-address) (deref)) ((0 offset))) ((b 4) (f 6) (from 0) (initial-position 3) (m 5) (screen 2) (stdin 1)) ((from t))
cn0: field-access 0 in finteger-integer-pair-addressderef of type integer-integer-pair
cn0: checking arg ((f integer-integer-pair-address) (deref))
maybe-add: ((f integer-integer-pair-address) (deref))
cn0: checking arg ((0 offset))
cn0: checking oarg ((dest integer-address))
maybe-add: ((dest integer-address))
cn0: location for oarg ((dest integer-address)): 7
cn0: (((dest integer-address) (deref)) <- ((copy)) ((0 literal))) ((b 4) (dest 7) (f 6) (from 0) (initial-position 3) (m 5) (screen 2) (stdin 1)) ((from t))
cn0: checking arg ((0 literal))
cn0: checking oarg ((dest integer-address) (deref))
maybe-add: ((dest integer-address) (deref))
cn0: (((dest integer-address)) <- ((get-address)) ((f integer-integer-pair-address) (deref)) ((1 offset))) ((b 4) (dest 7) (f 6) (from 0) (initial-position 3) (m 5) (screen 2) (stdin 1)) ((from t))
cn0: field-access 1 in finteger-integer-pair-addressderef of type integer-integer-pair
cn0: checking arg ((f integer-integer-pair-address) (deref))
maybe-add: ((f integer-integer-pair-address) (deref))
cn0: checking arg ((1 offset))
cn0: checking oarg ((dest integer-address))
maybe-add: ((dest integer-address))
cn0: (((dest integer-address) (deref)) <- ((copy)) ((1 literal))) ((b 4) (dest 7) (f 6) (from 0) (initial-position 3) (m 5) (screen 2) (stdin 1)) ((from t))
cn0: checking arg ((1 literal))
cn0: checking oarg ((dest integer-address) (deref))
maybe-add: ((dest integer-address) (deref))
cn0: (((t0 integer-integer-pair-address)) <- ((get-address)) ((m move-address) (deref)) ((to offset))) ((b 4) (dest 7) (f 6) (from 0) (initial-position 3) (m 5) (screen 2) (stdin 1)) ((from t))
cn0: field-access to in mmove-addressderef of type move
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((m move-address) (deref))
maybe-add: ((m move-address) (deref))
cn0: checking arg ((to offset))
cn0: checking oarg ((t0 integer-integer-pair-address))
maybe-add: ((t0 integer-integer-pair-address))
cn0: location for oarg ((t0 integer-integer-pair-address)): 8
cn0: (((dest integer-address)) <- ((get-address)) ((t0 integer-integer-pair-address) (deref)) ((0 offset))) ((b 4) (dest 7) (f 6) (from 0) (initial-position 3) (m 5) (screen 2) (stdin 1) (t0 8) (to 1)) ((from t) (to t))
cn0: field-access 0 in t0integer-integer-pair-addressderef of type integer-integer-pair
cn0: checking arg ((t0 integer-integer-pair-address) (deref))
maybe-add: ((t0 integer-integer-pair-address) (deref))
cn0: checking arg ((0 offset))
cn0: checking oarg ((dest integer-address))
maybe-add: ((dest integer-address))
cn0: (((dest integer-address) (deref)) <- ((copy)) ((0 literal))) ((b 4) (dest 7) (f 6) (from 0) (initial-position 3) (m 5) (screen 2) (stdin 1) (t0 8) (to 1)) ((from t) (to t))
cn0: checking arg ((0 literal))
cn0: checking oarg ((dest integer-address) (deref))
maybe-add: ((dest integer-address) (deref))
cn0: (((dest integer-address)) <- ((get-address)) ((t0 integer-integer-pair-address) (deref)) ((1 offset))) ((b 4) (dest 7) (f 6) (from 0) (initial-position 3) (m 5) (screen 2) (stdin 1) (t0 8) (to 1)) ((from t) (to t))
cn0: field-access 1 in t0integer-integer-pair-addressderef of type integer-integer-pair
cn0: checking arg ((t0 integer-integer-pair-address) (deref))
maybe-add: ((t0 integer-integer-pair-address) (deref))
cn0: checking arg ((1 offset))
cn0: checking oarg ((dest integer-address))
maybe-add: ((dest integer-address))
cn0: (((dest integer-address) (deref)) <- ((copy)) ((3 literal))) ((b 4) (dest 7) (f 6) (from 0) (initial-position 3) (m 5) (screen 2) (stdin 1) (t0 8) (to 1)) ((from t) (to t))
cn0: checking arg ((3 literal))
cn0: checking oarg ((dest integer-address) (deref))
maybe-add: ((dest integer-address) (deref))
cn0: (((b board-address)) <- ((make-move)) ((b board-address)) ((m move-address))) ((b 4) (dest 7) (f 6) (from 0) (initial-position 3) (m 5) (screen 2) (stdin 1) (t0 8) (to 1)) ((from t) (to t))
cn0: checking arg ((b board-address))
maybe-add: ((b board-address))
cn0: checking arg ((m move-address))
maybe-add: ((m move-address))
cn0: checking oarg ((b board-address))
maybe-add: ((b board-address))
cn0: (((print-board)) ((screen terminal-address)) ((b board-address))) ((b 4) (dest 7) (f 6) (from 0) (initial-position 3) (m 5) (screen 2) (stdin 1) (t0 8) (to 1)) ((from t) (to t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((b board-address))
maybe-add: ((b board-address))
cn0: (((1 string-address) (raw)) <- ((get)) ((screen terminal-address) (deref)) ((data offset))) ((b 4) (dest 7) (f 6) (from 0) (initial-position 3) (m 5) (screen 2) (stdin 1) (t0 8) (to 1)) ((from t) (to t))
cn0: field-access data in screenterminal-addressderef of type terminal
cn0: new field; computing location
cn0: field location 4
cn0: checking arg ((screen terminal-address) (deref))
maybe-add: ((screen terminal-address) (deref))
cn0: checking arg ((data offset))
cn0: checking oarg ((1 string-address) (raw))
maybe-add: ((1 string-address) (raw))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((1 channel-address)) <- ((init-channel)) ((1 literal)))
cn1: (((2 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
cn1: (((3 integer-array-address)) <- ((init-array)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)))
cn1: (((4 board-address)) <- ((init-board)) ((3 integer-array-address)))
cn1: (((5 move-address)) <- ((new)) ((move literal)))
cn1: (((6 integer-integer-pair-address)) <- ((get-address)) ((5 move-address) (deref)) ((0 offset)))
cn1: (((7 integer-address)) <- ((get-address)) ((6 integer-integer-pair-address) (deref)) ((0 offset)))
cn1: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
cn1: (((7 integer-address)) <- ((get-address)) ((6 integer-integer-pair-address) (deref)) ((1 offset)))
cn1: (((7 integer-address) (deref)) <- ((copy)) ((1 literal)))
cn1: (((8 integer-integer-pair-address)) <- ((get-address)) ((5 move-address) (deref)) ((1 offset)))
cn1: (((7 integer-address)) <- ((get-address)) ((8 integer-integer-pair-address) (deref)) ((0 offset)))
cn1: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
cn1: (((7 integer-address)) <- ((get-address)) ((8 integer-integer-pair-address) (deref)) ((1 offset)))
cn1: (((7 integer-address) (deref)) <- ((copy)) ((3 literal)))
cn1: (((4 board-address)) <- ((make-move)) ((4 board-address)) ((5 move-address)))
cn1: (((print-board)) ((2 terminal-address)) ((4 board-address)))
cn1: (((1 string-address) (raw)) <- ((get)) ((2 terminal-address) (deref)) ((4 offset)))
schedule: main
run: main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
run: main 0: 1000 => ((default-space space-address))
run: main 1: (((1 channel-address)) <- ((init-channel)) ((1 literal)))
run: init-channel/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-channel/main 0: 1031 => ((default-space space-address))
run: init-channel/main 1: (((1 channel-address)) <- ((new)) ((channel literal)))
run: init-channel/main 1: 1062 => ((1 channel-address))
mem: ((1 channel-address)): 1033 <= 1062
run: init-channel/main 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: init-channel/main 2: 1062 => ((2 integer-address))
mem: ((2 integer-address)): 1034 <= 1062
run: init-channel/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-channel/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1062 <= 0
run: init-channel/main 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: init-channel/main 4: 1063 => ((3 integer-address))
mem: ((3 integer-address)): 1035 <= 1063
run: init-channel/main 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-channel/main 5: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1063 <= 0
run: init-channel/main 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (1)
run: init-channel/main 6: 1 => ((4 integer))
mem: ((4 integer)): 1036 <= 1
run: init-channel/main 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-channel/main 7: 2 => ((4 integer))
mem: ((4 integer)): 1036 <= 2
run: init-channel/main 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
run: init-channel/main 8: 1064 => ((5 tagged-value-array-address-address))
mem: ((5 tagged-value-array-address-address)): 1037 <= 1064
run: init-channel/main 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
mem: ((4 integer)) => 2
run: init-channel/main 9: 1065 => ((5 tagged-value-array-address-address) (deref))
mem: ((5 tagged-value-array-address-address) (deref)): 1064 <= 1065
run: init-channel/main 10: (((reply)) ((1 channel-address)))
mem: ((1 channel-address)) => 1062
run: main 1: 1062 => ((1 channel-address))
mem: ((1 channel-address)): 1002 <= 1062
run: main 2: (((2 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
run: init-fake-terminal/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
run: init-fake-terminal/main 0: 1070 => ((default-space space-address))
run: init-fake-terminal/main 1: (((1 terminal-address)) <- ((new)) ((terminal literal)))
run: init-fake-terminal/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 1072 <= 1101
run: init-fake-terminal/main 2: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((1 offset)))
run: init-fake-terminal/main 2: 1102 => ((2 integer-address))
mem: ((2 integer-address)): 1073 <= 1102
run: init-fake-terminal/main 3: (((2 integer-address) (deref)) <- ((next-input)))
arg: nil 0 (20 10)
run: init-fake-terminal/main 3: 20 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1102 <= 20
run: init-fake-terminal/main 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((0 offset)))
run: init-fake-terminal/main 4: 1101 => ((3 integer-address))
mem: ((3 integer-address)): 1074 <= 1101
run: init-fake-terminal/main 5: (((3 integer-address) (deref)) <- ((next-input)))
arg: nil 1 (20 10)
run: init-fake-terminal/main 5: 10 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1101 <= 10
run: init-fake-terminal/main 6: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: init-fake-terminal/main 6: 1103 => ((4 integer-address))
mem: ((4 integer-address)): 1075 <= 1103
run: init-fake-terminal/main 7: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-fake-terminal/main 7: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1103 <= 0
run: init-fake-terminal/main 8: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: init-fake-terminal/main 8: 1104 => ((5 integer-address))
mem: ((5 integer-address)): 1076 <= 1104
run: init-fake-terminal/main 9: (((5 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-fake-terminal/main 9: 0 => ((5 integer-address) (deref))
mem: ((5 integer-address) (deref)): 1104 <= 0
run: init-fake-terminal/main 10: (((6 integer)) <- ((multiply)) ((2 integer-address) (deref)) ((3 integer-address) (deref)))
mem: ((2 integer-address) (deref)) => 20
mem: ((3 integer-address) (deref)) => 10
run: init-fake-terminal/main 10: 200 => ((6 integer))
mem: ((6 integer)): 1077 <= 200
run: init-fake-terminal/main 11: (((7 string-address-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((4 offset)))
run: init-fake-terminal/main 11: 1105 => ((7 string-address-address))
mem: ((7 string-address-address)): 1078 <= 1105
run: init-fake-terminal/main 12: (((7 string-address-address) (deref)) <- ((new)) ((string literal)) ((6 integer)))
mem: ((6 integer)) => 200
run: init-fake-terminal/main 12: 1106 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 1105 <= 1106
run: init-fake-terminal/main 13: (((clear-screen)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: clear-screen/init-fake-terminal/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: clear-screen/init-fake-terminal/main 0: 1307 => ((default-space space-address))
run: clear-screen/init-fake-terminal/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: clear-screen/init-fake-terminal/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 1309 <= 1101
run: clear-screen/init-fake-terminal/main 2: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: clear-screen/init-fake-terminal/main 3: (((2 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: clear-screen/init-fake-terminal/main 3: 1106 => ((2 string-address))
mem: ((2 string-address)): 1310 <= 1106
run: clear-screen/init-fake-terminal/main 4: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 4: 200 => ((3 integer))
mem: ((3 integer)): 1311 <= 200
run: clear-screen/init-fake-terminal/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: clear-screen/init-fake-terminal/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1312 <= 0
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1107 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1107
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1107 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: clear-screen/init-fake-terminal/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1312 <= 1
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1108 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1108
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1108 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: clear-screen/init-fake-terminal/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1312 <= 2
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1109 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1109
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1109 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: clear-screen/init-fake-terminal/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1312 <= 3
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1110 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1110
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1110 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: clear-screen/init-fake-terminal/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1312 <= 4
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1111 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1111
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1111 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: clear-screen/init-fake-terminal/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1312 <= 5
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1112 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1112
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1112 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: clear-screen/init-fake-terminal/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1312 <= 6
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1113 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1113
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1113 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: clear-screen/init-fake-terminal/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1312 <= 7
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1114 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1114
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1114 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: clear-screen/init-fake-terminal/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1312 <= 8
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1115 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1115
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1115 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: clear-screen/init-fake-terminal/main 10: 9 => ((4 integer))
mem: ((4 integer)): 1312 <= 9
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1116 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1116
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1116 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: clear-screen/init-fake-terminal/main 10: 10 => ((4 integer))
mem: ((4 integer)): 1312 <= 10
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1117 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1117
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1117 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: clear-screen/init-fake-terminal/main 10: 11 => ((4 integer))
mem: ((4 integer)): 1312 <= 11
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1118 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1118
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1118 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: clear-screen/init-fake-terminal/main 10: 12 => ((4 integer))
mem: ((4 integer)): 1312 <= 12
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1119 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1119
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1119 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: clear-screen/init-fake-terminal/main 10: 13 => ((4 integer))
mem: ((4 integer)): 1312 <= 13
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1120 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1120
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1120 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: clear-screen/init-fake-terminal/main 10: 14 => ((4 integer))
mem: ((4 integer)): 1312 <= 14
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1121 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1121
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1121 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: clear-screen/init-fake-terminal/main 10: 15 => ((4 integer))
mem: ((4 integer)): 1312 <= 15
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1122 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1122
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1122 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: clear-screen/init-fake-terminal/main 10: 16 => ((4 integer))
mem: ((4 integer)): 1312 <= 16
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1123 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1123
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1123 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: clear-screen/init-fake-terminal/main 10: 17 => ((4 integer))
mem: ((4 integer)): 1312 <= 17
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1124 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1124
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1124 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: clear-screen/init-fake-terminal/main 10: 18 => ((4 integer))
mem: ((4 integer)): 1312 <= 18
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1125 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1125
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1125 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: clear-screen/init-fake-terminal/main 10: 19 => ((4 integer))
mem: ((4 integer)): 1312 <= 19
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 19
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1126 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1126
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1126 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 19
run: clear-screen/init-fake-terminal/main 10: 20 => ((4 integer))
mem: ((4 integer)): 1312 <= 20
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 20
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 20
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1127 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1127
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1127 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 20
run: clear-screen/init-fake-terminal/main 10: 21 => ((4 integer))
mem: ((4 integer)): 1312 <= 21
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 21
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 21
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1128 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1128
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1128 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 21
run: clear-screen/init-fake-terminal/main 10: 22 => ((4 integer))
mem: ((4 integer)): 1312 <= 22
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 22
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 22
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1129 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1129
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1129 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 22
run: clear-screen/init-fake-terminal/main 10: 23 => ((4 integer))
mem: ((4 integer)): 1312 <= 23
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 23
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 23
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1130 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1130
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1130 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 23
run: clear-screen/init-fake-terminal/main 10: 24 => ((4 integer))
mem: ((4 integer)): 1312 <= 24
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 24
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 24
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1131 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1131
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1131 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 24
run: clear-screen/init-fake-terminal/main 10: 25 => ((4 integer))
mem: ((4 integer)): 1312 <= 25
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 25
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 25
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1132 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1132
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1132 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 25
run: clear-screen/init-fake-terminal/main 10: 26 => ((4 integer))
mem: ((4 integer)): 1312 <= 26
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 26
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1133 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1133
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1133 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 26
run: clear-screen/init-fake-terminal/main 10: 27 => ((4 integer))
mem: ((4 integer)): 1312 <= 27
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 27
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 27
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1134 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1134
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1134 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 27
run: clear-screen/init-fake-terminal/main 10: 28 => ((4 integer))
mem: ((4 integer)): 1312 <= 28
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 28
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 28
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1135 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1135
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1135 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 28
run: clear-screen/init-fake-terminal/main 10: 29 => ((4 integer))
mem: ((4 integer)): 1312 <= 29
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 29
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 29
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1136 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1136
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1136 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 29
run: clear-screen/init-fake-terminal/main 10: 30 => ((4 integer))
mem: ((4 integer)): 1312 <= 30
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 30
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 30
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1137 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1137
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1137 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 30
run: clear-screen/init-fake-terminal/main 10: 31 => ((4 integer))
mem: ((4 integer)): 1312 <= 31
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 31
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 31
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1138 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1138
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1138 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 31
run: clear-screen/init-fake-terminal/main 10: 32 => ((4 integer))
mem: ((4 integer)): 1312 <= 32
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 32
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 32
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1139 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1139
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1139 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 32
run: clear-screen/init-fake-terminal/main 10: 33 => ((4 integer))
mem: ((4 integer)): 1312 <= 33
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 33
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 33
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1140 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1140
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1140 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 33
run: clear-screen/init-fake-terminal/main 10: 34 => ((4 integer))
mem: ((4 integer)): 1312 <= 34
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 34
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 34
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1141 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1141
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1141 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 34
run: clear-screen/init-fake-terminal/main 10: 35 => ((4 integer))
mem: ((4 integer)): 1312 <= 35
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 35
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 35
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1142 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1142
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1142 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 35
run: clear-screen/init-fake-terminal/main 10: 36 => ((4 integer))
mem: ((4 integer)): 1312 <= 36
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 36
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 36
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1143 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1143
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1143 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 36
run: clear-screen/init-fake-terminal/main 10: 37 => ((4 integer))
mem: ((4 integer)): 1312 <= 37
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 37
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 37
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1144 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1144
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1144 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 37
run: clear-screen/init-fake-terminal/main 10: 38 => ((4 integer))
mem: ((4 integer)): 1312 <= 38
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 38
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 38
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1145 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1145
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1145 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 38
run: clear-screen/init-fake-terminal/main 10: 39 => ((4 integer))
mem: ((4 integer)): 1312 <= 39
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 39
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 39
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1146 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1146
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1146 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 39
run: clear-screen/init-fake-terminal/main 10: 40 => ((4 integer))
mem: ((4 integer)): 1312 <= 40
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 40
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 40
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1147 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1147
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1147 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 40
run: clear-screen/init-fake-terminal/main 10: 41 => ((4 integer))
mem: ((4 integer)): 1312 <= 41
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 41
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 41
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1148 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1148
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1148 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 41
run: clear-screen/init-fake-terminal/main 10: 42 => ((4 integer))
mem: ((4 integer)): 1312 <= 42
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 42
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 42
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1149 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1149
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1149 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 42
run: clear-screen/init-fake-terminal/main 10: 43 => ((4 integer))
mem: ((4 integer)): 1312 <= 43
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 43
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 43
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1150 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1150
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1150 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 43
run: clear-screen/init-fake-terminal/main 10: 44 => ((4 integer))
mem: ((4 integer)): 1312 <= 44
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 44
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 44
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1151 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1151
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1151 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 44
run: clear-screen/init-fake-terminal/main 10: 45 => ((4 integer))
mem: ((4 integer)): 1312 <= 45
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 45
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 45
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1152 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1152
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1152 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 45
run: clear-screen/init-fake-terminal/main 10: 46 => ((4 integer))
mem: ((4 integer)): 1312 <= 46
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 46
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 46
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1153 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1153
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1153 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 46
run: clear-screen/init-fake-terminal/main 10: 47 => ((4 integer))
mem: ((4 integer)): 1312 <= 47
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 47
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 47
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1154 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1154
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1154 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 47
run: clear-screen/init-fake-terminal/main 10: 48 => ((4 integer))
mem: ((4 integer)): 1312 <= 48
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 48
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 48
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1155 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1155
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1155 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 48
run: clear-screen/init-fake-terminal/main 10: 49 => ((4 integer))
mem: ((4 integer)): 1312 <= 49
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 49
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 49
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1156 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1156
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1156 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 49
run: clear-screen/init-fake-terminal/main 10: 50 => ((4 integer))
mem: ((4 integer)): 1312 <= 50
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 50
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 50
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1157 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1157
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1157 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 50
run: clear-screen/init-fake-terminal/main 10: 51 => ((4 integer))
mem: ((4 integer)): 1312 <= 51
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 51
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 51
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1158 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1158
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1158 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 51
run: clear-screen/init-fake-terminal/main 10: 52 => ((4 integer))
mem: ((4 integer)): 1312 <= 52
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 52
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 52
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1159 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1159
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1159 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 52
run: clear-screen/init-fake-terminal/main 10: 53 => ((4 integer))
mem: ((4 integer)): 1312 <= 53
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 53
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 53
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1160 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1160
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1160 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 53
run: clear-screen/init-fake-terminal/main 10: 54 => ((4 integer))
mem: ((4 integer)): 1312 <= 54
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 54
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 54
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1161 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1161
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1161 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 54
run: clear-screen/init-fake-terminal/main 10: 55 => ((4 integer))
mem: ((4 integer)): 1312 <= 55
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 55
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 55
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1162 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1162
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1162 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 55
run: clear-screen/init-fake-terminal/main 10: 56 => ((4 integer))
mem: ((4 integer)): 1312 <= 56
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 56
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 56
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1163 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1163
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1163 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 56
run: clear-screen/init-fake-terminal/main 10: 57 => ((4 integer))
mem: ((4 integer)): 1312 <= 57
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 57
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 57
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1164 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1164
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1164 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 57
run: clear-screen/init-fake-terminal/main 10: 58 => ((4 integer))
mem: ((4 integer)): 1312 <= 58
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 58
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 58
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1165 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1165
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1165 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 58
run: clear-screen/init-fake-terminal/main 10: 59 => ((4 integer))
mem: ((4 integer)): 1312 <= 59
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 59
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 59
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1166 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1166
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1166 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 59
run: clear-screen/init-fake-terminal/main 10: 60 => ((4 integer))
mem: ((4 integer)): 1312 <= 60
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 60
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 60
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1167 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1167
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1167 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 60
run: clear-screen/init-fake-terminal/main 10: 61 => ((4 integer))
mem: ((4 integer)): 1312 <= 61
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 61
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 61
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1168 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1168
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1168 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 61
run: clear-screen/init-fake-terminal/main 10: 62 => ((4 integer))
mem: ((4 integer)): 1312 <= 62
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 62
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 62
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1169 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1169
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1169 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 62
run: clear-screen/init-fake-terminal/main 10: 63 => ((4 integer))
mem: ((4 integer)): 1312 <= 63
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 63
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 63
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1170 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1170
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1170 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 63
run: clear-screen/init-fake-terminal/main 10: 64 => ((4 integer))
mem: ((4 integer)): 1312 <= 64
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 64
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 64
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1171 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1171
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1171 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 64
run: clear-screen/init-fake-terminal/main 10: 65 => ((4 integer))
mem: ((4 integer)): 1312 <= 65
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 65
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 65
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1172 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1172
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1172 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 65
run: clear-screen/init-fake-terminal/main 10: 66 => ((4 integer))
mem: ((4 integer)): 1312 <= 66
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 66
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 66
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1173 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1173
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1173 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 66
run: clear-screen/init-fake-terminal/main 10: 67 => ((4 integer))
mem: ((4 integer)): 1312 <= 67
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 67
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 67
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1174 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1174
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1174 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 67
run: clear-screen/init-fake-terminal/main 10: 68 => ((4 integer))
mem: ((4 integer)): 1312 <= 68
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 68
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 68
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1175 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1175
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1175 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 68
run: clear-screen/init-fake-terminal/main 10: 69 => ((4 integer))
mem: ((4 integer)): 1312 <= 69
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 69
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 69
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1176 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1176
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1176 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 69
run: clear-screen/init-fake-terminal/main 10: 70 => ((4 integer))
mem: ((4 integer)): 1312 <= 70
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 70
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 70
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1177 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1177
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1177 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 70
run: clear-screen/init-fake-terminal/main 10: 71 => ((4 integer))
mem: ((4 integer)): 1312 <= 71
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 71
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 71
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1178 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1178
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1178 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 71
run: clear-screen/init-fake-terminal/main 10: 72 => ((4 integer))
mem: ((4 integer)): 1312 <= 72
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 72
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 72
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1179 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1179
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1179 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 72
run: clear-screen/init-fake-terminal/main 10: 73 => ((4 integer))
mem: ((4 integer)): 1312 <= 73
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 73
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 73
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1180 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1180
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1180 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 73
run: clear-screen/init-fake-terminal/main 10: 74 => ((4 integer))
mem: ((4 integer)): 1312 <= 74
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 74
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 74
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1181 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1181
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1181 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 74
run: clear-screen/init-fake-terminal/main 10: 75 => ((4 integer))
mem: ((4 integer)): 1312 <= 75
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 75
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 75
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1182 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1182
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1182 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 75
run: clear-screen/init-fake-terminal/main 10: 76 => ((4 integer))
mem: ((4 integer)): 1312 <= 76
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 76
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 76
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1183 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1183
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1183 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 76
run: clear-screen/init-fake-terminal/main 10: 77 => ((4 integer))
mem: ((4 integer)): 1312 <= 77
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 77
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 77
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1184 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1184
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1184 <= #\space
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: clear-screen/init-fake-terminal/main
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 77
run: clear-screen/init-fake-terminal/main 10: 78 => ((4 integer))
mem: ((4 integer)): 1312 <= 78
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 78
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 78
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1185 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1185
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1185 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 78
run: clear-screen/init-fake-terminal/main 10: 79 => ((4 integer))
mem: ((4 integer)): 1312 <= 79
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 79
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 79
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1186 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1186
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1186 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 79
run: clear-screen/init-fake-terminal/main 10: 80 => ((4 integer))
mem: ((4 integer)): 1312 <= 80
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 80
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 80
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1187 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1187
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1187 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 80
run: clear-screen/init-fake-terminal/main 10: 81 => ((4 integer))
mem: ((4 integer)): 1312 <= 81
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 81
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 81
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1188 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1188
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1188 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 81
run: clear-screen/init-fake-terminal/main 10: 82 => ((4 integer))
mem: ((4 integer)): 1312 <= 82
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 82
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 82
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1189 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1189
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1189 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 82
run: clear-screen/init-fake-terminal/main 10: 83 => ((4 integer))
mem: ((4 integer)): 1312 <= 83
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 83
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 83
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1190 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1190
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1190 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 83
run: clear-screen/init-fake-terminal/main 10: 84 => ((4 integer))
mem: ((4 integer)): 1312 <= 84
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 84
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 84
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1191 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1191
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1191 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 84
run: clear-screen/init-fake-terminal/main 10: 85 => ((4 integer))
mem: ((4 integer)): 1312 <= 85
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 85
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 85
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1192 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1192
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1192 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 85
run: clear-screen/init-fake-terminal/main 10: 86 => ((4 integer))
mem: ((4 integer)): 1312 <= 86
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 86
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 86
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1193 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1193
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1193 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 86
run: clear-screen/init-fake-terminal/main 10: 87 => ((4 integer))
mem: ((4 integer)): 1312 <= 87
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 87
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 87
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1194 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1194
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1194 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 87
run: clear-screen/init-fake-terminal/main 10: 88 => ((4 integer))
mem: ((4 integer)): 1312 <= 88
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 88
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 88
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1195 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1195
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1195 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 88
run: clear-screen/init-fake-terminal/main 10: 89 => ((4 integer))
mem: ((4 integer)): 1312 <= 89
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 89
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 89
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1196 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1196
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1196 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 89
run: clear-screen/init-fake-terminal/main 10: 90 => ((4 integer))
mem: ((4 integer)): 1312 <= 90
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 90
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 90
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1197 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1197
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1197 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 90
run: clear-screen/init-fake-terminal/main 10: 91 => ((4 integer))
mem: ((4 integer)): 1312 <= 91
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 91
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 91
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1198 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1198
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1198 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 91
run: clear-screen/init-fake-terminal/main 10: 92 => ((4 integer))
mem: ((4 integer)): 1312 <= 92
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 92
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 92
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1199 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1199
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1199 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 92
run: clear-screen/init-fake-terminal/main 10: 93 => ((4 integer))
mem: ((4 integer)): 1312 <= 93
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 93
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 93
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1200 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1200
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1200 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 93
run: clear-screen/init-fake-terminal/main 10: 94 => ((4 integer))
mem: ((4 integer)): 1312 <= 94
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 94
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 94
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1201 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1201
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1201 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 94
run: clear-screen/init-fake-terminal/main 10: 95 => ((4 integer))
mem: ((4 integer)): 1312 <= 95
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 95
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 95
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1202 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1202
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1202 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 95
run: clear-screen/init-fake-terminal/main 10: 96 => ((4 integer))
mem: ((4 integer)): 1312 <= 96
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 96
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 96
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1203 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1203
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1203 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 96
run: clear-screen/init-fake-terminal/main 10: 97 => ((4 integer))
mem: ((4 integer)): 1312 <= 97
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 97
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 97
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1204 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1204
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1204 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 97
run: clear-screen/init-fake-terminal/main 10: 98 => ((4 integer))
mem: ((4 integer)): 1312 <= 98
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 98
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 98
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1205 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1205
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1205 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 98
run: clear-screen/init-fake-terminal/main 10: 99 => ((4 integer))
mem: ((4 integer)): 1312 <= 99
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 99
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 99
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1206 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1206
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1206 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 99
run: clear-screen/init-fake-terminal/main 10: 100 => ((4 integer))
mem: ((4 integer)): 1312 <= 100
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 100
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 100
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1207 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1207
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1207 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 100
run: clear-screen/init-fake-terminal/main 10: 101 => ((4 integer))
mem: ((4 integer)): 1312 <= 101
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 101
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 101
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1208 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1208
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1208 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 101
run: clear-screen/init-fake-terminal/main 10: 102 => ((4 integer))
mem: ((4 integer)): 1312 <= 102
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 102
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 102
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1209 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1209
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1209 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 102
run: clear-screen/init-fake-terminal/main 10: 103 => ((4 integer))
mem: ((4 integer)): 1312 <= 103
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 103
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 103
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1210 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1210
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1210 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 103
run: clear-screen/init-fake-terminal/main 10: 104 => ((4 integer))
mem: ((4 integer)): 1312 <= 104
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 104
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 104
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1211 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1211
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1211 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 104
run: clear-screen/init-fake-terminal/main 10: 105 => ((4 integer))
mem: ((4 integer)): 1312 <= 105
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 105
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 105
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1212 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1212
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1212 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 105
run: clear-screen/init-fake-terminal/main 10: 106 => ((4 integer))
mem: ((4 integer)): 1312 <= 106
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 106
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 106
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1213 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1213
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1213 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 106
run: clear-screen/init-fake-terminal/main 10: 107 => ((4 integer))
mem: ((4 integer)): 1312 <= 107
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 107
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 107
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1214 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1214
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1214 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 107
run: clear-screen/init-fake-terminal/main 10: 108 => ((4 integer))
mem: ((4 integer)): 1312 <= 108
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 108
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 108
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1215 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1215
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1215 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 108
run: clear-screen/init-fake-terminal/main 10: 109 => ((4 integer))
mem: ((4 integer)): 1312 <= 109
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 109
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 109
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1216 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1216
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1216 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 109
run: clear-screen/init-fake-terminal/main 10: 110 => ((4 integer))
mem: ((4 integer)): 1312 <= 110
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 110
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 110
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1217 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1217
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1217 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 110
run: clear-screen/init-fake-terminal/main 10: 111 => ((4 integer))
mem: ((4 integer)): 1312 <= 111
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 111
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 111
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1218 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1218
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1218 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 111
run: clear-screen/init-fake-terminal/main 10: 112 => ((4 integer))
mem: ((4 integer)): 1312 <= 112
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 112
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 112
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1219 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1219
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1219 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 112
run: clear-screen/init-fake-terminal/main 10: 113 => ((4 integer))
mem: ((4 integer)): 1312 <= 113
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 113
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 113
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1220 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1220
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1220 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 113
run: clear-screen/init-fake-terminal/main 10: 114 => ((4 integer))
mem: ((4 integer)): 1312 <= 114
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 114
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 114
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1221 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1221
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1221 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 114
run: clear-screen/init-fake-terminal/main 10: 115 => ((4 integer))
mem: ((4 integer)): 1312 <= 115
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 115
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 115
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1222 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1222
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1222 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 115
run: clear-screen/init-fake-terminal/main 10: 116 => ((4 integer))
mem: ((4 integer)): 1312 <= 116
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 116
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 116
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1223 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1223
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1223 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 116
run: clear-screen/init-fake-terminal/main 10: 117 => ((4 integer))
mem: ((4 integer)): 1312 <= 117
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 117
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 117
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1224 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1224
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1224 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 117
run: clear-screen/init-fake-terminal/main 10: 118 => ((4 integer))
mem: ((4 integer)): 1312 <= 118
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 118
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 118
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1225 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1225
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1225 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 118
run: clear-screen/init-fake-terminal/main 10: 119 => ((4 integer))
mem: ((4 integer)): 1312 <= 119
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 119
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 119
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1226 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1226
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1226 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 119
run: clear-screen/init-fake-terminal/main 10: 120 => ((4 integer))
mem: ((4 integer)): 1312 <= 120
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 120
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 120
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1227 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1227
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1227 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 120
run: clear-screen/init-fake-terminal/main 10: 121 => ((4 integer))
mem: ((4 integer)): 1312 <= 121
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 121
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 121
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1228 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1228
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1228 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 121
run: clear-screen/init-fake-terminal/main 10: 122 => ((4 integer))
mem: ((4 integer)): 1312 <= 122
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 122
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 122
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1229 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1229
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1229 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 122
run: clear-screen/init-fake-terminal/main 10: 123 => ((4 integer))
mem: ((4 integer)): 1312 <= 123
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 123
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 123
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1230 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1230
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1230 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 123
run: clear-screen/init-fake-terminal/main 10: 124 => ((4 integer))
mem: ((4 integer)): 1312 <= 124
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 124
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 124
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1231 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1231
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1231 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 124
run: clear-screen/init-fake-terminal/main 10: 125 => ((4 integer))
mem: ((4 integer)): 1312 <= 125
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 125
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 125
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1232 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1232
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1232 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 125
run: clear-screen/init-fake-terminal/main 10: 126 => ((4 integer))
mem: ((4 integer)): 1312 <= 126
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 126
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 126
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1233 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1233
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1233 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 126
run: clear-screen/init-fake-terminal/main 10: 127 => ((4 integer))
mem: ((4 integer)): 1312 <= 127
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 127
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 127
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1234 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1234
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1234 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 127
run: clear-screen/init-fake-terminal/main 10: 128 => ((4 integer))
mem: ((4 integer)): 1312 <= 128
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 128
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 128
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1235 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1235
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1235 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 128
run: clear-screen/init-fake-terminal/main 10: 129 => ((4 integer))
mem: ((4 integer)): 1312 <= 129
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 129
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 129
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1236 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1236
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1236 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 129
run: clear-screen/init-fake-terminal/main 10: 130 => ((4 integer))
mem: ((4 integer)): 1312 <= 130
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 130
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 130
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1237 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1237
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1237 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 130
run: clear-screen/init-fake-terminal/main 10: 131 => ((4 integer))
mem: ((4 integer)): 1312 <= 131
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 131
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 131
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1238 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1238
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1238 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 131
run: clear-screen/init-fake-terminal/main 10: 132 => ((4 integer))
mem: ((4 integer)): 1312 <= 132
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 132
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 132
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1239 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1239
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1239 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 132
run: clear-screen/init-fake-terminal/main 10: 133 => ((4 integer))
mem: ((4 integer)): 1312 <= 133
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 133
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 133
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1240 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1240
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1240 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 133
run: clear-screen/init-fake-terminal/main 10: 134 => ((4 integer))
mem: ((4 integer)): 1312 <= 134
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 134
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 134
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1241 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1241
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1241 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 134
run: clear-screen/init-fake-terminal/main 10: 135 => ((4 integer))
mem: ((4 integer)): 1312 <= 135
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 135
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 135
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1242 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1242
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1242 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 135
run: clear-screen/init-fake-terminal/main 10: 136 => ((4 integer))
mem: ((4 integer)): 1312 <= 136
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 136
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 136
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1243 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1243
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1243 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 136
run: clear-screen/init-fake-terminal/main 10: 137 => ((4 integer))
mem: ((4 integer)): 1312 <= 137
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 137
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 137
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1244 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1244
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1244 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 137
run: clear-screen/init-fake-terminal/main 10: 138 => ((4 integer))
mem: ((4 integer)): 1312 <= 138
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 138
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 138
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1245 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1245
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1245 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 138
run: clear-screen/init-fake-terminal/main 10: 139 => ((4 integer))
mem: ((4 integer)): 1312 <= 139
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 139
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 139
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1246 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1246
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1246 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 139
run: clear-screen/init-fake-terminal/main 10: 140 => ((4 integer))
mem: ((4 integer)): 1312 <= 140
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 140
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 140
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1247 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1247
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1247 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 140
run: clear-screen/init-fake-terminal/main 10: 141 => ((4 integer))
mem: ((4 integer)): 1312 <= 141
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 141
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 141
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1248 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1248
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1248 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 141
run: clear-screen/init-fake-terminal/main 10: 142 => ((4 integer))
mem: ((4 integer)): 1312 <= 142
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 142
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 142
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1249 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1249
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1249 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 142
run: clear-screen/init-fake-terminal/main 10: 143 => ((4 integer))
mem: ((4 integer)): 1312 <= 143
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 143
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 143
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1250 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1250
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1250 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 143
run: clear-screen/init-fake-terminal/main 10: 144 => ((4 integer))
mem: ((4 integer)): 1312 <= 144
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 144
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 144
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1251 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1251
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1251 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 144
run: clear-screen/init-fake-terminal/main 10: 145 => ((4 integer))
mem: ((4 integer)): 1312 <= 145
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 145
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 145
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1252 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1252
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1252 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 145
run: clear-screen/init-fake-terminal/main 10: 146 => ((4 integer))
mem: ((4 integer)): 1312 <= 146
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 146
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 146
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1253 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1253
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1253 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 146
run: clear-screen/init-fake-terminal/main 10: 147 => ((4 integer))
mem: ((4 integer)): 1312 <= 147
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 147
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 147
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1254 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1254
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1254 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 147
run: clear-screen/init-fake-terminal/main 10: 148 => ((4 integer))
mem: ((4 integer)): 1312 <= 148
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 148
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 148
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1255 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1255
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1255 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 148
run: clear-screen/init-fake-terminal/main 10: 149 => ((4 integer))
mem: ((4 integer)): 1312 <= 149
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 149
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 149
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1256 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1256
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1256 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 149
run: clear-screen/init-fake-terminal/main 10: 150 => ((4 integer))
mem: ((4 integer)): 1312 <= 150
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 150
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 150
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1257 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1257
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1257 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 150
run: clear-screen/init-fake-terminal/main 10: 151 => ((4 integer))
mem: ((4 integer)): 1312 <= 151
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 151
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 151
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1258 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1258
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1258 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 151
run: clear-screen/init-fake-terminal/main 10: 152 => ((4 integer))
mem: ((4 integer)): 1312 <= 152
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 152
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 152
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1259 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1259
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1259 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 152
run: clear-screen/init-fake-terminal/main 10: 153 => ((4 integer))
mem: ((4 integer)): 1312 <= 153
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 153
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 153
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1260 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1260
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1260 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 153
run: clear-screen/init-fake-terminal/main 10: 154 => ((4 integer))
mem: ((4 integer)): 1312 <= 154
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 154
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 154
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1261 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1261
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1261 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 154
run: clear-screen/init-fake-terminal/main 10: 155 => ((4 integer))
mem: ((4 integer)): 1312 <= 155
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 155
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 155
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1262 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1262
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1262 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 155
run: clear-screen/init-fake-terminal/main 10: 156 => ((4 integer))
mem: ((4 integer)): 1312 <= 156
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 156
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 156
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1263 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1263
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1263 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 156
run: clear-screen/init-fake-terminal/main 10: 157 => ((4 integer))
mem: ((4 integer)): 1312 <= 157
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 157
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 157
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1264 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1264
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1264 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 157
run: clear-screen/init-fake-terminal/main 10: 158 => ((4 integer))
mem: ((4 integer)): 1312 <= 158
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 158
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 158
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1265 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1265
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1265 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 158
run: clear-screen/init-fake-terminal/main 10: 159 => ((4 integer))
mem: ((4 integer)): 1312 <= 159
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 159
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 159
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1266 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1266
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1266 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 159
run: clear-screen/init-fake-terminal/main 10: 160 => ((4 integer))
mem: ((4 integer)): 1312 <= 160
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 160
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 160
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1267 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1267
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1267 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 160
run: clear-screen/init-fake-terminal/main 10: 161 => ((4 integer))
mem: ((4 integer)): 1312 <= 161
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: clear-screen/init-fake-terminal/main
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 161
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 161
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1268 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1268
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1268 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 161
run: clear-screen/init-fake-terminal/main 10: 162 => ((4 integer))
mem: ((4 integer)): 1312 <= 162
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 162
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 162
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1269 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1269
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1269 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 162
run: clear-screen/init-fake-terminal/main 10: 163 => ((4 integer))
mem: ((4 integer)): 1312 <= 163
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 163
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 163
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1270 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1270
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1270 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 163
run: clear-screen/init-fake-terminal/main 10: 164 => ((4 integer))
mem: ((4 integer)): 1312 <= 164
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 164
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 164
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1271 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1271
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1271 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 164
run: clear-screen/init-fake-terminal/main 10: 165 => ((4 integer))
mem: ((4 integer)): 1312 <= 165
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 165
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 165
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1272 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1272
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1272 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 165
run: clear-screen/init-fake-terminal/main 10: 166 => ((4 integer))
mem: ((4 integer)): 1312 <= 166
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 166
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 166
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1273 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1273
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1273 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 166
run: clear-screen/init-fake-terminal/main 10: 167 => ((4 integer))
mem: ((4 integer)): 1312 <= 167
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 167
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 167
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1274 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1274
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1274 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 167
run: clear-screen/init-fake-terminal/main 10: 168 => ((4 integer))
mem: ((4 integer)): 1312 <= 168
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 168
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 168
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1275 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1275
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1275 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 168
run: clear-screen/init-fake-terminal/main 10: 169 => ((4 integer))
mem: ((4 integer)): 1312 <= 169
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 169
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 169
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1276 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1276
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1276 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 169
run: clear-screen/init-fake-terminal/main 10: 170 => ((4 integer))
mem: ((4 integer)): 1312 <= 170
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 170
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 170
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1277 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1277
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1277 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 170
run: clear-screen/init-fake-terminal/main 10: 171 => ((4 integer))
mem: ((4 integer)): 1312 <= 171
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 171
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 171
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1278 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1278
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1278 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 171
run: clear-screen/init-fake-terminal/main 10: 172 => ((4 integer))
mem: ((4 integer)): 1312 <= 172
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 172
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 172
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1279 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1279
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1279 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 172
run: clear-screen/init-fake-terminal/main 10: 173 => ((4 integer))
mem: ((4 integer)): 1312 <= 173
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 173
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 173
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1280 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1280
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1280 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 173
run: clear-screen/init-fake-terminal/main 10: 174 => ((4 integer))
mem: ((4 integer)): 1312 <= 174
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 174
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 174
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1281 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1281
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1281 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 174
run: clear-screen/init-fake-terminal/main 10: 175 => ((4 integer))
mem: ((4 integer)): 1312 <= 175
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 175
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 175
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1282 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1282
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1282 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 175
run: clear-screen/init-fake-terminal/main 10: 176 => ((4 integer))
mem: ((4 integer)): 1312 <= 176
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 176
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 176
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1283 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1283
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1283 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 176
run: clear-screen/init-fake-terminal/main 10: 177 => ((4 integer))
mem: ((4 integer)): 1312 <= 177
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 177
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 177
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1284 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1284
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1284 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 177
run: clear-screen/init-fake-terminal/main 10: 178 => ((4 integer))
mem: ((4 integer)): 1312 <= 178
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 178
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 178
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1285 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1285
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1285 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 178
run: clear-screen/init-fake-terminal/main 10: 179 => ((4 integer))
mem: ((4 integer)): 1312 <= 179
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 179
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 179
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1286 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1286
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1286 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 179
run: clear-screen/init-fake-terminal/main 10: 180 => ((4 integer))
mem: ((4 integer)): 1312 <= 180
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 180
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 180
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1287 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1287
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1287 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 180
run: clear-screen/init-fake-terminal/main 10: 181 => ((4 integer))
mem: ((4 integer)): 1312 <= 181
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 181
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 181
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1288 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1288
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1288 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 181
run: clear-screen/init-fake-terminal/main 10: 182 => ((4 integer))
mem: ((4 integer)): 1312 <= 182
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 182
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 182
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1289 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1289
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1289 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 182
run: clear-screen/init-fake-terminal/main 10: 183 => ((4 integer))
mem: ((4 integer)): 1312 <= 183
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 183
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 183
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1290 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1290
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1290 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 183
run: clear-screen/init-fake-terminal/main 10: 184 => ((4 integer))
mem: ((4 integer)): 1312 <= 184
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 184
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 184
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1291 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1291
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1291 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 184
run: clear-screen/init-fake-terminal/main 10: 185 => ((4 integer))
mem: ((4 integer)): 1312 <= 185
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 185
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 185
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1292 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1292
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1292 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 185
run: clear-screen/init-fake-terminal/main 10: 186 => ((4 integer))
mem: ((4 integer)): 1312 <= 186
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 186
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 186
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1293 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1293
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1293 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 186
run: clear-screen/init-fake-terminal/main 10: 187 => ((4 integer))
mem: ((4 integer)): 1312 <= 187
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 187
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 187
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1294 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1294
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1294 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 187
run: clear-screen/init-fake-terminal/main 10: 188 => ((4 integer))
mem: ((4 integer)): 1312 <= 188
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 188
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 188
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1295 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1295
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1295 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 188
run: clear-screen/init-fake-terminal/main 10: 189 => ((4 integer))
mem: ((4 integer)): 1312 <= 189
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 189
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 189
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1296 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1296
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1296 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 189
run: clear-screen/init-fake-terminal/main 10: 190 => ((4 integer))
mem: ((4 integer)): 1312 <= 190
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 190
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 190
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1297 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1297
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1297 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 190
run: clear-screen/init-fake-terminal/main 10: 191 => ((4 integer))
mem: ((4 integer)): 1312 <= 191
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 191
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 191
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1298 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1298
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1298 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 191
run: clear-screen/init-fake-terminal/main 10: 192 => ((4 integer))
mem: ((4 integer)): 1312 <= 192
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 192
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 192
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1299 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1299
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1299 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 192
run: clear-screen/init-fake-terminal/main 10: 193 => ((4 integer))
mem: ((4 integer)): 1312 <= 193
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 193
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 193
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1300 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1300
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1300 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 193
run: clear-screen/init-fake-terminal/main 10: 194 => ((4 integer))
mem: ((4 integer)): 1312 <= 194
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 194
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 194
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1301 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1301
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1301 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 194
run: clear-screen/init-fake-terminal/main 10: 195 => ((4 integer))
mem: ((4 integer)): 1312 <= 195
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 195
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 195
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1302 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1302
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1302 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 195
run: clear-screen/init-fake-terminal/main 10: 196 => ((4 integer))
mem: ((4 integer)): 1312 <= 196
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 196
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 196
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1303 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1303
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1303 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 196
run: clear-screen/init-fake-terminal/main 10: 197 => ((4 integer))
mem: ((4 integer)): 1312 <= 197
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 197
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 197
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1304 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1304
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1304 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 197
run: clear-screen/init-fake-terminal/main 10: 198 => ((4 integer))
mem: ((4 integer)): 1312 <= 198
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 198
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 198
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1305 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1305
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1305 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 198
run: clear-screen/init-fake-terminal/main 10: 199 => ((4 integer))
mem: ((4 integer)): 1312 <= 199
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 199
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 199
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1306 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1306
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1306 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 199
run: clear-screen/init-fake-terminal/main 10: 200 => ((4 integer))
mem: ((4 integer)): 1312 <= 200
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 200
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1313 <= t
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: clear-screen/init-fake-terminal/main 12: (((reply)))
run: init-fake-terminal/main 14: (((reply)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: main 2: 1101 => ((2 terminal-address))
mem: ((2 terminal-address)): 1003 <= 1101
run: main 3: (((3 integer-array-address)) <- ((init-array)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)))
run: init-array/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-array/main 0: 1338 => ((default-space space-address))
run: init-array/main 1: (((1 integer)) <- ((copy)) ((0 literal)))
run: init-array/main 1: 0 => ((1 integer))
mem: ((1 integer)): 1340 <= 0
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 0 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\R => ((2 integer))
mem: ((2 integer)): 1341 <= #\R
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 0
run: init-array/main 4: 1 => ((1 integer))
mem: ((1 integer)): 1340 <= 1
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 1 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 1
run: init-array/main 4: 2 => ((1 integer))
mem: ((1 integer)): 1340 <= 2
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 2 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 2
run: init-array/main 4: 3 => ((1 integer))
mem: ((1 integer)): 1340 <= 3
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 3 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 3
run: init-array/main 4: 4 => ((1 integer))
mem: ((1 integer)): 1340 <= 4
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 4 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 4
run: init-array/main 4: 5 => ((1 integer))
mem: ((1 integer)): 1340 <= 5
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 5 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 5
run: init-array/main 4: 6 => ((1 integer))
mem: ((1 integer)): 1340 <= 6
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 6 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 6
run: init-array/main 4: 7 => ((1 integer))
mem: ((1 integer)): 1340 <= 7
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 7 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\r => ((2 integer))
mem: ((2 integer)): 1341 <= #\r
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 7
run: init-array/main 4: 8 => ((1 integer))
mem: ((1 integer)): 1340 <= 8
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 8 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\N => ((2 integer))
mem: ((2 integer)): 1341 <= #\N
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 8
run: init-array/main 4: 9 => ((1 integer))
mem: ((1 integer)): 1340 <= 9
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 9 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 9
run: init-array/main 4: 10 => ((1 integer))
mem: ((1 integer)): 1340 <= 10
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 10 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 10
run: init-array/main 4: 11 => ((1 integer))
mem: ((1 integer)): 1340 <= 11
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 11 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 11
run: init-array/main 4: 12 => ((1 integer))
mem: ((1 integer)): 1340 <= 12
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 12 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 12
run: init-array/main 4: 13 => ((1 integer))
mem: ((1 integer)): 1340 <= 13
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 13 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 13
run: init-array/main 4: 14 => ((1 integer))
mem: ((1 integer)): 1340 <= 14
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 14 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 14
run: init-array/main 4: 15 => ((1 integer))
mem: ((1 integer)): 1340 <= 15
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 15 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\n => ((2 integer))
mem: ((2 integer)): 1341 <= #\n
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 15
run: init-array/main 4: 16 => ((1 integer))
mem: ((1 integer)): 1340 <= 16
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 16 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\B => ((2 integer))
mem: ((2 integer)): 1341 <= #\B
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 16
run: init-array/main 4: 17 => ((1 integer))
mem: ((1 integer)): 1340 <= 17
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 17 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 17
run: init-array/main 4: 18 => ((1 integer))
mem: ((1 integer)): 1340 <= 18
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 18 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 18
run: init-array/main 4: 19 => ((1 integer))
mem: ((1 integer)): 1340 <= 19
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 19 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 19
run: init-array/main 4: 20 => ((1 integer))
mem: ((1 integer)): 1340 <= 20
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 20 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 20
run: init-array/main 4: 21 => ((1 integer))
mem: ((1 integer)): 1340 <= 21
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 21 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 21
run: init-array/main 4: 22 => ((1 integer))
mem: ((1 integer)): 1340 <= 22
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 22 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 22
run: init-array/main 4: 23 => ((1 integer))
mem: ((1 integer)): 1340 <= 23
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 23 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\b => ((2 integer))
mem: ((2 integer)): 1341 <= #\b
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 23
run: init-array/main 4: 24 => ((1 integer))
mem: ((1 integer)): 1340 <= 24
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 24 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\Q => ((2 integer))
mem: ((2 integer)): 1341 <= #\Q
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 24
run: init-array/main 4: 25 => ((1 integer))
mem: ((1 integer)): 1340 <= 25
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 25 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 25
run: init-array/main 4: 26 => ((1 integer))
mem: ((1 integer)): 1340 <= 26
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 26 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 26
run: init-array/main 4: 27 => ((1 integer))
mem: ((1 integer)): 1340 <= 27
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 27 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 27
run: init-array/main 4: 28 => ((1 integer))
mem: ((1 integer)): 1340 <= 28
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 28 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 28
run: init-array/main 4: 29 => ((1 integer))
mem: ((1 integer)): 1340 <= 29
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 29 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 29
run: init-array/main 4: 30 => ((1 integer))
mem: ((1 integer)): 1340 <= 30
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 30 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 30
run: init-array/main 4: 31 => ((1 integer))
mem: ((1 integer)): 1340 <= 31
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 31 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\q => ((2 integer))
mem: ((2 integer)): 1341 <= #\q
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 31
run: init-array/main 4: 32 => ((1 integer))
mem: ((1 integer)): 1340 <= 32
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 32 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\K => ((2 integer))
mem: ((2 integer)): 1341 <= #\K
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 32
run: init-array/main 4: 33 => ((1 integer))
mem: ((1 integer)): 1340 <= 33
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 33 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 33
run: init-array/main 4: 34 => ((1 integer))
mem: ((1 integer)): 1340 <= 34
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 34 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 34
run: init-array/main 4: 35 => ((1 integer))
mem: ((1 integer)): 1340 <= 35
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 35 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 35
run: init-array/main 4: 36 => ((1 integer))
mem: ((1 integer)): 1340 <= 36
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 36 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 36
run: init-array/main 4: 37 => ((1 integer))
mem: ((1 integer)): 1340 <= 37
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 37 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 37
run: init-array/main 4: 38 => ((1 integer))
mem: ((1 integer)): 1340 <= 38
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 38 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 38
run: init-array/main 4: 39 => ((1 integer))
mem: ((1 integer)): 1340 <= 39
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 39 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\k => ((2 integer))
mem: ((2 integer)): 1341 <= #\k
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 39
run: init-array/main 4: 40 => ((1 integer))
mem: ((1 integer)): 1340 <= 40
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 40 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\B => ((2 integer))
mem: ((2 integer)): 1341 <= #\B
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 40
run: init-array/main 4: 41 => ((1 integer))
mem: ((1 integer)): 1340 <= 41
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 41 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 41
run: init-array/main 4: 42 => ((1 integer))
mem: ((1 integer)): 1340 <= 42
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 42 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 42
run: init-array/main 4: 43 => ((1 integer))
mem: ((1 integer)): 1340 <= 43
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 43 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 43
run: init-array/main 4: 44 => ((1 integer))
mem: ((1 integer)): 1340 <= 44
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 44 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 44
run: init-array/main 4: 45 => ((1 integer))
mem: ((1 integer)): 1340 <= 45
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 45 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 45
run: init-array/main 4: 46 => ((1 integer))
mem: ((1 integer)): 1340 <= 46
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 46 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 46
run: init-array/main 4: 47 => ((1 integer))
mem: ((1 integer)): 1340 <= 47
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 47 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\b => ((2 integer))
mem: ((2 integer)): 1341 <= #\b
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 47
run: init-array/main 4: 48 => ((1 integer))
mem: ((1 integer)): 1340 <= 48
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 48 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\N => ((2 integer))
mem: ((2 integer)): 1341 <= #\N
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 48
run: init-array/main 4: 49 => ((1 integer))
mem: ((1 integer)): 1340 <= 49
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 49 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 49
run: init-array/main 4: 50 => ((1 integer))
mem: ((1 integer)): 1340 <= 50
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 50 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 50
run: init-array/main 4: 51 => ((1 integer))
mem: ((1 integer)): 1340 <= 51
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 51 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 51
run: init-array/main 4: 52 => ((1 integer))
mem: ((1 integer)): 1340 <= 52
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 52 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 52
run: init-array/main 4: 53 => ((1 integer))
mem: ((1 integer)): 1340 <= 53
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 53 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 53
run: init-array/main 4: 54 => ((1 integer))
mem: ((1 integer)): 1340 <= 54
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 54 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 54
run: init-array/main 4: 55 => ((1 integer))
mem: ((1 integer)): 1340 <= 55
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 55 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\n => ((2 integer))
mem: ((2 integer)): 1341 <= #\n
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 55
run: init-array/main 4: 56 => ((1 integer))
mem: ((1 integer)): 1340 <= 56
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 56 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\R => ((2 integer))
mem: ((2 integer)): 1341 <= #\R
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 56
run: init-array/main 4: 57 => ((1 integer))
mem: ((1 integer)): 1340 <= 57
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 57 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 57
run: init-array/main 4: 58 => ((1 integer))
mem: ((1 integer)): 1340 <= 58
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 58 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 58
run: init-array/main 4: 59 => ((1 integer))
mem: ((1 integer)): 1340 <= 59
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 59 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 59
run: init-array/main 4: 60 => ((1 integer))
mem: ((1 integer)): 1340 <= 60
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 60 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 60
run: init-array/main 4: 61 => ((1 integer))
mem: ((1 integer)): 1340 <= 61
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 61 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 61
run: init-array/main 4: 62 => ((1 integer))
mem: ((1 integer)): 1340 <= 62
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 62 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 62
run: init-array/main 4: 63 => ((1 integer))
mem: ((1 integer)): 1340 <= 63
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 63 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: #\r => ((2 integer))
mem: ((2 integer)): 1341 <= #\r
run: init-array/main 2: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => t
run: init-array/main 4: (((1 integer)) <- ((add)) ((1 integer)) ((1 literal)))
mem: ((1 integer)) => 63
run: init-array/main 4: 64 => ((1 integer))
mem: ((1 integer)): 1340 <= 64
run: init-array/main 5: (((jump)) ((-4 offset)))
run: init-array/main 2: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 64 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 2: nil => ((2 integer))
mem: ((2 integer)): 1341 <= nil
run: init-array/main 2: nil => ((3 boolean))
mem: ((3 boolean)): 1342 <= nil
run: init-array/main 3: (((jump-unless)) ((3 boolean)) ((2 offset)))
mem: ((3 boolean)) => nil
run: init-array/main 6: (((4 integer-array-address)) <- ((new)) ((integer-array literal)) ((1 integer)))
mem: ((1 integer)) => 64
run: init-array/main 6: 1369 => ((4 integer-array-address))
mem: ((4 integer-array-address)): 1343 <= 1369
schedule: scheduling init-array/main for further processing
schedule: init-array/main
run: init-array/main 7: (((rewind-inputs)))
run: init-array/main 8: (((5 integer)) <- ((copy)) ((0 literal)))
run: init-array/main 8: 0 => ((5 integer))
mem: ((5 integer)): 1344 <= 0
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 0
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 0 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\R => ((2 integer))
mem: ((2 integer)): 1341 <= #\R
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1370 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1370
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => R
run: init-array/main 14: #\R => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1370 <= #\R
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 0
run: init-array/main 15: 1 => ((5 integer))
mem: ((5 integer)): 1344 <= 1
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 1
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 1 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 1
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1371 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1371
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1371 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 1
run: init-array/main 15: 2 => ((5 integer))
mem: ((5 integer)): 1344 <= 2
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 2
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 2 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 2
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1372 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1372
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1372 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 2
run: init-array/main 15: 3 => ((5 integer))
mem: ((5 integer)): 1344 <= 3
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 3
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 3 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 3
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1373 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1373
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1373 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 3
run: init-array/main 15: 4 => ((5 integer))
mem: ((5 integer)): 1344 <= 4
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 4
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 4 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 4
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1374 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1374
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1374 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 4
run: init-array/main 15: 5 => ((5 integer))
mem: ((5 integer)): 1344 <= 5
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 5
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 5 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 5
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1375 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1375
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1375 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 5
run: init-array/main 15: 6 => ((5 integer))
mem: ((5 integer)): 1344 <= 6
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 6
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 6 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 6
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1376 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1376
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1376 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 6
run: init-array/main 15: 7 => ((5 integer))
mem: ((5 integer)): 1344 <= 7
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 7
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 7 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\r => ((2 integer))
mem: ((2 integer)): 1341 <= #\r
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 7
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1377 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1377
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => r
run: init-array/main 14: #\r => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1377 <= #\r
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 7
run: init-array/main 15: 8 => ((5 integer))
mem: ((5 integer)): 1344 <= 8
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 8
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 8 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\N => ((2 integer))
mem: ((2 integer)): 1341 <= #\N
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 8
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1378 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1378
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => N
run: init-array/main 14: #\N => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1378 <= #\N
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 8
run: init-array/main 15: 9 => ((5 integer))
mem: ((5 integer)): 1344 <= 9
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 9
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 9 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 9
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1379 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1379
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1379 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 9
run: init-array/main 15: 10 => ((5 integer))
mem: ((5 integer)): 1344 <= 10
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 10
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 10 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 10
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1380 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1380
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1380 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 10
run: init-array/main 15: 11 => ((5 integer))
mem: ((5 integer)): 1344 <= 11
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 11
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 11 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 11
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1381 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1381
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1381 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 11
run: init-array/main 15: 12 => ((5 integer))
mem: ((5 integer)): 1344 <= 12
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 12
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 12 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 12
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1382 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1382
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1382 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 12
run: init-array/main 15: 13 => ((5 integer))
mem: ((5 integer)): 1344 <= 13
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 13
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 13 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 13
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1383 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1383
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1383 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 13
run: init-array/main 15: 14 => ((5 integer))
mem: ((5 integer)): 1344 <= 14
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 14
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 14 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 14
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1384 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1384
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1384 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 14
run: init-array/main 15: 15 => ((5 integer))
mem: ((5 integer)): 1344 <= 15
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 15
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 15 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\n => ((2 integer))
mem: ((2 integer)): 1341 <= #\n
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 15
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1385 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1385
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => n
run: init-array/main 14: #\n => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1385 <= #\n
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 15
run: init-array/main 15: 16 => ((5 integer))
mem: ((5 integer)): 1344 <= 16
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 16
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 16 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\B => ((2 integer))
mem: ((2 integer)): 1341 <= #\B
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 16
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1386 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1386
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => B
run: init-array/main 14: #\B => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1386 <= #\B
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 16
run: init-array/main 15: 17 => ((5 integer))
mem: ((5 integer)): 1344 <= 17
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 17
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 17 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 17
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1387 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1387
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1387 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 17
run: init-array/main 15: 18 => ((5 integer))
mem: ((5 integer)): 1344 <= 18
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 18
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 18 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 18
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1388 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1388
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1388 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 18
run: init-array/main 15: 19 => ((5 integer))
mem: ((5 integer)): 1344 <= 19
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 19
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 19 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 19
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1389 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1389
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1389 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 19
run: init-array/main 15: 20 => ((5 integer))
mem: ((5 integer)): 1344 <= 20
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 20
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 20 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 20
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1390 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1390
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1390 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 20
run: init-array/main 15: 21 => ((5 integer))
mem: ((5 integer)): 1344 <= 21
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 21
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 21 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 21
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1391 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1391
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1391 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 21
run: init-array/main 15: 22 => ((5 integer))
mem: ((5 integer)): 1344 <= 22
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 22
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 22 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 22
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1392 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1392
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1392 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 22
run: init-array/main 15: 23 => ((5 integer))
mem: ((5 integer)): 1344 <= 23
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 23
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 23 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\b => ((2 integer))
mem: ((2 integer)): 1341 <= #\b
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 23
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1393 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1393
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => b
run: init-array/main 14: #\b => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1393 <= #\b
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 23
run: init-array/main 15: 24 => ((5 integer))
mem: ((5 integer)): 1344 <= 24
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 24
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 24 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\Q => ((2 integer))
mem: ((2 integer)): 1341 <= #\Q
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 24
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1394 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1394
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => Q
run: init-array/main 14: #\Q => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1394 <= #\Q
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 24
run: init-array/main 15: 25 => ((5 integer))
mem: ((5 integer)): 1344 <= 25
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 25
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 25 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 25
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1395 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1395
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1395 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 25
run: init-array/main 15: 26 => ((5 integer))
mem: ((5 integer)): 1344 <= 26
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 26
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 26 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 26
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1396 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1396
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1396 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 26
run: init-array/main 15: 27 => ((5 integer))
mem: ((5 integer)): 1344 <= 27
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 27
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 27 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 27
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1397 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1397
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1397 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 27
run: init-array/main 15: 28 => ((5 integer))
mem: ((5 integer)): 1344 <= 28
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 28
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 28 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 28
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1398 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1398
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1398 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 28
run: init-array/main 15: 29 => ((5 integer))
mem: ((5 integer)): 1344 <= 29
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 29
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 29 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 29
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1399 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1399
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1399 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 29
run: init-array/main 15: 30 => ((5 integer))
mem: ((5 integer)): 1344 <= 30
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 30
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 30 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 30
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1400 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1400
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1400 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 30
run: init-array/main 15: 31 => ((5 integer))
mem: ((5 integer)): 1344 <= 31
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 31
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 31 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\q => ((2 integer))
mem: ((2 integer)): 1341 <= #\q
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 31
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1401 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1401
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => q
run: init-array/main 14: #\q => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1401 <= #\q
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 31
run: init-array/main 15: 32 => ((5 integer))
mem: ((5 integer)): 1344 <= 32
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 32
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 32 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\K => ((2 integer))
mem: ((2 integer)): 1341 <= #\K
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 32
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1402 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1402
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => K
run: init-array/main 14: #\K => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1402 <= #\K
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 32
run: init-array/main 15: 33 => ((5 integer))
mem: ((5 integer)): 1344 <= 33
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 33
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 33 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 33
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1403 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1403
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1403 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 33
run: init-array/main 15: 34 => ((5 integer))
mem: ((5 integer)): 1344 <= 34
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 34
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 34 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 34
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1404 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1404
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1404 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 34
run: init-array/main 15: 35 => ((5 integer))
mem: ((5 integer)): 1344 <= 35
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 35
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 35 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 35
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1405 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1405
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1405 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 35
run: init-array/main 15: 36 => ((5 integer))
mem: ((5 integer)): 1344 <= 36
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 36
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 36 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 36
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1406 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1406
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1406 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 36
run: init-array/main 15: 37 => ((5 integer))
mem: ((5 integer)): 1344 <= 37
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 37
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 37 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 37
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1407 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1407
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1407 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 37
run: init-array/main 15: 38 => ((5 integer))
mem: ((5 integer)): 1344 <= 38
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 38
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 38 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 38
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1408 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1408
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1408 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 38
run: init-array/main 15: 39 => ((5 integer))
mem: ((5 integer)): 1344 <= 39
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 39
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 39 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\k => ((2 integer))
mem: ((2 integer)): 1341 <= #\k
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 39
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1409 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1409
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => k
run: init-array/main 14: #\k => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1409 <= #\k
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 39
run: init-array/main 15: 40 => ((5 integer))
mem: ((5 integer)): 1344 <= 40
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 40
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 40 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\B => ((2 integer))
mem: ((2 integer)): 1341 <= #\B
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 40
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1410 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1410
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => B
run: init-array/main 14: #\B => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1410 <= #\B
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 40
run: init-array/main 15: 41 => ((5 integer))
mem: ((5 integer)): 1344 <= 41
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 41
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 41 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 41
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1411 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1411
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1411 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 41
run: init-array/main 15: 42 => ((5 integer))
mem: ((5 integer)): 1344 <= 42
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 42
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 42 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 42
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1412 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1412
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1412 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 42
run: init-array/main 15: 43 => ((5 integer))
mem: ((5 integer)): 1344 <= 43
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 43
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 43 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 43
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1413 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1413
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1413 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 43
run: init-array/main 15: 44 => ((5 integer))
mem: ((5 integer)): 1344 <= 44
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 44
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 44 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 44
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1414 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1414
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1414 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 44
run: init-array/main 15: 45 => ((5 integer))
mem: ((5 integer)): 1344 <= 45
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 45
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 45 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 45
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1415 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1415
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1415 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 45
run: init-array/main 15: 46 => ((5 integer))
mem: ((5 integer)): 1344 <= 46
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 46
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 46 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 46
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1416 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1416
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1416 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 46
run: init-array/main 15: 47 => ((5 integer))
mem: ((5 integer)): 1344 <= 47
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 47
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 47 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\b => ((2 integer))
mem: ((2 integer)): 1341 <= #\b
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 47
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1417 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1417
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => b
run: init-array/main 14: #\b => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1417 <= #\b
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 47
run: init-array/main 15: 48 => ((5 integer))
mem: ((5 integer)): 1344 <= 48
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 48
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 48 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\N => ((2 integer))
mem: ((2 integer)): 1341 <= #\N
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 48
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1418 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1418
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => N
run: init-array/main 14: #\N => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1418 <= #\N
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 48
run: init-array/main 15: 49 => ((5 integer))
mem: ((5 integer)): 1344 <= 49
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 49
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 49 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 49
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1419 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1419
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1419 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 49
run: init-array/main 15: 50 => ((5 integer))
mem: ((5 integer)): 1344 <= 50
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 50
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 50 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 50
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1420 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1420
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1420 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 50
run: init-array/main 15: 51 => ((5 integer))
mem: ((5 integer)): 1344 <= 51
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 51
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 51 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 51
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1421 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1421
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1421 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 51
run: init-array/main 15: 52 => ((5 integer))
mem: ((5 integer)): 1344 <= 52
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 52
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 52 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 52
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1422 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1422
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1422 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 52
run: init-array/main 15: 53 => ((5 integer))
mem: ((5 integer)): 1344 <= 53
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 53
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 53 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 53
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1423 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1423
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1423 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 53
run: init-array/main 15: 54 => ((5 integer))
mem: ((5 integer)): 1344 <= 54
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 54
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 54 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 54
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1424 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1424
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1424 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 54
run: init-array/main 15: 55 => ((5 integer))
mem: ((5 integer)): 1344 <= 55
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 55
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 55 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\n => ((2 integer))
mem: ((2 integer)): 1341 <= #\n
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 55
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1425 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1425
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => n
run: init-array/main 14: #\n => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1425 <= #\n
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 55
run: init-array/main 15: 56 => ((5 integer))
mem: ((5 integer)): 1344 <= 56
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 56
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 56 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\R => ((2 integer))
mem: ((2 integer)): 1341 <= #\R
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 56
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1426 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1426
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => R
run: init-array/main 14: #\R => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1426 <= #\R
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 56
run: init-array/main 15: 57 => ((5 integer))
mem: ((5 integer)): 1344 <= 57
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 57
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 57 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\P => ((2 integer))
mem: ((2 integer)): 1341 <= #\P
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 57
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1427 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1427
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => P
run: init-array/main 14: #\P => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1427 <= #\P
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 57
run: init-array/main 15: 58 => ((5 integer))
mem: ((5 integer)): 1344 <= 58
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 58
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 58 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 58
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1428 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1428
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1428 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 58
run: init-array/main 15: 59 => ((5 integer))
mem: ((5 integer)): 1344 <= 59
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 59
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 59 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 59
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1429 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1429
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1429 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 59
run: init-array/main 15: 60 => ((5 integer))
mem: ((5 integer)): 1344 <= 60
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 60
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 60 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 60
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1430 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1430
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1430 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 60
run: init-array/main 15: 61 => ((5 integer))
mem: ((5 integer)): 1344 <= 61
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 61
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 61 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\_ => ((2 integer))
mem: ((2 integer)): 1341 <= #\_
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 61
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1431 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1431
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => _
run: init-array/main 14: #\_ => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1431 <= #\_
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 61
run: init-array/main 15: 62 => ((5 integer))
mem: ((5 integer)): 1344 <= 62
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 62
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
schedule: scheduling init-array/main for further processing
schedule: init-array/main
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 62 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\p => ((2 integer))
mem: ((2 integer)): 1341 <= #\p
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 62
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1432 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1432
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => p
run: init-array/main 14: #\p => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1432 <= #\p
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 62
run: init-array/main 15: 63 => ((5 integer))
mem: ((5 integer)): 1344 <= 63
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 63
mem: ((1 integer)) => 64
run: init-array/main 9: nil => ((6 boolean))
mem: ((6 boolean)): 1345 <= nil
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => nil
run: init-array/main 11: (((2 integer)) ((3 boolean)) <- ((next-input)))
arg: nil 63 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-array/main 11: #\r => ((2 integer))
mem: ((2 integer)): 1341 <= #\r
run: init-array/main 11: t => ((3 boolean))
mem: ((3 boolean)): 1342 <= t
run: init-array/main 12: (((assert)) ((3 boolean)))
mem: ((3 boolean)) => t
run: init-array/main 13: (((7 integer-address)) <- ((index-address)) ((4 integer-array-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 63
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
run: init-array/main 13: 1433 => ((7 integer-address))
mem: ((7 integer-address)): 1346 <= 1433
run: init-array/main 14: (((7 integer-address) (deref)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => r
run: init-array/main 14: #\r => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1433 <= #\r
run: init-array/main 15: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 63
run: init-array/main 15: 64 => ((5 integer))
mem: ((5 integer)): 1344 <= 64
run: init-array/main 16: (((jump)) ((-8 offset)))
run: init-array/main 9: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((1 integer)))
mem: ((5 integer)) => 64
mem: ((1 integer)) => 64
run: init-array/main 9: t => ((6 boolean))
mem: ((6 boolean)): 1345 <= t
run: init-array/main 10: (((jump-if)) ((6 boolean)) ((6 offset)))
mem: ((6 boolean)) => t
run: init-array/main 17: (((reply)) ((4 integer-array-address)))
mem: ((4 integer-array-address)) => 1369
run: main 3: 1369 => ((3 integer-array-address))
mem: ((3 integer-array-address)): 1004 <= 1369
run: main 4: (((4 board-address)) <- ((init-board)) ((3 integer-array-address)))
mem: ((3 integer-array-address)) => 1369
run: init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-board/main 0: 1434 => ((default-space space-address))
run: init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1369)
run: init-board/main 1: 1369 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1436 <= 1369
run: init-board/main 2: (((2 integer)) <- ((length)) ((1 integer-array-address) (deref)))
array-len: ((1 integer-array-address) (deref))
mem: ((1369 integer) (raw)) => 64
run: init-board/main 2: 64 => ((2 integer))
mem: ((2 integer)): 1437 <= 64
run: init-board/main 3: (((3 boolean)) <- ((equal)) ((2 integer)) ((64 literal)))
mem: ((2 integer)) => 64
run: init-board/main 3: t => ((3 boolean))
mem: ((3 boolean)): 1438 <= t
run: init-board/main 4: (((assert)) ((3 boolean)) ((chessboard had incorrect size literal)))
mem: ((3 boolean)) => t
run: init-board/main 5: (((4 board-address)) <- ((new)) ((board literal)) ((8 literal)))
run: init-board/main 5: 1465 => ((4 board-address))
mem: ((4 board-address)): 1439 <= 1465
run: init-board/main 6: (((5 integer)) <- ((copy)) ((0 literal)))
run: init-board/main 6: 0 => ((5 integer))
mem: ((5 integer)): 1440 <= 0
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 0
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1441 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
run: init-board/main 9: 1466 => ((7 file-address-address))
mem: ((7 file-address-address)): 1442 <= 1466
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1369
mem: ((5 integer)) => 0
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1474 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1369 0)
run: init-file/init-board/main 1: 1369 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1476 <= 1369
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1369 0)
run: init-file/init-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 1477 <= 0
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 0
run: init-file/init-board/main 3: 0 => ((2 integer))
mem: ((2 integer)): 1477 <= 0
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1505 => ((3 file-address))
mem: ((3 file-address)): 1478 <= 1505
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1479 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1480 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
run: init-file/init-board/main 8: 1506 => ((6 square-address))
mem: ((6 square-address)): 1481 <= 1506
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 0
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1370 integer) (raw)) => R
run: init-file/init-board/main 9: #\R => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1506 <= #\R
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1479 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 0
run: init-file/init-board/main 11: 1 => ((2 integer))
mem: ((2 integer)): 1477 <= 1
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1480 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
run: init-file/init-board/main 8: 1507 => ((6 square-address))
mem: ((6 square-address)): 1481 <= 1507
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 1
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1371 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1507 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1479 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 1
run: init-file/init-board/main 11: 2 => ((2 integer))
mem: ((2 integer)): 1477 <= 2
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1480 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
run: init-file/init-board/main 8: 1508 => ((6 square-address))
mem: ((6 square-address)): 1481 <= 1508
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 2
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1372 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1508 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1479 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 2
run: init-file/init-board/main 11: 3 => ((2 integer))
mem: ((2 integer)): 1477 <= 3
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1480 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
run: init-file/init-board/main 8: 1509 => ((6 square-address))
mem: ((6 square-address)): 1481 <= 1509
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 3
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1373 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1509 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1479 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 3
run: init-file/init-board/main 11: 4 => ((2 integer))
mem: ((2 integer)): 1477 <= 4
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1480 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
run: init-file/init-board/main 8: 1510 => ((6 square-address))
mem: ((6 square-address)): 1481 <= 1510
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 4
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1374 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1510 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1479 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 4
run: init-file/init-board/main 11: 5 => ((2 integer))
mem: ((2 integer)): 1477 <= 5
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1480 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
run: init-file/init-board/main 8: 1511 => ((6 square-address))
mem: ((6 square-address)): 1481 <= 1511
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 5
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1375 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1511 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1479 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 5
run: init-file/init-board/main 11: 6 => ((2 integer))
mem: ((2 integer)): 1477 <= 6
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1480 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
run: init-file/init-board/main 8: 1512 => ((6 square-address))
mem: ((6 square-address)): 1481 <= 1512
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 6
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1376 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1512 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1479 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 6
run: init-file/init-board/main 11: 7 => ((2 integer))
mem: ((2 integer)): 1477 <= 7
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1480 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
run: init-file/init-board/main 8: 1513 => ((6 square-address))
mem: ((6 square-address)): 1481 <= 1513
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 7
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1377 integer) (raw)) => r
run: init-file/init-board/main 9: #\r => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1513 <= #\r
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1479 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 7
run: init-file/init-board/main 11: 8 => ((2 integer))
mem: ((2 integer)): 1477 <= 8
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1480 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1505
run: init-board/main 10: 1505 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1466 <= 1505
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 0
run: init-board/main 11: 1 => ((5 integer))
mem: ((5 integer)): 1440 <= 1
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 1
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1441 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 1
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
run: init-board/main 9: 1467 => ((7 file-address-address))
mem: ((7 file-address-address)): 1442 <= 1467
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1369
mem: ((5 integer)) => 1
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1514 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1369 1)
run: init-file/init-board/main 1: 1369 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1516 <= 1369
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1369 1)
run: init-file/init-board/main 2: 1 => ((2 integer))
mem: ((2 integer)): 1517 <= 1
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 1
run: init-file/init-board/main 3: 8 => ((2 integer))
mem: ((2 integer)): 1517 <= 8
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1545 => ((3 file-address))
mem: ((3 file-address)): 1518 <= 1545
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1519 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1520 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
run: init-file/init-board/main 8: 1546 => ((6 square-address))
mem: ((6 square-address)): 1521 <= 1546
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 8
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1378 integer) (raw)) => N
run: init-file/init-board/main 9: #\N => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1546 <= #\N
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1519 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 8
run: init-file/init-board/main 11: 9 => ((2 integer))
mem: ((2 integer)): 1517 <= 9
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1520 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
run: init-file/init-board/main 8: 1547 => ((6 square-address))
mem: ((6 square-address)): 1521 <= 1547
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 9
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1379 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1547 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1519 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 9
run: init-file/init-board/main 11: 10 => ((2 integer))
mem: ((2 integer)): 1517 <= 10
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1520 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
run: init-file/init-board/main 8: 1548 => ((6 square-address))
mem: ((6 square-address)): 1521 <= 1548
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 10
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1380 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1548 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1519 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 10
run: init-file/init-board/main 11: 11 => ((2 integer))
mem: ((2 integer)): 1517 <= 11
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1520 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
run: init-file/init-board/main 8: 1549 => ((6 square-address))
mem: ((6 square-address)): 1521 <= 1549
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 11
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1381 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1549 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1519 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 11
run: init-file/init-board/main 11: 12 => ((2 integer))
mem: ((2 integer)): 1517 <= 12
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1520 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
run: init-file/init-board/main 8: 1550 => ((6 square-address))
mem: ((6 square-address)): 1521 <= 1550
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 12
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1382 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1550 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1519 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 12
run: init-file/init-board/main 11: 13 => ((2 integer))
mem: ((2 integer)): 1517 <= 13
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1520 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
run: init-file/init-board/main 8: 1551 => ((6 square-address))
mem: ((6 square-address)): 1521 <= 1551
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 13
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1383 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1551 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1519 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 13
run: init-file/init-board/main 11: 14 => ((2 integer))
mem: ((2 integer)): 1517 <= 14
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1520 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
run: init-file/init-board/main 8: 1552 => ((6 square-address))
mem: ((6 square-address)): 1521 <= 1552
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 14
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1384 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1552 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1519 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 14
run: init-file/init-board/main 11: 15 => ((2 integer))
mem: ((2 integer)): 1517 <= 15
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1520 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
run: init-file/init-board/main 8: 1553 => ((6 square-address))
mem: ((6 square-address)): 1521 <= 1553
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 15
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1385 integer) (raw)) => n
run: init-file/init-board/main 9: #\n => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1553 <= #\n
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1519 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 15
run: init-file/init-board/main 11: 16 => ((2 integer))
mem: ((2 integer)): 1517 <= 16
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1520 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1545
run: init-board/main 10: 1545 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1467 <= 1545
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 1
run: init-board/main 11: 2 => ((5 integer))
mem: ((5 integer)): 1440 <= 2
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 2
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1441 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 2
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
run: init-board/main 9: 1468 => ((7 file-address-address))
mem: ((7 file-address-address)): 1442 <= 1468
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1369
mem: ((5 integer)) => 2
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1554 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1369 2)
run: init-file/init-board/main 1: 1369 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1556 <= 1369
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1369 2)
run: init-file/init-board/main 2: 2 => ((2 integer))
mem: ((2 integer)): 1557 <= 2
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 2
run: init-file/init-board/main 3: 16 => ((2 integer))
mem: ((2 integer)): 1557 <= 16
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1585 => ((3 file-address))
mem: ((3 file-address)): 1558 <= 1585
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1559 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1560 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
run: init-file/init-board/main 8: 1586 => ((6 square-address))
mem: ((6 square-address)): 1561 <= 1586
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 16
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1386 integer) (raw)) => B
run: init-file/init-board/main 9: #\B => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1586 <= #\B
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1559 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 16
run: init-file/init-board/main 11: 17 => ((2 integer))
mem: ((2 integer)): 1557 <= 17
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1560 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
run: init-file/init-board/main 8: 1587 => ((6 square-address))
mem: ((6 square-address)): 1561 <= 1587
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 17
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1387 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1587 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1559 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 17
run: init-file/init-board/main 11: 18 => ((2 integer))
mem: ((2 integer)): 1557 <= 18
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1560 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
run: init-file/init-board/main 8: 1588 => ((6 square-address))
mem: ((6 square-address)): 1561 <= 1588
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 18
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1388 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1588 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1559 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 18
run: init-file/init-board/main 11: 19 => ((2 integer))
mem: ((2 integer)): 1557 <= 19
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1560 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
run: init-file/init-board/main 8: 1589 => ((6 square-address))
mem: ((6 square-address)): 1561 <= 1589
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 19
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1389 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1589 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1559 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 19
run: init-file/init-board/main 11: 20 => ((2 integer))
mem: ((2 integer)): 1557 <= 20
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1560 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
run: init-file/init-board/main 8: 1590 => ((6 square-address))
mem: ((6 square-address)): 1561 <= 1590
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 20
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1390 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1590 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1559 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 20
run: init-file/init-board/main 11: 21 => ((2 integer))
mem: ((2 integer)): 1557 <= 21
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1560 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
run: init-file/init-board/main 8: 1591 => ((6 square-address))
mem: ((6 square-address)): 1561 <= 1591
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 21
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1391 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1591 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1559 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 21
run: init-file/init-board/main 11: 22 => ((2 integer))
mem: ((2 integer)): 1557 <= 22
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1560 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
run: init-file/init-board/main 8: 1592 => ((6 square-address))
mem: ((6 square-address)): 1561 <= 1592
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 22
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1392 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1592 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1559 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 22
run: init-file/init-board/main 11: 23 => ((2 integer))
mem: ((2 integer)): 1557 <= 23
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1560 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
run: init-file/init-board/main 8: 1593 => ((6 square-address))
mem: ((6 square-address)): 1561 <= 1593
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 23
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1393 integer) (raw)) => b
run: init-file/init-board/main 9: #\b => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1593 <= #\b
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1559 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 23
run: init-file/init-board/main 11: 24 => ((2 integer))
mem: ((2 integer)): 1557 <= 24
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1560 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1585
run: init-board/main 10: 1585 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1468 <= 1585
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 2
run: init-board/main 11: 3 => ((5 integer))
mem: ((5 integer)): 1440 <= 3
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 3
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1441 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 3
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
run: init-board/main 9: 1469 => ((7 file-address-address))
mem: ((7 file-address-address)): 1442 <= 1469
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1369
mem: ((5 integer)) => 3
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1594 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1369 3)
run: init-file/init-board/main 1: 1369 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1596 <= 1369
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1369 3)
run: init-file/init-board/main 2: 3 => ((2 integer))
mem: ((2 integer)): 1597 <= 3
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 3
run: init-file/init-board/main 3: 24 => ((2 integer))
mem: ((2 integer)): 1597 <= 24
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1625 => ((3 file-address))
mem: ((3 file-address)): 1598 <= 1625
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1599 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1600 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
run: init-file/init-board/main 8: 1626 => ((6 square-address))
mem: ((6 square-address)): 1601 <= 1626
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 24
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1394 integer) (raw)) => Q
run: init-file/init-board/main 9: #\Q => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1626 <= #\Q
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1599 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 24
run: init-file/init-board/main 11: 25 => ((2 integer))
mem: ((2 integer)): 1597 <= 25
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1600 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
run: init-file/init-board/main 8: 1627 => ((6 square-address))
mem: ((6 square-address)): 1601 <= 1627
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 25
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1395 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1627 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1599 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 25
run: init-file/init-board/main 11: 26 => ((2 integer))
mem: ((2 integer)): 1597 <= 26
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1600 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
run: init-file/init-board/main 8: 1628 => ((6 square-address))
mem: ((6 square-address)): 1601 <= 1628
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 26
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1396 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1628 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1599 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 26
run: init-file/init-board/main 11: 27 => ((2 integer))
mem: ((2 integer)): 1597 <= 27
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1600 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
run: init-file/init-board/main 8: 1629 => ((6 square-address))
mem: ((6 square-address)): 1601 <= 1629
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 27
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1397 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1629 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1599 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 27
run: init-file/init-board/main 11: 28 => ((2 integer))
mem: ((2 integer)): 1597 <= 28
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1600 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
run: init-file/init-board/main 8: 1630 => ((6 square-address))
mem: ((6 square-address)): 1601 <= 1630
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 28
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1398 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1630 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1599 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 28
run: init-file/init-board/main 11: 29 => ((2 integer))
mem: ((2 integer)): 1597 <= 29
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1600 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
run: init-file/init-board/main 8: 1631 => ((6 square-address))
mem: ((6 square-address)): 1601 <= 1631
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 29
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1399 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1631 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1599 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 29
run: init-file/init-board/main 11: 30 => ((2 integer))
mem: ((2 integer)): 1597 <= 30
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1600 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
run: init-file/init-board/main 8: 1632 => ((6 square-address))
mem: ((6 square-address)): 1601 <= 1632
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 30
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1400 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1632 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1599 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 30
run: init-file/init-board/main 11: 31 => ((2 integer))
mem: ((2 integer)): 1597 <= 31
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1600 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
run: init-file/init-board/main 8: 1633 => ((6 square-address))
mem: ((6 square-address)): 1601 <= 1633
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 31
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1401 integer) (raw)) => q
run: init-file/init-board/main 9: #\q => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1633 <= #\q
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1599 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 31
run: init-file/init-board/main 11: 32 => ((2 integer))
mem: ((2 integer)): 1597 <= 32
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1600 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1625
run: init-board/main 10: 1625 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1469 <= 1625
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 3
run: init-board/main 11: 4 => ((5 integer))
mem: ((5 integer)): 1440 <= 4
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 4
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1441 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 4
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
run: init-board/main 9: 1470 => ((7 file-address-address))
mem: ((7 file-address-address)): 1442 <= 1470
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1369
mem: ((5 integer)) => 4
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1634 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1369 4)
run: init-file/init-board/main 1: 1369 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1636 <= 1369
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1369 4)
run: init-file/init-board/main 2: 4 => ((2 integer))
mem: ((2 integer)): 1637 <= 4
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 4
run: init-file/init-board/main 3: 32 => ((2 integer))
mem: ((2 integer)): 1637 <= 32
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1665 => ((3 file-address))
mem: ((3 file-address)): 1638 <= 1665
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1639 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1640 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
run: init-file/init-board/main 8: 1666 => ((6 square-address))
mem: ((6 square-address)): 1641 <= 1666
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 32
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1402 integer) (raw)) => K
run: init-file/init-board/main 9: #\K => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1666 <= #\K
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1639 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 32
run: init-file/init-board/main 11: 33 => ((2 integer))
mem: ((2 integer)): 1637 <= 33
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1640 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
run: init-file/init-board/main 8: 1667 => ((6 square-address))
mem: ((6 square-address)): 1641 <= 1667
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 33
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1403 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1667 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1639 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 33
run: init-file/init-board/main 11: 34 => ((2 integer))
mem: ((2 integer)): 1637 <= 34
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1640 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
run: init-file/init-board/main 8: 1668 => ((6 square-address))
mem: ((6 square-address)): 1641 <= 1668
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 34
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1404 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1668 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1639 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 34
run: init-file/init-board/main 11: 35 => ((2 integer))
mem: ((2 integer)): 1637 <= 35
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1640 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
run: init-file/init-board/main 8: 1669 => ((6 square-address))
mem: ((6 square-address)): 1641 <= 1669
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 35
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1405 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1669 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1639 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 35
run: init-file/init-board/main 11: 36 => ((2 integer))
mem: ((2 integer)): 1637 <= 36
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1640 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
run: init-file/init-board/main 8: 1670 => ((6 square-address))
mem: ((6 square-address)): 1641 <= 1670
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 36
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1406 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1670 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1639 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 36
run: init-file/init-board/main 11: 37 => ((2 integer))
mem: ((2 integer)): 1637 <= 37
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1640 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
run: init-file/init-board/main 8: 1671 => ((6 square-address))
mem: ((6 square-address)): 1641 <= 1671
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 37
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1407 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1671 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1639 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 37
run: init-file/init-board/main 11: 38 => ((2 integer))
mem: ((2 integer)): 1637 <= 38
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1640 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
run: init-file/init-board/main 8: 1672 => ((6 square-address))
mem: ((6 square-address)): 1641 <= 1672
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 38
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1408 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1672 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1639 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 38
run: init-file/init-board/main 11: 39 => ((2 integer))
mem: ((2 integer)): 1637 <= 39
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1640 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
run: init-file/init-board/main 8: 1673 => ((6 square-address))
mem: ((6 square-address)): 1641 <= 1673
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 39
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1409 integer) (raw)) => k
run: init-file/init-board/main 9: #\k => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1673 <= #\k
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1639 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 39
run: init-file/init-board/main 11: 40 => ((2 integer))
mem: ((2 integer)): 1637 <= 40
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1640 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1665
run: init-board/main 10: 1665 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1470 <= 1665
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 4
run: init-board/main 11: 5 => ((5 integer))
mem: ((5 integer)): 1440 <= 5
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 5
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1441 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 5
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
run: init-board/main 9: 1471 => ((7 file-address-address))
mem: ((7 file-address-address)): 1442 <= 1471
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1369
mem: ((5 integer)) => 5
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1674 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1369 5)
run: init-file/init-board/main 1: 1369 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1676 <= 1369
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1369 5)
run: init-file/init-board/main 2: 5 => ((2 integer))
mem: ((2 integer)): 1677 <= 5
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 5
run: init-file/init-board/main 3: 40 => ((2 integer))
mem: ((2 integer)): 1677 <= 40
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1705 => ((3 file-address))
mem: ((3 file-address)): 1678 <= 1705
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1679 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1680 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
run: init-file/init-board/main 8: 1706 => ((6 square-address))
mem: ((6 square-address)): 1681 <= 1706
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 40
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1410 integer) (raw)) => B
run: init-file/init-board/main 9: #\B => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1706 <= #\B
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1679 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 40
run: init-file/init-board/main 11: 41 => ((2 integer))
mem: ((2 integer)): 1677 <= 41
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1680 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
run: init-file/init-board/main 8: 1707 => ((6 square-address))
mem: ((6 square-address)): 1681 <= 1707
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 41
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1411 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1707 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1679 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 41
run: init-file/init-board/main 11: 42 => ((2 integer))
mem: ((2 integer)): 1677 <= 42
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1680 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
run: init-file/init-board/main 8: 1708 => ((6 square-address))
mem: ((6 square-address)): 1681 <= 1708
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 42
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1412 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1708 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1679 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 42
run: init-file/init-board/main 11: 43 => ((2 integer))
mem: ((2 integer)): 1677 <= 43
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1680 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
run: init-file/init-board/main 8: 1709 => ((6 square-address))
mem: ((6 square-address)): 1681 <= 1709
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 43
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1413 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1709 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1679 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 43
run: init-file/init-board/main 11: 44 => ((2 integer))
mem: ((2 integer)): 1677 <= 44
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1680 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
run: init-file/init-board/main 8: 1710 => ((6 square-address))
mem: ((6 square-address)): 1681 <= 1710
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 44
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1414 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1710 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1679 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 44
run: init-file/init-board/main 11: 45 => ((2 integer))
mem: ((2 integer)): 1677 <= 45
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1680 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
run: init-file/init-board/main 8: 1711 => ((6 square-address))
mem: ((6 square-address)): 1681 <= 1711
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 45
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1415 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1711 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1679 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 45
run: init-file/init-board/main 11: 46 => ((2 integer))
mem: ((2 integer)): 1677 <= 46
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1680 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
run: init-file/init-board/main 8: 1712 => ((6 square-address))
mem: ((6 square-address)): 1681 <= 1712
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 46
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1416 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1712 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1679 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 46
run: init-file/init-board/main 11: 47 => ((2 integer))
mem: ((2 integer)): 1677 <= 47
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1680 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
run: init-file/init-board/main 8: 1713 => ((6 square-address))
mem: ((6 square-address)): 1681 <= 1713
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 47
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1417 integer) (raw)) => b
run: init-file/init-board/main 9: #\b => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1713 <= #\b
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1679 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 47
run: init-file/init-board/main 11: 48 => ((2 integer))
mem: ((2 integer)): 1677 <= 48
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1680 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1705
run: init-board/main 10: 1705 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1471 <= 1705
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 5
run: init-board/main 11: 6 => ((5 integer))
mem: ((5 integer)): 1440 <= 6
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 6
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1441 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 6
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
run: init-board/main 9: 1472 => ((7 file-address-address))
mem: ((7 file-address-address)): 1442 <= 1472
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1369
mem: ((5 integer)) => 6
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1714 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1369 6)
run: init-file/init-board/main 1: 1369 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1716 <= 1369
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1369 6)
run: init-file/init-board/main 2: 6 => ((2 integer))
mem: ((2 integer)): 1717 <= 6
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 6
run: init-file/init-board/main 3: 48 => ((2 integer))
mem: ((2 integer)): 1717 <= 48
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1745 => ((3 file-address))
mem: ((3 file-address)): 1718 <= 1745
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1719 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1720 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
run: init-file/init-board/main 8: 1746 => ((6 square-address))
mem: ((6 square-address)): 1721 <= 1746
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 48
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1418 integer) (raw)) => N
run: init-file/init-board/main 9: #\N => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1746 <= #\N
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1719 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 48
run: init-file/init-board/main 11: 49 => ((2 integer))
mem: ((2 integer)): 1717 <= 49
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1720 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
run: init-file/init-board/main 8: 1747 => ((6 square-address))
mem: ((6 square-address)): 1721 <= 1747
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 49
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1419 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1747 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1719 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 49
run: init-file/init-board/main 11: 50 => ((2 integer))
mem: ((2 integer)): 1717 <= 50
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1720 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
run: init-file/init-board/main 8: 1748 => ((6 square-address))
mem: ((6 square-address)): 1721 <= 1748
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 50
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1420 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1748 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1719 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 50
run: init-file/init-board/main 11: 51 => ((2 integer))
mem: ((2 integer)): 1717 <= 51
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1720 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
run: init-file/init-board/main 8: 1749 => ((6 square-address))
mem: ((6 square-address)): 1721 <= 1749
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 51
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1421 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1749 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1719 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 51
run: init-file/init-board/main 11: 52 => ((2 integer))
mem: ((2 integer)): 1717 <= 52
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1720 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
run: init-file/init-board/main 8: 1750 => ((6 square-address))
mem: ((6 square-address)): 1721 <= 1750
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 52
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1422 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1750 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1719 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 52
run: init-file/init-board/main 11: 53 => ((2 integer))
mem: ((2 integer)): 1717 <= 53
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1720 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
run: init-file/init-board/main 8: 1751 => ((6 square-address))
mem: ((6 square-address)): 1721 <= 1751
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 53
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1423 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1751 <= #\_
schedule: scheduling init-file/init-board/main for further processing
schedule: init-file/init-board/main
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1719 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 53
run: init-file/init-board/main 11: 54 => ((2 integer))
mem: ((2 integer)): 1717 <= 54
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1720 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
run: init-file/init-board/main 8: 1752 => ((6 square-address))
mem: ((6 square-address)): 1721 <= 1752
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 54
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1424 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1752 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1719 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 54
run: init-file/init-board/main 11: 55 => ((2 integer))
mem: ((2 integer)): 1717 <= 55
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1720 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
run: init-file/init-board/main 8: 1753 => ((6 square-address))
mem: ((6 square-address)): 1721 <= 1753
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 55
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1425 integer) (raw)) => n
run: init-file/init-board/main 9: #\n => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1753 <= #\n
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1719 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 55
run: init-file/init-board/main 11: 56 => ((2 integer))
mem: ((2 integer)): 1717 <= 56
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1720 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1745
run: init-board/main 10: 1745 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1472 <= 1745
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 6
run: init-board/main 11: 7 => ((5 integer))
mem: ((5 integer)): 1440 <= 7
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 7
run: init-board/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1441 <= nil
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => nil
run: init-board/main 9: (((7 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 7
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
run: init-board/main 9: 1473 => ((7 file-address-address))
mem: ((7 file-address-address)): 1442 <= 1473
run: init-board/main 10: (((7 file-address-address) (deref)) <- ((init-file)) ((1 integer-array-address)) ((5 integer)))
mem: ((1 integer-array-address)) => 1369
mem: ((5 integer)) => 7
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 1754 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 integer-array-address)) <- ((next-input)))
arg: nil 0 (1369 7)
run: init-file/init-board/main 1: 1369 => ((1 integer-array-address))
mem: ((1 integer-array-address)): 1756 <= 1369
run: init-file/init-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1369 7)
run: init-file/init-board/main 2: 7 => ((2 integer))
mem: ((2 integer)): 1757 <= 7
run: init-file/init-board/main 3: (((2 integer)) <- ((multiply)) ((2 integer)) ((8 literal)))
mem: ((2 integer)) => 7
run: init-file/init-board/main 3: 56 => ((2 integer))
mem: ((2 integer)): 1757 <= 56
run: init-file/init-board/main 4: (((3 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 4: 1785 => ((3 file-address))
mem: ((3 file-address)): 1758 <= 1785
run: init-file/init-board/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1759 <= 0
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1760 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
run: init-file/init-board/main 8: 1786 => ((6 square-address))
mem: ((6 square-address)): 1761 <= 1786
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 56
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1426 integer) (raw)) => R
run: init-file/init-board/main 9: #\R => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1786 <= #\R
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: init-file/init-board/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1759 <= 1
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 56
run: init-file/init-board/main 11: 57 => ((2 integer))
mem: ((2 integer)): 1757 <= 57
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1760 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
run: init-file/init-board/main 8: 1787 => ((6 square-address))
mem: ((6 square-address)): 1761 <= 1787
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 57
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1427 integer) (raw)) => P
run: init-file/init-board/main 9: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1787 <= #\P
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-file/init-board/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1759 <= 2
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 57
run: init-file/init-board/main 11: 58 => ((2 integer))
mem: ((2 integer)): 1757 <= 58
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1760 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
run: init-file/init-board/main 8: 1788 => ((6 square-address))
mem: ((6 square-address)): 1761 <= 1788
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 58
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1428 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1788 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: init-file/init-board/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1759 <= 3
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 58
run: init-file/init-board/main 11: 59 => ((2 integer))
mem: ((2 integer)): 1757 <= 59
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1760 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
run: init-file/init-board/main 8: 1789 => ((6 square-address))
mem: ((6 square-address)): 1761 <= 1789
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 59
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1429 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1789 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: init-file/init-board/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1759 <= 4
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 59
run: init-file/init-board/main 11: 60 => ((2 integer))
mem: ((2 integer)): 1757 <= 60
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1760 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
run: init-file/init-board/main 8: 1790 => ((6 square-address))
mem: ((6 square-address)): 1761 <= 1790
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 60
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1430 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1790 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: init-file/init-board/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1759 <= 5
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 60
run: init-file/init-board/main 11: 61 => ((2 integer))
mem: ((2 integer)): 1757 <= 61
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1760 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
run: init-file/init-board/main 8: 1791 => ((6 square-address))
mem: ((6 square-address)): 1761 <= 1791
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 61
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1431 integer) (raw)) => _
run: init-file/init-board/main 9: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1791 <= #\_
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: init-file/init-board/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1759 <= 6
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 61
run: init-file/init-board/main 11: 62 => ((2 integer))
mem: ((2 integer)): 1757 <= 62
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1760 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
run: init-file/init-board/main 8: 1792 => ((6 square-address))
mem: ((6 square-address)): 1761 <= 1792
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 62
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1432 integer) (raw)) => p
run: init-file/init-board/main 9: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1792 <= #\p
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: init-file/init-board/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1759 <= 7
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 62
run: init-file/init-board/main 11: 63 => ((2 integer))
mem: ((2 integer)): 1757 <= 63
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1760 <= nil
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: init-file/init-board/main 8: (((6 square-address)) <- ((index-address)) ((3 file-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
run: init-file/init-board/main 8: 1793 => ((6 square-address))
mem: ((6 square-address)): 1761 <= 1793
run: init-file/init-board/main 9: (((6 square-address) (deref)) <- ((index)) ((1 integer-array-address) (deref)) ((2 integer)))
mem: ((2 integer)) => 63
array-len: ((1369 integer-array) (raw))
mem: ((1369 integer) (raw)) => 64
mem: ((1433 integer) (raw)) => r
run: init-file/init-board/main 9: #\r => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 1793 <= #\r
run: init-file/init-board/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: init-file/init-board/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1759 <= 8
run: init-file/init-board/main 11: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 63
run: init-file/init-board/main 11: 64 => ((2 integer))
mem: ((2 integer)): 1757 <= 64
run: init-file/init-board/main 12: (((jump)) ((-7 offset)))
run: init-file/init-board/main 6: (((5 boolean)) <- ((equal)) ((4 integer)) ((8 literal)))
mem: ((4 integer)) => 8
run: init-file/init-board/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1760 <= t
run: init-file/init-board/main 7: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: init-file/init-board/main 13: (((reply)) ((3 file-address)))
mem: ((3 file-address)) => 1785
run: init-board/main 10: 1785 => ((7 file-address-address) (deref))
mem: ((7 file-address-address) (deref)): 1473 <= 1785
run: init-board/main 11: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 7
run: init-board/main 11: 8 => ((5 integer))
mem: ((5 integer)): 1440 <= 8
run: init-board/main 12: (((jump)) ((-6 offset)))
run: init-board/main 7: (((6 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 8
run: init-board/main 7: t => ((6 boolean))
mem: ((6 boolean)): 1441 <= t
run: init-board/main 8: (((jump-if)) ((6 boolean)) ((4 offset)))
mem: ((6 boolean)) => t
run: init-board/main 13: (((reply)) ((4 board-address)))
mem: ((4 board-address)) => 1465
run: main 4: 1465 => ((4 board-address))
mem: ((4 board-address)): 1005 <= 1465
run: main 5: (((5 move-address)) <- ((new)) ((move literal)))
run: main 5: 1794 => ((5 move-address))
mem: ((5 move-address)): 1006 <= 1794
run: main 6: (((6 integer-integer-pair-address)) <- ((get-address)) ((5 move-address) (deref)) ((0 offset)))
run: main 6: 1794 => ((6 integer-integer-pair-address))
mem: ((6 integer-integer-pair-address)): 1007 <= 1794
run: main 7: (((7 integer-address)) <- ((get-address)) ((6 integer-integer-pair-address) (deref)) ((0 offset)))
run: main 7: 1794 => ((7 integer-address))
mem: ((7 integer-address)): 1008 <= 1794
run: main 8: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: main 8: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1794 <= 0
run: main 9: (((7 integer-address)) <- ((get-address)) ((6 integer-integer-pair-address) (deref)) ((1 offset)))
run: main 9: 1795 => ((7 integer-address))
mem: ((7 integer-address)): 1008 <= 1795
run: main 10: (((7 integer-address) (deref)) <- ((copy)) ((1 literal)))
run: main 10: 1 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1795 <= 1
run: main 11: (((8 integer-integer-pair-address)) <- ((get-address)) ((5 move-address) (deref)) ((1 offset)))
run: main 11: 1796 => ((8 integer-integer-pair-address))
mem: ((8 integer-integer-pair-address)): 1009 <= 1796
run: main 12: (((7 integer-address)) <- ((get-address)) ((8 integer-integer-pair-address) (deref)) ((0 offset)))
run: main 12: 1796 => ((7 integer-address))
mem: ((7 integer-address)): 1008 <= 1796
run: main 13: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: main 13: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1796 <= 0
run: main 14: (((7 integer-address)) <- ((get-address)) ((8 integer-integer-pair-address) (deref)) ((1 offset)))
run: main 14: 1797 => ((7 integer-address))
mem: ((7 integer-address)): 1008 <= 1797
run: main 15: (((7 integer-address) (deref)) <- ((copy)) ((3 literal)))
run: main 15: 3 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 1797 <= 3
run: main 16: (((4 board-address)) <- ((make-move)) ((4 board-address)) ((5 move-address)))
mem: ((4 board-address)) => 1465
mem: ((5 move-address)) => 1794
run: make-move/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: make-move/main 0: 1798 => ((default-space space-address))
run: make-move/main 1: (((1 board-address)) <- ((next-input)))
arg: nil 0 (1465 1794)
run: make-move/main 1: 1465 => ((1 board-address))
mem: ((1 board-address)): 1800 <= 1465
run: make-move/main 2: (((2 move-address)) <- ((next-input)))
arg: nil 1 (1465 1794)
run: make-move/main 2: 1794 => ((2 move-address))
mem: ((2 move-address)): 1801 <= 1794
run: make-move/main 3: (((3 integer-integer-pair)) <- ((get)) ((2 move-address) (deref)) ((0 offset)))
mem: ((1794 integer-integer-pair) (raw)) => #(tagged record (0 1 . nil))
run: make-move/main 3: #(tagged record (0 1 . nil)) => ((3 integer-integer-pair))
mem: ((3 integer-integer-pair)): 1802 <= 0
mem: ((3 integer-integer-pair)): 1803 <= 1
run: make-move/main 4: (((5 integer)) <- ((get)) ((3 integer-integer-pair)) ((0 offset)))
mem: ((1802 integer) (raw)) => 0
run: make-move/main 4: 0 => ((5 integer))
mem: ((5 integer)): 1804 <= 0
run: make-move/main 5: (((6 integer)) <- ((get)) ((3 integer-integer-pair)) ((1 offset)))
mem: ((1803 integer) (raw)) => 1
run: make-move/main 5: 1 => ((6 integer))
mem: ((6 integer)): 1805 <= 1
run: make-move/main 6: (((7 file-address)) <- ((index)) ((1 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1466 file-address) (raw)) => 1505
run: make-move/main 6: 1505 => ((7 file-address))
mem: ((7 file-address)): 1806 <= 1505
run: make-move/main 7: (((8 square-address)) <- ((index-address)) ((7 file-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
run: make-move/main 7: 1507 => ((8 square-address))
mem: ((8 square-address)): 1807 <= 1507
run: make-move/main 8: (((3 integer-integer-pair)) <- ((get)) ((2 move-address) (deref)) ((1 offset)))
mem: ((1796 integer-integer-pair) (raw)) => #(tagged record (0 3 . nil))
run: make-move/main 8: #(tagged record (0 3 . nil)) => ((3 integer-integer-pair))
mem: ((3 integer-integer-pair)): 1802 <= 0
mem: ((3 integer-integer-pair)): 1803 <= 3
run: make-move/main 9: (((9 integer)) <- ((get)) ((3 integer-integer-pair)) ((0 offset)))
mem: ((1802 integer) (raw)) => 0
run: make-move/main 9: 0 => ((9 integer))
mem: ((9 integer)): 1808 <= 0
run: make-move/main 10: (((10 integer)) <- ((get)) ((3 integer-integer-pair)) ((1 offset)))
mem: ((1803 integer) (raw)) => 3
run: make-move/main 10: 3 => ((10 integer))
mem: ((10 integer)): 1809 <= 3
run: make-move/main 11: (((7 file-address)) <- ((index)) ((1 board-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 0
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1466 file-address) (raw)) => 1505
run: make-move/main 11: 1505 => ((7 file-address))
mem: ((7 file-address)): 1806 <= 1505
run: make-move/main 12: (((11 square-address)) <- ((index-address)) ((7 file-address) (deref)) ((10 integer)))
mem: ((10 integer)) => 3
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
run: make-move/main 12: 1509 => ((11 square-address))
mem: ((11 square-address)): 1810 <= 1509
run: make-move/main 13: (((11 square-address) (deref)) <- ((copy)) ((8 square-address) (deref)))
mem: ((8 square-address) (deref)) => P
run: make-move/main 13: #\P => ((11 square-address) (deref))
mem: ((11 square-address) (deref)): 1509 <= #\P
run: make-move/main 14: (((8 square-address) (deref)) <- ((copy)) ((_ literal)))
run: make-move/main 14: #\_ => ((8 square-address) (deref))
mem: ((8 square-address) (deref)): 1507 <= #\_
run: make-move/main 15: (((reply)) ((1 board-address)))
mem: ((1 board-address)) => 1465
run: main 16: 1465 => ((4 board-address))
mem: ((4 board-address)): 1005 <= 1465
run: main 17: (((print-board)) ((2 terminal-address)) ((4 board-address)))
mem: ((2 terminal-address)) => 1101
mem: ((4 board-address)) => 1465
run: print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-board/main 0: 1829 => ((default-space space-address))
run: print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 1465)
run: print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 1831 <= 1101
run: print-board/main 2: (((2 board-address)) <- ((next-input)))
arg: nil 1 (1101 1465)
run: print-board/main 2: 1465 => ((2 board-address))
mem: ((2 board-address)): 1832 <= 1465
run: print-board/main 3: (((3 integer)) <- ((copy)) ((7 literal)))
run: print-board/main 3: 7 => ((3 integer))
mem: ((3 integer)): 1833 <= 7
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 7
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: print-board/main 6: 8 => ((5 integer))
mem: ((5 integer)): 1835 <= 8
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 8
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 1860 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 8)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 1862 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 8)
run: print-integer/print-board/main 2: 8 => ((2 integer))
mem: ((2 integer)): 1863 <= 8
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 1891 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (8)
run: integer-to-decimal-string/print-integer/print-board/main 1: 8 => ((1 integer))
mem: ((1 integer)): 1893 <= 8
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 1894 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 1896 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 1897 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 1922 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 1953 => ((1 buffer-address))
mem: ((1 buffer-address)): 1924 <= 1953
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 1953 => ((2 integer-address))
mem: ((2 integer-address)): 1925 <= 1953
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1953 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 1954 => ((3 string-address-address))
mem: ((3 string-address-address)): 1926 <= 1954
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 1927 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 1955 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 1954 <= 1955
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1953
run: integer-to-decimal-string/print-integer/print-board/main 11: 1953 => ((6 buffer-address))
mem: ((6 buffer-address)): 1898 <= 1953
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 1899 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 1900 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 1901 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 8
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 1893 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 8 => ((10 integer))
mem: ((10 integer)): 1902 <= 8
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 17: 56 => ((11 integer))
mem: ((11 integer)): 1903 <= 56
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 56
run: integer-to-decimal-string/print-integer/print-board/main 18: #\8 => ((12 character))
mem: ((12 character)): 1904 <= #\8
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 1953
mem: ((12 character)) => 8
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 1986 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1953 #\8)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 1953 => ((1 buffer-address))
mem: ((1 buffer-address)): 1988 <= 1953
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1953 #\8)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\8 => ((2 character))
mem: ((2 character)): 1989 <= #\8
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1953
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 2017 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1953)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 1953 => ((1 buffer-address))
mem: ((1 buffer-address)): 2019 <= 1953
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1953 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 2020 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1954 string-address) (raw)) => 1955
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 1955 => ((3 string-address))
mem: ((3 string-address)): 2021 <= 1955
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1955 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 2022 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2023 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 1990 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 1953 => ((4 integer-address))
mem: ((4 integer-address)): 1991 <= 1953
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1954 string-address) (raw)) => 1955
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 1955 => ((5 string-address))
mem: ((5 string-address)): 1992 <= 1955
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1955 string) (raw))
mem: ((1955 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 1956 => ((6 byte-address))
mem: ((6 byte-address)): 1993 <= 1956
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 8
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\8 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 1956 <= #\8
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1953 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 1953
run: integer-to-decimal-string/print-integer/print-board/main 19: 1953 => ((6 buffer-address))
mem: ((6 buffer-address)): 1898 <= 1953
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 1901 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((1953 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 1905 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((1954 string-address) (raw)) => 1955
run: integer-to-decimal-string/print-integer/print-board/main 24: 1955 => ((14 string-address))
mem: ((14 string-address)): 1906 <= 1955
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 2048 => ((15 string-address))
mem: ((15 string-address)): 1907 <= 2048
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 1908 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 1909 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 1901 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((1955 string) (raw))
mem: ((1955 integer) (raw)) => 30
mem: ((1956 byte) (raw)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 30: #\8 => ((18 byte))
mem: ((18 byte)): 1910 <= #\8
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((2048 string) (raw))
mem: ((2048 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 2049 => ((19 byte-address))
mem: ((19 byte-address)): 1911 <= 2049
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 32: #\8 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 2049 <= #\8
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 1908 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 1909 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 1901 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 2048
run: print-integer/print-board/main 3: 2048 => ((3 string-address))
mem: ((3 string-address)): 1864 <= 2048
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 2048
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 2050 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 2048)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2052 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 2048)
run: print-string/print-integer/print-board/main 2: 2048 => ((2 string-address))
mem: ((2 string-address)): 2053 <= 2048
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2048 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 2054 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 2055 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2056 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((2048 string) (raw))
mem: ((2048 integer) (raw)) => 1
mem: ((2049 byte) (raw)) => 8
run: print-string/print-integer/print-board/main 7: #\8 => ((6 character))
mem: ((6 character)): 2057 <= #\8
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 8
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 2081 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\8)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2083 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\8)
run: print-character/print-string/print-integer/print-board/main 2: #\8 => ((2 character))
mem: ((2 character)): 2084 <= #\8
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\8)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2085 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\8)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2086 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2087 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2088 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2089 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2090 <= 0
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 0 => ((9 integer))
mem: ((9 integer)): 2091 <= 0
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2092 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 0
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1107 => ((11 byte-address))
mem: ((11 byte-address)): 2093 <= 1107
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 8
run: print-character/print-string/print-integer/print-board/main 13: #\8 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1107 <= #\8
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 2055 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 2056 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 2112 => ((6 string-address))
mem: ((6 string-address)): 1836 <= 2112
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 2112
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 2116 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 2112)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2118 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 2112)
run: print-string/print-board/main 2: 2112 => ((2 string-address))
mem: ((2 string-address)): 2119 <= 2112
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2112 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 2120 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 2121 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2122 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((2112 string) (raw))
mem: ((2112 integer) (raw)) => 3
mem: ((2113 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 2123 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 2147 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2149 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2150 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2151 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2152 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2153 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2154 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2155 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2156 <= 0
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 1 => ((9 integer))
mem: ((9 integer)): 2157 <= 1
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2158 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 1
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1108 => ((11 byte-address))
mem: ((11 byte-address)): 2159 <= 1108
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1108 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 2121 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2122 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((2112 string) (raw))
mem: ((2112 integer) (raw)) => 3
mem: ((2114 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 2123 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 2178 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2180 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 2181 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2182 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2183 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2184 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2185 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2186 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2187 <= 0
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 2 => ((9 integer))
mem: ((9 integer)): 2188 <= 2
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2189 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 2
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1109 => ((11 byte-address))
mem: ((11 byte-address)): 2190 <= 1109
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1109 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 2121 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2122 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((2112 string) (raw))
mem: ((2112 integer) (raw)) => 3
mem: ((2115 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 2123 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 2209 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2211 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2212 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2213 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2214 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2215 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2216 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2217 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2218 <= 0
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 3 => ((9 integer))
mem: ((9 integer)): 2219 <= 3
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2220 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 3
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1110 => ((11 byte-address))
mem: ((11 byte-address)): 2221 <= 1110
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1110 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 2121 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 2122 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1837 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1466 file-address) (raw)) => 1505
run: print-board/main 13: 1505 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1505
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
mem: ((1513 square) (raw)) => r
run: print-board/main 14: #\r => ((6 square))
mem: ((6 square)): 1836 <= #\r
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => r
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2240 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\r)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2242 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\r)
run: print-character/print-board/main 2: #\r => ((2 character))
mem: ((2 character)): 2243 <= #\r
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\r)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2244 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\r)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2245 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2246 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2247 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2248 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2249 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 4 => ((9 integer))
mem: ((9 integer)): 2250 <= 4
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2251 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 4
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1111 => ((11 byte-address))
mem: ((11 byte-address)): 2252 <= 1111
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => r
run: print-character/print-board/main 13: #\r => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1111 <= #\r
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2271 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2273 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2274 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2275 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2276 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2277 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2278 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2279 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2280 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 5 => ((9 integer))
mem: ((9 integer)): 2281 <= 5
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2282 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 5
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1112 => ((11 byte-address))
mem: ((11 byte-address)): 2283 <= 1112
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1112 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1837 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1467 file-address) (raw)) => 1545
run: print-board/main 13: 1545 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1545
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
mem: ((1553 square) (raw)) => n
run: print-board/main 14: #\n => ((6 square))
mem: ((6 square)): 1836 <= #\n
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => n
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2302 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\n)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2304 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\n)
run: print-character/print-board/main 2: #\n => ((2 character))
mem: ((2 character)): 2305 <= #\n
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\n)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2306 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\n)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2307 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2308 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2309 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2310 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2311 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 6 => ((9 integer))
mem: ((9 integer)): 2312 <= 6
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2313 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 6
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1113 => ((11 byte-address))
mem: ((11 byte-address)): 2314 <= 1113
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => n
run: print-character/print-board/main 13: #\n => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1113 <= #\n
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2333 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2335 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2336 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2337 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2338 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2339 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2340 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2341 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2342 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 7 => ((9 integer))
mem: ((9 integer)): 2343 <= 7
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2344 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 7
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1114 => ((11 byte-address))
mem: ((11 byte-address)): 2345 <= 1114
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1114 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1837 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1468 file-address) (raw)) => 1585
run: print-board/main 13: 1585 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1585
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
mem: ((1593 square) (raw)) => b
run: print-board/main 14: #\b => ((6 square))
mem: ((6 square)): 1836 <= #\b
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => b
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2364 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\b)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2366 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\b)
run: print-character/print-board/main 2: #\b => ((2 character))
mem: ((2 character)): 2367 <= #\b
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\b)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2368 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\b)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2369 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2370 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2371 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2372 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2373 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 8 => ((9 integer))
mem: ((9 integer)): 2374 <= 8
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2375 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 8
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1115 => ((11 byte-address))
mem: ((11 byte-address)): 2376 <= 1115
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => b
run: print-character/print-board/main 13: #\b => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1115 <= #\b
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2395 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2397 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2398 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2399 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2400 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2401 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2402 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2403 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2404 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 9 => ((9 integer))
mem: ((9 integer)): 2405 <= 9
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2406 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 9
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1116 => ((11 byte-address))
mem: ((11 byte-address)): 2407 <= 1116
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1116 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1837 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1469 file-address) (raw)) => 1625
run: print-board/main 13: 1625 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1625
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
mem: ((1633 square) (raw)) => q
run: print-board/main 14: #\q => ((6 square))
mem: ((6 square)): 1836 <= #\q
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => q
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2426 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\q)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2428 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\q)
run: print-character/print-board/main 2: #\q => ((2 character))
mem: ((2 character)): 2429 <= #\q
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\q)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2430 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\q)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2431 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2432 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2433 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2434 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2435 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 10 => ((9 integer))
mem: ((9 integer)): 2436 <= 10
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2437 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 10
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1117 => ((11 byte-address))
mem: ((11 byte-address)): 2438 <= 1117
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => q
run: print-character/print-board/main 13: #\q => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1117 <= #\q
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2457 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2459 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2460 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2461 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2462 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2463 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2464 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2465 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2466 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 11 => ((9 integer))
mem: ((9 integer)): 2467 <= 11
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2468 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 11
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1118 => ((11 byte-address))
mem: ((11 byte-address)): 2469 <= 1118
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1118 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1837 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1470 file-address) (raw)) => 1665
run: print-board/main 13: 1665 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1665
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
mem: ((1673 square) (raw)) => k
run: print-board/main 14: #\k => ((6 square))
mem: ((6 square)): 1836 <= #\k
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => k
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2488 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\k)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2490 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\k)
run: print-character/print-board/main 2: #\k => ((2 character))
mem: ((2 character)): 2491 <= #\k
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\k)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2492 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\k)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2493 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2494 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2495 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2496 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2497 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 12 => ((9 integer))
mem: ((9 integer)): 2498 <= 12
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2499 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 12
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1119 => ((11 byte-address))
mem: ((11 byte-address)): 2500 <= 1119
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => k
run: print-character/print-board/main 13: #\k => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1119 <= #\k
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2519 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2521 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2522 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2523 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2524 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2525 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2526 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2527 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2528 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 13 => ((9 integer))
mem: ((9 integer)): 2529 <= 13
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2530 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 13
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1120 => ((11 byte-address))
mem: ((11 byte-address)): 2531 <= 1120
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1120 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1837 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1471 file-address) (raw)) => 1705
run: print-board/main 13: 1705 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1705
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
mem: ((1713 square) (raw)) => b
run: print-board/main 14: #\b => ((6 square))
mem: ((6 square)): 1836 <= #\b
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => b
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2550 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\b)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2552 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\b)
run: print-character/print-board/main 2: #\b => ((2 character))
mem: ((2 character)): 2553 <= #\b
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\b)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2554 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\b)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2555 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2556 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2557 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2558 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2559 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 14 => ((9 integer))
mem: ((9 integer)): 2560 <= 14
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2561 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 14
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1121 => ((11 byte-address))
mem: ((11 byte-address)): 2562 <= 1121
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => b
run: print-character/print-board/main 13: #\b => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1121 <= #\b
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2581 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2583 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2584 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2585 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2586 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2587 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2588 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2589 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2590 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 15 => ((9 integer))
mem: ((9 integer)): 2591 <= 15
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2592 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 15
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1122 => ((11 byte-address))
mem: ((11 byte-address)): 2593 <= 1122
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1122 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1837 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1472 file-address) (raw)) => 1745
run: print-board/main 13: 1745 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1745
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
mem: ((1753 square) (raw)) => n
run: print-board/main 14: #\n => ((6 square))
mem: ((6 square)): 1836 <= #\n
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => n
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2612 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\n)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2614 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\n)
run: print-character/print-board/main 2: #\n => ((2 character))
mem: ((2 character)): 2615 <= #\n
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\n)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2616 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\n)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2617 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2618 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2619 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2620 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2621 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 16 => ((9 integer))
mem: ((9 integer)): 2622 <= 16
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2623 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 16
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1123 => ((11 byte-address))
mem: ((11 byte-address)): 2624 <= 1123
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => n
run: print-character/print-board/main 13: #\n => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1123 <= #\n
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2643 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2645 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2646 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2647 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2648 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2649 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2650 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2651 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2652 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 17 => ((9 integer))
mem: ((9 integer)): 2653 <= 17
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2654 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 17
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1124 => ((11 byte-address))
mem: ((11 byte-address)): 2655 <= 1124
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1124 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1837 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1473 file-address) (raw)) => 1785
run: print-board/main 13: 1785 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1785
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
mem: ((1793 square) (raw)) => r
run: print-board/main 14: #\r => ((6 square))
mem: ((6 square)): 1836 <= #\r
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => r
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2674 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\r)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2676 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\r)
run: print-character/print-board/main 2: #\r => ((2 character))
mem: ((2 character)): 2677 <= #\r
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\r)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2678 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\r)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2679 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2680 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2681 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2682 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2683 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 18 => ((9 integer))
mem: ((9 integer)): 2684 <= 18
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2685 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 18
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1125 => ((11 byte-address))
mem: ((11 byte-address)): 2686 <= 1125
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => r
run: print-character/print-board/main 13: #\r => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1125 <= #\r
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 2705 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2707 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 2708 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2709 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2710 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2711 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2712 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2713 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 2714 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 19 => ((9 integer))
mem: ((9 integer)): 2715 <= 19
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2716 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 19
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1126 => ((11 byte-address))
mem: ((11 byte-address)): 2717 <= 1126
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1126 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1837 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1834 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: print-board/main 19: 6 => ((3 integer))
mem: ((3 integer)): 1833 <= 6
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 2736 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2738 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 2739 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 0
run: cursor-to-next-line/print-board/main 4: 1 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 1
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 2740 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 6
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: print-board/main 6: 7 => ((5 integer))
mem: ((5 integer)): 1835 <= 7
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 7
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 2767 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 7)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2769 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 7)
run: print-integer/print-board/main 2: 7 => ((2 integer))
mem: ((2 integer)): 2770 <= 7
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 2798 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (7)
run: integer-to-decimal-string/print-integer/print-board/main 1: 7 => ((1 integer))
mem: ((1 integer)): 2800 <= 7
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 2801 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 2803 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 2804 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 2829 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 2860 => ((1 buffer-address))
mem: ((1 buffer-address)): 2831 <= 2860
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 2860 => ((2 integer-address))
mem: ((2 integer-address)): 2832 <= 2860
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 2860 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 2861 => ((3 string-address-address))
mem: ((3 string-address-address)): 2833 <= 2861
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 2834 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 2862 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 2861 <= 2862
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 2860
run: integer-to-decimal-string/print-integer/print-board/main 11: 2860 => ((6 buffer-address))
mem: ((6 buffer-address)): 2805 <= 2860
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 2806 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 2807 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 2808 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 7
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 2800 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 7 => ((10 integer))
mem: ((10 integer)): 2809 <= 7
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 17: 55 => ((11 integer))
mem: ((11 integer)): 2810 <= 55
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 55
run: integer-to-decimal-string/print-integer/print-board/main 18: #\7 => ((12 character))
mem: ((12 character)): 2811 <= #\7
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 2860
mem: ((12 character)) => 7
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 2893 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (2860 #\7)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 2860 => ((1 buffer-address))
mem: ((1 buffer-address)): 2895 <= 2860
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2860 #\7)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\7 => ((2 character))
mem: ((2 character)): 2896 <= #\7
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 2860
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 2924 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (2860)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 2860 => ((1 buffer-address))
mem: ((1 buffer-address)): 2926 <= 2860
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((2860 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 2927 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((2861 string-address) (raw)) => 2862
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 2862 => ((3 string-address))
mem: ((3 string-address)): 2928 <= 2862
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((2862 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 2929 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2930 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 2897 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 2860 => ((4 integer-address))
mem: ((4 integer-address)): 2898 <= 2860
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((2861 string-address) (raw)) => 2862
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 2862 => ((5 string-address))
mem: ((5 string-address)): 2899 <= 2862
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((2862 string) (raw))
mem: ((2862 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 2863 => ((6 byte-address))
mem: ((6 byte-address)): 2900 <= 2863
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 7
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\7 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 2863 <= #\7
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 2860 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 2860
run: integer-to-decimal-string/print-integer/print-board/main 19: 2860 => ((6 buffer-address))
mem: ((6 buffer-address)): 2805 <= 2860
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 2808 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((2860 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 2812 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((2861 string-address) (raw)) => 2862
run: integer-to-decimal-string/print-integer/print-board/main 24: 2862 => ((14 string-address))
mem: ((14 string-address)): 2813 <= 2862
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 2955 => ((15 string-address))
mem: ((15 string-address)): 2814 <= 2955
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 2815 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 2816 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 2808 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((2862 string) (raw))
mem: ((2862 integer) (raw)) => 30
mem: ((2863 byte) (raw)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 30: #\7 => ((18 byte))
mem: ((18 byte)): 2817 <= #\7
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((2955 string) (raw))
mem: ((2955 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 2956 => ((19 byte-address))
mem: ((19 byte-address)): 2818 <= 2956
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 32: #\7 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 2956 <= #\7
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 2815 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 2816 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 2808 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 2955
run: print-integer/print-board/main 3: 2955 => ((3 string-address))
mem: ((3 string-address)): 2771 <= 2955
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 2955
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 2957 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 2955)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2959 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 2955)
run: print-string/print-integer/print-board/main 2: 2955 => ((2 string-address))
mem: ((2 string-address)): 2960 <= 2955
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2955 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 2961 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 2962 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2963 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((2955 string) (raw))
mem: ((2955 integer) (raw)) => 1
mem: ((2956 byte) (raw)) => 7
run: print-string/print-integer/print-board/main 7: #\7 => ((6 character))
mem: ((6 character)): 2964 <= #\7
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 7
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 2988 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\7)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 2990 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\7)
run: print-character/print-string/print-integer/print-board/main 2: #\7 => ((2 character))
mem: ((2 character)): 2991 <= #\7
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\7)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 2992 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\7)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 2993 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 2994 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 2995 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 2996 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 2997 <= 20
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 20 => ((9 integer))
mem: ((9 integer)): 2998 <= 20
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 2999 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 20
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1127 => ((11 byte-address))
mem: ((11 byte-address)): 3000 <= 1127
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 7
run: print-character/print-string/print-integer/print-board/main 13: #\7 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1127 <= #\7
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 2962 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 2963 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 3019 => ((6 string-address))
mem: ((6 string-address)): 1836 <= 3019
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 3019
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 3023 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 3019)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3025 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 3019)
run: print-string/print-board/main 2: 3019 => ((2 string-address))
mem: ((2 string-address)): 3026 <= 3019
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3019 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 3027 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 3028 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3029 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((3019 string) (raw))
mem: ((3019 integer) (raw)) => 3
mem: ((3020 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 3030 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 3054 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3056 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3057 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3058 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3059 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3060 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3061 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3062 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3063 <= 20
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 21 => ((9 integer))
mem: ((9 integer)): 3064 <= 21
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3065 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 21
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1128 => ((11 byte-address))
mem: ((11 byte-address)): 3066 <= 1128
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1128 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 3028 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3029 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((3019 string) (raw))
mem: ((3019 integer) (raw)) => 3
mem: ((3021 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 3030 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 3085 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3087 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 3088 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3089 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3090 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3091 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3092 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3093 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3094 <= 20
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 22 => ((9 integer))
mem: ((9 integer)): 3095 <= 22
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3096 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 22
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1129 => ((11 byte-address))
mem: ((11 byte-address)): 3097 <= 1129
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1129 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 3028 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3029 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((3019 string) (raw))
mem: ((3019 integer) (raw)) => 3
mem: ((3022 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 3030 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 3116 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3118 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3119 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3120 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3121 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3122 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3123 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3124 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3125 <= 20
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 23 => ((9 integer))
mem: ((9 integer)): 3126 <= 23
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3127 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 23
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1130 => ((11 byte-address))
mem: ((11 byte-address)): 3128 <= 1130
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1130 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 3028 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 3029 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1837 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1466 file-address) (raw)) => 1505
run: print-board/main 13: 1505 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1505
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
mem: ((1512 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1836 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3147 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3149 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3150 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3151 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3152 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3153 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3154 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3155 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3156 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 24 => ((9 integer))
mem: ((9 integer)): 3157 <= 24
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3158 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 24
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1131 => ((11 byte-address))
mem: ((11 byte-address)): 3159 <= 1131
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1131 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3178 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3180 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3181 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3182 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3183 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3184 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3185 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3186 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3187 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 25 => ((9 integer))
mem: ((9 integer)): 3188 <= 25
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3189 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 25
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1132 => ((11 byte-address))
mem: ((11 byte-address)): 3190 <= 1132
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1132 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1837 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1467 file-address) (raw)) => 1545
run: print-board/main 13: 1545 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1545
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
mem: ((1552 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1836 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3209 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3211 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3212 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3213 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3214 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3215 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3216 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3217 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3218 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 26 => ((9 integer))
mem: ((9 integer)): 3219 <= 26
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3220 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 26
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1133 => ((11 byte-address))
mem: ((11 byte-address)): 3221 <= 1133
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1133 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3240 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3242 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3243 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3244 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3245 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3246 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3247 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3248 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3249 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 27 => ((9 integer))
mem: ((9 integer)): 3250 <= 27
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3251 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 27
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1134 => ((11 byte-address))
mem: ((11 byte-address)): 3252 <= 1134
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1134 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1837 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1468 file-address) (raw)) => 1585
run: print-board/main 13: 1585 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1585
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
mem: ((1592 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1836 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3271 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3273 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3274 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3275 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3276 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3277 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3278 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3279 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3280 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 28 => ((9 integer))
mem: ((9 integer)): 3281 <= 28
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3282 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 28
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1135 => ((11 byte-address))
mem: ((11 byte-address)): 3283 <= 1135
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1135 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3302 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3304 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3305 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3306 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3307 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3308 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3309 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3310 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3311 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 29 => ((9 integer))
mem: ((9 integer)): 3312 <= 29
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3313 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 29
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1136 => ((11 byte-address))
mem: ((11 byte-address)): 3314 <= 1136
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1136 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1837 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1469 file-address) (raw)) => 1625
run: print-board/main 13: 1625 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1625
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
mem: ((1632 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1836 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3333 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3335 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3336 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3337 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3338 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3339 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3340 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3341 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3342 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 30 => ((9 integer))
mem: ((9 integer)): 3343 <= 30
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3344 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 30
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1137 => ((11 byte-address))
mem: ((11 byte-address)): 3345 <= 1137
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1137 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3364 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3366 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3367 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3368 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3369 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3370 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3371 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3372 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3373 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 31 => ((9 integer))
mem: ((9 integer)): 3374 <= 31
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3375 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 31
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1138 => ((11 byte-address))
mem: ((11 byte-address)): 3376 <= 1138
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1138 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1837 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1470 file-address) (raw)) => 1665
run: print-board/main 13: 1665 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1665
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
mem: ((1672 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1836 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3395 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3397 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3398 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3399 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3400 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3401 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3402 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3403 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3404 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 32 => ((9 integer))
mem: ((9 integer)): 3405 <= 32
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3406 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 32
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1139 => ((11 byte-address))
mem: ((11 byte-address)): 3407 <= 1139
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1139 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3426 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3428 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3429 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3430 <= nil
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3431 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3432 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3433 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3434 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3435 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 33 => ((9 integer))
mem: ((9 integer)): 3436 <= 33
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3437 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 33
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1140 => ((11 byte-address))
mem: ((11 byte-address)): 3438 <= 1140
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1140 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1837 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1471 file-address) (raw)) => 1705
run: print-board/main 13: 1705 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1705
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
mem: ((1712 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1836 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3457 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3459 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3460 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3461 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3462 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3463 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3464 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3465 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3466 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 34 => ((9 integer))
mem: ((9 integer)): 3467 <= 34
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3468 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 34
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1141 => ((11 byte-address))
mem: ((11 byte-address)): 3469 <= 1141
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1141 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3488 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3490 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3491 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3492 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3493 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3494 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3495 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3496 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3497 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 35 => ((9 integer))
mem: ((9 integer)): 3498 <= 35
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3499 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 35
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1142 => ((11 byte-address))
mem: ((11 byte-address)): 3500 <= 1142
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1142 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1837 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1472 file-address) (raw)) => 1745
run: print-board/main 13: 1745 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1745
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
mem: ((1752 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1836 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3519 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3521 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3522 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3523 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3524 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3525 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3526 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3527 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3528 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 36 => ((9 integer))
mem: ((9 integer)): 3529 <= 36
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3530 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 36
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1143 => ((11 byte-address))
mem: ((11 byte-address)): 3531 <= 1143
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1143 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3550 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3552 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3553 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3554 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3555 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3556 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3557 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3558 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3559 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 37 => ((9 integer))
mem: ((9 integer)): 3560 <= 37
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3561 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 37
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1144 => ((11 byte-address))
mem: ((11 byte-address)): 3562 <= 1144
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1144 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1837 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1473 file-address) (raw)) => 1785
run: print-board/main 13: 1785 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1785
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
mem: ((1792 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 1836 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3581 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3583 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 3584 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3585 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3586 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3587 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3588 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3589 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3590 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 38 => ((9 integer))
mem: ((9 integer)): 3591 <= 38
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3592 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 38
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1145 => ((11 byte-address))
mem: ((11 byte-address)): 3593 <= 1145
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1145 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 3612 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3614 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3615 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3616 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3617 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3618 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3619 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3620 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 3621 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 39 => ((9 integer))
mem: ((9 integer)): 3622 <= 39
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3623 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 39
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1146 => ((11 byte-address))
mem: ((11 byte-address)): 3624 <= 1146
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1146 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1837 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1834 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: print-board/main 19: 5 => ((3 integer))
mem: ((3 integer)): 1833 <= 5
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 3643 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3645 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 3646 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 1
run: cursor-to-next-line/print-board/main 4: 2 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 2
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 3647 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 5
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: print-board/main 6: 6 => ((5 integer))
mem: ((5 integer)): 1835 <= 6
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 6
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 3674 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 6)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3676 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 6)
run: print-integer/print-board/main 2: 6 => ((2 integer))
mem: ((2 integer)): 3677 <= 6
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 3705 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (6)
run: integer-to-decimal-string/print-integer/print-board/main 1: 6 => ((1 integer))
mem: ((1 integer)): 3707 <= 6
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 3708 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 3710 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 3711 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 3736 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 3767 => ((1 buffer-address))
mem: ((1 buffer-address)): 3738 <= 3767
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 3767 => ((2 integer-address))
mem: ((2 integer-address)): 3739 <= 3767
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 3767 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 3768 => ((3 string-address-address))
mem: ((3 string-address-address)): 3740 <= 3768
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 3741 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 3769 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 3768 <= 3769
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 3767
run: integer-to-decimal-string/print-integer/print-board/main 11: 3767 => ((6 buffer-address))
mem: ((6 buffer-address)): 3712 <= 3767
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 3713 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 3714 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 3715 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 6
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 3707 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 6 => ((10 integer))
mem: ((10 integer)): 3716 <= 6
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 17: 54 => ((11 integer))
mem: ((11 integer)): 3717 <= 54
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 54
run: integer-to-decimal-string/print-integer/print-board/main 18: #\6 => ((12 character))
mem: ((12 character)): 3718 <= #\6
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 3767
mem: ((12 character)) => 6
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 3800 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (3767 #\6)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 3767 => ((1 buffer-address))
mem: ((1 buffer-address)): 3802 <= 3767
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (3767 #\6)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\6 => ((2 character))
mem: ((2 character)): 3803 <= #\6
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 3767
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 3831 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (3767)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 3767 => ((1 buffer-address))
mem: ((1 buffer-address)): 3833 <= 3767
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((3767 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 3834 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((3768 string-address) (raw)) => 3769
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 3769 => ((3 string-address))
mem: ((3 string-address)): 3835 <= 3769
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((3769 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 3836 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3837 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3804 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 3767 => ((4 integer-address))
mem: ((4 integer-address)): 3805 <= 3767
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((3768 string-address) (raw)) => 3769
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 3769 => ((5 string-address))
mem: ((5 string-address)): 3806 <= 3769
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((3769 string) (raw))
mem: ((3769 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 3770 => ((6 byte-address))
mem: ((6 byte-address)): 3807 <= 3770
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 6
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\6 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 3770 <= #\6
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 3767 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 3767
run: integer-to-decimal-string/print-integer/print-board/main 19: 3767 => ((6 buffer-address))
mem: ((6 buffer-address)): 3712 <= 3767
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 3715 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((3767 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 3719 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((3768 string-address) (raw)) => 3769
run: integer-to-decimal-string/print-integer/print-board/main 24: 3769 => ((14 string-address))
mem: ((14 string-address)): 3720 <= 3769
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 3862 => ((15 string-address))
mem: ((15 string-address)): 3721 <= 3862
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 3722 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 3723 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 3715 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((3769 string) (raw))
mem: ((3769 integer) (raw)) => 30
mem: ((3770 byte) (raw)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 30: #\6 => ((18 byte))
mem: ((18 byte)): 3724 <= #\6
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((3862 string) (raw))
mem: ((3862 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 3863 => ((19 byte-address))
mem: ((19 byte-address)): 3725 <= 3863
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 32: #\6 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 3863 <= #\6
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 3722 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 3723 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 3715 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 3862
run: print-integer/print-board/main 3: 3862 => ((3 string-address))
mem: ((3 string-address)): 3678 <= 3862
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 3862
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 3864 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 3862)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3866 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 3862)
run: print-string/print-integer/print-board/main 2: 3862 => ((2 string-address))
mem: ((2 string-address)): 3867 <= 3862
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3862 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 3868 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 3869 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3870 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((3862 string) (raw))
mem: ((3862 integer) (raw)) => 1
mem: ((3863 byte) (raw)) => 6
run: print-string/print-integer/print-board/main 7: #\6 => ((6 character))
mem: ((6 character)): 3871 <= #\6
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 6
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 3895 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\6)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3897 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\6)
run: print-character/print-string/print-integer/print-board/main 2: #\6 => ((2 character))
mem: ((2 character)): 3898 <= #\6
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\6)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3899 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\6)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3900 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3901 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3902 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3903 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 3904 <= 40
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 40 => ((9 integer))
mem: ((9 integer)): 3905 <= 40
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3906 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 40
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1147 => ((11 byte-address))
mem: ((11 byte-address)): 3907 <= 1147
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 6
run: print-character/print-string/print-integer/print-board/main 13: #\6 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1147 <= #\6
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 3869 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 3870 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 3926 => ((6 string-address))
mem: ((6 string-address)): 1836 <= 3926
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 3926
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 3930 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 3926)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3932 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 3926)
run: print-string/print-board/main 2: 3926 => ((2 string-address))
mem: ((2 string-address)): 3933 <= 3926
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3926 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 3934 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 3935 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3936 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((3926 string) (raw))
mem: ((3926 integer) (raw)) => 3
mem: ((3927 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 3937 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 3961 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3963 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 3964 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3965 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3966 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3967 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3968 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 3969 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 3970 <= 40
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 41 => ((9 integer))
mem: ((9 integer)): 3971 <= 41
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 3972 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 41
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1148 => ((11 byte-address))
mem: ((11 byte-address)): 3973 <= 1148
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1148 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 3935 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3936 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((3926 string) (raw))
mem: ((3926 integer) (raw)) => 3
mem: ((3928 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 3937 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 3992 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 3994 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 3995 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 3996 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 3997 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 3998 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 3999 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4000 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4001 <= 40
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 42 => ((9 integer))
mem: ((9 integer)): 4002 <= 42
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4003 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 42
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1149 => ((11 byte-address))
mem: ((11 byte-address)): 4004 <= 1149
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1149 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 3935 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3936 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((3926 string) (raw))
mem: ((3926 integer) (raw)) => 3
mem: ((3929 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 3937 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 4023 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4025 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4026 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4027 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4028 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4029 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4030 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4031 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4032 <= 40
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 43 => ((9 integer))
mem: ((9 integer)): 4033 <= 43
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4034 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 43
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1150 => ((11 byte-address))
mem: ((11 byte-address)): 4035 <= 1150
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1150 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 3935 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 3936 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1837 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1466 file-address) (raw)) => 1505
run: print-board/main 13: 1505 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1505
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
mem: ((1511 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4054 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4056 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4057 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4058 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4059 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4060 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4061 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4062 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4063 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 44 => ((9 integer))
mem: ((9 integer)): 4064 <= 44
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4065 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 44
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1151 => ((11 byte-address))
mem: ((11 byte-address)): 4066 <= 1151
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1151 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4085 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4087 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4088 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4089 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4090 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4091 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4092 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4093 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4094 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 45 => ((9 integer))
mem: ((9 integer)): 4095 <= 45
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4096 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 45
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1152 => ((11 byte-address))
mem: ((11 byte-address)): 4097 <= 1152
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1152 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1837 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1467 file-address) (raw)) => 1545
run: print-board/main 13: 1545 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1545
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
mem: ((1551 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4116 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4118 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4119 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4120 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4121 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4122 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4123 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4124 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4125 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 46 => ((9 integer))
mem: ((9 integer)): 4126 <= 46
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4127 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 46
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1153 => ((11 byte-address))
mem: ((11 byte-address)): 4128 <= 1153
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1153 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4147 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4149 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4150 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4151 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4152 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4153 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4154 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4155 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4156 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 47 => ((9 integer))
mem: ((9 integer)): 4157 <= 47
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4158 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 47
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1154 => ((11 byte-address))
mem: ((11 byte-address)): 4159 <= 1154
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1154 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1837 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1468 file-address) (raw)) => 1585
run: print-board/main 13: 1585 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1585
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
mem: ((1591 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4178 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4180 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4181 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4182 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4183 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4184 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4185 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4186 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4187 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 48 => ((9 integer))
mem: ((9 integer)): 4188 <= 48
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4189 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 48
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1155 => ((11 byte-address))
mem: ((11 byte-address)): 4190 <= 1155
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1155 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4209 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4211 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4212 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4213 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4214 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4215 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4216 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4217 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4218 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 49 => ((9 integer))
mem: ((9 integer)): 4219 <= 49
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4220 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 49
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1156 => ((11 byte-address))
mem: ((11 byte-address)): 4221 <= 1156
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1156 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1837 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1469 file-address) (raw)) => 1625
run: print-board/main 13: 1625 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1625
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
mem: ((1631 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4240 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4242 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4243 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4244 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4245 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4246 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4247 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4248 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4249 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 50 => ((9 integer))
mem: ((9 integer)): 4250 <= 50
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4251 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 50
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1157 => ((11 byte-address))
mem: ((11 byte-address)): 4252 <= 1157
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1157 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4271 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4273 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4274 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4275 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4276 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4277 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4278 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4279 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4280 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 51 => ((9 integer))
mem: ((9 integer)): 4281 <= 51
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4282 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 51
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1158 => ((11 byte-address))
mem: ((11 byte-address)): 4283 <= 1158
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1158 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1837 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1470 file-address) (raw)) => 1665
run: print-board/main 13: 1665 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1665
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
mem: ((1671 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4302 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4304 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4305 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4306 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4307 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4308 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4309 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4310 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4311 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 52 => ((9 integer))
mem: ((9 integer)): 4312 <= 52
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4313 <= 1106
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 52
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1159 => ((11 byte-address))
mem: ((11 byte-address)): 4314 <= 1159
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1159 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4333 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4335 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4336 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4337 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4338 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4339 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4340 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4341 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4342 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 53 => ((9 integer))
mem: ((9 integer)): 4343 <= 53
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4344 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 53
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1160 => ((11 byte-address))
mem: ((11 byte-address)): 4345 <= 1160
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1160 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1837 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1471 file-address) (raw)) => 1705
run: print-board/main 13: 1705 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1705
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
mem: ((1711 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4364 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4366 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4367 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4368 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4369 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4370 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4371 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4372 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4373 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 54 => ((9 integer))
mem: ((9 integer)): 4374 <= 54
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4375 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 54
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1161 => ((11 byte-address))
mem: ((11 byte-address)): 4376 <= 1161
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1161 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4395 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4397 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4398 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4399 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4400 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4401 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4402 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4403 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4404 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 55 => ((9 integer))
mem: ((9 integer)): 4405 <= 55
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4406 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 55
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1162 => ((11 byte-address))
mem: ((11 byte-address)): 4407 <= 1162
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1162 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1837 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1472 file-address) (raw)) => 1745
run: print-board/main 13: 1745 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1745
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
mem: ((1751 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4426 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4428 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4429 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4430 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4431 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4432 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4433 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4434 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4435 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 56 => ((9 integer))
mem: ((9 integer)): 4436 <= 56
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4437 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 56
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1163 => ((11 byte-address))
mem: ((11 byte-address)): 4438 <= 1163
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1163 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4457 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4459 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4460 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4461 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4462 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4463 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4464 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4465 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4466 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 57 => ((9 integer))
mem: ((9 integer)): 4467 <= 57
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4468 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 57
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1164 => ((11 byte-address))
mem: ((11 byte-address)): 4469 <= 1164
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1164 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1837 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1473 file-address) (raw)) => 1785
run: print-board/main 13: 1785 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1785
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
mem: ((1791 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4488 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4490 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4491 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4492 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4493 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4494 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4495 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4496 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4497 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 58 => ((9 integer))
mem: ((9 integer)): 4498 <= 58
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4499 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 58
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1165 => ((11 byte-address))
mem: ((11 byte-address)): 4500 <= 1165
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1165 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4519 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4521 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4522 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4523 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4524 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4525 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4526 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4527 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 4528 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 59 => ((9 integer))
mem: ((9 integer)): 4529 <= 59
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4530 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 59
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1166 => ((11 byte-address))
mem: ((11 byte-address)): 4531 <= 1166
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1166 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1837 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1834 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: print-board/main 19: 4 => ((3 integer))
mem: ((3 integer)): 1833 <= 4
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 4550 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4552 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 4553 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 2
run: cursor-to-next-line/print-board/main 4: 3 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 3
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 4554 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 4
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: print-board/main 6: 5 => ((5 integer))
mem: ((5 integer)): 1835 <= 5
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 5
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 4581 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 5)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4583 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 5)
run: print-integer/print-board/main 2: 5 => ((2 integer))
mem: ((2 integer)): 4584 <= 5
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 4612 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (5)
run: integer-to-decimal-string/print-integer/print-board/main 1: 5 => ((1 integer))
mem: ((1 integer)): 4614 <= 5
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 4615 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 4617 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 4618 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 4643 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 4674 => ((1 buffer-address))
mem: ((1 buffer-address)): 4645 <= 4674
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 4674 => ((2 integer-address))
mem: ((2 integer-address)): 4646 <= 4674
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 4674 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 4675 => ((3 string-address-address))
mem: ((3 string-address-address)): 4647 <= 4675
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 4648 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 4676 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 4675 <= 4676
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 4674
run: integer-to-decimal-string/print-integer/print-board/main 11: 4674 => ((6 buffer-address))
mem: ((6 buffer-address)): 4619 <= 4674
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 4620 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 4621 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 4622 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 5
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 4614 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 5 => ((10 integer))
mem: ((10 integer)): 4623 <= 5
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 17: 53 => ((11 integer))
mem: ((11 integer)): 4624 <= 53
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 53
run: integer-to-decimal-string/print-integer/print-board/main 18: #\5 => ((12 character))
mem: ((12 character)): 4625 <= #\5
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 4674
mem: ((12 character)) => 5
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 4707 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (4674 #\5)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 4674 => ((1 buffer-address))
mem: ((1 buffer-address)): 4709 <= 4674
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (4674 #\5)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\5 => ((2 character))
mem: ((2 character)): 4710 <= #\5
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 4674
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 4738 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (4674)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 4674 => ((1 buffer-address))
mem: ((1 buffer-address)): 4740 <= 4674
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((4674 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 4741 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((4675 string-address) (raw)) => 4676
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 4676 => ((3 string-address))
mem: ((3 string-address)): 4742 <= 4676
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((4676 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 4743 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4744 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4711 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 4674 => ((4 integer-address))
mem: ((4 integer-address)): 4712 <= 4674
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((4675 string-address) (raw)) => 4676
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 4676 => ((5 string-address))
mem: ((5 string-address)): 4713 <= 4676
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((4676 string) (raw))
mem: ((4676 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 4677 => ((6 byte-address))
mem: ((6 byte-address)): 4714 <= 4677
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 5
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\5 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 4677 <= #\5
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 4674 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 4674
run: integer-to-decimal-string/print-integer/print-board/main 19: 4674 => ((6 buffer-address))
mem: ((6 buffer-address)): 4619 <= 4674
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 4622 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((4674 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 4626 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((4675 string-address) (raw)) => 4676
run: integer-to-decimal-string/print-integer/print-board/main 24: 4676 => ((14 string-address))
mem: ((14 string-address)): 4627 <= 4676
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 4769 => ((15 string-address))
mem: ((15 string-address)): 4628 <= 4769
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 4629 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 4630 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 4622 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((4676 string) (raw))
mem: ((4676 integer) (raw)) => 30
mem: ((4677 byte) (raw)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 30: #\5 => ((18 byte))
mem: ((18 byte)): 4631 <= #\5
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((4769 string) (raw))
mem: ((4769 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 4770 => ((19 byte-address))
mem: ((19 byte-address)): 4632 <= 4770
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 32: #\5 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 4770 <= #\5
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 4629 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 4630 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 4622 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 4769
run: print-integer/print-board/main 3: 4769 => ((3 string-address))
mem: ((3 string-address)): 4585 <= 4769
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 4769
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 4771 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 4769)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4773 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 4769)
run: print-string/print-integer/print-board/main 2: 4769 => ((2 string-address))
mem: ((2 string-address)): 4774 <= 4769
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((4769 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 4775 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 4776 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4777 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((4769 string) (raw))
mem: ((4769 integer) (raw)) => 1
mem: ((4770 byte) (raw)) => 5
run: print-string/print-integer/print-board/main 7: #\5 => ((6 character))
mem: ((6 character)): 4778 <= #\5
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 5
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 4802 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\5)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4804 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\5)
run: print-character/print-string/print-integer/print-board/main 2: #\5 => ((2 character))
mem: ((2 character)): 4805 <= #\5
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\5)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4806 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\5)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4807 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4808 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4809 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4810 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 4811 <= 60
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 60 => ((9 integer))
mem: ((9 integer)): 4812 <= 60
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4813 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 60
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1167 => ((11 byte-address))
mem: ((11 byte-address)): 4814 <= 1167
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 5
run: print-character/print-string/print-integer/print-board/main 13: #\5 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1167 <= #\5
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 4776 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 4777 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 4833 => ((6 string-address))
mem: ((6 string-address)): 1836 <= 4833
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 4833
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 4837 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 4833)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4839 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 4833)
run: print-string/print-board/main 2: 4833 => ((2 string-address))
mem: ((2 string-address)): 4840 <= 4833
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((4833 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 4841 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 4842 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4843 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((4833 string) (raw))
mem: ((4833 integer) (raw)) => 3
mem: ((4834 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 4844 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 4868 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4870 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4871 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4872 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4873 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4874 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4875 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4876 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 4877 <= 60
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 61 => ((9 integer))
mem: ((9 integer)): 4878 <= 61
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4879 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 61
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1168 => ((11 byte-address))
mem: ((11 byte-address)): 4880 <= 1168
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1168 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 4842 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4843 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((4833 string) (raw))
mem: ((4833 integer) (raw)) => 3
mem: ((4835 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 4844 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 4899 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4901 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 4902 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4903 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4904 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4905 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4906 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4907 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 4908 <= 60
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 62 => ((9 integer))
mem: ((9 integer)): 4909 <= 62
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4910 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 62
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1169 => ((11 byte-address))
mem: ((11 byte-address)): 4911 <= 1169
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1169 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 4842 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4843 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((4833 string) (raw))
mem: ((4833 integer) (raw)) => 3
mem: ((4836 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 4844 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 4930 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4932 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4933 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4934 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4935 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4936 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4937 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4938 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 4939 <= 60
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 63 => ((9 integer))
mem: ((9 integer)): 4940 <= 63
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4941 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 63
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1170 => ((11 byte-address))
mem: ((11 byte-address)): 4942 <= 1170
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1170 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 4842 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 4843 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1837 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1466 file-address) (raw)) => 1505
run: print-board/main 13: 1505 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1505
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
mem: ((1510 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4961 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4963 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 4964 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4965 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4966 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4967 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4968 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 4969 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 4970 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 64 => ((9 integer))
mem: ((9 integer)): 4971 <= 64
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 4972 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 64
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1171 => ((11 byte-address))
mem: ((11 byte-address)): 4973 <= 1171
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1171 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 4992 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 4994 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 4995 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 4996 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 4997 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 4998 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 4999 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5000 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5001 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 65 => ((9 integer))
mem: ((9 integer)): 5002 <= 65
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5003 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 65
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1172 => ((11 byte-address))
mem: ((11 byte-address)): 5004 <= 1172
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1172 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1837 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1467 file-address) (raw)) => 1545
run: print-board/main 13: 1545 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1545
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
mem: ((1550 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5023 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5025 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5026 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5027 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5028 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5029 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5030 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5031 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5032 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 66 => ((9 integer))
mem: ((9 integer)): 5033 <= 66
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5034 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 66
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1173 => ((11 byte-address))
mem: ((11 byte-address)): 5035 <= 1173
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1173 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5054 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5056 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5057 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5058 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5059 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5060 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5061 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5062 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5063 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 67 => ((9 integer))
mem: ((9 integer)): 5064 <= 67
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5065 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 67
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1174 => ((11 byte-address))
mem: ((11 byte-address)): 5066 <= 1174
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1174 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1837 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1468 file-address) (raw)) => 1585
run: print-board/main 13: 1585 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1585
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
mem: ((1590 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5085 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5087 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5088 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5089 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5090 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5091 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5092 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5093 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5094 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 68 => ((9 integer))
mem: ((9 integer)): 5095 <= 68
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5096 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 68
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1175 => ((11 byte-address))
mem: ((11 byte-address)): 5097 <= 1175
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1175 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5116 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5118 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5119 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5120 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5121 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5122 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5123 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5124 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5125 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 69 => ((9 integer))
mem: ((9 integer)): 5126 <= 69
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5127 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 69
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1176 => ((11 byte-address))
mem: ((11 byte-address)): 5128 <= 1176
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1176 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1837 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1469 file-address) (raw)) => 1625
run: print-board/main 13: 1625 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1625
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
mem: ((1630 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5147 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5149 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5150 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5151 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5152 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5153 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5154 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5155 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5156 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 70 => ((9 integer))
mem: ((9 integer)): 5157 <= 70
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5158 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 70
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1177 => ((11 byte-address))
mem: ((11 byte-address)): 5159 <= 1177
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1177 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5178 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5180 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5181 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5182 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5183 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5184 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5185 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5186 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5187 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 71 => ((9 integer))
mem: ((9 integer)): 5188 <= 71
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5189 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 71
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1178 => ((11 byte-address))
mem: ((11 byte-address)): 5190 <= 1178
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1178 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1837 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1470 file-address) (raw)) => 1665
run: print-board/main 13: 1665 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1665
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
mem: ((1670 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5209 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5211 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5212 <= #\_
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5213 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5214 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5215 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5216 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5217 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5218 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 72 => ((9 integer))
mem: ((9 integer)): 5219 <= 72
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5220 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 72
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1179 => ((11 byte-address))
mem: ((11 byte-address)): 5221 <= 1179
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1179 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5240 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5242 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5243 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5244 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5245 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5246 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5247 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5248 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5249 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 73 => ((9 integer))
mem: ((9 integer)): 5250 <= 73
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5251 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 73
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1180 => ((11 byte-address))
mem: ((11 byte-address)): 5252 <= 1180
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1180 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1837 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1471 file-address) (raw)) => 1705
run: print-board/main 13: 1705 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1705
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
mem: ((1710 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5271 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5273 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5274 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5275 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5276 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5277 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5278 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5279 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5280 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 74 => ((9 integer))
mem: ((9 integer)): 5281 <= 74
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5282 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 74
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1181 => ((11 byte-address))
mem: ((11 byte-address)): 5283 <= 1181
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1181 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5302 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5304 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5305 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5306 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5307 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5308 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5309 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5310 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5311 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 75 => ((9 integer))
mem: ((9 integer)): 5312 <= 75
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5313 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 75
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1182 => ((11 byte-address))
mem: ((11 byte-address)): 5314 <= 1182
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1182 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1837 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1472 file-address) (raw)) => 1745
run: print-board/main 13: 1745 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1745
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
mem: ((1750 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5333 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5335 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5336 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5337 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5338 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5339 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5340 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5341 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5342 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 76 => ((9 integer))
mem: ((9 integer)): 5343 <= 76
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5344 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 76
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1183 => ((11 byte-address))
mem: ((11 byte-address)): 5345 <= 1183
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1183 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5364 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5366 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5367 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5368 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5369 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5370 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5371 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5372 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5373 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 77 => ((9 integer))
mem: ((9 integer)): 5374 <= 77
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5375 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 77
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1184 => ((11 byte-address))
mem: ((11 byte-address)): 5376 <= 1184
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1184 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1837 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1473 file-address) (raw)) => 1785
run: print-board/main 13: 1785 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1785
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
mem: ((1790 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5395 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5397 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5398 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5399 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5400 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5401 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5402 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5403 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5404 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 78 => ((9 integer))
mem: ((9 integer)): 5405 <= 78
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5406 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 78
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1185 => ((11 byte-address))
mem: ((11 byte-address)): 5407 <= 1185
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1185 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5426 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5428 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5429 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5430 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5431 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5432 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5433 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5434 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 5435 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 79 => ((9 integer))
mem: ((9 integer)): 5436 <= 79
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5437 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 79
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1186 => ((11 byte-address))
mem: ((11 byte-address)): 5438 <= 1186
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1186 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1837 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1834 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: print-board/main 19: 3 => ((3 integer))
mem: ((3 integer)): 1833 <= 3
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 5457 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5459 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 5460 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 3
run: cursor-to-next-line/print-board/main 4: 4 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 4
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 5461 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 3
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: print-board/main 6: 4 => ((5 integer))
mem: ((5 integer)): 1835 <= 4
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 4
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 5488 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 4)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5490 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 4)
run: print-integer/print-board/main 2: 4 => ((2 integer))
mem: ((2 integer)): 5491 <= 4
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 5519 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (4)
run: integer-to-decimal-string/print-integer/print-board/main 1: 4 => ((1 integer))
mem: ((1 integer)): 5521 <= 4
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 5522 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 5524 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 5525 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 5550 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 5581 => ((1 buffer-address))
mem: ((1 buffer-address)): 5552 <= 5581
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 5581 => ((2 integer-address))
mem: ((2 integer-address)): 5553 <= 5581
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 5581 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 5582 => ((3 string-address-address))
mem: ((3 string-address-address)): 5554 <= 5582
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 5555 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 5583 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 5582 <= 5583
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 5581
run: integer-to-decimal-string/print-integer/print-board/main 11: 5581 => ((6 buffer-address))
mem: ((6 buffer-address)): 5526 <= 5581
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 5527 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 5528 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 5529 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 4
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 5521 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 4 => ((10 integer))
mem: ((10 integer)): 5530 <= 4
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 17: 52 => ((11 integer))
mem: ((11 integer)): 5531 <= 52
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 52
run: integer-to-decimal-string/print-integer/print-board/main 18: #\4 => ((12 character))
mem: ((12 character)): 5532 <= #\4
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 5581
mem: ((12 character)) => 4
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 5614 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (5581 #\4)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 5581 => ((1 buffer-address))
mem: ((1 buffer-address)): 5616 <= 5581
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (5581 #\4)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\4 => ((2 character))
mem: ((2 character)): 5617 <= #\4
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 5581
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 5645 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (5581)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 5581 => ((1 buffer-address))
mem: ((1 buffer-address)): 5647 <= 5581
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((5581 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 5648 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((5582 string-address) (raw)) => 5583
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 5583 => ((3 string-address))
mem: ((3 string-address)): 5649 <= 5583
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((5583 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 5650 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5651 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 5618 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 5581 => ((4 integer-address))
mem: ((4 integer-address)): 5619 <= 5581
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((5582 string-address) (raw)) => 5583
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 5583 => ((5 string-address))
mem: ((5 string-address)): 5620 <= 5583
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((5583 string) (raw))
mem: ((5583 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 5584 => ((6 byte-address))
mem: ((6 byte-address)): 5621 <= 5584
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 4
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\4 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 5584 <= #\4
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 5581 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 5581
run: integer-to-decimal-string/print-integer/print-board/main 19: 5581 => ((6 buffer-address))
mem: ((6 buffer-address)): 5526 <= 5581
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 5529 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((5581 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 5533 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((5582 string-address) (raw)) => 5583
run: integer-to-decimal-string/print-integer/print-board/main 24: 5583 => ((14 string-address))
mem: ((14 string-address)): 5534 <= 5583
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 5676 => ((15 string-address))
mem: ((15 string-address)): 5535 <= 5676
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 5536 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 5537 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 5529 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((5583 string) (raw))
mem: ((5583 integer) (raw)) => 30
mem: ((5584 byte) (raw)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 30: #\4 => ((18 byte))
mem: ((18 byte)): 5538 <= #\4
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((5676 string) (raw))
mem: ((5676 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 5677 => ((19 byte-address))
mem: ((19 byte-address)): 5539 <= 5677
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 32: #\4 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 5677 <= #\4
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 5536 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 5537 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 5529 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 5676
run: print-integer/print-board/main 3: 5676 => ((3 string-address))
mem: ((3 string-address)): 5492 <= 5676
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 5676
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 5678 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 5676)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5680 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 5676)
run: print-string/print-integer/print-board/main 2: 5676 => ((2 string-address))
mem: ((2 string-address)): 5681 <= 5676
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((5676 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 5682 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 5683 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5684 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((5676 string) (raw))
mem: ((5676 integer) (raw)) => 1
mem: ((5677 byte) (raw)) => 4
run: print-string/print-integer/print-board/main 7: #\4 => ((6 character))
mem: ((6 character)): 5685 <= #\4
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 4
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 5709 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\4)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5711 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\4)
run: print-character/print-string/print-integer/print-board/main 2: #\4 => ((2 character))
mem: ((2 character)): 5712 <= #\4
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\4)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5713 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\4)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5714 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5715 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5716 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5717 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5718 <= 80
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 80 => ((9 integer))
mem: ((9 integer)): 5719 <= 80
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5720 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 80
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1187 => ((11 byte-address))
mem: ((11 byte-address)): 5721 <= 1187
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 4
run: print-character/print-string/print-integer/print-board/main 13: #\4 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1187 <= #\4
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 5683 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 5684 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 5740 => ((6 string-address))
mem: ((6 string-address)): 1836 <= 5740
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 5740
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 5744 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 5740)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5746 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 5740)
run: print-string/print-board/main 2: 5740 => ((2 string-address))
mem: ((2 string-address)): 5747 <= 5740
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((5740 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 5748 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 5749 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5750 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((5740 string) (raw))
mem: ((5740 integer) (raw)) => 3
mem: ((5741 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 5751 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 5775 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5777 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5778 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5779 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5780 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5781 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5782 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5783 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5784 <= 80
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 81 => ((9 integer))
mem: ((9 integer)): 5785 <= 81
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5786 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 81
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1188 => ((11 byte-address))
mem: ((11 byte-address)): 5787 <= 1188
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1188 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 5749 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5750 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((5740 string) (raw))
mem: ((5740 integer) (raw)) => 3
mem: ((5742 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 5751 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 5806 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5808 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 5809 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5810 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5811 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5812 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5813 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5814 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5815 <= 80
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 82 => ((9 integer))
mem: ((9 integer)): 5816 <= 82
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5817 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 82
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1189 => ((11 byte-address))
mem: ((11 byte-address)): 5818 <= 1189
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1189 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 5749 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5750 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((5740 string) (raw))
mem: ((5740 integer) (raw)) => 3
mem: ((5743 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 5751 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 5837 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5839 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5840 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5841 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5842 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5843 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5844 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5845 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5846 <= 80
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 83 => ((9 integer))
mem: ((9 integer)): 5847 <= 83
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5848 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 83
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1190 => ((11 byte-address))
mem: ((11 byte-address)): 5849 <= 1190
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1190 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 5749 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 5750 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1837 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1466 file-address) (raw)) => 1505
run: print-board/main 13: 1505 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1505
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
mem: ((1509 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1836 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5868 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5870 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 5871 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5872 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5873 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5874 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5875 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5876 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5877 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 84 => ((9 integer))
mem: ((9 integer)): 5878 <= 84
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5879 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 84
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1191 => ((11 byte-address))
mem: ((11 byte-address)): 5880 <= 1191
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1191 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5899 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5901 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5902 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5903 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5904 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5905 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5906 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5907 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5908 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 85 => ((9 integer))
mem: ((9 integer)): 5909 <= 85
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5910 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 85
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1192 => ((11 byte-address))
mem: ((11 byte-address)): 5911 <= 1192
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1192 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1837 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1467 file-address) (raw)) => 1545
run: print-board/main 13: 1545 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1545
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
mem: ((1549 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5930 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5932 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5933 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5934 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5935 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5936 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5937 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5938 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5939 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 86 => ((9 integer))
mem: ((9 integer)): 5940 <= 86
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5941 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 86
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1193 => ((11 byte-address))
mem: ((11 byte-address)): 5942 <= 1193
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1193 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5961 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5963 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 5964 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5965 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5966 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5967 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5968 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 5969 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 5970 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 87 => ((9 integer))
mem: ((9 integer)): 5971 <= 87
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 5972 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 87
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1194 => ((11 byte-address))
mem: ((11 byte-address)): 5973 <= 1194
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1194 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1837 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1468 file-address) (raw)) => 1585
run: print-board/main 13: 1585 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1585
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
mem: ((1589 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 5992 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 5994 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 5995 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 5996 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 5997 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 5998 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 5999 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6000 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6001 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 88 => ((9 integer))
mem: ((9 integer)): 6002 <= 88
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6003 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 88
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1195 => ((11 byte-address))
mem: ((11 byte-address)): 6004 <= 1195
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1195 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6023 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6025 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6026 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6027 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6028 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6029 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6030 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6031 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6032 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 89 => ((9 integer))
mem: ((9 integer)): 6033 <= 89
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6034 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 89
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1196 => ((11 byte-address))
mem: ((11 byte-address)): 6035 <= 1196
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1196 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1837 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1469 file-address) (raw)) => 1625
run: print-board/main 13: 1625 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1625
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
mem: ((1629 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6054 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6056 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6057 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6058 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6059 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6060 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6061 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6062 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6063 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 90 => ((9 integer))
mem: ((9 integer)): 6064 <= 90
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6065 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 90
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1197 => ((11 byte-address))
mem: ((11 byte-address)): 6066 <= 1197
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1197 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6085 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6087 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6088 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6089 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6090 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6091 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6092 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6093 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6094 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 91 => ((9 integer))
mem: ((9 integer)): 6095 <= 91
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6096 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 91
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1198 => ((11 byte-address))
mem: ((11 byte-address)): 6097 <= 1198
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1198 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1837 <= 4
schedule: scheduling print-board/main for further processing
schedule: print-board/main
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1470 file-address) (raw)) => 1665
run: print-board/main 13: 1665 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1665
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
mem: ((1669 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6116 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6118 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6119 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6120 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6121 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6122 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6123 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6124 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6125 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 92 => ((9 integer))
mem: ((9 integer)): 6126 <= 92
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6127 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 92
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1199 => ((11 byte-address))
mem: ((11 byte-address)): 6128 <= 1199
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1199 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6147 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6149 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6150 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6151 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6152 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6153 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6154 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6155 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6156 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 93 => ((9 integer))
mem: ((9 integer)): 6157 <= 93
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6158 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 93
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1200 => ((11 byte-address))
mem: ((11 byte-address)): 6159 <= 1200
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1200 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1837 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1471 file-address) (raw)) => 1705
run: print-board/main 13: 1705 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1705
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
mem: ((1709 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6178 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6180 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6181 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6182 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6183 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6184 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6185 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6186 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6187 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 94 => ((9 integer))
mem: ((9 integer)): 6188 <= 94
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6189 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 94
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1201 => ((11 byte-address))
mem: ((11 byte-address)): 6190 <= 1201
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1201 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6209 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6211 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6212 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6213 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6214 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6215 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6216 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6217 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6218 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 95 => ((9 integer))
mem: ((9 integer)): 6219 <= 95
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6220 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 95
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1202 => ((11 byte-address))
mem: ((11 byte-address)): 6221 <= 1202
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1202 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1837 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1472 file-address) (raw)) => 1745
run: print-board/main 13: 1745 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1745
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
mem: ((1749 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6240 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6242 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6243 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6244 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6245 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6246 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6247 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6248 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6249 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 96 => ((9 integer))
mem: ((9 integer)): 6250 <= 96
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6251 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 96
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1203 => ((11 byte-address))
mem: ((11 byte-address)): 6252 <= 1203
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1203 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6271 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6273 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6274 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6275 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6276 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6277 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6278 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6279 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6280 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 97 => ((9 integer))
mem: ((9 integer)): 6281 <= 97
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6282 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 97
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1204 => ((11 byte-address))
mem: ((11 byte-address)): 6283 <= 1204
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1204 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1837 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1473 file-address) (raw)) => 1785
run: print-board/main 13: 1785 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1785
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
mem: ((1789 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6302 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6304 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6305 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6306 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6307 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6308 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6309 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6310 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6311 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 98 => ((9 integer))
mem: ((9 integer)): 6312 <= 98
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6313 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 98
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1205 => ((11 byte-address))
mem: ((11 byte-address)): 6314 <= 1205
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1205 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6333 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6335 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6336 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6337 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6338 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6339 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6340 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6341 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 6342 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 99 => ((9 integer))
mem: ((9 integer)): 6343 <= 99
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6344 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 99
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1206 => ((11 byte-address))
mem: ((11 byte-address)): 6345 <= 1206
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1206 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1837 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1834 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: print-board/main 19: 2 => ((3 integer))
mem: ((3 integer)): 1833 <= 2
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 6364 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6366 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 6367 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 4
run: cursor-to-next-line/print-board/main 4: 5 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 5
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 6368 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 2
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: print-board/main 6: 3 => ((5 integer))
mem: ((5 integer)): 1835 <= 3
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 3
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 6395 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 3)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6397 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 3)
run: print-integer/print-board/main 2: 3 => ((2 integer))
mem: ((2 integer)): 6398 <= 3
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 6426 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (3)
run: integer-to-decimal-string/print-integer/print-board/main 1: 3 => ((1 integer))
mem: ((1 integer)): 6428 <= 3
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 6429 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 6431 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 6432 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 6457 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 6488 => ((1 buffer-address))
mem: ((1 buffer-address)): 6459 <= 6488
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 6488 => ((2 integer-address))
mem: ((2 integer-address)): 6460 <= 6488
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 6488 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 6489 => ((3 string-address-address))
mem: ((3 string-address-address)): 6461 <= 6489
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 6462 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 6490 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 6489 <= 6490
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 6488
run: integer-to-decimal-string/print-integer/print-board/main 11: 6488 => ((6 buffer-address))
mem: ((6 buffer-address)): 6433 <= 6488
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 6434 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 6435 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 6436 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 3
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 6428 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 3 => ((10 integer))
mem: ((10 integer)): 6437 <= 3
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 17: 51 => ((11 integer))
mem: ((11 integer)): 6438 <= 51
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 51
run: integer-to-decimal-string/print-integer/print-board/main 18: #\3 => ((12 character))
mem: ((12 character)): 6439 <= #\3
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 6488
mem: ((12 character)) => 3
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 6521 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (6488 #\3)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 6488 => ((1 buffer-address))
mem: ((1 buffer-address)): 6523 <= 6488
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (6488 #\3)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\3 => ((2 character))
mem: ((2 character)): 6524 <= #\3
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 6488
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 6552 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (6488)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 6488 => ((1 buffer-address))
mem: ((1 buffer-address)): 6554 <= 6488
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((6488 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 6555 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((6489 string-address) (raw)) => 6490
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 6490 => ((3 string-address))
mem: ((3 string-address)): 6556 <= 6490
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((6490 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 6557 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6558 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 6525 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 6488 => ((4 integer-address))
mem: ((4 integer-address)): 6526 <= 6488
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((6489 string-address) (raw)) => 6490
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 6490 => ((5 string-address))
mem: ((5 string-address)): 6527 <= 6490
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((6490 string) (raw))
mem: ((6490 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 6491 => ((6 byte-address))
mem: ((6 byte-address)): 6528 <= 6491
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 3
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\3 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 6491 <= #\3
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 6488 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 6488
run: integer-to-decimal-string/print-integer/print-board/main 19: 6488 => ((6 buffer-address))
mem: ((6 buffer-address)): 6433 <= 6488
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 6436 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((6488 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 6440 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((6489 string-address) (raw)) => 6490
run: integer-to-decimal-string/print-integer/print-board/main 24: 6490 => ((14 string-address))
mem: ((14 string-address)): 6441 <= 6490
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 6583 => ((15 string-address))
mem: ((15 string-address)): 6442 <= 6583
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 6443 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 6444 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 6436 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((6490 string) (raw))
mem: ((6490 integer) (raw)) => 30
mem: ((6491 byte) (raw)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 30: #\3 => ((18 byte))
mem: ((18 byte)): 6445 <= #\3
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((6583 string) (raw))
mem: ((6583 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 6584 => ((19 byte-address))
mem: ((19 byte-address)): 6446 <= 6584
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 32: #\3 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 6584 <= #\3
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 6443 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 6444 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 6436 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 6583
run: print-integer/print-board/main 3: 6583 => ((3 string-address))
mem: ((3 string-address)): 6399 <= 6583
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 6583
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 6585 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 6583)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6587 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 6583)
run: print-string/print-integer/print-board/main 2: 6583 => ((2 string-address))
mem: ((2 string-address)): 6588 <= 6583
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((6583 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 6589 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 6590 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6591 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((6583 string) (raw))
mem: ((6583 integer) (raw)) => 1
mem: ((6584 byte) (raw)) => 3
run: print-string/print-integer/print-board/main 7: #\3 => ((6 character))
mem: ((6 character)): 6592 <= #\3
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 3
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 6616 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\3)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6618 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\3)
run: print-character/print-string/print-integer/print-board/main 2: #\3 => ((2 character))
mem: ((2 character)): 6619 <= #\3
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\3)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6620 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\3)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6621 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6622 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6623 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6624 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6625 <= 100
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 100 => ((9 integer))
mem: ((9 integer)): 6626 <= 100
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6627 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 100
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1207 => ((11 byte-address))
mem: ((11 byte-address)): 6628 <= 1207
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 3
run: print-character/print-string/print-integer/print-board/main 13: #\3 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1207 <= #\3
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 6590 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 6591 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 6647 => ((6 string-address))
mem: ((6 string-address)): 1836 <= 6647
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 6647
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 6651 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 6647)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6653 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 6647)
run: print-string/print-board/main 2: 6647 => ((2 string-address))
mem: ((2 string-address)): 6654 <= 6647
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((6647 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 6655 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 6656 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6657 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((6647 string) (raw))
mem: ((6647 integer) (raw)) => 3
mem: ((6648 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 6658 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 6682 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6684 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6685 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6686 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6687 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6688 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6689 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6690 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6691 <= 100
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 101 => ((9 integer))
mem: ((9 integer)): 6692 <= 101
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6693 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 101
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1208 => ((11 byte-address))
mem: ((11 byte-address)): 6694 <= 1208
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1208 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 6656 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6657 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((6647 string) (raw))
mem: ((6647 integer) (raw)) => 3
mem: ((6649 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 6658 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 6713 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6715 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 6716 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6717 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6718 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6719 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6720 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6721 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6722 <= 100
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 102 => ((9 integer))
mem: ((9 integer)): 6723 <= 102
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6724 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 102
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1209 => ((11 byte-address))
mem: ((11 byte-address)): 6725 <= 1209
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1209 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 6656 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 6657 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((6647 string) (raw))
mem: ((6647 integer) (raw)) => 3
mem: ((6650 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 6658 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 6744 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6746 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6747 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6748 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6749 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6750 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6751 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6752 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6753 <= 100
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 103 => ((9 integer))
mem: ((9 integer)): 6754 <= 103
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6755 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 103
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1210 => ((11 byte-address))
mem: ((11 byte-address)): 6756 <= 1210
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1210 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 6656 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 6657 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1837 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1466 file-address) (raw)) => 1505
run: print-board/main 13: 1505 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1505
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
mem: ((1508 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6775 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6777 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6778 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6779 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6780 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6781 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6782 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6783 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6784 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 104 => ((9 integer))
mem: ((9 integer)): 6785 <= 104
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6786 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 104
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1211 => ((11 byte-address))
mem: ((11 byte-address)): 6787 <= 1211
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1211 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6806 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6808 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6809 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6810 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6811 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6812 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6813 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6814 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6815 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 105 => ((9 integer))
mem: ((9 integer)): 6816 <= 105
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6817 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 105
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1212 => ((11 byte-address))
mem: ((11 byte-address)): 6818 <= 1212
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1212 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1837 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1467 file-address) (raw)) => 1545
run: print-board/main 13: 1545 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1545
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
mem: ((1548 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6837 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6839 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6840 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6841 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6842 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6843 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6844 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6845 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6846 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 106 => ((9 integer))
mem: ((9 integer)): 6847 <= 106
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6848 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 106
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1213 => ((11 byte-address))
mem: ((11 byte-address)): 6849 <= 1213
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1213 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6868 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6870 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6871 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6872 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6873 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6874 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6875 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6876 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6877 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 107 => ((9 integer))
mem: ((9 integer)): 6878 <= 107
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6879 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 107
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1214 => ((11 byte-address))
mem: ((11 byte-address)): 6880 <= 1214
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1214 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1837 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1468 file-address) (raw)) => 1585
run: print-board/main 13: 1585 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1585
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
mem: ((1588 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6899 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6901 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6902 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6903 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6904 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6905 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6906 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6907 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6908 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 108 => ((9 integer))
mem: ((9 integer)): 6909 <= 108
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6910 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 108
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1215 => ((11 byte-address))
mem: ((11 byte-address)): 6911 <= 1215
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1215 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6930 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6932 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6933 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6934 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6935 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6936 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6937 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6938 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6939 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 109 => ((9 integer))
mem: ((9 integer)): 6940 <= 109
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6941 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 109
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1216 => ((11 byte-address))
mem: ((11 byte-address)): 6942 <= 1216
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1216 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1837 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1469 file-address) (raw)) => 1625
run: print-board/main 13: 1625 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1625
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
mem: ((1628 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6961 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6963 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 6964 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6965 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6966 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6967 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6968 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 6969 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 6970 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 110 => ((9 integer))
mem: ((9 integer)): 6971 <= 110
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 6972 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 110
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1217 => ((11 byte-address))
mem: ((11 byte-address)): 6973 <= 1217
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1217 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 6992 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 6994 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 6995 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 6996 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 6997 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 6998 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 6999 <= 1104
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7000 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7001 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 111 => ((9 integer))
mem: ((9 integer)): 7002 <= 111
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7003 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 111
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1218 => ((11 byte-address))
mem: ((11 byte-address)): 7004 <= 1218
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1218 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1837 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1470 file-address) (raw)) => 1665
run: print-board/main 13: 1665 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1665
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
mem: ((1668 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7023 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7025 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 7026 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7027 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7028 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7029 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7030 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7031 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7032 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 112 => ((9 integer))
mem: ((9 integer)): 7033 <= 112
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7034 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 112
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1219 => ((11 byte-address))
mem: ((11 byte-address)): 7035 <= 1219
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1219 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7054 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7056 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7057 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7058 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7059 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7060 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7061 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7062 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7063 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 113 => ((9 integer))
mem: ((9 integer)): 7064 <= 113
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7065 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 113
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1220 => ((11 byte-address))
mem: ((11 byte-address)): 7066 <= 1220
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1220 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1837 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1471 file-address) (raw)) => 1705
run: print-board/main 13: 1705 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1705
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
mem: ((1708 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7085 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7087 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 7088 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7089 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7090 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7091 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7092 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7093 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7094 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 114 => ((9 integer))
mem: ((9 integer)): 7095 <= 114
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7096 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 114
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1221 => ((11 byte-address))
mem: ((11 byte-address)): 7097 <= 1221
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1221 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7116 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7118 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7119 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7120 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7121 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7122 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7123 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7124 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7125 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 115 => ((9 integer))
mem: ((9 integer)): 7126 <= 115
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7127 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 115
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1222 => ((11 byte-address))
mem: ((11 byte-address)): 7128 <= 1222
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1222 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1837 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1472 file-address) (raw)) => 1745
run: print-board/main 13: 1745 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1745
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
mem: ((1748 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7147 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7149 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 7150 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7151 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7152 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7153 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7154 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7155 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7156 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 116 => ((9 integer))
mem: ((9 integer)): 7157 <= 116
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7158 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 116
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1223 => ((11 byte-address))
mem: ((11 byte-address)): 7159 <= 1223
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1223 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7178 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7180 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7181 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7182 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7183 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7184 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7185 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7186 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7187 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 117 => ((9 integer))
mem: ((9 integer)): 7188 <= 117
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7189 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 117
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1224 => ((11 byte-address))
mem: ((11 byte-address)): 7190 <= 1224
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1224 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1837 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1473 file-address) (raw)) => 1785
run: print-board/main 13: 1785 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1785
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
mem: ((1788 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7209 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7211 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 7212 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7213 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7214 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7215 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7216 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7217 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7218 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 118 => ((9 integer))
mem: ((9 integer)): 7219 <= 118
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7220 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 118
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1225 => ((11 byte-address))
mem: ((11 byte-address)): 7221 <= 1225
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1225 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7240 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7242 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7243 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7244 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7245 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7246 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7247 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7248 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 7249 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 119 => ((9 integer))
mem: ((9 integer)): 7250 <= 119
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7251 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 119
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1226 => ((11 byte-address))
mem: ((11 byte-address)): 7252 <= 1226
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1226 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1837 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1834 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: print-board/main 19: 1 => ((3 integer))
mem: ((3 integer)): 1833 <= 1
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 7271 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7273 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 7274 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 5
run: cursor-to-next-line/print-board/main 4: 6 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 6
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 7275 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 1
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: print-board/main 6: 2 => ((5 integer))
mem: ((5 integer)): 1835 <= 2
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 2
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 7302 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 2)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7304 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 2)
run: print-integer/print-board/main 2: 2 => ((2 integer))
mem: ((2 integer)): 7305 <= 2
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 7333 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (2)
run: integer-to-decimal-string/print-integer/print-board/main 1: 2 => ((1 integer))
mem: ((1 integer)): 7335 <= 2
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 7336 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 7338 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 7339 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 7364 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 7395 => ((1 buffer-address))
mem: ((1 buffer-address)): 7366 <= 7395
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 7395 => ((2 integer-address))
mem: ((2 integer-address)): 7367 <= 7395
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 7395 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 7396 => ((3 string-address-address))
mem: ((3 string-address-address)): 7368 <= 7396
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 7369 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 7397 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 7396 <= 7397
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 7395
run: integer-to-decimal-string/print-integer/print-board/main 11: 7395 => ((6 buffer-address))
mem: ((6 buffer-address)): 7340 <= 7395
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 7341 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 7342 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 7343 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 2
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 7335 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 2 => ((10 integer))
mem: ((10 integer)): 7344 <= 2
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 17: 50 => ((11 integer))
mem: ((11 integer)): 7345 <= 50
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 50
run: integer-to-decimal-string/print-integer/print-board/main 18: #\2 => ((12 character))
mem: ((12 character)): 7346 <= #\2
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 7395
mem: ((12 character)) => 2
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 7428 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (7395 #\2)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 7395 => ((1 buffer-address))
mem: ((1 buffer-address)): 7430 <= 7395
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (7395 #\2)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\2 => ((2 character))
mem: ((2 character)): 7431 <= #\2
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 7395
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 7459 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (7395)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 7395 => ((1 buffer-address))
mem: ((1 buffer-address)): 7461 <= 7395
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((7395 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 7462 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((7396 string-address) (raw)) => 7397
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 7397 => ((3 string-address))
mem: ((3 string-address)): 7463 <= 7397
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((7397 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 7464 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7465 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 7432 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 7395 => ((4 integer-address))
mem: ((4 integer-address)): 7433 <= 7395
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((7396 string-address) (raw)) => 7397
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 7397 => ((5 string-address))
mem: ((5 string-address)): 7434 <= 7397
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((7397 string) (raw))
mem: ((7397 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 7398 => ((6 byte-address))
mem: ((6 byte-address)): 7435 <= 7398
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 2
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\2 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 7398 <= #\2
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 7395 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 7395
run: integer-to-decimal-string/print-integer/print-board/main 19: 7395 => ((6 buffer-address))
mem: ((6 buffer-address)): 7340 <= 7395
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 7343 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((7395 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 7347 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((7396 string-address) (raw)) => 7397
run: integer-to-decimal-string/print-integer/print-board/main 24: 7397 => ((14 string-address))
mem: ((14 string-address)): 7348 <= 7397
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 7490 => ((15 string-address))
mem: ((15 string-address)): 7349 <= 7490
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 7350 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 7351 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 7343 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((7397 string) (raw))
mem: ((7397 integer) (raw)) => 30
mem: ((7398 byte) (raw)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 30: #\2 => ((18 byte))
mem: ((18 byte)): 7352 <= #\2
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((7490 string) (raw))
mem: ((7490 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 7491 => ((19 byte-address))
mem: ((19 byte-address)): 7353 <= 7491
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 32: #\2 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 7491 <= #\2
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 7350 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 7351 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 7343 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 7490
run: print-integer/print-board/main 3: 7490 => ((3 string-address))
mem: ((3 string-address)): 7306 <= 7490
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 7490
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 7492 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 7490)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7494 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 7490)
run: print-string/print-integer/print-board/main 2: 7490 => ((2 string-address))
mem: ((2 string-address)): 7495 <= 7490
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((7490 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 7496 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 7497 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7498 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((7490 string) (raw))
mem: ((7490 integer) (raw)) => 1
mem: ((7491 byte) (raw)) => 2
run: print-string/print-integer/print-board/main 7: #\2 => ((6 character))
mem: ((6 character)): 7499 <= #\2
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 2
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 7523 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\2)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7525 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\2)
run: print-character/print-string/print-integer/print-board/main 2: #\2 => ((2 character))
mem: ((2 character)): 7526 <= #\2
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\2)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7527 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\2)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7528 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7529 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7530 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7531 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7532 <= 120
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 120 => ((9 integer))
mem: ((9 integer)): 7533 <= 120
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7534 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 120
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1227 => ((11 byte-address))
mem: ((11 byte-address)): 7535 <= 1227
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 2
run: print-character/print-string/print-integer/print-board/main 13: #\2 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1227 <= #\2
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 7497 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 7498 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 7554 => ((6 string-address))
mem: ((6 string-address)): 1836 <= 7554
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 7554
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 7558 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 7554)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7560 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 7554)
run: print-string/print-board/main 2: 7554 => ((2 string-address))
mem: ((2 string-address)): 7561 <= 7554
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((7554 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 7562 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 7563 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7564 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((7554 string) (raw))
mem: ((7554 integer) (raw)) => 3
mem: ((7555 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 7565 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 7589 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7591 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7592 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7593 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7594 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7595 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7596 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7597 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7598 <= 120
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 121 => ((9 integer))
mem: ((9 integer)): 7599 <= 121
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7600 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 121
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1228 => ((11 byte-address))
mem: ((11 byte-address)): 7601 <= 1228
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1228 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 7563 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7564 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((7554 string) (raw))
mem: ((7554 integer) (raw)) => 3
mem: ((7556 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 7565 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 7620 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7622 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 7623 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7624 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7625 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7626 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7627 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7628 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7629 <= 120
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 122 => ((9 integer))
mem: ((9 integer)): 7630 <= 122
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7631 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 122
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1229 => ((11 byte-address))
mem: ((11 byte-address)): 7632 <= 1229
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1229 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 7563 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 7564 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((7554 string) (raw))
mem: ((7554 integer) (raw)) => 3
mem: ((7557 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 7565 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 7651 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7653 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7654 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7655 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7656 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7657 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7658 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7659 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7660 <= 120
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 123 => ((9 integer))
mem: ((9 integer)): 7661 <= 123
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7662 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 123
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1230 => ((11 byte-address))
mem: ((11 byte-address)): 7663 <= 1230
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1230 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 7563 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 7564 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1837 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1466 file-address) (raw)) => 1505
run: print-board/main 13: 1505 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1505
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
mem: ((1507 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 1836 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7682 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7684 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 7685 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7686 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7687 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7688 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7689 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7690 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7691 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 124 => ((9 integer))
mem: ((9 integer)): 7692 <= 124
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7693 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 124
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1231 => ((11 byte-address))
mem: ((11 byte-address)): 7694 <= 1231
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1231 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7713 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7715 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7716 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7717 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7718 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7719 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7720 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7721 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7722 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 125 => ((9 integer))
mem: ((9 integer)): 7723 <= 125
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7724 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 125
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1232 => ((11 byte-address))
mem: ((11 byte-address)): 7725 <= 1232
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1232 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1837 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1467 file-address) (raw)) => 1545
run: print-board/main 13: 1545 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1545
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
mem: ((1547 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1836 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7744 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7746 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 7747 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7748 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7749 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7750 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7751 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7752 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7753 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 126 => ((9 integer))
mem: ((9 integer)): 7754 <= 126
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7755 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 126
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1233 => ((11 byte-address))
mem: ((11 byte-address)): 7756 <= 1233
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1233 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7775 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7777 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7778 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7779 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7780 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7781 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7782 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7783 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7784 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 127 => ((9 integer))
mem: ((9 integer)): 7785 <= 127
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7786 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 127
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1234 => ((11 byte-address))
mem: ((11 byte-address)): 7787 <= 1234
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1234 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1837 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1468 file-address) (raw)) => 1585
run: print-board/main 13: 1585 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1585
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
mem: ((1587 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1836 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7806 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7808 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 7809 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7810 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7811 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7812 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7813 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7814 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7815 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 128 => ((9 integer))
mem: ((9 integer)): 7816 <= 128
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7817 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 128
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1235 => ((11 byte-address))
mem: ((11 byte-address)): 7818 <= 1235
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1235 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7837 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7839 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7840 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7841 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7842 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7843 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7844 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7845 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7846 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 129 => ((9 integer))
mem: ((9 integer)): 7847 <= 129
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7848 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 129
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1236 => ((11 byte-address))
mem: ((11 byte-address)): 7849 <= 1236
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1236 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1837 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1469 file-address) (raw)) => 1625
run: print-board/main 13: 1625 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1625
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
mem: ((1627 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1836 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7868 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7870 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 7871 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7872 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7873 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7874 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7875 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7876 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7877 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 130 => ((9 integer))
mem: ((9 integer)): 7878 <= 130
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7879 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 130
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1237 => ((11 byte-address))
mem: ((11 byte-address)): 7880 <= 1237
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1237 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
schedule: scheduling print-board/main for further processing
schedule: print-board/main
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7899 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7901 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7902 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7903 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7904 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7905 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7906 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7907 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7908 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 131 => ((9 integer))
mem: ((9 integer)): 7909 <= 131
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7910 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 131
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1238 => ((11 byte-address))
mem: ((11 byte-address)): 7911 <= 1238
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1238 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1837 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1470 file-address) (raw)) => 1665
run: print-board/main 13: 1665 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1665
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
mem: ((1667 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1836 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7930 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7932 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 7933 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7934 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7935 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7936 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7937 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7938 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7939 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 132 => ((9 integer))
mem: ((9 integer)): 7940 <= 132
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7941 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 132
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1239 => ((11 byte-address))
mem: ((11 byte-address)): 7942 <= 1239
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1239 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7961 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7963 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 7964 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7965 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7966 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7967 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7968 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 7969 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 7970 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 133 => ((9 integer))
mem: ((9 integer)): 7971 <= 133
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 7972 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 133
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1240 => ((11 byte-address))
mem: ((11 byte-address)): 7973 <= 1240
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1240 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1837 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1471 file-address) (raw)) => 1705
run: print-board/main 13: 1705 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1705
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
mem: ((1707 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1836 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 7992 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 7994 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 7995 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 7996 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 7997 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 7998 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 7999 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8000 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 8001 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 134 => ((9 integer))
mem: ((9 integer)): 8002 <= 134
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8003 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 134
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1241 => ((11 byte-address))
mem: ((11 byte-address)): 8004 <= 1241
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1241 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8023 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8025 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8026 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8027 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8028 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8029 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8030 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8031 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 8032 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 135 => ((9 integer))
mem: ((9 integer)): 8033 <= 135
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8034 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 135
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1242 => ((11 byte-address))
mem: ((11 byte-address)): 8035 <= 1242
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1242 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1837 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1472 file-address) (raw)) => 1745
run: print-board/main 13: 1745 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1745
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
mem: ((1747 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1836 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8054 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8056 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 8057 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8058 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8059 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8060 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8061 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8062 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 8063 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 136 => ((9 integer))
mem: ((9 integer)): 8064 <= 136
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8065 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 136
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1243 => ((11 byte-address))
mem: ((11 byte-address)): 8066 <= 1243
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1243 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8085 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8087 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8088 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8089 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8090 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8091 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8092 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8093 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 8094 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 137 => ((9 integer))
mem: ((9 integer)): 8095 <= 137
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8096 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 137
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1244 => ((11 byte-address))
mem: ((11 byte-address)): 8097 <= 1244
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1244 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1837 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1473 file-address) (raw)) => 1785
run: print-board/main 13: 1785 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1785
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
mem: ((1787 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 1836 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8116 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8118 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 8119 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8120 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8121 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8122 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8123 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8124 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 8125 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 138 => ((9 integer))
mem: ((9 integer)): 8126 <= 138
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8127 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 138
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1245 => ((11 byte-address))
mem: ((11 byte-address)): 8128 <= 1245
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1245 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8147 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8149 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8150 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8151 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8152 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8153 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8154 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8155 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 8156 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 139 => ((9 integer))
mem: ((9 integer)): 8157 <= 139
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8158 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 139
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1246 => ((11 byte-address))
mem: ((11 byte-address)): 8159 <= 1246
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1246 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1837 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1834 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: print-board/main 19: 0 => ((3 integer))
mem: ((3 integer)): 1833 <= 0
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 8178 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8180 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 8181 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 6
run: cursor-to-next-line/print-board/main 4: 7 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 7
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 8182 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 0
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: print-board/main 6: 1 => ((5 integer))
mem: ((5 integer)): 1835 <= 1
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 1
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 8209 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 1)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8211 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 1)
run: print-integer/print-board/main 2: 1 => ((2 integer))
mem: ((2 integer)): 8212 <= 1
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 8240 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (1)
run: integer-to-decimal-string/print-integer/print-board/main 1: 1 => ((1 integer))
mem: ((1 integer)): 8242 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 8243 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 8245 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 8246 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 8271 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 8302 => ((1 buffer-address))
mem: ((1 buffer-address)): 8273 <= 8302
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 8302 => ((2 integer-address))
mem: ((2 integer-address)): 8274 <= 8302
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 8302 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 8303 => ((3 string-address-address))
mem: ((3 string-address-address)): 8275 <= 8303
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 8276 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 8304 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 8303 <= 8304
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 8302
run: integer-to-decimal-string/print-integer/print-board/main 11: 8302 => ((6 buffer-address))
mem: ((6 buffer-address)): 8247 <= 8302
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 8248 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 8249 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 8250 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 1
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 8242 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 1 => ((10 integer))
mem: ((10 integer)): 8251 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 17: 49 => ((11 integer))
mem: ((11 integer)): 8252 <= 49
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 49
run: integer-to-decimal-string/print-integer/print-board/main 18: #\1 => ((12 character))
mem: ((12 character)): 8253 <= #\1
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 8302
mem: ((12 character)) => 1
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 8335 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (8302 #\1)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 8302 => ((1 buffer-address))
mem: ((1 buffer-address)): 8337 <= 8302
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (8302 #\1)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\1 => ((2 character))
mem: ((2 character)): 8338 <= #\1
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 8302
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 8366 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (8302)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 8302 => ((1 buffer-address))
mem: ((1 buffer-address)): 8368 <= 8302
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((8302 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 8369 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((8303 string-address) (raw)) => 8304
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 8304 => ((3 string-address))
mem: ((3 string-address)): 8370 <= 8304
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((8304 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 8371 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8372 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 8339 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 8302 => ((4 integer-address))
mem: ((4 integer-address)): 8340 <= 8302
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((8303 string-address) (raw)) => 8304
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 8304 => ((5 string-address))
mem: ((5 string-address)): 8341 <= 8304
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((8304 string) (raw))
mem: ((8304 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 8305 => ((6 byte-address))
mem: ((6 byte-address)): 8342 <= 8305
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 1
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\1 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 8305 <= #\1
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 8302 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 8302
run: integer-to-decimal-string/print-integer/print-board/main 19: 8302 => ((6 buffer-address))
mem: ((6 buffer-address)): 8247 <= 8302
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 8250 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((8302 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 8254 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((8303 string-address) (raw)) => 8304
run: integer-to-decimal-string/print-integer/print-board/main 24: 8304 => ((14 string-address))
mem: ((14 string-address)): 8255 <= 8304
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 8397 => ((15 string-address))
mem: ((15 string-address)): 8256 <= 8397
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 8257 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 8258 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 8250 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((8304 string) (raw))
mem: ((8304 integer) (raw)) => 30
mem: ((8305 byte) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 30: #\1 => ((18 byte))
mem: ((18 byte)): 8259 <= #\1
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((8397 string) (raw))
mem: ((8397 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 8398 => ((19 byte-address))
mem: ((19 byte-address)): 8260 <= 8398
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 32: #\1 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 8398 <= #\1
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 8257 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 8258 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 8250 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 8397
run: print-integer/print-board/main 3: 8397 => ((3 string-address))
mem: ((3 string-address)): 8213 <= 8397
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 8397
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 8399 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 8397)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8401 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 8397)
run: print-string/print-integer/print-board/main 2: 8397 => ((2 string-address))
mem: ((2 string-address)): 8402 <= 8397
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((8397 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 8403 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 8404 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8405 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((8397 string) (raw))
mem: ((8397 integer) (raw)) => 1
mem: ((8398 byte) (raw)) => 1
run: print-string/print-integer/print-board/main 7: #\1 => ((6 character))
mem: ((6 character)): 8406 <= #\1
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 1
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 8430 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\1)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8432 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\1)
run: print-character/print-string/print-integer/print-board/main 2: #\1 => ((2 character))
mem: ((2 character)): 8433 <= #\1
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\1)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8434 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\1)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8435 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8436 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8437 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8438 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8439 <= 140
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 140 => ((9 integer))
mem: ((9 integer)): 8440 <= 140
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8441 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 140
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1247 => ((11 byte-address))
mem: ((11 byte-address)): 8442 <= 1247
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 1
run: print-character/print-string/print-integer/print-board/main 13: #\1 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1247 <= #\1
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 8404 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 8405 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 8461 => ((6 string-address))
mem: ((6 string-address)): 1836 <= 8461
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 8461
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 8465 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 8461)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8467 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 8461)
run: print-string/print-board/main 2: 8461 => ((2 string-address))
mem: ((2 string-address)): 8468 <= 8461
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((8461 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 8469 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 8470 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8471 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((8461 string) (raw))
mem: ((8461 integer) (raw)) => 3
mem: ((8462 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 8472 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 8496 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8498 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8499 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8500 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8501 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8502 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8503 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8504 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8505 <= 140
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 141 => ((9 integer))
mem: ((9 integer)): 8506 <= 141
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8507 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 141
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1248 => ((11 byte-address))
mem: ((11 byte-address)): 8508 <= 1248
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1248 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 8470 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8471 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((8461 string) (raw))
mem: ((8461 integer) (raw)) => 3
mem: ((8463 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 8472 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 8527 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8529 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 8530 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8531 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8532 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8533 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8534 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8535 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8536 <= 140
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 142 => ((9 integer))
mem: ((9 integer)): 8537 <= 142
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8538 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 142
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1249 => ((11 byte-address))
mem: ((11 byte-address)): 8539 <= 1249
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1249 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 8470 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 8471 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((8461 string) (raw))
mem: ((8461 integer) (raw)) => 3
mem: ((8464 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 8472 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 8558 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8560 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8561 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8562 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8563 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8564 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8565 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8566 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8567 <= 140
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 143 => ((9 integer))
mem: ((9 integer)): 8568 <= 143
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8569 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 143
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1250 => ((11 byte-address))
mem: ((11 byte-address)): 8570 <= 1250
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1250 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 8470 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 8471 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1837 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1466 file-address) (raw)) => 1505
run: print-board/main 13: 1505 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1505
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1505 file) (raw))
mem: ((1505 integer) (raw)) => 8
mem: ((1506 square) (raw)) => R
run: print-board/main 14: #\R => ((6 square))
mem: ((6 square)): 1836 <= #\R
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => R
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8589 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\R)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8591 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\R)
run: print-character/print-board/main 2: #\R => ((2 character))
mem: ((2 character)): 8592 <= #\R
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\R)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8593 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\R)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8594 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8595 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8596 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8597 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8598 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 144 => ((9 integer))
mem: ((9 integer)): 8599 <= 144
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8600 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 144
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1251 => ((11 byte-address))
mem: ((11 byte-address)): 8601 <= 1251
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => R
run: print-character/print-board/main 13: #\R => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1251 <= #\R
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8620 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8622 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8623 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8624 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8625 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8626 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8627 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8628 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8629 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 145 => ((9 integer))
mem: ((9 integer)): 8630 <= 145
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8631 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 145
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1252 => ((11 byte-address))
mem: ((11 byte-address)): 8632 <= 1252
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1252 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 1837 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1467 file-address) (raw)) => 1545
run: print-board/main 13: 1545 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1545
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1545 file) (raw))
mem: ((1545 integer) (raw)) => 8
mem: ((1546 square) (raw)) => N
run: print-board/main 14: #\N => ((6 square))
mem: ((6 square)): 1836 <= #\N
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => N
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8651 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\N)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8653 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\N)
run: print-character/print-board/main 2: #\N => ((2 character))
mem: ((2 character)): 8654 <= #\N
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\N)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8655 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\N)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8656 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8657 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8658 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8659 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8660 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 146 => ((9 integer))
mem: ((9 integer)): 8661 <= 146
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8662 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 146
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1253 => ((11 byte-address))
mem: ((11 byte-address)): 8663 <= 1253
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => N
run: print-character/print-board/main 13: #\N => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1253 <= #\N
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8682 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8684 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8685 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8686 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8687 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8688 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8689 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8690 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8691 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 147 => ((9 integer))
mem: ((9 integer)): 8692 <= 147
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8693 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 147
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1254 => ((11 byte-address))
mem: ((11 byte-address)): 8694 <= 1254
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1254 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 1837 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1468 file-address) (raw)) => 1585
run: print-board/main 13: 1585 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1585
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1585 file) (raw))
mem: ((1585 integer) (raw)) => 8
mem: ((1586 square) (raw)) => B
run: print-board/main 14: #\B => ((6 square))
mem: ((6 square)): 1836 <= #\B
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => B
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8713 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\B)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8715 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\B)
run: print-character/print-board/main 2: #\B => ((2 character))
mem: ((2 character)): 8716 <= #\B
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\B)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8717 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\B)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8718 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8719 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8720 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8721 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8722 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 148 => ((9 integer))
mem: ((9 integer)): 8723 <= 148
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8724 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 148
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1255 => ((11 byte-address))
mem: ((11 byte-address)): 8725 <= 1255
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => B
run: print-character/print-board/main 13: #\B => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1255 <= #\B
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8744 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8746 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8747 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8748 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8749 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8750 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8751 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8752 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8753 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 149 => ((9 integer))
mem: ((9 integer)): 8754 <= 149
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8755 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 149
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1256 => ((11 byte-address))
mem: ((11 byte-address)): 8756 <= 1256
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1256 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 1837 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1469 file-address) (raw)) => 1625
run: print-board/main 13: 1625 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1625
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1625 file) (raw))
mem: ((1625 integer) (raw)) => 8
mem: ((1626 square) (raw)) => Q
run: print-board/main 14: #\Q => ((6 square))
mem: ((6 square)): 1836 <= #\Q
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => Q
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8775 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\Q)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8777 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\Q)
run: print-character/print-board/main 2: #\Q => ((2 character))
mem: ((2 character)): 8778 <= #\Q
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\Q)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8779 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\Q)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8780 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8781 <= 1103
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8782 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8783 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8784 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 150 => ((9 integer))
mem: ((9 integer)): 8785 <= 150
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8786 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 150
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1257 => ((11 byte-address))
mem: ((11 byte-address)): 8787 <= 1257
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => Q
run: print-character/print-board/main 13: #\Q => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1257 <= #\Q
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8806 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8808 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8809 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8810 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8811 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8812 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8813 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8814 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8815 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 151 => ((9 integer))
mem: ((9 integer)): 8816 <= 151
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8817 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 151
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1258 => ((11 byte-address))
mem: ((11 byte-address)): 8818 <= 1258
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1258 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 1837 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1470 file-address) (raw)) => 1665
run: print-board/main 13: 1665 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1665
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1665 file) (raw))
mem: ((1665 integer) (raw)) => 8
mem: ((1666 square) (raw)) => K
run: print-board/main 14: #\K => ((6 square))
mem: ((6 square)): 1836 <= #\K
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => K
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8837 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\K)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8839 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\K)
run: print-character/print-board/main 2: #\K => ((2 character))
mem: ((2 character)): 8840 <= #\K
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\K)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8841 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\K)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8842 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8843 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8844 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8845 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8846 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 152 => ((9 integer))
mem: ((9 integer)): 8847 <= 152
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8848 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 152
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1259 => ((11 byte-address))
mem: ((11 byte-address)): 8849 <= 1259
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => K
run: print-character/print-board/main 13: #\K => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1259 <= #\K
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8868 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8870 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8871 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8872 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8873 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8874 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8875 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8876 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8877 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 153 => ((9 integer))
mem: ((9 integer)): 8878 <= 153
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8879 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 153
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1260 => ((11 byte-address))
mem: ((11 byte-address)): 8880 <= 1260
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1260 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 1837 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1471 file-address) (raw)) => 1705
run: print-board/main 13: 1705 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1705
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1705 file) (raw))
mem: ((1705 integer) (raw)) => 8
mem: ((1706 square) (raw)) => B
run: print-board/main 14: #\B => ((6 square))
mem: ((6 square)): 1836 <= #\B
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => B
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8899 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\B)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8901 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\B)
run: print-character/print-board/main 2: #\B => ((2 character))
mem: ((2 character)): 8902 <= #\B
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\B)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8903 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\B)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8904 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8905 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8906 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8907 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8908 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 154 => ((9 integer))
mem: ((9 integer)): 8909 <= 154
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8910 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 154
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1261 => ((11 byte-address))
mem: ((11 byte-address)): 8911 <= 1261
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => B
run: print-character/print-board/main 13: #\B => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1261 <= #\B
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8930 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8932 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8933 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8934 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8935 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8936 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8937 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8938 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8939 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 155 => ((9 integer))
mem: ((9 integer)): 8940 <= 155
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8941 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 155
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1262 => ((11 byte-address))
mem: ((11 byte-address)): 8942 <= 1262
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1262 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 1837 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1472 file-address) (raw)) => 1745
run: print-board/main 13: 1745 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1745
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1745 file) (raw))
mem: ((1745 integer) (raw)) => 8
mem: ((1746 square) (raw)) => N
run: print-board/main 14: #\N => ((6 square))
mem: ((6 square)): 1836 <= #\N
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => N
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8961 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\N)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8963 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\N)
run: print-character/print-board/main 2: #\N => ((2 character))
mem: ((2 character)): 8964 <= #\N
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\N)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8965 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\N)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8966 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8967 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8968 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 8969 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 8970 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 156 => ((9 integer))
mem: ((9 integer)): 8971 <= 156
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 8972 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 156
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1263 => ((11 byte-address))
mem: ((11 byte-address)): 8973 <= 1263
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => N
run: print-character/print-board/main 13: #\N => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1263 <= #\N
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 8992 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 8994 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 8995 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 8996 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 8997 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 8998 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 8999 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9000 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 9001 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 157 => ((9 integer))
mem: ((9 integer)): 9002 <= 157
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9003 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 157
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1264 => ((11 byte-address))
mem: ((11 byte-address)): 9004 <= 1264
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1264 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 1837 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 1834 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1465 board) (raw))
mem: ((1465 integer) (raw)) => 8
mem: ((1473 file-address) (raw)) => 1785
run: print-board/main 13: 1785 => ((8 file-address))
mem: ((8 file-address)): 1838 <= 1785
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1785 file) (raw))
mem: ((1785 integer) (raw)) => 8
mem: ((1786 square) (raw)) => R
run: print-board/main 14: #\R => ((6 square))
mem: ((6 square)): 1836 <= #\R
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => R
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 9023 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\R)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9025 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\R)
run: print-character/print-board/main 2: #\R => ((2 character))
mem: ((2 character)): 9026 <= #\R
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\R)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9027 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\R)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9028 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9029 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9030 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9031 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 9032 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 158 => ((9 integer))
mem: ((9 integer)): 9033 <= 158
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9034 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 158
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1265 => ((11 byte-address))
mem: ((11 byte-address)): 9035 <= 1265
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => R
run: print-character/print-board/main 13: #\R => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1265 <= #\R
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 9054 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9056 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9057 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9058 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9059 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9060 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9061 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9062 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 9063 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 159 => ((9 integer))
mem: ((9 integer)): 9064 <= 159
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9065 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 159
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1266 => ((11 byte-address))
mem: ((11 byte-address)): 9066 <= 1266
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1266 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 1837 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 1834 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: print-board/main 19: -1 => ((3 integer))
mem: ((3 integer)): 1833 <= -1
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 9085 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9087 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 9088 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 7
run: cursor-to-next-line/print-board/main 4: 8 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 8
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 9089 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => -1
run: print-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 1834 <= t
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => t
run: print-board/main 22: (((6 string-address)) <- ((new))   +----------------)
run: print-board/main 22: 9116 => ((6 string-address))
mem: ((6 string-address)): 1836 <= 9116
run: print-board/main 23: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 9116
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 9136 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 9116)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9138 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 9116)
run: print-string/print-board/main 2: 9116 => ((2 string-address))
mem: ((2 string-address)): 9139 <= 9116
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((9116 integer) (raw)) => 19
run: print-string/print-board/main 3: 19 => ((3 integer))
mem: ((3 integer)): 9140 <= 19
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 9141 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9117 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9143 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9167 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9169 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9170 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9171 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9172 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9173 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9174 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9175 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9176 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 10: 160 => ((9 integer))
mem: ((9 integer)): 9177 <= 160
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9178 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 160
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1267 => ((11 byte-address))
mem: ((11 byte-address)): 9179 <= 1267
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1267 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 9141 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9118 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9143 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9198 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9200 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9201 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9202 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9203 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9204 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9205 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9206 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9207 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 161 => ((9 integer))
mem: ((9 integer)): 9208 <= 161
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9209 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 161
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1268 => ((11 byte-address))
mem: ((11 byte-address)): 9210 <= 1268
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1268 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 9141 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9119 byte) (raw)) => +
run: print-string/print-board/main 7: #\+ => ((6 character))
mem: ((6 character)): 9143 <= #\+
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => +
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9229 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\+)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9231 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\+)
run: print-character/print-string/print-board/main 2: #\+ => ((2 character))
mem: ((2 character)): 9232 <= #\+
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\+)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9233 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\+)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9234 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9235 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9236 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9237 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9238 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 162 => ((9 integer))
mem: ((9 integer)): 9239 <= 162
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9240 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 162
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1269 => ((11 byte-address))
mem: ((11 byte-address)): 9241 <= 1269
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => +
run: print-character/print-string/print-board/main 13: #\+ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1269 <= #\+
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 9141 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9120 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9260 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9262 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9263 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9264 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9265 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9266 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9267 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9268 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9269 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 163 => ((9 integer))
mem: ((9 integer)): 9270 <= 163
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9271 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 163
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1270 => ((11 byte-address))
mem: ((11 byte-address)): 9272 <= 1270
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1270 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: print-string/print-board/main 9: 4 => ((4 integer))
mem: ((4 integer)): 9141 <= 4
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9121 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9291 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9293 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9294 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9295 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9296 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9297 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9298 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9299 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9300 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 10: 164 => ((9 integer))
mem: ((9 integer)): 9301 <= 164
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9302 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 164
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1271 => ((11 byte-address))
mem: ((11 byte-address)): 9303 <= 1271
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1271 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: print-string/print-board/main 9: 5 => ((4 integer))
mem: ((4 integer)): 9141 <= 5
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9122 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9322 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9324 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9325 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9326 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9327 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9328 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9329 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9330 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9331 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 10: 165 => ((9 integer))
mem: ((9 integer)): 9332 <= 165
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9333 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 165
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1272 => ((11 byte-address))
mem: ((11 byte-address)): 9334 <= 1272
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1272 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: print-string/print-board/main 9: 6 => ((4 integer))
mem: ((4 integer)): 9141 <= 6
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9123 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9353 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9355 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9356 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9357 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9358 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9359 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9360 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9361 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9362 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 10: 166 => ((9 integer))
mem: ((9 integer)): 9363 <= 166
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9364 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 166
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1273 => ((11 byte-address))
mem: ((11 byte-address)): 9365 <= 1273
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1273 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: print-string/print-board/main 9: 7 => ((4 integer))
mem: ((4 integer)): 9141 <= 7
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9124 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9384 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9386 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9387 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9388 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9389 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9390 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9391 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9392 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9393 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 10: 167 => ((9 integer))
mem: ((9 integer)): 9394 <= 167
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9395 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 167
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1274 => ((11 byte-address))
mem: ((11 byte-address)): 9396 <= 1274
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1274 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: print-string/print-board/main 9: 8 => ((4 integer))
mem: ((4 integer)): 9141 <= 8
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9125 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9415 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9417 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9418 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9419 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9420 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9421 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9422 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9423 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9424 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 10: 168 => ((9 integer))
mem: ((9 integer)): 9425 <= 168
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9426 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 168
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1275 => ((11 byte-address))
mem: ((11 byte-address)): 9427 <= 1275
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1275 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: print-string/print-board/main 9: 9 => ((4 integer))
mem: ((4 integer)): 9141 <= 9
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9126 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9446 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9448 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9449 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9450 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9451 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9452 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9453 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9454 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9455 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 10: 169 => ((9 integer))
mem: ((9 integer)): 9456 <= 169
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9457 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 169
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1276 => ((11 byte-address))
mem: ((11 byte-address)): 9458 <= 1276
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1276 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: print-string/print-board/main 9: 10 => ((4 integer))
mem: ((4 integer)): 9141 <= 10
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9127 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9477 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9479 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9480 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9481 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9482 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9483 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9484 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9485 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9486 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 10: 170 => ((9 integer))
mem: ((9 integer)): 9487 <= 170
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9488 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 170
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1277 => ((11 byte-address))
mem: ((11 byte-address)): 9489 <= 1277
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1277 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: print-string/print-board/main 9: 11 => ((4 integer))
mem: ((4 integer)): 9141 <= 11
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9128 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9508 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9510 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9511 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9512 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9513 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9514 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9515 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9516 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9517 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 10: 171 => ((9 integer))
mem: ((9 integer)): 9518 <= 171
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9519 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 171
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1278 => ((11 byte-address))
mem: ((11 byte-address)): 9520 <= 1278
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1278 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: print-string/print-board/main 9: 12 => ((4 integer))
mem: ((4 integer)): 9141 <= 12
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9129 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9539 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9541 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9542 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9543 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9544 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9545 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9546 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9547 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9548 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 10: 172 => ((9 integer))
mem: ((9 integer)): 9549 <= 172
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9550 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 172
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1279 => ((11 byte-address))
mem: ((11 byte-address)): 9551 <= 1279
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1279 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: print-string/print-board/main 9: 13 => ((4 integer))
mem: ((4 integer)): 9141 <= 13
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9130 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
schedule: scheduling print-character/print-string/print-board/main for further processing
schedule: print-character/print-string/print-board/main
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9570 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9572 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9573 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9574 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9575 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9576 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9577 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9578 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9579 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 10: 173 => ((9 integer))
mem: ((9 integer)): 9580 <= 173
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9581 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 173
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1280 => ((11 byte-address))
mem: ((11 byte-address)): 9582 <= 1280
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1280 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: print-string/print-board/main 9: 14 => ((4 integer))
mem: ((4 integer)): 9141 <= 14
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9131 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9601 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9603 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9604 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9605 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9606 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9607 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9608 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9609 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9610 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 10: 174 => ((9 integer))
mem: ((9 integer)): 9611 <= 174
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9612 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 174
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1281 => ((11 byte-address))
mem: ((11 byte-address)): 9613 <= 1281
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1281 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: print-string/print-board/main 9: 15 => ((4 integer))
mem: ((4 integer)): 9141 <= 15
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9132 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9632 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9634 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9635 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9636 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9637 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9638 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9639 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9640 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9641 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 10: 175 => ((9 integer))
mem: ((9 integer)): 9642 <= 175
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9643 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 175
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1282 => ((11 byte-address))
mem: ((11 byte-address)): 9644 <= 1282
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1282 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: print-string/print-board/main 9: 16 => ((4 integer))
mem: ((4 integer)): 9141 <= 16
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9133 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9663 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9665 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9666 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9667 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9668 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9669 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9670 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9671 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9672 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 10: 176 => ((9 integer))
mem: ((9 integer)): 9673 <= 176
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9674 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 176
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1283 => ((11 byte-address))
mem: ((11 byte-address)): 9675 <= 1283
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1283 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: print-string/print-board/main 9: 17 => ((4 integer))
mem: ((4 integer)): 9141 <= 17
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9134 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9694 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9696 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9697 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9698 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9699 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9700 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9701 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9702 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9703 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 10: 177 => ((9 integer))
mem: ((9 integer)): 9704 <= 177
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9705 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 177
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1284 => ((11 byte-address))
mem: ((11 byte-address)): 9706 <= 1284
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1284 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: print-string/print-board/main 9: 18 => ((4 integer))
mem: ((4 integer)): 9141 <= 18
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9142 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((9116 string) (raw))
mem: ((9116 integer) (raw)) => 19
mem: ((9135 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 9143 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9725 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9727 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 9728 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9729 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9730 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9731 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9732 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9733 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 9734 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 10: 178 => ((9 integer))
mem: ((9 integer)): 9735 <= 178
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9736 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 178
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1285 => ((11 byte-address))
mem: ((11 byte-address)): 9737 <= 1285
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1285 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: print-string/print-board/main 9: 19 => ((4 integer))
mem: ((4 integer)): 9141 <= 19
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 9142 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 24: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 9756 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9758 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 9759 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 8
run: cursor-to-next-line/print-board/main 4: 9 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 9
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 9760 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 25: (((6 string-address)) <- ((new))     a b c d e f g h)
run: print-board/main 25: 9787 => ((6 string-address))
mem: ((6 string-address)): 1836 <= 9787
run: print-board/main 26: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 9787
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 9807 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 9787)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9809 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 9787)
run: print-string/print-board/main 2: 9787 => ((2 string-address))
mem: ((2 string-address)): 9810 <= 9787
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((9787 integer) (raw)) => 19
run: print-string/print-board/main 3: 19 => ((3 integer))
mem: ((3 integer)): 9811 <= 19
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 9812 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9788 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9814 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9838 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9840 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9841 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9842 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9843 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9844 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9845 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9846 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 9847 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 10: 180 => ((9 integer))
mem: ((9 integer)): 9848 <= 180
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9849 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 180
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1287 => ((11 byte-address))
mem: ((11 byte-address)): 9850 <= 1287
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1287 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 9812 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9789 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9814 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9869 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9871 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9872 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9873 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9874 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9875 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9876 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9877 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 9878 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 181 => ((9 integer))
mem: ((9 integer)): 9879 <= 181
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9880 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 181
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1288 => ((11 byte-address))
mem: ((11 byte-address)): 9881 <= 1288
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1288 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 9812 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9790 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9814 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9900 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9902 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9903 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9904 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9905 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9906 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9907 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9908 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 9909 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 182 => ((9 integer))
mem: ((9 integer)): 9910 <= 182
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9911 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 182
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1289 => ((11 byte-address))
mem: ((11 byte-address)): 9912 <= 1289
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1289 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 9812 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9791 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9814 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9931 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9933 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9934 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9935 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9936 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9937 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9938 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9939 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 9940 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 183 => ((9 integer))
mem: ((9 integer)): 9941 <= 183
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9942 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 183
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1290 => ((11 byte-address))
mem: ((11 byte-address)): 9943 <= 1290
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1290 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: print-string/print-board/main 9: 4 => ((4 integer))
mem: ((4 integer)): 9812 <= 4
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9792 byte) (raw)) => a
run: print-string/print-board/main 7: #\a => ((6 character))
mem: ((6 character)): 9814 <= #\a
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => a
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9962 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\a)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9964 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\a)
run: print-character/print-string/print-board/main 2: #\a => ((2 character))
mem: ((2 character)): 9965 <= #\a
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\a)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9966 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\a)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9967 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9968 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 9969 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 9970 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 9971 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 10: 184 => ((9 integer))
mem: ((9 integer)): 9972 <= 184
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 9973 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 184
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1291 => ((11 byte-address))
mem: ((11 byte-address)): 9974 <= 1291
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => a
run: print-character/print-string/print-board/main 13: #\a => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1291 <= #\a
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: print-string/print-board/main 9: 5 => ((4 integer))
mem: ((4 integer)): 9812 <= 5
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9793 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9814 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 9993 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 9995 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 9996 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 9997 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 9998 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 9999 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10000 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10001 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10002 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 10: 185 => ((9 integer))
mem: ((9 integer)): 10003 <= 185
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10004 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 185
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1292 => ((11 byte-address))
mem: ((11 byte-address)): 10005 <= 1292
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1292 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: print-string/print-board/main 9: 6 => ((4 integer))
mem: ((4 integer)): 9812 <= 6
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9794 byte) (raw)) => b
run: print-string/print-board/main 7: #\b => ((6 character))
mem: ((6 character)): 9814 <= #\b
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => b
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10024 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\b)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10026 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\b)
run: print-character/print-string/print-board/main 2: #\b => ((2 character))
mem: ((2 character)): 10027 <= #\b
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\b)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10028 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\b)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10029 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 10030 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10031 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10032 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10033 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 10: 186 => ((9 integer))
mem: ((9 integer)): 10034 <= 186
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10035 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 186
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1293 => ((11 byte-address))
mem: ((11 byte-address)): 10036 <= 1293
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => b
run: print-character/print-string/print-board/main 13: #\b => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1293 <= #\b
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: print-string/print-board/main 9: 7 => ((4 integer))
mem: ((4 integer)): 9812 <= 7
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9795 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9814 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10055 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10057 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 10058 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10059 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10060 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 10061 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10062 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10063 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10064 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 10: 187 => ((9 integer))
mem: ((9 integer)): 10065 <= 187
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10066 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 187
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1294 => ((11 byte-address))
mem: ((11 byte-address)): 10067 <= 1294
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1294 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: print-string/print-board/main 9: 8 => ((4 integer))
mem: ((4 integer)): 9812 <= 8
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9796 byte) (raw)) => c
run: print-string/print-board/main 7: #\c => ((6 character))
mem: ((6 character)): 9814 <= #\c
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => c
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10086 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\c)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10088 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\c)
run: print-character/print-string/print-board/main 2: #\c => ((2 character))
mem: ((2 character)): 10089 <= #\c
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\c)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10090 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\c)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10091 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 10092 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10093 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10094 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10095 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 10: 188 => ((9 integer))
mem: ((9 integer)): 10096 <= 188
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10097 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 188
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1295 => ((11 byte-address))
mem: ((11 byte-address)): 10098 <= 1295
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => c
run: print-character/print-string/print-board/main 13: #\c => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1295 <= #\c
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: print-string/print-board/main 9: 9 => ((4 integer))
mem: ((4 integer)): 9812 <= 9
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9797 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9814 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10117 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10119 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 10120 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10121 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10122 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 10123 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10124 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10125 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10126 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 10: 189 => ((9 integer))
mem: ((9 integer)): 10127 <= 189
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10128 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 189
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1296 => ((11 byte-address))
mem: ((11 byte-address)): 10129 <= 1296
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1296 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: print-string/print-board/main 9: 10 => ((4 integer))
mem: ((4 integer)): 9812 <= 10
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9798 byte) (raw)) => d
run: print-string/print-board/main 7: #\d => ((6 character))
mem: ((6 character)): 9814 <= #\d
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => d
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10148 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\d)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10150 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\d)
run: print-character/print-string/print-board/main 2: #\d => ((2 character))
mem: ((2 character)): 10151 <= #\d
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\d)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10152 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\d)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10153 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 10154 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10155 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10156 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10157 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 10: 190 => ((9 integer))
mem: ((9 integer)): 10158 <= 190
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10159 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 190
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1297 => ((11 byte-address))
mem: ((11 byte-address)): 10160 <= 1297
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => d
run: print-character/print-string/print-board/main 13: #\d => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1297 <= #\d
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: print-string/print-board/main 9: 11 => ((4 integer))
mem: ((4 integer)): 9812 <= 11
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9799 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9814 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10179 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10181 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 10182 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10183 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10184 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 10185 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10186 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10187 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10188 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 10: 191 => ((9 integer))
mem: ((9 integer)): 10189 <= 191
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10190 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 191
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1298 => ((11 byte-address))
mem: ((11 byte-address)): 10191 <= 1298
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1298 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: print-string/print-board/main 9: 12 => ((4 integer))
mem: ((4 integer)): 9812 <= 12
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9800 byte) (raw)) => e
run: print-string/print-board/main 7: #\e => ((6 character))
mem: ((6 character)): 9814 <= #\e
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => e
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10210 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\e)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10212 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\e)
run: print-character/print-string/print-board/main 2: #\e => ((2 character))
mem: ((2 character)): 10213 <= #\e
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\e)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10214 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\e)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10215 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 10216 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10217 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10218 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10219 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 10: 192 => ((9 integer))
mem: ((9 integer)): 10220 <= 192
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10221 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 192
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1299 => ((11 byte-address))
mem: ((11 byte-address)): 10222 <= 1299
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => e
run: print-character/print-string/print-board/main 13: #\e => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1299 <= #\e
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: print-string/print-board/main 9: 13 => ((4 integer))
mem: ((4 integer)): 9812 <= 13
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9801 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9814 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10241 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10243 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 10244 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10245 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10246 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 10247 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10248 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10249 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10250 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 10: 193 => ((9 integer))
mem: ((9 integer)): 10251 <= 193
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10252 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 193
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1300 => ((11 byte-address))
mem: ((11 byte-address)): 10253 <= 1300
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1300 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: print-string/print-board/main 9: 14 => ((4 integer))
mem: ((4 integer)): 9812 <= 14
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9802 byte) (raw)) => f
run: print-string/print-board/main 7: #\f => ((6 character))
mem: ((6 character)): 9814 <= #\f
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => f
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10272 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\f)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10274 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\f)
run: print-character/print-string/print-board/main 2: #\f => ((2 character))
mem: ((2 character)): 10275 <= #\f
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\f)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10276 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\f)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10277 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 10278 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10279 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10280 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10281 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 10: 194 => ((9 integer))
mem: ((9 integer)): 10282 <= 194
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10283 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 194
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1301 => ((11 byte-address))
mem: ((11 byte-address)): 10284 <= 1301
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => f
run: print-character/print-string/print-board/main 13: #\f => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1301 <= #\f
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: print-string/print-board/main 9: 15 => ((4 integer))
mem: ((4 integer)): 9812 <= 15
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9803 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9814 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10303 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10305 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 10306 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10307 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10308 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 10309 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10310 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10311 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10312 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 10: 195 => ((9 integer))
mem: ((9 integer)): 10313 <= 195
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10314 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 195
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1302 => ((11 byte-address))
mem: ((11 byte-address)): 10315 <= 1302
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1302 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: print-string/print-board/main 9: 16 => ((4 integer))
mem: ((4 integer)): 9812 <= 16
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
schedule: scheduling print-string/print-board/main for further processing
schedule: print-string/print-board/main
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9804 byte) (raw)) => g
run: print-string/print-board/main 7: #\g => ((6 character))
mem: ((6 character)): 9814 <= #\g
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => g
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10334 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\g)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10336 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\g)
run: print-character/print-string/print-board/main 2: #\g => ((2 character))
mem: ((2 character)): 10337 <= #\g
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\g)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10338 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\g)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10339 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 10340 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10341 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10342 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10343 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 10: 196 => ((9 integer))
mem: ((9 integer)): 10344 <= 196
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10345 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 196
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1303 => ((11 byte-address))
mem: ((11 byte-address)): 10346 <= 1303
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => g
run: print-character/print-string/print-board/main 13: #\g => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1303 <= #\g
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: print-string/print-board/main 9: 17 => ((4 integer))
mem: ((4 integer)): 9812 <= 17
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9805 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 9814 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10365 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10367 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 10368 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10369 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10370 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 10371 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10372 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10373 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10374 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 10: 197 => ((9 integer))
mem: ((9 integer)): 10375 <= 197
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10376 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 197
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1304 => ((11 byte-address))
mem: ((11 byte-address)): 10377 <= 1304
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1304 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: print-string/print-board/main 9: 18 => ((4 integer))
mem: ((4 integer)): 9812 <= 18
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 9813 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((9787 string) (raw))
mem: ((9787 integer) (raw)) => 19
mem: ((9806 byte) (raw)) => h
run: print-string/print-board/main 7: #\h => ((6 character))
mem: ((6 character)): 9814 <= #\h
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => h
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 10396 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\h)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10398 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\h)
run: print-character/print-string/print-board/main 2: #\h => ((2 character))
mem: ((2 character)): 10399 <= #\h
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\h)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 10400 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\h)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 10401 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 10402 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 10403 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 10404 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 10405 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 10: 198 => ((9 integer))
mem: ((9 integer)): 10406 <= 198
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 10407 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 198
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1305 => ((11 byte-address))
mem: ((11 byte-address)): 10408 <= 1305
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => h
run: print-character/print-string/print-board/main 13: #\h => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1305 <= #\h
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: print-string/print-board/main 9: 19 => ((4 integer))
mem: ((4 integer)): 9812 <= 19
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 9813 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 27: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 10427 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 10429 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 10430 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 9
run: cursor-to-next-line/print-board/main 4: 10 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 10
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 10431 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: main 18: (((1 string-address) (raw)) <- ((get)) ((2 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: main 18: 1106 => ((1 string-address) (raw))
mem: ((1 string-address) (raw)): 1 <= 1106
schedule: done with routine nil
