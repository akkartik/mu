schedule: main
run: main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
run: main 0: 1000 => ((default-space space-address))
run: main 1: (((1 channel-address)) <- ((init-channel)) ((1 literal)))
run: init-channel/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-channel/main 0: 1031 => ((default-space space-address))
run: init-channel/main 1: (((1 channel-address)) <- ((new)) ((channel literal)))
run: init-channel/main 1: 1062 => ((1 channel-address))
mem: ((1 channel-address)): 1033 <= 1062
run: init-channel/main 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: init-channel/main 2: 1062 => ((2 integer-address))
mem: ((2 integer-address)): 1034 <= 1062
run: init-channel/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-channel/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1062 <= 0
run: init-channel/main 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
run: init-channel/main 4: 1063 => ((3 integer-address))
mem: ((3 integer-address)): 1035 <= 1063
run: init-channel/main 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-channel/main 5: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1063 <= 0
run: init-channel/main 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (1)
run: init-channel/main 6: 1 => ((4 integer))
mem: ((4 integer)): 1036 <= 1
run: init-channel/main 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: init-channel/main 7: 2 => ((4 integer))
mem: ((4 integer)): 1036 <= 2
run: init-channel/main 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
run: init-channel/main 8: 1064 => ((5 tagged-value-array-address-address))
mem: ((5 tagged-value-array-address-address)): 1037 <= 1064
run: init-channel/main 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
mem: ((4 integer)) => 2
run: init-channel/main 9: 1065 => ((5 tagged-value-array-address-address) (deref))
mem: ((5 tagged-value-array-address-address) (deref)): 1064 <= 1065
run: init-channel/main 10: (((reply)) ((1 channel-address)))
mem: ((1 channel-address)) => 1062
run: main 1: 1062 => ((1 channel-address))
mem: ((1 channel-address)): 1002 <= 1062
run: main 2: (((2 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
run: init-fake-terminal/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
run: init-fake-terminal/main 0: 1070 => ((default-space space-address))
run: init-fake-terminal/main 1: (((1 terminal-address)) <- ((new)) ((terminal literal)))
run: init-fake-terminal/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 1072 <= 1101
run: init-fake-terminal/main 2: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((1 offset)))
run: init-fake-terminal/main 2: 1102 => ((2 integer-address))
mem: ((2 integer-address)): 1073 <= 1102
run: init-fake-terminal/main 3: (((2 integer-address) (deref)) <- ((next-input)))
arg: nil 0 (20 10)
run: init-fake-terminal/main 3: 20 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1102 <= 20
run: init-fake-terminal/main 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((0 offset)))
run: init-fake-terminal/main 4: 1101 => ((3 integer-address))
mem: ((3 integer-address)): 1074 <= 1101
run: init-fake-terminal/main 5: (((3 integer-address) (deref)) <- ((next-input)))
arg: nil 1 (20 10)
run: init-fake-terminal/main 5: 10 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1101 <= 10
run: init-fake-terminal/main 6: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: init-fake-terminal/main 6: 1103 => ((4 integer-address))
mem: ((4 integer-address)): 1075 <= 1103
run: init-fake-terminal/main 7: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-fake-terminal/main 7: 0 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1103 <= 0
run: init-fake-terminal/main 8: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: init-fake-terminal/main 8: 1104 => ((5 integer-address))
mem: ((5 integer-address)): 1076 <= 1104
run: init-fake-terminal/main 9: (((5 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-fake-terminal/main 9: 0 => ((5 integer-address) (deref))
mem: ((5 integer-address) (deref)): 1104 <= 0
run: init-fake-terminal/main 10: (((6 integer)) <- ((multiply)) ((2 integer-address) (deref)) ((3 integer-address) (deref)))
mem: ((2 integer-address) (deref)) => 20
mem: ((3 integer-address) (deref)) => 10
run: init-fake-terminal/main 10: 200 => ((6 integer))
mem: ((6 integer)): 1077 <= 200
run: init-fake-terminal/main 11: (((7 string-address-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((4 offset)))
run: init-fake-terminal/main 11: 1105 => ((7 string-address-address))
mem: ((7 string-address-address)): 1078 <= 1105
run: init-fake-terminal/main 12: (((7 string-address-address) (deref)) <- ((new)) ((string literal)) ((6 integer)))
mem: ((6 integer)) => 200
run: init-fake-terminal/main 12: 1106 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 1105 <= 1106
run: init-fake-terminal/main 13: (((clear-screen)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: clear-screen/init-fake-terminal/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: clear-screen/init-fake-terminal/main 0: 1307 => ((default-space space-address))
run: clear-screen/init-fake-terminal/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: clear-screen/init-fake-terminal/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 1309 <= 1101
run: clear-screen/init-fake-terminal/main 2: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: clear-screen/init-fake-terminal/main 3: (((2 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: clear-screen/init-fake-terminal/main 3: 1106 => ((2 string-address))
mem: ((2 string-address)): 1310 <= 1106
run: clear-screen/init-fake-terminal/main 4: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 4: 200 => ((3 integer))
mem: ((3 integer)): 1311 <= 200
run: clear-screen/init-fake-terminal/main 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: clear-screen/init-fake-terminal/main 5: 0 => ((4 integer))
mem: ((4 integer)): 1312 <= 0
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1107 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1107
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1107 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: clear-screen/init-fake-terminal/main 10: 1 => ((4 integer))
mem: ((4 integer)): 1312 <= 1
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1108 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1108
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1108 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: clear-screen/init-fake-terminal/main 10: 2 => ((4 integer))
mem: ((4 integer)): 1312 <= 2
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1109 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1109
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1109 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: clear-screen/init-fake-terminal/main 10: 3 => ((4 integer))
mem: ((4 integer)): 1312 <= 3
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1110 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1110
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1110 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: clear-screen/init-fake-terminal/main 10: 4 => ((4 integer))
mem: ((4 integer)): 1312 <= 4
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1111 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1111
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1111 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: clear-screen/init-fake-terminal/main 10: 5 => ((4 integer))
mem: ((4 integer)): 1312 <= 5
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1112 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1112
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1112 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: clear-screen/init-fake-terminal/main 10: 6 => ((4 integer))
mem: ((4 integer)): 1312 <= 6
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1113 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1113
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1113 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: clear-screen/init-fake-terminal/main 10: 7 => ((4 integer))
mem: ((4 integer)): 1312 <= 7
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1114 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1114
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1114 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: clear-screen/init-fake-terminal/main 10: 8 => ((4 integer))
mem: ((4 integer)): 1312 <= 8
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1115 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1115
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1115 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: clear-screen/init-fake-terminal/main 10: 9 => ((4 integer))
mem: ((4 integer)): 1312 <= 9
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1116 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1116
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1116 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: clear-screen/init-fake-terminal/main 10: 10 => ((4 integer))
mem: ((4 integer)): 1312 <= 10
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1117 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1117
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1117 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: clear-screen/init-fake-terminal/main 10: 11 => ((4 integer))
mem: ((4 integer)): 1312 <= 11
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1118 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1118
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1118 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: clear-screen/init-fake-terminal/main 10: 12 => ((4 integer))
mem: ((4 integer)): 1312 <= 12
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1119 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1119
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1119 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: clear-screen/init-fake-terminal/main 10: 13 => ((4 integer))
mem: ((4 integer)): 1312 <= 13
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1120 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1120
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1120 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: clear-screen/init-fake-terminal/main 10: 14 => ((4 integer))
mem: ((4 integer)): 1312 <= 14
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1121 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1121
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1121 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: clear-screen/init-fake-terminal/main 10: 15 => ((4 integer))
mem: ((4 integer)): 1312 <= 15
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1122 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1122
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1122 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: clear-screen/init-fake-terminal/main 10: 16 => ((4 integer))
mem: ((4 integer)): 1312 <= 16
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1123 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1123
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1123 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: clear-screen/init-fake-terminal/main 10: 17 => ((4 integer))
mem: ((4 integer)): 1312 <= 17
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1124 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1124
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1124 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: clear-screen/init-fake-terminal/main 10: 18 => ((4 integer))
mem: ((4 integer)): 1312 <= 18
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1125 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1125
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1125 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: clear-screen/init-fake-terminal/main 10: 19 => ((4 integer))
mem: ((4 integer)): 1312 <= 19
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 19
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1126 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1126
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1126 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 19
run: clear-screen/init-fake-terminal/main 10: 20 => ((4 integer))
mem: ((4 integer)): 1312 <= 20
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 20
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 20
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1127 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1127
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1127 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 20
run: clear-screen/init-fake-terminal/main 10: 21 => ((4 integer))
mem: ((4 integer)): 1312 <= 21
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 21
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 21
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1128 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1128
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1128 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 21
run: clear-screen/init-fake-terminal/main 10: 22 => ((4 integer))
mem: ((4 integer)): 1312 <= 22
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 22
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 22
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1129 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1129
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1129 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 22
run: clear-screen/init-fake-terminal/main 10: 23 => ((4 integer))
mem: ((4 integer)): 1312 <= 23
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 23
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 23
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1130 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1130
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1130 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 23
run: clear-screen/init-fake-terminal/main 10: 24 => ((4 integer))
mem: ((4 integer)): 1312 <= 24
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 24
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 24
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1131 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1131
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1131 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 24
run: clear-screen/init-fake-terminal/main 10: 25 => ((4 integer))
mem: ((4 integer)): 1312 <= 25
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 25
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 25
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1132 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1132
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1132 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 25
run: clear-screen/init-fake-terminal/main 10: 26 => ((4 integer))
mem: ((4 integer)): 1312 <= 26
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 26
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1133 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1133
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1133 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 26
run: clear-screen/init-fake-terminal/main 10: 27 => ((4 integer))
mem: ((4 integer)): 1312 <= 27
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 27
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 27
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1134 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1134
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1134 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 27
run: clear-screen/init-fake-terminal/main 10: 28 => ((4 integer))
mem: ((4 integer)): 1312 <= 28
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 28
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 28
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1135 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1135
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1135 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 28
run: clear-screen/init-fake-terminal/main 10: 29 => ((4 integer))
mem: ((4 integer)): 1312 <= 29
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 29
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 29
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1136 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1136
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1136 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 29
run: clear-screen/init-fake-terminal/main 10: 30 => ((4 integer))
mem: ((4 integer)): 1312 <= 30
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 30
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 30
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1137 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1137
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1137 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 30
run: clear-screen/init-fake-terminal/main 10: 31 => ((4 integer))
mem: ((4 integer)): 1312 <= 31
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 31
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 31
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1138 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1138
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1138 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 31
run: clear-screen/init-fake-terminal/main 10: 32 => ((4 integer))
mem: ((4 integer)): 1312 <= 32
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 32
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 32
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1139 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1139
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1139 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 32
run: clear-screen/init-fake-terminal/main 10: 33 => ((4 integer))
mem: ((4 integer)): 1312 <= 33
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 33
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 33
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1140 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1140
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1140 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 33
run: clear-screen/init-fake-terminal/main 10: 34 => ((4 integer))
mem: ((4 integer)): 1312 <= 34
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 34
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 34
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1141 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1141
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1141 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 34
run: clear-screen/init-fake-terminal/main 10: 35 => ((4 integer))
mem: ((4 integer)): 1312 <= 35
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 35
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 35
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1142 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1142
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1142 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 35
run: clear-screen/init-fake-terminal/main 10: 36 => ((4 integer))
mem: ((4 integer)): 1312 <= 36
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 36
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 36
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1143 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1143
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1143 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 36
run: clear-screen/init-fake-terminal/main 10: 37 => ((4 integer))
mem: ((4 integer)): 1312 <= 37
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 37
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 37
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1144 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1144
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1144 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 37
run: clear-screen/init-fake-terminal/main 10: 38 => ((4 integer))
mem: ((4 integer)): 1312 <= 38
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 38
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 38
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1145 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1145
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1145 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 38
run: clear-screen/init-fake-terminal/main 10: 39 => ((4 integer))
mem: ((4 integer)): 1312 <= 39
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 39
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 39
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1146 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1146
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1146 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 39
run: clear-screen/init-fake-terminal/main 10: 40 => ((4 integer))
mem: ((4 integer)): 1312 <= 40
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 40
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 40
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1147 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1147
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1147 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 40
run: clear-screen/init-fake-terminal/main 10: 41 => ((4 integer))
mem: ((4 integer)): 1312 <= 41
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 41
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 41
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1148 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1148
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1148 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 41
run: clear-screen/init-fake-terminal/main 10: 42 => ((4 integer))
mem: ((4 integer)): 1312 <= 42
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 42
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 42
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1149 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1149
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1149 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 42
run: clear-screen/init-fake-terminal/main 10: 43 => ((4 integer))
mem: ((4 integer)): 1312 <= 43
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 43
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 43
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1150 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1150
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1150 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 43
run: clear-screen/init-fake-terminal/main 10: 44 => ((4 integer))
mem: ((4 integer)): 1312 <= 44
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 44
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 44
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1151 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1151
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1151 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 44
run: clear-screen/init-fake-terminal/main 10: 45 => ((4 integer))
mem: ((4 integer)): 1312 <= 45
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 45
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 45
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1152 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1152
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1152 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 45
run: clear-screen/init-fake-terminal/main 10: 46 => ((4 integer))
mem: ((4 integer)): 1312 <= 46
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 46
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 46
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1153 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1153
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1153 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 46
run: clear-screen/init-fake-terminal/main 10: 47 => ((4 integer))
mem: ((4 integer)): 1312 <= 47
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 47
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 47
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1154 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1154
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1154 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 47
run: clear-screen/init-fake-terminal/main 10: 48 => ((4 integer))
mem: ((4 integer)): 1312 <= 48
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 48
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 48
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1155 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1155
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1155 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 48
run: clear-screen/init-fake-terminal/main 10: 49 => ((4 integer))
mem: ((4 integer)): 1312 <= 49
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 49
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 49
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1156 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1156
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1156 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 49
run: clear-screen/init-fake-terminal/main 10: 50 => ((4 integer))
mem: ((4 integer)): 1312 <= 50
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 50
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 50
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1157 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1157
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1157 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 50
run: clear-screen/init-fake-terminal/main 10: 51 => ((4 integer))
mem: ((4 integer)): 1312 <= 51
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 51
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 51
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1158 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1158
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1158 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 51
run: clear-screen/init-fake-terminal/main 10: 52 => ((4 integer))
mem: ((4 integer)): 1312 <= 52
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 52
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 52
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1159 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1159
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1159 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 52
run: clear-screen/init-fake-terminal/main 10: 53 => ((4 integer))
mem: ((4 integer)): 1312 <= 53
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 53
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 53
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1160 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1160
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1160 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 53
run: clear-screen/init-fake-terminal/main 10: 54 => ((4 integer))
mem: ((4 integer)): 1312 <= 54
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 54
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 54
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1161 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1161
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1161 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 54
run: clear-screen/init-fake-terminal/main 10: 55 => ((4 integer))
mem: ((4 integer)): 1312 <= 55
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 55
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 55
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1162 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1162
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1162 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 55
run: clear-screen/init-fake-terminal/main 10: 56 => ((4 integer))
mem: ((4 integer)): 1312 <= 56
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 56
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 56
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1163 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1163
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1163 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 56
run: clear-screen/init-fake-terminal/main 10: 57 => ((4 integer))
mem: ((4 integer)): 1312 <= 57
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 57
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 57
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1164 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1164
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1164 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 57
run: clear-screen/init-fake-terminal/main 10: 58 => ((4 integer))
mem: ((4 integer)): 1312 <= 58
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 58
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 58
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1165 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1165
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1165 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 58
run: clear-screen/init-fake-terminal/main 10: 59 => ((4 integer))
mem: ((4 integer)): 1312 <= 59
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 59
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 59
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1166 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1166
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1166 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 59
run: clear-screen/init-fake-terminal/main 10: 60 => ((4 integer))
mem: ((4 integer)): 1312 <= 60
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 60
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 60
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1167 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1167
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1167 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 60
run: clear-screen/init-fake-terminal/main 10: 61 => ((4 integer))
mem: ((4 integer)): 1312 <= 61
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 61
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 61
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1168 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1168
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1168 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 61
run: clear-screen/init-fake-terminal/main 10: 62 => ((4 integer))
mem: ((4 integer)): 1312 <= 62
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 62
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 62
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1169 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1169
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1169 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 62
run: clear-screen/init-fake-terminal/main 10: 63 => ((4 integer))
mem: ((4 integer)): 1312 <= 63
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 63
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 63
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1170 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1170
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1170 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 63
run: clear-screen/init-fake-terminal/main 10: 64 => ((4 integer))
mem: ((4 integer)): 1312 <= 64
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 64
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 64
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1171 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1171
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1171 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 64
run: clear-screen/init-fake-terminal/main 10: 65 => ((4 integer))
mem: ((4 integer)): 1312 <= 65
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 65
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 65
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1172 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1172
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1172 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 65
run: clear-screen/init-fake-terminal/main 10: 66 => ((4 integer))
mem: ((4 integer)): 1312 <= 66
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 66
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 66
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1173 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1173
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1173 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 66
run: clear-screen/init-fake-terminal/main 10: 67 => ((4 integer))
mem: ((4 integer)): 1312 <= 67
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 67
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 67
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1174 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1174
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1174 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 67
run: clear-screen/init-fake-terminal/main 10: 68 => ((4 integer))
mem: ((4 integer)): 1312 <= 68
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 68
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 68
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1175 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1175
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1175 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 68
run: clear-screen/init-fake-terminal/main 10: 69 => ((4 integer))
mem: ((4 integer)): 1312 <= 69
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 69
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 69
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1176 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1176
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1176 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 69
run: clear-screen/init-fake-terminal/main 10: 70 => ((4 integer))
mem: ((4 integer)): 1312 <= 70
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 70
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 70
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1177 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1177
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1177 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 70
run: clear-screen/init-fake-terminal/main 10: 71 => ((4 integer))
mem: ((4 integer)): 1312 <= 71
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 71
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 71
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1178 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1178
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1178 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 71
run: clear-screen/init-fake-terminal/main 10: 72 => ((4 integer))
mem: ((4 integer)): 1312 <= 72
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 72
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 72
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1179 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1179
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1179 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 72
run: clear-screen/init-fake-terminal/main 10: 73 => ((4 integer))
mem: ((4 integer)): 1312 <= 73
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 73
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 73
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1180 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1180
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1180 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 73
run: clear-screen/init-fake-terminal/main 10: 74 => ((4 integer))
mem: ((4 integer)): 1312 <= 74
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 74
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 74
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1181 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1181
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1181 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 74
run: clear-screen/init-fake-terminal/main 10: 75 => ((4 integer))
mem: ((4 integer)): 1312 <= 75
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 75
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 75
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1182 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1182
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1182 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 75
run: clear-screen/init-fake-terminal/main 10: 76 => ((4 integer))
mem: ((4 integer)): 1312 <= 76
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 76
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 76
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1183 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1183
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1183 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 76
run: clear-screen/init-fake-terminal/main 10: 77 => ((4 integer))
mem: ((4 integer)): 1312 <= 77
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 77
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 77
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1184 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1184
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1184 <= #\space
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: clear-screen/init-fake-terminal/main
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 77
run: clear-screen/init-fake-terminal/main 10: 78 => ((4 integer))
mem: ((4 integer)): 1312 <= 78
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 78
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 78
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1185 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1185
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1185 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 78
run: clear-screen/init-fake-terminal/main 10: 79 => ((4 integer))
mem: ((4 integer)): 1312 <= 79
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 79
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 79
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1186 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1186
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1186 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 79
run: clear-screen/init-fake-terminal/main 10: 80 => ((4 integer))
mem: ((4 integer)): 1312 <= 80
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 80
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 80
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1187 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1187
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1187 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 80
run: clear-screen/init-fake-terminal/main 10: 81 => ((4 integer))
mem: ((4 integer)): 1312 <= 81
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 81
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 81
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1188 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1188
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1188 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 81
run: clear-screen/init-fake-terminal/main 10: 82 => ((4 integer))
mem: ((4 integer)): 1312 <= 82
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 82
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 82
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1189 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1189
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1189 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 82
run: clear-screen/init-fake-terminal/main 10: 83 => ((4 integer))
mem: ((4 integer)): 1312 <= 83
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 83
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 83
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1190 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1190
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1190 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 83
run: clear-screen/init-fake-terminal/main 10: 84 => ((4 integer))
mem: ((4 integer)): 1312 <= 84
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 84
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 84
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1191 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1191
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1191 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 84
run: clear-screen/init-fake-terminal/main 10: 85 => ((4 integer))
mem: ((4 integer)): 1312 <= 85
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 85
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 85
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1192 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1192
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1192 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 85
run: clear-screen/init-fake-terminal/main 10: 86 => ((4 integer))
mem: ((4 integer)): 1312 <= 86
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 86
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 86
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1193 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1193
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1193 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 86
run: clear-screen/init-fake-terminal/main 10: 87 => ((4 integer))
mem: ((4 integer)): 1312 <= 87
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 87
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 87
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1194 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1194
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1194 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 87
run: clear-screen/init-fake-terminal/main 10: 88 => ((4 integer))
mem: ((4 integer)): 1312 <= 88
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 88
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 88
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1195 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1195
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1195 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 88
run: clear-screen/init-fake-terminal/main 10: 89 => ((4 integer))
mem: ((4 integer)): 1312 <= 89
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 89
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 89
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1196 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1196
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1196 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 89
run: clear-screen/init-fake-terminal/main 10: 90 => ((4 integer))
mem: ((4 integer)): 1312 <= 90
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 90
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 90
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1197 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1197
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1197 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 90
run: clear-screen/init-fake-terminal/main 10: 91 => ((4 integer))
mem: ((4 integer)): 1312 <= 91
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 91
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 91
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1198 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1198
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1198 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 91
run: clear-screen/init-fake-terminal/main 10: 92 => ((4 integer))
mem: ((4 integer)): 1312 <= 92
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 92
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 92
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1199 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1199
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1199 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 92
run: clear-screen/init-fake-terminal/main 10: 93 => ((4 integer))
mem: ((4 integer)): 1312 <= 93
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 93
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 93
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1200 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1200
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1200 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 93
run: clear-screen/init-fake-terminal/main 10: 94 => ((4 integer))
mem: ((4 integer)): 1312 <= 94
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 94
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 94
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1201 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1201
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1201 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 94
run: clear-screen/init-fake-terminal/main 10: 95 => ((4 integer))
mem: ((4 integer)): 1312 <= 95
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 95
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 95
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1202 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1202
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1202 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 95
run: clear-screen/init-fake-terminal/main 10: 96 => ((4 integer))
mem: ((4 integer)): 1312 <= 96
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 96
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 96
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1203 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1203
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1203 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 96
run: clear-screen/init-fake-terminal/main 10: 97 => ((4 integer))
mem: ((4 integer)): 1312 <= 97
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 97
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 97
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1204 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1204
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1204 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 97
run: clear-screen/init-fake-terminal/main 10: 98 => ((4 integer))
mem: ((4 integer)): 1312 <= 98
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 98
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 98
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1205 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1205
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1205 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 98
run: clear-screen/init-fake-terminal/main 10: 99 => ((4 integer))
mem: ((4 integer)): 1312 <= 99
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 99
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 99
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1206 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1206
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1206 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 99
run: clear-screen/init-fake-terminal/main 10: 100 => ((4 integer))
mem: ((4 integer)): 1312 <= 100
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 100
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 100
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1207 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1207
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1207 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 100
run: clear-screen/init-fake-terminal/main 10: 101 => ((4 integer))
mem: ((4 integer)): 1312 <= 101
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 101
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 101
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1208 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1208
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1208 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 101
run: clear-screen/init-fake-terminal/main 10: 102 => ((4 integer))
mem: ((4 integer)): 1312 <= 102
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 102
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 102
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1209 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1209
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1209 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 102
run: clear-screen/init-fake-terminal/main 10: 103 => ((4 integer))
mem: ((4 integer)): 1312 <= 103
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 103
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 103
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1210 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1210
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1210 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 103
run: clear-screen/init-fake-terminal/main 10: 104 => ((4 integer))
mem: ((4 integer)): 1312 <= 104
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 104
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 104
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1211 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1211
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1211 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 104
run: clear-screen/init-fake-terminal/main 10: 105 => ((4 integer))
mem: ((4 integer)): 1312 <= 105
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 105
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 105
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1212 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1212
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1212 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 105
run: clear-screen/init-fake-terminal/main 10: 106 => ((4 integer))
mem: ((4 integer)): 1312 <= 106
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 106
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 106
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1213 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1213
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1213 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 106
run: clear-screen/init-fake-terminal/main 10: 107 => ((4 integer))
mem: ((4 integer)): 1312 <= 107
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 107
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 107
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1214 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1214
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1214 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 107
run: clear-screen/init-fake-terminal/main 10: 108 => ((4 integer))
mem: ((4 integer)): 1312 <= 108
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 108
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 108
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1215 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1215
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1215 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 108
run: clear-screen/init-fake-terminal/main 10: 109 => ((4 integer))
mem: ((4 integer)): 1312 <= 109
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 109
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 109
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1216 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1216
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1216 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 109
run: clear-screen/init-fake-terminal/main 10: 110 => ((4 integer))
mem: ((4 integer)): 1312 <= 110
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 110
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 110
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1217 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1217
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1217 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 110
run: clear-screen/init-fake-terminal/main 10: 111 => ((4 integer))
mem: ((4 integer)): 1312 <= 111
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 111
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 111
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1218 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1218
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1218 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 111
run: clear-screen/init-fake-terminal/main 10: 112 => ((4 integer))
mem: ((4 integer)): 1312 <= 112
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 112
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 112
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1219 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1219
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1219 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 112
run: clear-screen/init-fake-terminal/main 10: 113 => ((4 integer))
mem: ((4 integer)): 1312 <= 113
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 113
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 113
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1220 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1220
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1220 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 113
run: clear-screen/init-fake-terminal/main 10: 114 => ((4 integer))
mem: ((4 integer)): 1312 <= 114
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 114
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 114
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1221 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1221
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1221 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 114
run: clear-screen/init-fake-terminal/main 10: 115 => ((4 integer))
mem: ((4 integer)): 1312 <= 115
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 115
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 115
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1222 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1222
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1222 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 115
run: clear-screen/init-fake-terminal/main 10: 116 => ((4 integer))
mem: ((4 integer)): 1312 <= 116
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 116
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 116
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1223 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1223
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1223 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 116
run: clear-screen/init-fake-terminal/main 10: 117 => ((4 integer))
mem: ((4 integer)): 1312 <= 117
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 117
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 117
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1224 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1224
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1224 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 117
run: clear-screen/init-fake-terminal/main 10: 118 => ((4 integer))
mem: ((4 integer)): 1312 <= 118
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 118
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 118
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1225 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1225
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1225 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 118
run: clear-screen/init-fake-terminal/main 10: 119 => ((4 integer))
mem: ((4 integer)): 1312 <= 119
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 119
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 119
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1226 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1226
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1226 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 119
run: clear-screen/init-fake-terminal/main 10: 120 => ((4 integer))
mem: ((4 integer)): 1312 <= 120
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 120
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 120
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1227 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1227
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1227 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 120
run: clear-screen/init-fake-terminal/main 10: 121 => ((4 integer))
mem: ((4 integer)): 1312 <= 121
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 121
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 121
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1228 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1228
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1228 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 121
run: clear-screen/init-fake-terminal/main 10: 122 => ((4 integer))
mem: ((4 integer)): 1312 <= 122
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 122
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 122
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1229 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1229
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1229 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 122
run: clear-screen/init-fake-terminal/main 10: 123 => ((4 integer))
mem: ((4 integer)): 1312 <= 123
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 123
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 123
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1230 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1230
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1230 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 123
run: clear-screen/init-fake-terminal/main 10: 124 => ((4 integer))
mem: ((4 integer)): 1312 <= 124
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 124
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 124
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1231 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1231
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1231 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 124
run: clear-screen/init-fake-terminal/main 10: 125 => ((4 integer))
mem: ((4 integer)): 1312 <= 125
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 125
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 125
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1232 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1232
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1232 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 125
run: clear-screen/init-fake-terminal/main 10: 126 => ((4 integer))
mem: ((4 integer)): 1312 <= 126
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 126
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 126
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1233 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1233
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1233 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 126
run: clear-screen/init-fake-terminal/main 10: 127 => ((4 integer))
mem: ((4 integer)): 1312 <= 127
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 127
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 127
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1234 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1234
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1234 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 127
run: clear-screen/init-fake-terminal/main 10: 128 => ((4 integer))
mem: ((4 integer)): 1312 <= 128
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 128
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 128
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1235 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1235
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1235 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 128
run: clear-screen/init-fake-terminal/main 10: 129 => ((4 integer))
mem: ((4 integer)): 1312 <= 129
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 129
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 129
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1236 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1236
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1236 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 129
run: clear-screen/init-fake-terminal/main 10: 130 => ((4 integer))
mem: ((4 integer)): 1312 <= 130
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 130
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 130
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1237 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1237
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1237 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 130
run: clear-screen/init-fake-terminal/main 10: 131 => ((4 integer))
mem: ((4 integer)): 1312 <= 131
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 131
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 131
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1238 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1238
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1238 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 131
run: clear-screen/init-fake-terminal/main 10: 132 => ((4 integer))
mem: ((4 integer)): 1312 <= 132
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 132
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 132
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1239 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1239
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1239 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 132
run: clear-screen/init-fake-terminal/main 10: 133 => ((4 integer))
mem: ((4 integer)): 1312 <= 133
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 133
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 133
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1240 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1240
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1240 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 133
run: clear-screen/init-fake-terminal/main 10: 134 => ((4 integer))
mem: ((4 integer)): 1312 <= 134
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 134
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 134
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1241 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1241
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1241 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 134
run: clear-screen/init-fake-terminal/main 10: 135 => ((4 integer))
mem: ((4 integer)): 1312 <= 135
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 135
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 135
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1242 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1242
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1242 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 135
run: clear-screen/init-fake-terminal/main 10: 136 => ((4 integer))
mem: ((4 integer)): 1312 <= 136
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 136
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 136
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1243 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1243
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1243 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 136
run: clear-screen/init-fake-terminal/main 10: 137 => ((4 integer))
mem: ((4 integer)): 1312 <= 137
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 137
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 137
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1244 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1244
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1244 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 137
run: clear-screen/init-fake-terminal/main 10: 138 => ((4 integer))
mem: ((4 integer)): 1312 <= 138
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 138
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 138
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1245 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1245
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1245 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 138
run: clear-screen/init-fake-terminal/main 10: 139 => ((4 integer))
mem: ((4 integer)): 1312 <= 139
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 139
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 139
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1246 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1246
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1246 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 139
run: clear-screen/init-fake-terminal/main 10: 140 => ((4 integer))
mem: ((4 integer)): 1312 <= 140
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 140
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 140
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1247 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1247
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1247 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 140
run: clear-screen/init-fake-terminal/main 10: 141 => ((4 integer))
mem: ((4 integer)): 1312 <= 141
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 141
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 141
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1248 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1248
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1248 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 141
run: clear-screen/init-fake-terminal/main 10: 142 => ((4 integer))
mem: ((4 integer)): 1312 <= 142
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 142
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 142
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1249 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1249
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1249 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 142
run: clear-screen/init-fake-terminal/main 10: 143 => ((4 integer))
mem: ((4 integer)): 1312 <= 143
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 143
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 143
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1250 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1250
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1250 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 143
run: clear-screen/init-fake-terminal/main 10: 144 => ((4 integer))
mem: ((4 integer)): 1312 <= 144
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 144
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 144
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1251 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1251
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1251 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 144
run: clear-screen/init-fake-terminal/main 10: 145 => ((4 integer))
mem: ((4 integer)): 1312 <= 145
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 145
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 145
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1252 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1252
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1252 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 145
run: clear-screen/init-fake-terminal/main 10: 146 => ((4 integer))
mem: ((4 integer)): 1312 <= 146
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 146
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 146
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1253 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1253
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1253 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 146
run: clear-screen/init-fake-terminal/main 10: 147 => ((4 integer))
mem: ((4 integer)): 1312 <= 147
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 147
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 147
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1254 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1254
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1254 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 147
run: clear-screen/init-fake-terminal/main 10: 148 => ((4 integer))
mem: ((4 integer)): 1312 <= 148
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 148
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 148
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1255 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1255
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1255 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 148
run: clear-screen/init-fake-terminal/main 10: 149 => ((4 integer))
mem: ((4 integer)): 1312 <= 149
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 149
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 149
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1256 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1256
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1256 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 149
run: clear-screen/init-fake-terminal/main 10: 150 => ((4 integer))
mem: ((4 integer)): 1312 <= 150
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 150
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 150
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1257 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1257
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1257 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 150
run: clear-screen/init-fake-terminal/main 10: 151 => ((4 integer))
mem: ((4 integer)): 1312 <= 151
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 151
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 151
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1258 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1258
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1258 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 151
run: clear-screen/init-fake-terminal/main 10: 152 => ((4 integer))
mem: ((4 integer)): 1312 <= 152
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 152
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 152
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1259 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1259
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1259 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 152
run: clear-screen/init-fake-terminal/main 10: 153 => ((4 integer))
mem: ((4 integer)): 1312 <= 153
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 153
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 153
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1260 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1260
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1260 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 153
run: clear-screen/init-fake-terminal/main 10: 154 => ((4 integer))
mem: ((4 integer)): 1312 <= 154
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 154
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 154
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1261 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1261
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1261 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 154
run: clear-screen/init-fake-terminal/main 10: 155 => ((4 integer))
mem: ((4 integer)): 1312 <= 155
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 155
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 155
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1262 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1262
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1262 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 155
run: clear-screen/init-fake-terminal/main 10: 156 => ((4 integer))
mem: ((4 integer)): 1312 <= 156
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 156
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 156
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1263 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1263
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1263 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 156
run: clear-screen/init-fake-terminal/main 10: 157 => ((4 integer))
mem: ((4 integer)): 1312 <= 157
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 157
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 157
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1264 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1264
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1264 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 157
run: clear-screen/init-fake-terminal/main 10: 158 => ((4 integer))
mem: ((4 integer)): 1312 <= 158
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 158
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 158
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1265 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1265
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1265 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 158
run: clear-screen/init-fake-terminal/main 10: 159 => ((4 integer))
mem: ((4 integer)): 1312 <= 159
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 159
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 159
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1266 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1266
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1266 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 159
run: clear-screen/init-fake-terminal/main 10: 160 => ((4 integer))
mem: ((4 integer)): 1312 <= 160
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 160
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 160
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1267 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1267
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1267 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 160
run: clear-screen/init-fake-terminal/main 10: 161 => ((4 integer))
mem: ((4 integer)): 1312 <= 161
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: clear-screen/init-fake-terminal/main
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 161
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 161
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1268 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1268
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1268 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 161
run: clear-screen/init-fake-terminal/main 10: 162 => ((4 integer))
mem: ((4 integer)): 1312 <= 162
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 162
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 162
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1269 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1269
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1269 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 162
run: clear-screen/init-fake-terminal/main 10: 163 => ((4 integer))
mem: ((4 integer)): 1312 <= 163
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 163
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 163
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1270 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1270
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1270 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 163
run: clear-screen/init-fake-terminal/main 10: 164 => ((4 integer))
mem: ((4 integer)): 1312 <= 164
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 164
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 164
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1271 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1271
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1271 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 164
run: clear-screen/init-fake-terminal/main 10: 165 => ((4 integer))
mem: ((4 integer)): 1312 <= 165
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 165
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 165
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1272 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1272
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1272 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 165
run: clear-screen/init-fake-terminal/main 10: 166 => ((4 integer))
mem: ((4 integer)): 1312 <= 166
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 166
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 166
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1273 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1273
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1273 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 166
run: clear-screen/init-fake-terminal/main 10: 167 => ((4 integer))
mem: ((4 integer)): 1312 <= 167
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 167
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 167
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1274 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1274
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1274 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 167
run: clear-screen/init-fake-terminal/main 10: 168 => ((4 integer))
mem: ((4 integer)): 1312 <= 168
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 168
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 168
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1275 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1275
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1275 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 168
run: clear-screen/init-fake-terminal/main 10: 169 => ((4 integer))
mem: ((4 integer)): 1312 <= 169
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 169
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 169
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1276 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1276
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1276 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 169
run: clear-screen/init-fake-terminal/main 10: 170 => ((4 integer))
mem: ((4 integer)): 1312 <= 170
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 170
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 170
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1277 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1277
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1277 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 170
run: clear-screen/init-fake-terminal/main 10: 171 => ((4 integer))
mem: ((4 integer)): 1312 <= 171
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 171
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 171
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1278 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1278
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1278 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 171
run: clear-screen/init-fake-terminal/main 10: 172 => ((4 integer))
mem: ((4 integer)): 1312 <= 172
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 172
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 172
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1279 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1279
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1279 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 172
run: clear-screen/init-fake-terminal/main 10: 173 => ((4 integer))
mem: ((4 integer)): 1312 <= 173
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 173
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 173
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1280 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1280
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1280 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 173
run: clear-screen/init-fake-terminal/main 10: 174 => ((4 integer))
mem: ((4 integer)): 1312 <= 174
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 174
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 174
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1281 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1281
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1281 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 174
run: clear-screen/init-fake-terminal/main 10: 175 => ((4 integer))
mem: ((4 integer)): 1312 <= 175
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 175
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 175
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1282 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1282
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1282 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 175
run: clear-screen/init-fake-terminal/main 10: 176 => ((4 integer))
mem: ((4 integer)): 1312 <= 176
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 176
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 176
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1283 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1283
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1283 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 176
run: clear-screen/init-fake-terminal/main 10: 177 => ((4 integer))
mem: ((4 integer)): 1312 <= 177
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 177
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 177
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1284 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1284
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1284 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 177
run: clear-screen/init-fake-terminal/main 10: 178 => ((4 integer))
mem: ((4 integer)): 1312 <= 178
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 178
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 178
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1285 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1285
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1285 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 178
run: clear-screen/init-fake-terminal/main 10: 179 => ((4 integer))
mem: ((4 integer)): 1312 <= 179
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 179
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 179
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1286 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1286
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1286 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 179
run: clear-screen/init-fake-terminal/main 10: 180 => ((4 integer))
mem: ((4 integer)): 1312 <= 180
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 180
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 180
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1287 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1287
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1287 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 180
run: clear-screen/init-fake-terminal/main 10: 181 => ((4 integer))
mem: ((4 integer)): 1312 <= 181
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 181
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 181
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1288 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1288
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1288 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 181
run: clear-screen/init-fake-terminal/main 10: 182 => ((4 integer))
mem: ((4 integer)): 1312 <= 182
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 182
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 182
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1289 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1289
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1289 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 182
run: clear-screen/init-fake-terminal/main 10: 183 => ((4 integer))
mem: ((4 integer)): 1312 <= 183
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 183
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 183
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1290 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1290
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1290 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 183
run: clear-screen/init-fake-terminal/main 10: 184 => ((4 integer))
mem: ((4 integer)): 1312 <= 184
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 184
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 184
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1291 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1291
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1291 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 184
run: clear-screen/init-fake-terminal/main 10: 185 => ((4 integer))
mem: ((4 integer)): 1312 <= 185
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 185
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 185
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1292 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1292
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1292 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 185
run: clear-screen/init-fake-terminal/main 10: 186 => ((4 integer))
mem: ((4 integer)): 1312 <= 186
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 186
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 186
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1293 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1293
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1293 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 186
run: clear-screen/init-fake-terminal/main 10: 187 => ((4 integer))
mem: ((4 integer)): 1312 <= 187
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 187
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 187
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1294 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1294
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1294 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 187
run: clear-screen/init-fake-terminal/main 10: 188 => ((4 integer))
mem: ((4 integer)): 1312 <= 188
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 188
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 188
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1295 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1295
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1295 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 188
run: clear-screen/init-fake-terminal/main 10: 189 => ((4 integer))
mem: ((4 integer)): 1312 <= 189
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 189
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 189
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1296 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1296
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1296 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 189
run: clear-screen/init-fake-terminal/main 10: 190 => ((4 integer))
mem: ((4 integer)): 1312 <= 190
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 190
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 190
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1297 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1297
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1297 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 190
run: clear-screen/init-fake-terminal/main 10: 191 => ((4 integer))
mem: ((4 integer)): 1312 <= 191
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 191
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 191
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1298 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1298
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1298 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 191
run: clear-screen/init-fake-terminal/main 10: 192 => ((4 integer))
mem: ((4 integer)): 1312 <= 192
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 192
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 192
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1299 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1299
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1299 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 192
run: clear-screen/init-fake-terminal/main 10: 193 => ((4 integer))
mem: ((4 integer)): 1312 <= 193
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 193
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 193
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1300 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1300
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1300 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 193
run: clear-screen/init-fake-terminal/main 10: 194 => ((4 integer))
mem: ((4 integer)): 1312 <= 194
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 194
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 194
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1301 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1301
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1301 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 194
run: clear-screen/init-fake-terminal/main 10: 195 => ((4 integer))
mem: ((4 integer)): 1312 <= 195
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 195
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 195
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1302 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1302
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1302 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 195
run: clear-screen/init-fake-terminal/main 10: 196 => ((4 integer))
mem: ((4 integer)): 1312 <= 196
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 196
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 196
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1303 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1303
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1303 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 196
run: clear-screen/init-fake-terminal/main 10: 197 => ((4 integer))
mem: ((4 integer)): 1312 <= 197
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 197
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 197
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1304 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1304
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1304 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 197
run: clear-screen/init-fake-terminal/main 10: 198 => ((4 integer))
mem: ((4 integer)): 1312 <= 198
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 198
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 198
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1305 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1305
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1305 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 198
run: clear-screen/init-fake-terminal/main 10: 199 => ((4 integer))
mem: ((4 integer)): 1312 <= 199
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 199
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: nil => ((5 boolean))
mem: ((5 boolean)): 1313 <= nil
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: clear-screen/init-fake-terminal/main 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 199
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: clear-screen/init-fake-terminal/main 8: 1306 => ((1 byte-address))
mem: ((1 byte-address)): 1309 <= 1306
run: clear-screen/init-fake-terminal/main 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: clear-screen/init-fake-terminal/main 9: #\space => ((1 byte-address) (deref))
mem: ((1 byte-address) (deref)): 1306 <= #\space
run: clear-screen/init-fake-terminal/main 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 199
run: clear-screen/init-fake-terminal/main 10: 200 => ((4 integer))
mem: ((4 integer)): 1312 <= 200
run: clear-screen/init-fake-terminal/main 11: (((jump)) ((-6 offset)))
run: clear-screen/init-fake-terminal/main 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 200
mem: ((3 integer)) => 200
run: clear-screen/init-fake-terminal/main 6: t => ((5 boolean))
mem: ((5 boolean)): 1313 <= t
run: clear-screen/init-fake-terminal/main 7: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: clear-screen/init-fake-terminal/main 12: (((reply)))
run: init-fake-terminal/main 14: (((reply)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: main 2: 1101 => ((2 terminal-address))
mem: ((2 terminal-address)): 1003 <= 1101
run: main 3: (((3 list-address)) <- ((init-list)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((Q literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((q literal)) ((K literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((k literal)) ((B literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((b literal)) ((N literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((n literal)) ((R literal)) ((P literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((_ literal)) ((p literal)) ((r literal)))
run: init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-list/main 0: 1338 => ((default-space space-address))
run: init-list/main 1: (((1 list-address)) <- ((new)) ((list literal)))
run: init-list/main 1: 1369 => ((1 list-address))
mem: ((1 list-address)): 1340 <= 1369
run: init-list/main 2: (((2 list-address)) <- ((copy)) ((1 list-address)))
mem: ((1 list-address)) => 1369
run: init-list/main 2: 1369 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 1369
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 0 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\R => ((3 integer))
mem: ((3 integer)): 1342 <= #\R
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1371 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 1371
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1372 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1371 <= 1372
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1369
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1375 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1369)
run: list-next/init-list/main 1: 1369 => ((1 list-address))
mem: ((1 list-address)): 1377 <= 1369
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1371 list-address) (raw)) => 1372
run: list-next/init-list/main 2: 1372 => ((2 list-address))
mem: ((2 list-address)): 1378 <= 1372
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1372
run: init-list/main 7: 1372 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 1372
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1372
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1406 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: list-value-address/init-list/main 1: 1372 => ((1 list-address))
mem: ((1 list-address)): 1408 <= 1372
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1372 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1409 <= 1372
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1372
run: init-list/main 8: 1372 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 1372
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => R
run: init-list/main 9: #(tagged record (integer #\R)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1372 <= integer
mem: ((6 tagged-value-address) (deref)): 1373 <= #\R
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 1 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1342 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1374 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 1374
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1437 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1374 <= 1437
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1372
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1440 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: list-next/init-list/main 1: 1372 => ((1 list-address))
mem: ((1 list-address)): 1442 <= 1372
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1374 list-address) (raw)) => 1437
run: list-next/init-list/main 2: 1437 => ((2 list-address))
mem: ((2 list-address)): 1443 <= 1437
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1437
run: init-list/main 7: 1437 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 1437
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1437
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1471 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1437)
run: list-value-address/init-list/main 1: 1437 => ((1 list-address))
mem: ((1 list-address)): 1473 <= 1437
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1437 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1474 <= 1437
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1437
run: init-list/main 8: 1437 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 1437
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1437 <= integer
mem: ((6 tagged-value-address) (deref)): 1438 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 2 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1439 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 1439
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1502 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1439 <= 1502
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1437
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1505 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1437)
run: list-next/init-list/main 1: 1437 => ((1 list-address))
mem: ((1 list-address)): 1507 <= 1437
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1439 list-address) (raw)) => 1502
run: list-next/init-list/main 2: 1502 => ((2 list-address))
mem: ((2 list-address)): 1508 <= 1502
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1502
run: init-list/main 7: 1502 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 1502
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1502
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1536 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1502)
run: list-value-address/init-list/main 1: 1502 => ((1 list-address))
mem: ((1 list-address)): 1538 <= 1502
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1502 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1539 <= 1502
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1502
run: init-list/main 8: 1502 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 1502
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1502 <= integer
mem: ((6 tagged-value-address) (deref)): 1503 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 3 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1504 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 1504
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1567 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1504 <= 1567
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1502
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1570 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1502)
run: list-next/init-list/main 1: 1502 => ((1 list-address))
mem: ((1 list-address)): 1572 <= 1502
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1504 list-address) (raw)) => 1567
run: list-next/init-list/main 2: 1567 => ((2 list-address))
mem: ((2 list-address)): 1573 <= 1567
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1567
run: init-list/main 7: 1567 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 1567
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1567
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1601 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1567)
run: list-value-address/init-list/main 1: 1567 => ((1 list-address))
mem: ((1 list-address)): 1603 <= 1567
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1567 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1604 <= 1567
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1567
run: init-list/main 8: 1567 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 1567
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1567 <= integer
mem: ((6 tagged-value-address) (deref)): 1568 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 4 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1569 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 1569
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1632 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1569 <= 1632
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1567
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1635 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1567)
run: list-next/init-list/main 1: 1567 => ((1 list-address))
mem: ((1 list-address)): 1637 <= 1567
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1569 list-address) (raw)) => 1632
run: list-next/init-list/main 2: 1632 => ((2 list-address))
mem: ((2 list-address)): 1638 <= 1632
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1632
run: init-list/main 7: 1632 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 1632
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1632
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1666 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1632)
run: list-value-address/init-list/main 1: 1632 => ((1 list-address))
mem: ((1 list-address)): 1668 <= 1632
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1632 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1669 <= 1632
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1632
run: init-list/main 8: 1632 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 1632
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1632 <= integer
mem: ((6 tagged-value-address) (deref)): 1633 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 5 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1634 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 1634
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1697 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1634 <= 1697
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1632
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1700 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1632)
run: list-next/init-list/main 1: 1632 => ((1 list-address))
mem: ((1 list-address)): 1702 <= 1632
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1634 list-address) (raw)) => 1697
run: list-next/init-list/main 2: 1697 => ((2 list-address))
mem: ((2 list-address)): 1703 <= 1697
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1697
run: init-list/main 7: 1697 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 1697
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1697
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1731 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1697)
run: list-value-address/init-list/main 1: 1697 => ((1 list-address))
mem: ((1 list-address)): 1733 <= 1697
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1697 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1734 <= 1697
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1697
run: init-list/main 8: 1697 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 1697
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1697 <= integer
mem: ((6 tagged-value-address) (deref)): 1698 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 6 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1342 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1699 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 1699
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1762 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1699 <= 1762
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1697
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1765 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1697)
run: list-next/init-list/main 1: 1697 => ((1 list-address))
mem: ((1 list-address)): 1767 <= 1697
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1699 list-address) (raw)) => 1762
run: list-next/init-list/main 2: 1762 => ((2 list-address))
mem: ((2 list-address)): 1768 <= 1762
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1762
run: init-list/main 7: 1762 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 1762
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1762
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1796 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1762)
run: list-value-address/init-list/main 1: 1762 => ((1 list-address))
mem: ((1 list-address)): 1798 <= 1762
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1762 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1799 <= 1762
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1762
run: init-list/main 8: 1762 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 1762
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1762 <= integer
mem: ((6 tagged-value-address) (deref)): 1763 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 7 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\r => ((3 integer))
mem: ((3 integer)): 1342 <= #\r
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1764 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 1764
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1827 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1764 <= 1827
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1762
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1830 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1762)
run: list-next/init-list/main 1: 1762 => ((1 list-address))
mem: ((1 list-address)): 1832 <= 1762
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1764 list-address) (raw)) => 1827
run: list-next/init-list/main 2: 1827 => ((2 list-address))
mem: ((2 list-address)): 1833 <= 1827
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1827
run: init-list/main 7: 1827 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 1827
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1827
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1861 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1827)
run: list-value-address/init-list/main 1: 1827 => ((1 list-address))
mem: ((1 list-address)): 1863 <= 1827
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1827 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1864 <= 1827
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1827
run: init-list/main 8: 1827 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 1827
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => r
run: init-list/main 9: #(tagged record (integer #\r)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1827 <= integer
mem: ((6 tagged-value-address) (deref)): 1828 <= #\r
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 8 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\N => ((3 integer))
mem: ((3 integer)): 1342 <= #\N
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1829 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 1829
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1892 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1829 <= 1892
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1827
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1895 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1827)
run: list-next/init-list/main 1: 1827 => ((1 list-address))
mem: ((1 list-address)): 1897 <= 1827
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1829 list-address) (raw)) => 1892
run: list-next/init-list/main 2: 1892 => ((2 list-address))
mem: ((2 list-address)): 1898 <= 1892
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1892
run: init-list/main 7: 1892 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 1892
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1892
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1926 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: list-value-address/init-list/main 1: 1892 => ((1 list-address))
mem: ((1 list-address)): 1928 <= 1892
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1892 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1929 <= 1892
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1892
run: init-list/main 8: 1892 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 1892
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => N
run: init-list/main 9: #(tagged record (integer #\N)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1892 <= integer
mem: ((6 tagged-value-address) (deref)): 1893 <= #\N
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 9 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1342 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1894 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 1894
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 1957 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1894 <= 1957
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1892
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 1960 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: list-next/init-list/main 1: 1892 => ((1 list-address))
mem: ((1 list-address)): 1962 <= 1892
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1894 list-address) (raw)) => 1957
run: list-next/init-list/main 2: 1957 => ((2 list-address))
mem: ((2 list-address)): 1963 <= 1957
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1957
run: init-list/main 7: 1957 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 1957
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 1957
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 1991 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1957)
run: list-value-address/init-list/main 1: 1957 => ((1 list-address))
mem: ((1 list-address)): 1993 <= 1957
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 1957 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 1994 <= 1957
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1957
run: init-list/main 8: 1957 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 1957
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 1957 <= integer
mem: ((6 tagged-value-address) (deref)): 1958 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 10 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 1959 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 1959
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2022 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 1959 <= 2022
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 1957
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2025 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1957)
run: list-next/init-list/main 1: 1957 => ((1 list-address))
mem: ((1 list-address)): 2027 <= 1957
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1959 list-address) (raw)) => 2022
run: list-next/init-list/main 2: 2022 => ((2 list-address))
mem: ((2 list-address)): 2028 <= 2022
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2022
run: init-list/main 7: 2022 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2022
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2022
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2056 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2022)
run: list-value-address/init-list/main 1: 2022 => ((1 list-address))
mem: ((1 list-address)): 2058 <= 2022
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2022 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2059 <= 2022
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2022
run: init-list/main 8: 2022 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2022
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2022 <= integer
mem: ((6 tagged-value-address) (deref)): 2023 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 11 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2024 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2024
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2087 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2024 <= 2087
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2022
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2090 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2022)
run: list-next/init-list/main 1: 2022 => ((1 list-address))
mem: ((1 list-address)): 2092 <= 2022
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2024 list-address) (raw)) => 2087
run: list-next/init-list/main 2: 2087 => ((2 list-address))
mem: ((2 list-address)): 2093 <= 2087
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2087
run: init-list/main 7: 2087 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2087
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2087
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2121 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2087)
run: list-value-address/init-list/main 1: 2087 => ((1 list-address))
mem: ((1 list-address)): 2123 <= 2087
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2087 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2124 <= 2087
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2087
run: init-list/main 8: 2087 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2087
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2087 <= integer
mem: ((6 tagged-value-address) (deref)): 2088 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 12 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2089 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2089
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2152 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2089 <= 2152
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2087
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2155 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2087)
run: list-next/init-list/main 1: 2087 => ((1 list-address))
mem: ((1 list-address)): 2157 <= 2087
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2089 list-address) (raw)) => 2152
run: list-next/init-list/main 2: 2152 => ((2 list-address))
mem: ((2 list-address)): 2158 <= 2152
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2152
run: init-list/main 7: 2152 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2152
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2152
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2186 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2152)
run: list-value-address/init-list/main 1: 2152 => ((1 list-address))
mem: ((1 list-address)): 2188 <= 2152
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2152 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2189 <= 2152
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2152
run: init-list/main 8: 2152 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2152
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2152 <= integer
mem: ((6 tagged-value-address) (deref)): 2153 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 13 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2154 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2154
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2217 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2154 <= 2217
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2152
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2220 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2152)
run: list-next/init-list/main 1: 2152 => ((1 list-address))
mem: ((1 list-address)): 2222 <= 2152
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2154 list-address) (raw)) => 2217
run: list-next/init-list/main 2: 2217 => ((2 list-address))
mem: ((2 list-address)): 2223 <= 2217
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2217
run: init-list/main 7: 2217 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2217
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2217
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2251 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2217)
run: list-value-address/init-list/main 1: 2217 => ((1 list-address))
mem: ((1 list-address)): 2253 <= 2217
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2217 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2254 <= 2217
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2217
run: init-list/main 8: 2217 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2217
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2217 <= integer
mem: ((6 tagged-value-address) (deref)): 2218 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 14 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1342 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2219 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2219
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2282 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2219 <= 2282
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2217
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2285 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2217)
run: list-next/init-list/main 1: 2217 => ((1 list-address))
mem: ((1 list-address)): 2287 <= 2217
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2219 list-address) (raw)) => 2282
run: list-next/init-list/main 2: 2282 => ((2 list-address))
mem: ((2 list-address)): 2288 <= 2282
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2282
run: init-list/main 7: 2282 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2282
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2282
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2316 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2282)
run: list-value-address/init-list/main 1: 2282 => ((1 list-address))
mem: ((1 list-address)): 2318 <= 2282
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2282 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2319 <= 2282
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2282
run: init-list/main 8: 2282 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2282
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2282 <= integer
mem: ((6 tagged-value-address) (deref)): 2283 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 15 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\n => ((3 integer))
mem: ((3 integer)): 1342 <= #\n
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2284 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2284
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2347 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2284 <= 2347
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2282
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2350 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2282)
run: list-next/init-list/main 1: 2282 => ((1 list-address))
mem: ((1 list-address)): 2352 <= 2282
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2284 list-address) (raw)) => 2347
run: list-next/init-list/main 2: 2347 => ((2 list-address))
mem: ((2 list-address)): 2353 <= 2347
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2347
run: init-list/main 7: 2347 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2347
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2347
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2381 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2347)
run: list-value-address/init-list/main 1: 2347 => ((1 list-address))
mem: ((1 list-address)): 2383 <= 2347
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2347 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2384 <= 2347
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2347
run: init-list/main 8: 2347 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2347
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => n
run: init-list/main 9: #(tagged record (integer #\n)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2347 <= integer
mem: ((6 tagged-value-address) (deref)): 2348 <= #\n
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 16 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\B => ((3 integer))
mem: ((3 integer)): 1342 <= #\B
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
schedule: scheduling init-list/main for further processing
schedule: init-list/main
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2349 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2349
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2412 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2349 <= 2412
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2347
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2415 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2347)
run: list-next/init-list/main 1: 2347 => ((1 list-address))
mem: ((1 list-address)): 2417 <= 2347
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2349 list-address) (raw)) => 2412
run: list-next/init-list/main 2: 2412 => ((2 list-address))
mem: ((2 list-address)): 2418 <= 2412
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2412
run: init-list/main 7: 2412 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2412
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2412
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2446 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: list-value-address/init-list/main 1: 2412 => ((1 list-address))
mem: ((1 list-address)): 2448 <= 2412
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2412 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2449 <= 2412
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2412
run: init-list/main 8: 2412 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2412
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => B
run: init-list/main 9: #(tagged record (integer #\B)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2412 <= integer
mem: ((6 tagged-value-address) (deref)): 2413 <= #\B
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 17 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1342 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2414 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2414
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2477 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2414 <= 2477
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2412
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2480 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: list-next/init-list/main 1: 2412 => ((1 list-address))
mem: ((1 list-address)): 2482 <= 2412
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2414 list-address) (raw)) => 2477
run: list-next/init-list/main 2: 2477 => ((2 list-address))
mem: ((2 list-address)): 2483 <= 2477
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2477
run: init-list/main 7: 2477 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2477
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2477
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2511 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2477)
run: list-value-address/init-list/main 1: 2477 => ((1 list-address))
mem: ((1 list-address)): 2513 <= 2477
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2477 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2514 <= 2477
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2477
run: init-list/main 8: 2477 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2477
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2477 <= integer
mem: ((6 tagged-value-address) (deref)): 2478 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 18 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2479 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2479
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2542 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2479 <= 2542
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2477
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2545 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2477)
run: list-next/init-list/main 1: 2477 => ((1 list-address))
mem: ((1 list-address)): 2547 <= 2477
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2479 list-address) (raw)) => 2542
run: list-next/init-list/main 2: 2542 => ((2 list-address))
mem: ((2 list-address)): 2548 <= 2542
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2542
run: init-list/main 7: 2542 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2542
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2542
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2576 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2542)
run: list-value-address/init-list/main 1: 2542 => ((1 list-address))
mem: ((1 list-address)): 2578 <= 2542
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2542 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2579 <= 2542
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2542
run: init-list/main 8: 2542 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2542
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2542 <= integer
mem: ((6 tagged-value-address) (deref)): 2543 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 19 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2544 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2544
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2607 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2544 <= 2607
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2542
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2610 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2542)
run: list-next/init-list/main 1: 2542 => ((1 list-address))
mem: ((1 list-address)): 2612 <= 2542
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2544 list-address) (raw)) => 2607
run: list-next/init-list/main 2: 2607 => ((2 list-address))
mem: ((2 list-address)): 2613 <= 2607
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2607
run: init-list/main 7: 2607 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2607
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2607
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2641 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2607)
run: list-value-address/init-list/main 1: 2607 => ((1 list-address))
mem: ((1 list-address)): 2643 <= 2607
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2607 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2644 <= 2607
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2607
run: init-list/main 8: 2607 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2607
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2607 <= integer
mem: ((6 tagged-value-address) (deref)): 2608 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 20 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2609 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2609
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2672 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2609 <= 2672
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2607
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2675 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2607)
run: list-next/init-list/main 1: 2607 => ((1 list-address))
mem: ((1 list-address)): 2677 <= 2607
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2609 list-address) (raw)) => 2672
run: list-next/init-list/main 2: 2672 => ((2 list-address))
mem: ((2 list-address)): 2678 <= 2672
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2672
run: init-list/main 7: 2672 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2672
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2672
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2706 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2672)
run: list-value-address/init-list/main 1: 2672 => ((1 list-address))
mem: ((1 list-address)): 2708 <= 2672
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2672 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2709 <= 2672
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2672
run: init-list/main 8: 2672 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2672
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2672 <= integer
mem: ((6 tagged-value-address) (deref)): 2673 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 21 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2674 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2674
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2737 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2674 <= 2737
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2672
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2740 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2672)
run: list-next/init-list/main 1: 2672 => ((1 list-address))
mem: ((1 list-address)): 2742 <= 2672
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2674 list-address) (raw)) => 2737
run: list-next/init-list/main 2: 2737 => ((2 list-address))
mem: ((2 list-address)): 2743 <= 2737
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2737
run: init-list/main 7: 2737 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2737
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2737
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2771 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2737)
run: list-value-address/init-list/main 1: 2737 => ((1 list-address))
mem: ((1 list-address)): 2773 <= 2737
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2737 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2774 <= 2737
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2737
run: init-list/main 8: 2737 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2737
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2737 <= integer
mem: ((6 tagged-value-address) (deref)): 2738 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 22 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1342 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2739 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2739
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2802 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2739 <= 2802
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2737
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2805 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2737)
run: list-next/init-list/main 1: 2737 => ((1 list-address))
mem: ((1 list-address)): 2807 <= 2737
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2739 list-address) (raw)) => 2802
run: list-next/init-list/main 2: 2802 => ((2 list-address))
mem: ((2 list-address)): 2808 <= 2802
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2802
run: init-list/main 7: 2802 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2802
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2802
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2836 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2802)
run: list-value-address/init-list/main 1: 2802 => ((1 list-address))
mem: ((1 list-address)): 2838 <= 2802
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2802 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2839 <= 2802
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2802
run: init-list/main 8: 2802 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2802
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2802 <= integer
mem: ((6 tagged-value-address) (deref)): 2803 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 23 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\b => ((3 integer))
mem: ((3 integer)): 1342 <= #\b
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2804 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2804
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2867 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2804 <= 2867
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2802
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2870 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2802)
run: list-next/init-list/main 1: 2802 => ((1 list-address))
mem: ((1 list-address)): 2872 <= 2802
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2804 list-address) (raw)) => 2867
run: list-next/init-list/main 2: 2867 => ((2 list-address))
mem: ((2 list-address)): 2873 <= 2867
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2867
run: init-list/main 7: 2867 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2867
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2867
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2901 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2867)
run: list-value-address/init-list/main 1: 2867 => ((1 list-address))
mem: ((1 list-address)): 2903 <= 2867
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2867 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2904 <= 2867
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2867
run: init-list/main 8: 2867 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2867
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => b
run: init-list/main 9: #(tagged record (integer #\b)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2867 <= integer
mem: ((6 tagged-value-address) (deref)): 2868 <= #\b
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 24 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\Q => ((3 integer))
mem: ((3 integer)): 1342 <= #\Q
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2869 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2869
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2932 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2869 <= 2932
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2867
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 2935 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2867)
run: list-next/init-list/main 1: 2867 => ((1 list-address))
mem: ((1 list-address)): 2937 <= 2867
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2869 list-address) (raw)) => 2932
run: list-next/init-list/main 2: 2932 => ((2 list-address))
mem: ((2 list-address)): 2938 <= 2932
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2932
run: init-list/main 7: 2932 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2932
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2932
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 2966 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: list-value-address/init-list/main 1: 2932 => ((1 list-address))
mem: ((1 list-address)): 2968 <= 2932
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2932 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 2969 <= 2932
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2932
run: init-list/main 8: 2932 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2932
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => Q
run: init-list/main 9: #(tagged record (integer #\Q)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2932 <= integer
mem: ((6 tagged-value-address) (deref)): 2933 <= #\Q
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 25 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1342 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2934 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2934
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 2997 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2934 <= 2997
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2932
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3000 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: list-next/init-list/main 1: 2932 => ((1 list-address))
mem: ((1 list-address)): 3002 <= 2932
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2934 list-address) (raw)) => 2997
run: list-next/init-list/main 2: 2997 => ((2 list-address))
mem: ((2 list-address)): 3003 <= 2997
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2997
run: init-list/main 7: 2997 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 2997
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 2997
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3031 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2997)
run: list-value-address/init-list/main 1: 2997 => ((1 list-address))
mem: ((1 list-address)): 3033 <= 2997
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 2997 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3034 <= 2997
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2997
run: init-list/main 8: 2997 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 2997
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 2997 <= integer
mem: ((6 tagged-value-address) (deref)): 2998 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 26 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 2999 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 2999
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3062 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 2999 <= 3062
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 2997
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3065 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2997)
run: list-next/init-list/main 1: 2997 => ((1 list-address))
mem: ((1 list-address)): 3067 <= 2997
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2999 list-address) (raw)) => 3062
run: list-next/init-list/main 2: 3062 => ((2 list-address))
mem: ((2 list-address)): 3068 <= 3062
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3062
run: init-list/main 7: 3062 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3062
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3062
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3096 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3062)
run: list-value-address/init-list/main 1: 3062 => ((1 list-address))
mem: ((1 list-address)): 3098 <= 3062
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3062 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3099 <= 3062
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3062
run: init-list/main 8: 3062 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3062
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3062 <= integer
mem: ((6 tagged-value-address) (deref)): 3063 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 27 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3064 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3064
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3127 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3064 <= 3127
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3062
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3130 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3062)
run: list-next/init-list/main 1: 3062 => ((1 list-address))
mem: ((1 list-address)): 3132 <= 3062
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3064 list-address) (raw)) => 3127
run: list-next/init-list/main 2: 3127 => ((2 list-address))
mem: ((2 list-address)): 3133 <= 3127
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3127
run: init-list/main 7: 3127 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3127
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3127
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3161 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3127)
run: list-value-address/init-list/main 1: 3127 => ((1 list-address))
mem: ((1 list-address)): 3163 <= 3127
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3127 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3164 <= 3127
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3127
run: init-list/main 8: 3127 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3127
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3127 <= integer
mem: ((6 tagged-value-address) (deref)): 3128 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 28 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3129 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3129
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3192 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3129 <= 3192
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3127
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3195 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3127)
run: list-next/init-list/main 1: 3127 => ((1 list-address))
mem: ((1 list-address)): 3197 <= 3127
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3129 list-address) (raw)) => 3192
run: list-next/init-list/main 2: 3192 => ((2 list-address))
mem: ((2 list-address)): 3198 <= 3192
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3192
run: init-list/main 7: 3192 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3192
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3192
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3226 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3192)
run: list-value-address/init-list/main 1: 3192 => ((1 list-address))
mem: ((1 list-address)): 3228 <= 3192
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3192 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3229 <= 3192
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3192
run: init-list/main 8: 3192 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3192
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3192 <= integer
mem: ((6 tagged-value-address) (deref)): 3193 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 29 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3194 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3194
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3257 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3194 <= 3257
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3192
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3260 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3192)
run: list-next/init-list/main 1: 3192 => ((1 list-address))
mem: ((1 list-address)): 3262 <= 3192
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3194 list-address) (raw)) => 3257
run: list-next/init-list/main 2: 3257 => ((2 list-address))
mem: ((2 list-address)): 3263 <= 3257
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3257
run: init-list/main 7: 3257 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3257
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3257
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3291 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3257)
run: list-value-address/init-list/main 1: 3257 => ((1 list-address))
mem: ((1 list-address)): 3293 <= 3257
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3257 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3294 <= 3257
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3257
run: init-list/main 8: 3257 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3257
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3257 <= integer
mem: ((6 tagged-value-address) (deref)): 3258 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 30 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1342 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3259 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3259
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3322 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3259 <= 3322
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3257
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3325 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3257)
run: list-next/init-list/main 1: 3257 => ((1 list-address))
mem: ((1 list-address)): 3327 <= 3257
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3259 list-address) (raw)) => 3322
run: list-next/init-list/main 2: 3322 => ((2 list-address))
mem: ((2 list-address)): 3328 <= 3322
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3322
run: init-list/main 7: 3322 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3322
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3322
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3356 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3322)
run: list-value-address/init-list/main 1: 3322 => ((1 list-address))
mem: ((1 list-address)): 3358 <= 3322
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3322 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3359 <= 3322
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3322
run: init-list/main 8: 3322 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3322
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3322 <= integer
mem: ((6 tagged-value-address) (deref)): 3323 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 31 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\q => ((3 integer))
mem: ((3 integer)): 1342 <= #\q
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3324 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3324
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3387 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3324 <= 3387
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3322
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3390 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3322)
run: list-next/init-list/main 1: 3322 => ((1 list-address))
mem: ((1 list-address)): 3392 <= 3322
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3324 list-address) (raw)) => 3387
run: list-next/init-list/main 2: 3387 => ((2 list-address))
mem: ((2 list-address)): 3393 <= 3387
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3387
run: init-list/main 7: 3387 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3387
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3387
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3421 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3387)
run: list-value-address/init-list/main 1: 3387 => ((1 list-address))
mem: ((1 list-address)): 3423 <= 3387
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3387 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3424 <= 3387
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3387
run: init-list/main 8: 3387 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3387
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => q
run: init-list/main 9: #(tagged record (integer #\q)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3387 <= integer
mem: ((6 tagged-value-address) (deref)): 3388 <= #\q
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 32 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\K => ((3 integer))
mem: ((3 integer)): 1342 <= #\K
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3389 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3389
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3452 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3389 <= 3452
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3387
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3455 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3387)
run: list-next/init-list/main 1: 3387 => ((1 list-address))
mem: ((1 list-address)): 3457 <= 3387
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3389 list-address) (raw)) => 3452
run: list-next/init-list/main 2: 3452 => ((2 list-address))
mem: ((2 list-address)): 3458 <= 3452
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3452
run: init-list/main 7: 3452 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3452
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3452
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3486 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: list-value-address/init-list/main 1: 3452 => ((1 list-address))
mem: ((1 list-address)): 3488 <= 3452
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3452 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3489 <= 3452
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3452
run: init-list/main 8: 3452 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3452
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => K
run: init-list/main 9: #(tagged record (integer #\K)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3452 <= integer
mem: ((6 tagged-value-address) (deref)): 3453 <= #\K
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 33 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1342 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3454 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3454
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3517 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3454 <= 3517
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3452
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3520 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: list-next/init-list/main 1: 3452 => ((1 list-address))
mem: ((1 list-address)): 3522 <= 3452
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3454 list-address) (raw)) => 3517
run: list-next/init-list/main 2: 3517 => ((2 list-address))
mem: ((2 list-address)): 3523 <= 3517
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3517
run: init-list/main 7: 3517 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3517
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3517
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3551 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3517)
run: list-value-address/init-list/main 1: 3517 => ((1 list-address))
mem: ((1 list-address)): 3553 <= 3517
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3517 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3554 <= 3517
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3517
run: init-list/main 8: 3517 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3517
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3517 <= integer
mem: ((6 tagged-value-address) (deref)): 3518 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 34 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3519 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3519
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3582 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3519 <= 3582
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3517
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3585 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3517)
run: list-next/init-list/main 1: 3517 => ((1 list-address))
mem: ((1 list-address)): 3587 <= 3517
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3519 list-address) (raw)) => 3582
run: list-next/init-list/main 2: 3582 => ((2 list-address))
mem: ((2 list-address)): 3588 <= 3582
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3582
run: init-list/main 7: 3582 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3582
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3582
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3616 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3582)
run: list-value-address/init-list/main 1: 3582 => ((1 list-address))
mem: ((1 list-address)): 3618 <= 3582
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3582 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3619 <= 3582
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3582
run: init-list/main 8: 3582 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3582
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3582 <= integer
mem: ((6 tagged-value-address) (deref)): 3583 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 35 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3584 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3584
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3647 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3584 <= 3647
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3582
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3650 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3582)
run: list-next/init-list/main 1: 3582 => ((1 list-address))
mem: ((1 list-address)): 3652 <= 3582
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3584 list-address) (raw)) => 3647
run: list-next/init-list/main 2: 3647 => ((2 list-address))
mem: ((2 list-address)): 3653 <= 3647
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3647
run: init-list/main 7: 3647 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3647
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3647
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3681 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3647)
run: list-value-address/init-list/main 1: 3647 => ((1 list-address))
mem: ((1 list-address)): 3683 <= 3647
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3647 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3684 <= 3647
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3647
run: init-list/main 8: 3647 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3647
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3647 <= integer
mem: ((6 tagged-value-address) (deref)): 3648 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 36 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3649 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3649
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3712 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3649 <= 3712
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3647
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3715 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3647)
run: list-next/init-list/main 1: 3647 => ((1 list-address))
mem: ((1 list-address)): 3717 <= 3647
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3649 list-address) (raw)) => 3712
run: list-next/init-list/main 2: 3712 => ((2 list-address))
mem: ((2 list-address)): 3718 <= 3712
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3712
run: init-list/main 7: 3712 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3712
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3712
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3746 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3712)
run: list-value-address/init-list/main 1: 3712 => ((1 list-address))
mem: ((1 list-address)): 3748 <= 3712
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3712 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3749 <= 3712
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3712
run: init-list/main 8: 3712 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3712
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3712 <= integer
mem: ((6 tagged-value-address) (deref)): 3713 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 37 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3714 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3714
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3777 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3714 <= 3777
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3712
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3780 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3712)
run: list-next/init-list/main 1: 3712 => ((1 list-address))
mem: ((1 list-address)): 3782 <= 3712
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3714 list-address) (raw)) => 3777
run: list-next/init-list/main 2: 3777 => ((2 list-address))
mem: ((2 list-address)): 3783 <= 3777
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3777
run: init-list/main 7: 3777 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3777
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3777
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3811 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3777)
run: list-value-address/init-list/main 1: 3777 => ((1 list-address))
mem: ((1 list-address)): 3813 <= 3777
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3777 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3814 <= 3777
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3777
run: init-list/main 8: 3777 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3777
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3777 <= integer
mem: ((6 tagged-value-address) (deref)): 3778 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 38 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1342 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3779 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3779
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3842 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3779 <= 3842
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3777
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3845 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3777)
run: list-next/init-list/main 1: 3777 => ((1 list-address))
mem: ((1 list-address)): 3847 <= 3777
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3779 list-address) (raw)) => 3842
run: list-next/init-list/main 2: 3842 => ((2 list-address))
mem: ((2 list-address)): 3848 <= 3842
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3842
run: init-list/main 7: 3842 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3842
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3842
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3876 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3842)
run: list-value-address/init-list/main 1: 3842 => ((1 list-address))
mem: ((1 list-address)): 3878 <= 3842
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3842 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3879 <= 3842
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3842
run: init-list/main 8: 3842 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3842
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3842 <= integer
mem: ((6 tagged-value-address) (deref)): 3843 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 39 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\k => ((3 integer))
mem: ((3 integer)): 1342 <= #\k
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3844 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3844
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3907 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3844 <= 3907
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3842
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3910 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3842)
run: list-next/init-list/main 1: 3842 => ((1 list-address))
mem: ((1 list-address)): 3912 <= 3842
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3844 list-address) (raw)) => 3907
run: list-next/init-list/main 2: 3907 => ((2 list-address))
mem: ((2 list-address)): 3913 <= 3907
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3907
run: init-list/main 7: 3907 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3907
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3907
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 3941 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3907)
run: list-value-address/init-list/main 1: 3907 => ((1 list-address))
mem: ((1 list-address)): 3943 <= 3907
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3907 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 3944 <= 3907
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3907
run: init-list/main 8: 3907 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3907
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => k
run: init-list/main 9: #(tagged record (integer #\k)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3907 <= integer
mem: ((6 tagged-value-address) (deref)): 3908 <= #\k
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 40 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\B => ((3 integer))
mem: ((3 integer)): 1342 <= #\B
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3909 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3909
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 3972 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3909 <= 3972
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3907
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 3975 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3907)
run: list-next/init-list/main 1: 3907 => ((1 list-address))
mem: ((1 list-address)): 3977 <= 3907
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3909 list-address) (raw)) => 3972
run: list-next/init-list/main 2: 3972 => ((2 list-address))
mem: ((2 list-address)): 3978 <= 3972
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3972
run: init-list/main 7: 3972 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 3972
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 3972
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4006 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: list-value-address/init-list/main 1: 3972 => ((1 list-address))
mem: ((1 list-address)): 4008 <= 3972
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 3972 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4009 <= 3972
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3972
run: init-list/main 8: 3972 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 3972
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => B
run: init-list/main 9: #(tagged record (integer #\B)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 3972 <= integer
mem: ((6 tagged-value-address) (deref)): 3973 <= #\B
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 41 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1342 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 3974 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 3974
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4037 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 3974 <= 4037
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 3972
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4040 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: list-next/init-list/main 1: 3972 => ((1 list-address))
mem: ((1 list-address)): 4042 <= 3972
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3974 list-address) (raw)) => 4037
run: list-next/init-list/main 2: 4037 => ((2 list-address))
mem: ((2 list-address)): 4043 <= 4037
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4037
run: init-list/main 7: 4037 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4037
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4037
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4071 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4037)
run: list-value-address/init-list/main 1: 4037 => ((1 list-address))
mem: ((1 list-address)): 4073 <= 4037
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4037 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4074 <= 4037
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4037
run: init-list/main 8: 4037 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4037
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4037 <= integer
mem: ((6 tagged-value-address) (deref)): 4038 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 42 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4039 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4039
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4102 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4039 <= 4102
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4037
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4105 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4037)
run: list-next/init-list/main 1: 4037 => ((1 list-address))
mem: ((1 list-address)): 4107 <= 4037
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4039 list-address) (raw)) => 4102
run: list-next/init-list/main 2: 4102 => ((2 list-address))
mem: ((2 list-address)): 4108 <= 4102
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4102
run: init-list/main 7: 4102 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4102
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4102
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4136 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4102)
run: list-value-address/init-list/main 1: 4102 => ((1 list-address))
mem: ((1 list-address)): 4138 <= 4102
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4102 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4139 <= 4102
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4102
run: init-list/main 8: 4102 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4102
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4102 <= integer
mem: ((6 tagged-value-address) (deref)): 4103 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 43 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4104 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4104
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4167 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4104 <= 4167
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4102
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4170 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4102)
run: list-next/init-list/main 1: 4102 => ((1 list-address))
mem: ((1 list-address)): 4172 <= 4102
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4104 list-address) (raw)) => 4167
run: list-next/init-list/main 2: 4167 => ((2 list-address))
mem: ((2 list-address)): 4173 <= 4167
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4167
run: init-list/main 7: 4167 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4167
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4167
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4201 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4167)
run: list-value-address/init-list/main 1: 4167 => ((1 list-address))
mem: ((1 list-address)): 4203 <= 4167
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4167 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4204 <= 4167
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4167
run: init-list/main 8: 4167 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4167
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4167 <= integer
mem: ((6 tagged-value-address) (deref)): 4168 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 44 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4169 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4169
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4232 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4169 <= 4232
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4167
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4235 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4167)
run: list-next/init-list/main 1: 4167 => ((1 list-address))
mem: ((1 list-address)): 4237 <= 4167
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4169 list-address) (raw)) => 4232
run: list-next/init-list/main 2: 4232 => ((2 list-address))
mem: ((2 list-address)): 4238 <= 4232
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4232
run: init-list/main 7: 4232 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4232
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4232
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4266 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4232)
run: list-value-address/init-list/main 1: 4232 => ((1 list-address))
mem: ((1 list-address)): 4268 <= 4232
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4232 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4269 <= 4232
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4232
run: init-list/main 8: 4232 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4232
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4232 <= integer
mem: ((6 tagged-value-address) (deref)): 4233 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 45 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4234 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4234
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4297 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4234 <= 4297
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4232
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4300 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4232)
run: list-next/init-list/main 1: 4232 => ((1 list-address))
mem: ((1 list-address)): 4302 <= 4232
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4234 list-address) (raw)) => 4297
run: list-next/init-list/main 2: 4297 => ((2 list-address))
mem: ((2 list-address)): 4303 <= 4297
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4297
run: init-list/main 7: 4297 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4297
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4297
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4331 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4297)
run: list-value-address/init-list/main 1: 4297 => ((1 list-address))
mem: ((1 list-address)): 4333 <= 4297
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4297 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4334 <= 4297
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4297
run: init-list/main 8: 4297 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4297
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4297 <= integer
mem: ((6 tagged-value-address) (deref)): 4298 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 46 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1342 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4299 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4299
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4362 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4299 <= 4362
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4297
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4365 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4297)
run: list-next/init-list/main 1: 4297 => ((1 list-address))
mem: ((1 list-address)): 4367 <= 4297
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4299 list-address) (raw)) => 4362
run: list-next/init-list/main 2: 4362 => ((2 list-address))
mem: ((2 list-address)): 4368 <= 4362
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4362
run: init-list/main 7: 4362 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4362
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4362
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4396 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4362)
run: list-value-address/init-list/main 1: 4362 => ((1 list-address))
mem: ((1 list-address)): 4398 <= 4362
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4362 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4399 <= 4362
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4362
run: init-list/main 8: 4362 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4362
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4362 <= integer
mem: ((6 tagged-value-address) (deref)): 4363 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 47 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\b => ((3 integer))
mem: ((3 integer)): 1342 <= #\b
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4364 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4364
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4427 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4364 <= 4427
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4362
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4430 => ((default-space space-address))
schedule: scheduling list-next/init-list/main for further processing
schedule: list-next/init-list/main
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4362)
run: list-next/init-list/main 1: 4362 => ((1 list-address))
mem: ((1 list-address)): 4432 <= 4362
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4364 list-address) (raw)) => 4427
run: list-next/init-list/main 2: 4427 => ((2 list-address))
mem: ((2 list-address)): 4433 <= 4427
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4427
run: init-list/main 7: 4427 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4427
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4427
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4461 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4427)
run: list-value-address/init-list/main 1: 4427 => ((1 list-address))
mem: ((1 list-address)): 4463 <= 4427
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4427 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4464 <= 4427
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4427
run: init-list/main 8: 4427 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4427
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => b
run: init-list/main 9: #(tagged record (integer #\b)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4427 <= integer
mem: ((6 tagged-value-address) (deref)): 4428 <= #\b
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 48 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\N => ((3 integer))
mem: ((3 integer)): 1342 <= #\N
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4429 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4429
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4492 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4429 <= 4492
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4427
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4495 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4427)
run: list-next/init-list/main 1: 4427 => ((1 list-address))
mem: ((1 list-address)): 4497 <= 4427
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4429 list-address) (raw)) => 4492
run: list-next/init-list/main 2: 4492 => ((2 list-address))
mem: ((2 list-address)): 4498 <= 4492
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4492
run: init-list/main 7: 4492 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4492
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4492
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4526 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: list-value-address/init-list/main 1: 4492 => ((1 list-address))
mem: ((1 list-address)): 4528 <= 4492
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4492 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4529 <= 4492
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4492
run: init-list/main 8: 4492 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4492
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => N
run: init-list/main 9: #(tagged record (integer #\N)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4492 <= integer
mem: ((6 tagged-value-address) (deref)): 4493 <= #\N
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 49 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1342 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4494 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4494
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4557 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4494 <= 4557
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4492
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4560 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: list-next/init-list/main 1: 4492 => ((1 list-address))
mem: ((1 list-address)): 4562 <= 4492
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4494 list-address) (raw)) => 4557
run: list-next/init-list/main 2: 4557 => ((2 list-address))
mem: ((2 list-address)): 4563 <= 4557
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4557
run: init-list/main 7: 4557 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4557
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4557
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4591 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4557)
run: list-value-address/init-list/main 1: 4557 => ((1 list-address))
mem: ((1 list-address)): 4593 <= 4557
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4557 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4594 <= 4557
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4557
run: init-list/main 8: 4557 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4557
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4557 <= integer
mem: ((6 tagged-value-address) (deref)): 4558 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 50 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4559 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4559
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4622 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4559 <= 4622
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4557
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4625 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4557)
run: list-next/init-list/main 1: 4557 => ((1 list-address))
mem: ((1 list-address)): 4627 <= 4557
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4559 list-address) (raw)) => 4622
run: list-next/init-list/main 2: 4622 => ((2 list-address))
mem: ((2 list-address)): 4628 <= 4622
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4622
run: init-list/main 7: 4622 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4622
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4622
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4656 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4622)
run: list-value-address/init-list/main 1: 4622 => ((1 list-address))
mem: ((1 list-address)): 4658 <= 4622
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4622 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4659 <= 4622
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4622
run: init-list/main 8: 4622 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4622
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4622 <= integer
mem: ((6 tagged-value-address) (deref)): 4623 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 51 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4624 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4624
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4687 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4624 <= 4687
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4622
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4690 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4622)
run: list-next/init-list/main 1: 4622 => ((1 list-address))
mem: ((1 list-address)): 4692 <= 4622
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4624 list-address) (raw)) => 4687
run: list-next/init-list/main 2: 4687 => ((2 list-address))
mem: ((2 list-address)): 4693 <= 4687
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4687
run: init-list/main 7: 4687 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4687
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4687
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4721 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4687)
run: list-value-address/init-list/main 1: 4687 => ((1 list-address))
mem: ((1 list-address)): 4723 <= 4687
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4687 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4724 <= 4687
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4687
run: init-list/main 8: 4687 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4687
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4687 <= integer
mem: ((6 tagged-value-address) (deref)): 4688 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 52 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4689 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4689
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4752 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4689 <= 4752
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4687
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4755 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4687)
run: list-next/init-list/main 1: 4687 => ((1 list-address))
mem: ((1 list-address)): 4757 <= 4687
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4689 list-address) (raw)) => 4752
run: list-next/init-list/main 2: 4752 => ((2 list-address))
mem: ((2 list-address)): 4758 <= 4752
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4752
run: init-list/main 7: 4752 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4752
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4752
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4786 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4752)
run: list-value-address/init-list/main 1: 4752 => ((1 list-address))
mem: ((1 list-address)): 4788 <= 4752
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4752 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4789 <= 4752
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4752
run: init-list/main 8: 4752 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4752
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4752 <= integer
mem: ((6 tagged-value-address) (deref)): 4753 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 53 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4754 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4754
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4817 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4754 <= 4817
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4752
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4820 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4752)
run: list-next/init-list/main 1: 4752 => ((1 list-address))
mem: ((1 list-address)): 4822 <= 4752
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4754 list-address) (raw)) => 4817
run: list-next/init-list/main 2: 4817 => ((2 list-address))
mem: ((2 list-address)): 4823 <= 4817
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4817
run: init-list/main 7: 4817 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4817
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4817
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4851 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4817)
run: list-value-address/init-list/main 1: 4817 => ((1 list-address))
mem: ((1 list-address)): 4853 <= 4817
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4817 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4854 <= 4817
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4817
run: init-list/main 8: 4817 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4817
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4817 <= integer
mem: ((6 tagged-value-address) (deref)): 4818 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 54 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1342 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4819 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4819
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4882 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4819 <= 4882
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4817
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4885 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4817)
run: list-next/init-list/main 1: 4817 => ((1 list-address))
mem: ((1 list-address)): 4887 <= 4817
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4819 list-address) (raw)) => 4882
run: list-next/init-list/main 2: 4882 => ((2 list-address))
mem: ((2 list-address)): 4888 <= 4882
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4882
run: init-list/main 7: 4882 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4882
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4882
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4916 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4882)
run: list-value-address/init-list/main 1: 4882 => ((1 list-address))
mem: ((1 list-address)): 4918 <= 4882
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4882 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4919 <= 4882
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4882
run: init-list/main 8: 4882 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4882
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4882 <= integer
mem: ((6 tagged-value-address) (deref)): 4883 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 55 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\n => ((3 integer))
mem: ((3 integer)): 1342 <= #\n
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4884 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4884
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 4947 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4884 <= 4947
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4882
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 4950 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4882)
run: list-next/init-list/main 1: 4882 => ((1 list-address))
mem: ((1 list-address)): 4952 <= 4882
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4884 list-address) (raw)) => 4947
run: list-next/init-list/main 2: 4947 => ((2 list-address))
mem: ((2 list-address)): 4953 <= 4947
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4947
run: init-list/main 7: 4947 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 4947
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 4947
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 4981 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4947)
run: list-value-address/init-list/main 1: 4947 => ((1 list-address))
mem: ((1 list-address)): 4983 <= 4947
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 4947 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 4984 <= 4947
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4947
run: init-list/main 8: 4947 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 4947
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => n
run: init-list/main 9: #(tagged record (integer #\n)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 4947 <= integer
mem: ((6 tagged-value-address) (deref)): 4948 <= #\n
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 56 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\R => ((3 integer))
mem: ((3 integer)): 1342 <= #\R
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 4949 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 4949
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 5012 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 4949 <= 5012
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 4947
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 5015 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4947)
run: list-next/init-list/main 1: 4947 => ((1 list-address))
mem: ((1 list-address)): 5017 <= 4947
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4949 list-address) (raw)) => 5012
run: list-next/init-list/main 2: 5012 => ((2 list-address))
mem: ((2 list-address)): 5018 <= 5012
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5012
run: init-list/main 7: 5012 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 5012
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 5012
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 5046 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: list-value-address/init-list/main 1: 5012 => ((1 list-address))
mem: ((1 list-address)): 5048 <= 5012
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 5012 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5049 <= 5012
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5012
run: init-list/main 8: 5012 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 5012
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => R
run: init-list/main 9: #(tagged record (integer #\R)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 5012 <= integer
mem: ((6 tagged-value-address) (deref)): 5013 <= #\R
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 57 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\P => ((3 integer))
mem: ((3 integer)): 1342 <= #\P
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 5014 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 5014
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 5077 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 5014 <= 5077
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 5012
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 5080 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: list-next/init-list/main 1: 5012 => ((1 list-address))
mem: ((1 list-address)): 5082 <= 5012
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5014 list-address) (raw)) => 5077
run: list-next/init-list/main 2: 5077 => ((2 list-address))
mem: ((2 list-address)): 5083 <= 5077
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5077
run: init-list/main 7: 5077 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 5077
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 5077
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 5111 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5077)
run: list-value-address/init-list/main 1: 5077 => ((1 list-address))
mem: ((1 list-address)): 5113 <= 5077
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 5077 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5114 <= 5077
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5077
run: init-list/main 8: 5077 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 5077
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => P
run: init-list/main 9: #(tagged record (integer #\P)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 5077 <= integer
mem: ((6 tagged-value-address) (deref)): 5078 <= #\P
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 58 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 5079 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 5079
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 5142 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 5079 <= 5142
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 5077
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 5145 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5077)
run: list-next/init-list/main 1: 5077 => ((1 list-address))
mem: ((1 list-address)): 5147 <= 5077
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5079 list-address) (raw)) => 5142
run: list-next/init-list/main 2: 5142 => ((2 list-address))
mem: ((2 list-address)): 5148 <= 5142
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5142
run: init-list/main 7: 5142 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 5142
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 5142
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 5176 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5142)
run: list-value-address/init-list/main 1: 5142 => ((1 list-address))
mem: ((1 list-address)): 5178 <= 5142
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 5142 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5179 <= 5142
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5142
run: init-list/main 8: 5142 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 5142
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 5142 <= integer
mem: ((6 tagged-value-address) (deref)): 5143 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 59 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 5144 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 5144
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 5207 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 5144 <= 5207
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 5142
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 5210 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5142)
run: list-next/init-list/main 1: 5142 => ((1 list-address))
mem: ((1 list-address)): 5212 <= 5142
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5144 list-address) (raw)) => 5207
run: list-next/init-list/main 2: 5207 => ((2 list-address))
mem: ((2 list-address)): 5213 <= 5207
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5207
run: init-list/main 7: 5207 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 5207
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 5207
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 5241 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5207)
run: list-value-address/init-list/main 1: 5207 => ((1 list-address))
mem: ((1 list-address)): 5243 <= 5207
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 5207 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5244 <= 5207
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5207
run: init-list/main 8: 5207 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 5207
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 5207 <= integer
mem: ((6 tagged-value-address) (deref)): 5208 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 60 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 5209 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 5209
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 5272 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 5209 <= 5272
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 5207
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 5275 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5207)
run: list-next/init-list/main 1: 5207 => ((1 list-address))
mem: ((1 list-address)): 5277 <= 5207
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5209 list-address) (raw)) => 5272
run: list-next/init-list/main 2: 5272 => ((2 list-address))
mem: ((2 list-address)): 5278 <= 5272
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5272
run: init-list/main 7: 5272 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 5272
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 5272
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 5306 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5272)
run: list-value-address/init-list/main 1: 5272 => ((1 list-address))
mem: ((1 list-address)): 5308 <= 5272
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 5272 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5309 <= 5272
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5272
run: init-list/main 8: 5272 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 5272
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 5272 <= integer
mem: ((6 tagged-value-address) (deref)): 5273 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 61 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\_ => ((3 integer))
mem: ((3 integer)): 1342 <= #\_
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 5274 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 5274
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 5337 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 5274 <= 5337
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 5272
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 5340 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5272)
run: list-next/init-list/main 1: 5272 => ((1 list-address))
mem: ((1 list-address)): 5342 <= 5272
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5274 list-address) (raw)) => 5337
run: list-next/init-list/main 2: 5337 => ((2 list-address))
mem: ((2 list-address)): 5343 <= 5337
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5337
run: init-list/main 7: 5337 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 5337
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 5337
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 5371 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5337)
run: list-value-address/init-list/main 1: 5337 => ((1 list-address))
mem: ((1 list-address)): 5373 <= 5337
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 5337 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5374 <= 5337
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5337
run: init-list/main 8: 5337 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 5337
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => _
run: init-list/main 9: #(tagged record (integer #\_)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 5337 <= integer
mem: ((6 tagged-value-address) (deref)): 5338 <= #\_
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 62 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\p => ((3 integer))
mem: ((3 integer)): 1342 <= #\p
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 5339 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 5339
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 5402 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 5339 <= 5402
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 5337
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 5405 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5337)
run: list-next/init-list/main 1: 5337 => ((1 list-address))
mem: ((1 list-address)): 5407 <= 5337
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5339 list-address) (raw)) => 5402
run: list-next/init-list/main 2: 5402 => ((2 list-address))
mem: ((2 list-address)): 5408 <= 5402
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5402
run: init-list/main 7: 5402 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 5402
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 5402
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 5436 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5402)
run: list-value-address/init-list/main 1: 5402 => ((1 list-address))
mem: ((1 list-address)): 5438 <= 5402
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 5402 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5439 <= 5402
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5402
run: init-list/main 8: 5402 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 5402
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => p
run: init-list/main 9: #(tagged record (integer #\p)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 5402 <= integer
mem: ((6 tagged-value-address) (deref)): 5403 <= #\p
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 63 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: #\r => ((3 integer))
mem: ((3 integer)): 1342 <= #\r
run: init-list/main 3: t => ((4 boolean))
mem: ((4 boolean)): 1343 <= t
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-list/main 5: (((5 list-address-address)) <- ((get-address)) ((2 list-address) (deref)) ((1 offset)))
run: init-list/main 5: 5404 => ((5 list-address-address))
mem: ((5 list-address-address)): 1344 <= 5404
run: init-list/main 6: (((5 list-address-address) (deref)) <- ((new)) ((list literal)))
run: init-list/main 6: 5467 => ((5 list-address-address) (deref))
mem: ((5 list-address-address) (deref)): 5404 <= 5467
run: init-list/main 7: (((2 list-address)) <- ((list-next)) ((2 list-address)))
mem: ((2 list-address)) => 5402
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 5470 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5402)
run: list-next/init-list/main 1: 5402 => ((1 list-address))
mem: ((1 list-address)): 5472 <= 5402
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5404 list-address) (raw)) => 5467
run: list-next/init-list/main 2: 5467 => ((2 list-address))
mem: ((2 list-address)): 5473 <= 5467
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5467
run: init-list/main 7: 5467 => ((2 list-address))
mem: ((2 list-address)): 1341 <= 5467
run: init-list/main 8: (((6 tagged-value-address)) <- ((list-value-address)) ((2 list-address)))
mem: ((2 list-address)) => 5467
run: list-value-address/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-list/main 0: 5501 => ((default-space space-address))
run: list-value-address/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5467)
run: list-value-address/init-list/main 1: 5467 => ((1 list-address))
mem: ((1 list-address)): 5503 <= 5467
run: list-value-address/init-list/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-list/main 2: 5467 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5504 <= 5467
run: list-value-address/init-list/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5467
run: init-list/main 8: 5467 => ((6 tagged-value-address))
mem: ((6 tagged-value-address)): 1345 <= 5467
run: init-list/main 9: (((6 tagged-value-address) (deref)) <- ((save-type)) ((3 integer)))
mem: ((3 integer)) => r
run: init-list/main 9: #(tagged record (integer #\r)) => ((6 tagged-value-address) (deref))
mem: ((6 tagged-value-address) (deref)): 5467 <= integer
mem: ((6 tagged-value-address) (deref)): 5468 <= #\r
run: init-list/main 10: (((jump)) ((-8 offset)))
run: init-list/main 3: (((3 integer)) ((4 boolean)) <- ((next-input)))
arg: nil 64 (#\R #\P #\_ #\_ #\_ #\_ #\p #\r #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\Q #\P #\_ #\_ #\_ #\_ #\p #\q #\K #\P #\_ #\_ #\_ #\_ #\p #\k #\B #\P #\_ #\_ #\_ #\_ #\p #\b #\N #\P #\_ #\_ #\_ #\_ #\p #\n #\R #\P #\_ #\_ #\_ #\_ #\p #\r)
run: init-list/main 3: nil => ((3 integer))
mem: ((3 integer)): 1342 <= nil
run: init-list/main 3: nil => ((4 boolean))
mem: ((4 boolean)): 1343 <= nil
run: init-list/main 4: (((jump-unless)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-list/main 11: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1369
run: list-next/init-list/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-list/main 0: 5532 => ((default-space space-address))
run: list-next/init-list/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1369)
run: list-next/init-list/main 1: 1369 => ((1 list-address))
mem: ((1 list-address)): 5534 <= 1369
run: list-next/init-list/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1371 list-address) (raw)) => 1372
run: list-next/init-list/main 2: 1372 => ((2 list-address))
mem: ((2 list-address)): 5535 <= 1372
run: list-next/init-list/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1372
run: init-list/main 11: 1372 => ((1 list-address))
mem: ((1 list-address)): 1340 <= 1372
run: init-list/main 12: (((reply)) ((1 list-address)))
mem: ((1 list-address)) => 1372
run: main 3: 1372 => ((3 list-address))
mem: ((3 list-address)): 1004 <= 1372
run: main 4: (((4 board-address)) <- ((init-board)) ((3 list-address)))
mem: ((3 list-address)) => 1372
run: init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-board/main 0: 5563 => ((default-space space-address))
run: init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: init-board/main 1: 1372 => ((1 list-address))
mem: ((1 list-address)): 5565 <= 1372
run: init-board/main 2: (((2 integer)) <- ((list-length)) ((1 list-address)))
mem: ((1 list-address)) => 1372
run: list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-length/init-board/main 0: 5594 => ((default-space space-address))
run: list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: list-length/init-board/main 1: 1372 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 1372
run: list-length/init-board/main 2: (((2 integer)) <- ((copy)) ((0 literal)))
run: list-length/init-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 5597 <= 0
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1372
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5625 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: list-value-address/list-length/init-board/main 1: 1372 => ((1 list-address))
mem: ((1 list-address)): 5627 <= 1372
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1372 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5628 <= 1372
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1372
run: list-length/init-board/main 3: 1372 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 1372
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1372
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 0
run: list-length/init-board/main 5: 1 => ((2 integer))
mem: ((2 integer)): 5597 <= 1
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1372
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5656 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: list-next/list-length/init-board/main 1: 1372 => ((1 list-address))
mem: ((1 list-address)): 5658 <= 1372
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1374 list-address) (raw)) => 1437
run: list-next/list-length/init-board/main 2: 1437 => ((2 list-address))
mem: ((2 list-address)): 5659 <= 1437
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1437
run: list-length/init-board/main 6: 1437 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 1437
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1437
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5687 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1437)
run: list-value-address/list-length/init-board/main 1: 1437 => ((1 list-address))
mem: ((1 list-address)): 5689 <= 1437
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1437 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5690 <= 1437
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1437
run: list-length/init-board/main 3: 1437 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 1437
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1437
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 1
run: list-length/init-board/main 5: 2 => ((2 integer))
mem: ((2 integer)): 5597 <= 2
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1437
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5718 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1437)
run: list-next/list-length/init-board/main 1: 1437 => ((1 list-address))
mem: ((1 list-address)): 5720 <= 1437
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1439 list-address) (raw)) => 1502
run: list-next/list-length/init-board/main 2: 1502 => ((2 list-address))
mem: ((2 list-address)): 5721 <= 1502
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1502
run: list-length/init-board/main 6: 1502 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 1502
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1502
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5749 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1502)
run: list-value-address/list-length/init-board/main 1: 1502 => ((1 list-address))
mem: ((1 list-address)): 5751 <= 1502
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1502 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5752 <= 1502
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1502
run: list-length/init-board/main 3: 1502 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 1502
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1502
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 2
run: list-length/init-board/main 5: 3 => ((2 integer))
mem: ((2 integer)): 5597 <= 3
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1502
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5780 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1502)
run: list-next/list-length/init-board/main 1: 1502 => ((1 list-address))
mem: ((1 list-address)): 5782 <= 1502
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1504 list-address) (raw)) => 1567
run: list-next/list-length/init-board/main 2: 1567 => ((2 list-address))
mem: ((2 list-address)): 5783 <= 1567
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1567
run: list-length/init-board/main 6: 1567 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 1567
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1567
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5811 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1567)
run: list-value-address/list-length/init-board/main 1: 1567 => ((1 list-address))
mem: ((1 list-address)): 5813 <= 1567
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1567 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5814 <= 1567
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1567
run: list-length/init-board/main 3: 1567 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 1567
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1567
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 3
run: list-length/init-board/main 5: 4 => ((2 integer))
mem: ((2 integer)): 5597 <= 4
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1567
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5842 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1567)
run: list-next/list-length/init-board/main 1: 1567 => ((1 list-address))
mem: ((1 list-address)): 5844 <= 1567
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1569 list-address) (raw)) => 1632
run: list-next/list-length/init-board/main 2: 1632 => ((2 list-address))
mem: ((2 list-address)): 5845 <= 1632
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1632
run: list-length/init-board/main 6: 1632 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 1632
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1632
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5873 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1632)
run: list-value-address/list-length/init-board/main 1: 1632 => ((1 list-address))
mem: ((1 list-address)): 5875 <= 1632
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1632 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5876 <= 1632
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1632
run: list-length/init-board/main 3: 1632 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 1632
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1632
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 4
run: list-length/init-board/main 5: 5 => ((2 integer))
mem: ((2 integer)): 5597 <= 5
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1632
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5904 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1632)
run: list-next/list-length/init-board/main 1: 1632 => ((1 list-address))
mem: ((1 list-address)): 5906 <= 1632
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1634 list-address) (raw)) => 1697
run: list-next/list-length/init-board/main 2: 1697 => ((2 list-address))
mem: ((2 list-address)): 5907 <= 1697
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1697
run: list-length/init-board/main 6: 1697 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 1697
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1697
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5935 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1697)
run: list-value-address/list-length/init-board/main 1: 1697 => ((1 list-address))
mem: ((1 list-address)): 5937 <= 1697
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1697 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 5938 <= 1697
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1697
run: list-length/init-board/main 3: 1697 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 1697
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1697
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 5
run: list-length/init-board/main 5: 6 => ((2 integer))
mem: ((2 integer)): 5597 <= 6
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1697
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 5966 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1697)
run: list-next/list-length/init-board/main 1: 1697 => ((1 list-address))
mem: ((1 list-address)): 5968 <= 1697
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1699 list-address) (raw)) => 1762
run: list-next/list-length/init-board/main 2: 1762 => ((2 list-address))
mem: ((2 list-address)): 5969 <= 1762
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1762
run: list-length/init-board/main 6: 1762 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 1762
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1762
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 5997 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1762)
run: list-value-address/list-length/init-board/main 1: 1762 => ((1 list-address))
mem: ((1 list-address)): 5999 <= 1762
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1762 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6000 <= 1762
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1762
run: list-length/init-board/main 3: 1762 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 1762
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1762
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 6
run: list-length/init-board/main 5: 7 => ((2 integer))
mem: ((2 integer)): 5597 <= 7
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1762
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6028 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1762)
run: list-next/list-length/init-board/main 1: 1762 => ((1 list-address))
mem: ((1 list-address)): 6030 <= 1762
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1764 list-address) (raw)) => 1827
run: list-next/list-length/init-board/main 2: 1827 => ((2 list-address))
mem: ((2 list-address)): 6031 <= 1827
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1827
run: list-length/init-board/main 6: 1827 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 1827
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1827
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6059 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1827)
run: list-value-address/list-length/init-board/main 1: 1827 => ((1 list-address))
mem: ((1 list-address)): 6061 <= 1827
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1827 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6062 <= 1827
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1827
run: list-length/init-board/main 3: 1827 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 1827
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1827
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 7
run: list-length/init-board/main 5: 8 => ((2 integer))
mem: ((2 integer)): 5597 <= 8
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1827
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6090 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1827)
run: list-next/list-length/init-board/main 1: 1827 => ((1 list-address))
mem: ((1 list-address)): 6092 <= 1827
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1829 list-address) (raw)) => 1892
run: list-next/list-length/init-board/main 2: 1892 => ((2 list-address))
mem: ((2 list-address)): 6093 <= 1892
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1892
run: list-length/init-board/main 6: 1892 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 1892
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1892
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6121 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: list-value-address/list-length/init-board/main 1: 1892 => ((1 list-address))
mem: ((1 list-address)): 6123 <= 1892
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1892 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6124 <= 1892
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1892
run: list-length/init-board/main 3: 1892 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 1892
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1892
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 8
run: list-length/init-board/main 5: 9 => ((2 integer))
mem: ((2 integer)): 5597 <= 9
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1892
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6152 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: list-next/list-length/init-board/main 1: 1892 => ((1 list-address))
mem: ((1 list-address)): 6154 <= 1892
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1894 list-address) (raw)) => 1957
run: list-next/list-length/init-board/main 2: 1957 => ((2 list-address))
mem: ((2 list-address)): 6155 <= 1957
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1957
run: list-length/init-board/main 6: 1957 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 1957
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1957
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6183 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1957)
run: list-value-address/list-length/init-board/main 1: 1957 => ((1 list-address))
mem: ((1 list-address)): 6185 <= 1957
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 1957 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6186 <= 1957
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1957
run: list-length/init-board/main 3: 1957 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 1957
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 1957
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 9
run: list-length/init-board/main 5: 10 => ((2 integer))
mem: ((2 integer)): 5597 <= 10
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1957
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6214 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1957)
run: list-next/list-length/init-board/main 1: 1957 => ((1 list-address))
mem: ((1 list-address)): 6216 <= 1957
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1959 list-address) (raw)) => 2022
run: list-next/list-length/init-board/main 2: 2022 => ((2 list-address))
mem: ((2 list-address)): 6217 <= 2022
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2022
run: list-length/init-board/main 6: 2022 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2022
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2022
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6245 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2022)
run: list-value-address/list-length/init-board/main 1: 2022 => ((1 list-address))
mem: ((1 list-address)): 6247 <= 2022
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2022 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6248 <= 2022
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2022
run: list-length/init-board/main 3: 2022 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2022
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2022
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 10
run: list-length/init-board/main 5: 11 => ((2 integer))
mem: ((2 integer)): 5597 <= 11
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2022
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6276 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2022)
run: list-next/list-length/init-board/main 1: 2022 => ((1 list-address))
mem: ((1 list-address)): 6278 <= 2022
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2024 list-address) (raw)) => 2087
run: list-next/list-length/init-board/main 2: 2087 => ((2 list-address))
mem: ((2 list-address)): 6279 <= 2087
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2087
run: list-length/init-board/main 6: 2087 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2087
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2087
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6307 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2087)
run: list-value-address/list-length/init-board/main 1: 2087 => ((1 list-address))
mem: ((1 list-address)): 6309 <= 2087
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2087 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6310 <= 2087
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2087
run: list-length/init-board/main 3: 2087 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2087
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2087
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 11
run: list-length/init-board/main 5: 12 => ((2 integer))
mem: ((2 integer)): 5597 <= 12
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2087
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6338 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2087)
run: list-next/list-length/init-board/main 1: 2087 => ((1 list-address))
mem: ((1 list-address)): 6340 <= 2087
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2089 list-address) (raw)) => 2152
run: list-next/list-length/init-board/main 2: 2152 => ((2 list-address))
mem: ((2 list-address)): 6341 <= 2152
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2152
run: list-length/init-board/main 6: 2152 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2152
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2152
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6369 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2152)
run: list-value-address/list-length/init-board/main 1: 2152 => ((1 list-address))
mem: ((1 list-address)): 6371 <= 2152
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2152 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6372 <= 2152
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2152
run: list-length/init-board/main 3: 2152 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2152
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2152
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 12
run: list-length/init-board/main 5: 13 => ((2 integer))
mem: ((2 integer)): 5597 <= 13
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2152
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6400 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2152)
run: list-next/list-length/init-board/main 1: 2152 => ((1 list-address))
mem: ((1 list-address)): 6402 <= 2152
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2154 list-address) (raw)) => 2217
run: list-next/list-length/init-board/main 2: 2217 => ((2 list-address))
mem: ((2 list-address)): 6403 <= 2217
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2217
run: list-length/init-board/main 6: 2217 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2217
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2217
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6431 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2217)
run: list-value-address/list-length/init-board/main 1: 2217 => ((1 list-address))
mem: ((1 list-address)): 6433 <= 2217
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2217 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6434 <= 2217
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2217
run: list-length/init-board/main 3: 2217 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2217
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2217
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 13
run: list-length/init-board/main 5: 14 => ((2 integer))
mem: ((2 integer)): 5597 <= 14
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2217
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6462 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2217)
run: list-next/list-length/init-board/main 1: 2217 => ((1 list-address))
mem: ((1 list-address)): 6464 <= 2217
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2219 list-address) (raw)) => 2282
run: list-next/list-length/init-board/main 2: 2282 => ((2 list-address))
mem: ((2 list-address)): 6465 <= 2282
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2282
run: list-length/init-board/main 6: 2282 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2282
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2282
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6493 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2282)
run: list-value-address/list-length/init-board/main 1: 2282 => ((1 list-address))
mem: ((1 list-address)): 6495 <= 2282
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2282 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6496 <= 2282
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2282
run: list-length/init-board/main 3: 2282 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2282
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2282
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 14
run: list-length/init-board/main 5: 15 => ((2 integer))
mem: ((2 integer)): 5597 <= 15
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2282
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6524 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2282)
run: list-next/list-length/init-board/main 1: 2282 => ((1 list-address))
mem: ((1 list-address)): 6526 <= 2282
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2284 list-address) (raw)) => 2347
run: list-next/list-length/init-board/main 2: 2347 => ((2 list-address))
mem: ((2 list-address)): 6527 <= 2347
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2347
run: list-length/init-board/main 6: 2347 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2347
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2347
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6555 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2347)
run: list-value-address/list-length/init-board/main 1: 2347 => ((1 list-address))
mem: ((1 list-address)): 6557 <= 2347
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2347 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6558 <= 2347
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2347
run: list-length/init-board/main 3: 2347 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2347
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2347
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 15
run: list-length/init-board/main 5: 16 => ((2 integer))
mem: ((2 integer)): 5597 <= 16
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2347
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6586 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2347)
run: list-next/list-length/init-board/main 1: 2347 => ((1 list-address))
mem: ((1 list-address)): 6588 <= 2347
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2349 list-address) (raw)) => 2412
run: list-next/list-length/init-board/main 2: 2412 => ((2 list-address))
mem: ((2 list-address)): 6589 <= 2412
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2412
run: list-length/init-board/main 6: 2412 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2412
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2412
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6617 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: list-value-address/list-length/init-board/main 1: 2412 => ((1 list-address))
mem: ((1 list-address)): 6619 <= 2412
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2412 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6620 <= 2412
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2412
run: list-length/init-board/main 3: 2412 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2412
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2412
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 16
run: list-length/init-board/main 5: 17 => ((2 integer))
mem: ((2 integer)): 5597 <= 17
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2412
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6648 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: list-next/list-length/init-board/main 1: 2412 => ((1 list-address))
mem: ((1 list-address)): 6650 <= 2412
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2414 list-address) (raw)) => 2477
run: list-next/list-length/init-board/main 2: 2477 => ((2 list-address))
mem: ((2 list-address)): 6651 <= 2477
schedule: scheduling list-next/list-length/init-board/main for further processing
schedule: list-next/list-length/init-board/main
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2477
run: list-length/init-board/main 6: 2477 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2477
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2477
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6679 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2477)
run: list-value-address/list-length/init-board/main 1: 2477 => ((1 list-address))
mem: ((1 list-address)): 6681 <= 2477
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2477 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6682 <= 2477
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2477
run: list-length/init-board/main 3: 2477 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2477
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2477
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 17
run: list-length/init-board/main 5: 18 => ((2 integer))
mem: ((2 integer)): 5597 <= 18
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2477
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6710 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2477)
run: list-next/list-length/init-board/main 1: 2477 => ((1 list-address))
mem: ((1 list-address)): 6712 <= 2477
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2479 list-address) (raw)) => 2542
run: list-next/list-length/init-board/main 2: 2542 => ((2 list-address))
mem: ((2 list-address)): 6713 <= 2542
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2542
run: list-length/init-board/main 6: 2542 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2542
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2542
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6741 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2542)
run: list-value-address/list-length/init-board/main 1: 2542 => ((1 list-address))
mem: ((1 list-address)): 6743 <= 2542
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2542 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6744 <= 2542
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2542
run: list-length/init-board/main 3: 2542 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2542
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2542
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 18
run: list-length/init-board/main 5: 19 => ((2 integer))
mem: ((2 integer)): 5597 <= 19
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2542
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6772 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2542)
run: list-next/list-length/init-board/main 1: 2542 => ((1 list-address))
mem: ((1 list-address)): 6774 <= 2542
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2544 list-address) (raw)) => 2607
run: list-next/list-length/init-board/main 2: 2607 => ((2 list-address))
mem: ((2 list-address)): 6775 <= 2607
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2607
run: list-length/init-board/main 6: 2607 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2607
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2607
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6803 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2607)
run: list-value-address/list-length/init-board/main 1: 2607 => ((1 list-address))
mem: ((1 list-address)): 6805 <= 2607
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2607 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6806 <= 2607
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2607
run: list-length/init-board/main 3: 2607 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2607
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2607
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 19
run: list-length/init-board/main 5: 20 => ((2 integer))
mem: ((2 integer)): 5597 <= 20
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2607
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6834 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2607)
run: list-next/list-length/init-board/main 1: 2607 => ((1 list-address))
mem: ((1 list-address)): 6836 <= 2607
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2609 list-address) (raw)) => 2672
run: list-next/list-length/init-board/main 2: 2672 => ((2 list-address))
mem: ((2 list-address)): 6837 <= 2672
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2672
run: list-length/init-board/main 6: 2672 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2672
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2672
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6865 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2672)
run: list-value-address/list-length/init-board/main 1: 2672 => ((1 list-address))
mem: ((1 list-address)): 6867 <= 2672
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2672 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6868 <= 2672
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2672
run: list-length/init-board/main 3: 2672 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2672
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2672
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 20
run: list-length/init-board/main 5: 21 => ((2 integer))
mem: ((2 integer)): 5597 <= 21
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2672
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6896 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2672)
run: list-next/list-length/init-board/main 1: 2672 => ((1 list-address))
mem: ((1 list-address)): 6898 <= 2672
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2674 list-address) (raw)) => 2737
run: list-next/list-length/init-board/main 2: 2737 => ((2 list-address))
mem: ((2 list-address)): 6899 <= 2737
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2737
run: list-length/init-board/main 6: 2737 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2737
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2737
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6927 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2737)
run: list-value-address/list-length/init-board/main 1: 2737 => ((1 list-address))
mem: ((1 list-address)): 6929 <= 2737
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2737 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6930 <= 2737
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2737
run: list-length/init-board/main 3: 2737 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2737
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2737
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 21
run: list-length/init-board/main 5: 22 => ((2 integer))
mem: ((2 integer)): 5597 <= 22
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2737
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 6958 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2737)
run: list-next/list-length/init-board/main 1: 2737 => ((1 list-address))
mem: ((1 list-address)): 6960 <= 2737
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2739 list-address) (raw)) => 2802
run: list-next/list-length/init-board/main 2: 2802 => ((2 list-address))
mem: ((2 list-address)): 6961 <= 2802
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2802
run: list-length/init-board/main 6: 2802 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2802
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2802
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 6989 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2802)
run: list-value-address/list-length/init-board/main 1: 2802 => ((1 list-address))
mem: ((1 list-address)): 6991 <= 2802
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2802 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 6992 <= 2802
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2802
run: list-length/init-board/main 3: 2802 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2802
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2802
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 22
run: list-length/init-board/main 5: 23 => ((2 integer))
mem: ((2 integer)): 5597 <= 23
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2802
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7020 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2802)
run: list-next/list-length/init-board/main 1: 2802 => ((1 list-address))
mem: ((1 list-address)): 7022 <= 2802
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2804 list-address) (raw)) => 2867
run: list-next/list-length/init-board/main 2: 2867 => ((2 list-address))
mem: ((2 list-address)): 7023 <= 2867
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2867
run: list-length/init-board/main 6: 2867 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2867
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2867
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7051 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2867)
run: list-value-address/list-length/init-board/main 1: 2867 => ((1 list-address))
mem: ((1 list-address)): 7053 <= 2867
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2867 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7054 <= 2867
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2867
run: list-length/init-board/main 3: 2867 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2867
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2867
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 23
run: list-length/init-board/main 5: 24 => ((2 integer))
mem: ((2 integer)): 5597 <= 24
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2867
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7082 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2867)
run: list-next/list-length/init-board/main 1: 2867 => ((1 list-address))
mem: ((1 list-address)): 7084 <= 2867
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2869 list-address) (raw)) => 2932
run: list-next/list-length/init-board/main 2: 2932 => ((2 list-address))
mem: ((2 list-address)): 7085 <= 2932
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2932
run: list-length/init-board/main 6: 2932 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2932
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2932
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7113 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: list-value-address/list-length/init-board/main 1: 2932 => ((1 list-address))
mem: ((1 list-address)): 7115 <= 2932
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2932 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7116 <= 2932
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2932
run: list-length/init-board/main 3: 2932 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2932
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2932
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 24
run: list-length/init-board/main 5: 25 => ((2 integer))
mem: ((2 integer)): 5597 <= 25
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2932
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7144 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: list-next/list-length/init-board/main 1: 2932 => ((1 list-address))
mem: ((1 list-address)): 7146 <= 2932
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2934 list-address) (raw)) => 2997
run: list-next/list-length/init-board/main 2: 2997 => ((2 list-address))
mem: ((2 list-address)): 7147 <= 2997
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2997
run: list-length/init-board/main 6: 2997 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 2997
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2997
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7175 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2997)
run: list-value-address/list-length/init-board/main 1: 2997 => ((1 list-address))
mem: ((1 list-address)): 7177 <= 2997
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 2997 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7178 <= 2997
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2997
run: list-length/init-board/main 3: 2997 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 2997
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 2997
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 25
run: list-length/init-board/main 5: 26 => ((2 integer))
mem: ((2 integer)): 5597 <= 26
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2997
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7206 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2997)
run: list-next/list-length/init-board/main 1: 2997 => ((1 list-address))
mem: ((1 list-address)): 7208 <= 2997
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2999 list-address) (raw)) => 3062
run: list-next/list-length/init-board/main 2: 3062 => ((2 list-address))
mem: ((2 list-address)): 7209 <= 3062
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3062
run: list-length/init-board/main 6: 3062 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3062
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3062
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7237 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3062)
run: list-value-address/list-length/init-board/main 1: 3062 => ((1 list-address))
mem: ((1 list-address)): 7239 <= 3062
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3062 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7240 <= 3062
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3062
run: list-length/init-board/main 3: 3062 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3062
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3062
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 26
run: list-length/init-board/main 5: 27 => ((2 integer))
mem: ((2 integer)): 5597 <= 27
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3062
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7268 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3062)
run: list-next/list-length/init-board/main 1: 3062 => ((1 list-address))
mem: ((1 list-address)): 7270 <= 3062
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3064 list-address) (raw)) => 3127
run: list-next/list-length/init-board/main 2: 3127 => ((2 list-address))
mem: ((2 list-address)): 7271 <= 3127
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3127
run: list-length/init-board/main 6: 3127 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3127
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3127
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7299 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3127)
run: list-value-address/list-length/init-board/main 1: 3127 => ((1 list-address))
mem: ((1 list-address)): 7301 <= 3127
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3127 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7302 <= 3127
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3127
run: list-length/init-board/main 3: 3127 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3127
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3127
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 27
run: list-length/init-board/main 5: 28 => ((2 integer))
mem: ((2 integer)): 5597 <= 28
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3127
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7330 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3127)
run: list-next/list-length/init-board/main 1: 3127 => ((1 list-address))
mem: ((1 list-address)): 7332 <= 3127
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3129 list-address) (raw)) => 3192
run: list-next/list-length/init-board/main 2: 3192 => ((2 list-address))
mem: ((2 list-address)): 7333 <= 3192
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3192
run: list-length/init-board/main 6: 3192 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3192
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3192
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7361 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3192)
run: list-value-address/list-length/init-board/main 1: 3192 => ((1 list-address))
mem: ((1 list-address)): 7363 <= 3192
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3192 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7364 <= 3192
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3192
run: list-length/init-board/main 3: 3192 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3192
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3192
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 28
run: list-length/init-board/main 5: 29 => ((2 integer))
mem: ((2 integer)): 5597 <= 29
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3192
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7392 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3192)
run: list-next/list-length/init-board/main 1: 3192 => ((1 list-address))
mem: ((1 list-address)): 7394 <= 3192
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3194 list-address) (raw)) => 3257
run: list-next/list-length/init-board/main 2: 3257 => ((2 list-address))
mem: ((2 list-address)): 7395 <= 3257
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3257
run: list-length/init-board/main 6: 3257 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3257
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3257
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7423 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3257)
run: list-value-address/list-length/init-board/main 1: 3257 => ((1 list-address))
mem: ((1 list-address)): 7425 <= 3257
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3257 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7426 <= 3257
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3257
run: list-length/init-board/main 3: 3257 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3257
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3257
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 29
run: list-length/init-board/main 5: 30 => ((2 integer))
mem: ((2 integer)): 5597 <= 30
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3257
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7454 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3257)
run: list-next/list-length/init-board/main 1: 3257 => ((1 list-address))
mem: ((1 list-address)): 7456 <= 3257
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3259 list-address) (raw)) => 3322
run: list-next/list-length/init-board/main 2: 3322 => ((2 list-address))
mem: ((2 list-address)): 7457 <= 3322
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3322
run: list-length/init-board/main 6: 3322 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3322
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3322
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7485 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3322)
run: list-value-address/list-length/init-board/main 1: 3322 => ((1 list-address))
mem: ((1 list-address)): 7487 <= 3322
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3322 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7488 <= 3322
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3322
run: list-length/init-board/main 3: 3322 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3322
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3322
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 30
run: list-length/init-board/main 5: 31 => ((2 integer))
mem: ((2 integer)): 5597 <= 31
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3322
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7516 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3322)
run: list-next/list-length/init-board/main 1: 3322 => ((1 list-address))
mem: ((1 list-address)): 7518 <= 3322
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3324 list-address) (raw)) => 3387
run: list-next/list-length/init-board/main 2: 3387 => ((2 list-address))
mem: ((2 list-address)): 7519 <= 3387
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3387
run: list-length/init-board/main 6: 3387 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3387
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3387
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7547 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3387)
run: list-value-address/list-length/init-board/main 1: 3387 => ((1 list-address))
mem: ((1 list-address)): 7549 <= 3387
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3387 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7550 <= 3387
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3387
run: list-length/init-board/main 3: 3387 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3387
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3387
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 31
run: list-length/init-board/main 5: 32 => ((2 integer))
mem: ((2 integer)): 5597 <= 32
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3387
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7578 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3387)
run: list-next/list-length/init-board/main 1: 3387 => ((1 list-address))
mem: ((1 list-address)): 7580 <= 3387
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3389 list-address) (raw)) => 3452
run: list-next/list-length/init-board/main 2: 3452 => ((2 list-address))
mem: ((2 list-address)): 7581 <= 3452
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3452
run: list-length/init-board/main 6: 3452 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3452
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3452
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7609 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: list-value-address/list-length/init-board/main 1: 3452 => ((1 list-address))
mem: ((1 list-address)): 7611 <= 3452
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3452 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7612 <= 3452
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3452
run: list-length/init-board/main 3: 3452 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3452
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3452
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 32
run: list-length/init-board/main 5: 33 => ((2 integer))
mem: ((2 integer)): 5597 <= 33
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3452
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7640 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: list-next/list-length/init-board/main 1: 3452 => ((1 list-address))
mem: ((1 list-address)): 7642 <= 3452
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3454 list-address) (raw)) => 3517
run: list-next/list-length/init-board/main 2: 3517 => ((2 list-address))
mem: ((2 list-address)): 7643 <= 3517
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3517
run: list-length/init-board/main 6: 3517 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3517
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3517
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7671 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3517)
run: list-value-address/list-length/init-board/main 1: 3517 => ((1 list-address))
mem: ((1 list-address)): 7673 <= 3517
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3517 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7674 <= 3517
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3517
run: list-length/init-board/main 3: 3517 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3517
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3517
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 33
run: list-length/init-board/main 5: 34 => ((2 integer))
mem: ((2 integer)): 5597 <= 34
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3517
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7702 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3517)
run: list-next/list-length/init-board/main 1: 3517 => ((1 list-address))
mem: ((1 list-address)): 7704 <= 3517
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3519 list-address) (raw)) => 3582
run: list-next/list-length/init-board/main 2: 3582 => ((2 list-address))
mem: ((2 list-address)): 7705 <= 3582
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3582
run: list-length/init-board/main 6: 3582 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3582
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3582
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7733 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3582)
run: list-value-address/list-length/init-board/main 1: 3582 => ((1 list-address))
mem: ((1 list-address)): 7735 <= 3582
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3582 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7736 <= 3582
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3582
run: list-length/init-board/main 3: 3582 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3582
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3582
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 34
run: list-length/init-board/main 5: 35 => ((2 integer))
mem: ((2 integer)): 5597 <= 35
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3582
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7764 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3582)
run: list-next/list-length/init-board/main 1: 3582 => ((1 list-address))
mem: ((1 list-address)): 7766 <= 3582
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3584 list-address) (raw)) => 3647
run: list-next/list-length/init-board/main 2: 3647 => ((2 list-address))
mem: ((2 list-address)): 7767 <= 3647
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3647
run: list-length/init-board/main 6: 3647 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3647
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3647
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7795 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3647)
run: list-value-address/list-length/init-board/main 1: 3647 => ((1 list-address))
mem: ((1 list-address)): 7797 <= 3647
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3647 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7798 <= 3647
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3647
run: list-length/init-board/main 3: 3647 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3647
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3647
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 35
run: list-length/init-board/main 5: 36 => ((2 integer))
mem: ((2 integer)): 5597 <= 36
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3647
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7826 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3647)
run: list-next/list-length/init-board/main 1: 3647 => ((1 list-address))
mem: ((1 list-address)): 7828 <= 3647
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3649 list-address) (raw)) => 3712
run: list-next/list-length/init-board/main 2: 3712 => ((2 list-address))
mem: ((2 list-address)): 7829 <= 3712
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3712
run: list-length/init-board/main 6: 3712 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3712
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3712
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7857 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3712)
run: list-value-address/list-length/init-board/main 1: 3712 => ((1 list-address))
mem: ((1 list-address)): 7859 <= 3712
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3712 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7860 <= 3712
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3712
run: list-length/init-board/main 3: 3712 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3712
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3712
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 36
run: list-length/init-board/main 5: 37 => ((2 integer))
mem: ((2 integer)): 5597 <= 37
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3712
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7888 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3712)
run: list-next/list-length/init-board/main 1: 3712 => ((1 list-address))
mem: ((1 list-address)): 7890 <= 3712
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3714 list-address) (raw)) => 3777
run: list-next/list-length/init-board/main 2: 3777 => ((2 list-address))
mem: ((2 list-address)): 7891 <= 3777
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3777
run: list-length/init-board/main 6: 3777 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3777
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3777
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7919 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3777)
run: list-value-address/list-length/init-board/main 1: 3777 => ((1 list-address))
mem: ((1 list-address)): 7921 <= 3777
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3777 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7922 <= 3777
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3777
run: list-length/init-board/main 3: 3777 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3777
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3777
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 37
run: list-length/init-board/main 5: 38 => ((2 integer))
mem: ((2 integer)): 5597 <= 38
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3777
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 7950 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3777)
run: list-next/list-length/init-board/main 1: 3777 => ((1 list-address))
mem: ((1 list-address)): 7952 <= 3777
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3779 list-address) (raw)) => 3842
run: list-next/list-length/init-board/main 2: 3842 => ((2 list-address))
mem: ((2 list-address)): 7953 <= 3842
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3842
run: list-length/init-board/main 6: 3842 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3842
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3842
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 7981 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3842)
run: list-value-address/list-length/init-board/main 1: 3842 => ((1 list-address))
mem: ((1 list-address)): 7983 <= 3842
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3842 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 7984 <= 3842
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3842
run: list-length/init-board/main 3: 3842 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3842
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3842
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 38
run: list-length/init-board/main 5: 39 => ((2 integer))
mem: ((2 integer)): 5597 <= 39
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3842
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8012 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3842)
run: list-next/list-length/init-board/main 1: 3842 => ((1 list-address))
mem: ((1 list-address)): 8014 <= 3842
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3844 list-address) (raw)) => 3907
run: list-next/list-length/init-board/main 2: 3907 => ((2 list-address))
mem: ((2 list-address)): 8015 <= 3907
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3907
run: list-length/init-board/main 6: 3907 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3907
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3907
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8043 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3907)
run: list-value-address/list-length/init-board/main 1: 3907 => ((1 list-address))
mem: ((1 list-address)): 8045 <= 3907
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3907 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8046 <= 3907
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3907
run: list-length/init-board/main 3: 3907 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3907
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3907
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 39
run: list-length/init-board/main 5: 40 => ((2 integer))
mem: ((2 integer)): 5597 <= 40
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3907
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8074 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3907)
run: list-next/list-length/init-board/main 1: 3907 => ((1 list-address))
mem: ((1 list-address)): 8076 <= 3907
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3909 list-address) (raw)) => 3972
run: list-next/list-length/init-board/main 2: 3972 => ((2 list-address))
mem: ((2 list-address)): 8077 <= 3972
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3972
run: list-length/init-board/main 6: 3972 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 3972
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3972
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8105 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: list-value-address/list-length/init-board/main 1: 3972 => ((1 list-address))
mem: ((1 list-address)): 8107 <= 3972
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 3972 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8108 <= 3972
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3972
run: list-length/init-board/main 3: 3972 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 3972
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 3972
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 40
run: list-length/init-board/main 5: 41 => ((2 integer))
mem: ((2 integer)): 5597 <= 41
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3972
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8136 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: list-next/list-length/init-board/main 1: 3972 => ((1 list-address))
mem: ((1 list-address)): 8138 <= 3972
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3974 list-address) (raw)) => 4037
run: list-next/list-length/init-board/main 2: 4037 => ((2 list-address))
mem: ((2 list-address)): 8139 <= 4037
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4037
run: list-length/init-board/main 6: 4037 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4037
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4037
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8167 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4037)
run: list-value-address/list-length/init-board/main 1: 4037 => ((1 list-address))
mem: ((1 list-address)): 8169 <= 4037
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4037 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8170 <= 4037
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4037
run: list-length/init-board/main 3: 4037 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4037
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4037
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 41
run: list-length/init-board/main 5: 42 => ((2 integer))
mem: ((2 integer)): 5597 <= 42
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4037
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8198 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4037)
run: list-next/list-length/init-board/main 1: 4037 => ((1 list-address))
mem: ((1 list-address)): 8200 <= 4037
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4039 list-address) (raw)) => 4102
run: list-next/list-length/init-board/main 2: 4102 => ((2 list-address))
mem: ((2 list-address)): 8201 <= 4102
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4102
run: list-length/init-board/main 6: 4102 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4102
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4102
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8229 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4102)
run: list-value-address/list-length/init-board/main 1: 4102 => ((1 list-address))
mem: ((1 list-address)): 8231 <= 4102
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4102 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8232 <= 4102
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4102
run: list-length/init-board/main 3: 4102 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4102
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4102
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 42
run: list-length/init-board/main 5: 43 => ((2 integer))
mem: ((2 integer)): 5597 <= 43
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4102
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8260 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4102)
run: list-next/list-length/init-board/main 1: 4102 => ((1 list-address))
mem: ((1 list-address)): 8262 <= 4102
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4104 list-address) (raw)) => 4167
run: list-next/list-length/init-board/main 2: 4167 => ((2 list-address))
mem: ((2 list-address)): 8263 <= 4167
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4167
run: list-length/init-board/main 6: 4167 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4167
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4167
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8291 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4167)
run: list-value-address/list-length/init-board/main 1: 4167 => ((1 list-address))
mem: ((1 list-address)): 8293 <= 4167
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4167 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8294 <= 4167
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4167
run: list-length/init-board/main 3: 4167 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4167
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4167
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 43
run: list-length/init-board/main 5: 44 => ((2 integer))
mem: ((2 integer)): 5597 <= 44
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4167
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8322 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4167)
run: list-next/list-length/init-board/main 1: 4167 => ((1 list-address))
mem: ((1 list-address)): 8324 <= 4167
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4169 list-address) (raw)) => 4232
run: list-next/list-length/init-board/main 2: 4232 => ((2 list-address))
mem: ((2 list-address)): 8325 <= 4232
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4232
run: list-length/init-board/main 6: 4232 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4232
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4232
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8353 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4232)
run: list-value-address/list-length/init-board/main 1: 4232 => ((1 list-address))
mem: ((1 list-address)): 8355 <= 4232
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4232 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8356 <= 4232
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4232
run: list-length/init-board/main 3: 4232 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4232
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4232
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 44
run: list-length/init-board/main 5: 45 => ((2 integer))
mem: ((2 integer)): 5597 <= 45
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4232
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8384 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4232)
run: list-next/list-length/init-board/main 1: 4232 => ((1 list-address))
mem: ((1 list-address)): 8386 <= 4232
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4234 list-address) (raw)) => 4297
run: list-next/list-length/init-board/main 2: 4297 => ((2 list-address))
mem: ((2 list-address)): 8387 <= 4297
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4297
run: list-length/init-board/main 6: 4297 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4297
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4297
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8415 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4297)
run: list-value-address/list-length/init-board/main 1: 4297 => ((1 list-address))
mem: ((1 list-address)): 8417 <= 4297
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4297 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8418 <= 4297
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4297
run: list-length/init-board/main 3: 4297 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4297
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4297
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 45
run: list-length/init-board/main 5: 46 => ((2 integer))
mem: ((2 integer)): 5597 <= 46
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4297
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8446 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4297)
run: list-next/list-length/init-board/main 1: 4297 => ((1 list-address))
mem: ((1 list-address)): 8448 <= 4297
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4299 list-address) (raw)) => 4362
run: list-next/list-length/init-board/main 2: 4362 => ((2 list-address))
mem: ((2 list-address)): 8449 <= 4362
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4362
run: list-length/init-board/main 6: 4362 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4362
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4362
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8477 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4362)
run: list-value-address/list-length/init-board/main 1: 4362 => ((1 list-address))
mem: ((1 list-address)): 8479 <= 4362
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4362 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8480 <= 4362
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4362
run: list-length/init-board/main 3: 4362 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4362
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4362
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 46
run: list-length/init-board/main 5: 47 => ((2 integer))
mem: ((2 integer)): 5597 <= 47
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4362
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8508 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4362)
run: list-next/list-length/init-board/main 1: 4362 => ((1 list-address))
mem: ((1 list-address)): 8510 <= 4362
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4364 list-address) (raw)) => 4427
run: list-next/list-length/init-board/main 2: 4427 => ((2 list-address))
mem: ((2 list-address)): 8511 <= 4427
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4427
run: list-length/init-board/main 6: 4427 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4427
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4427
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8539 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4427)
run: list-value-address/list-length/init-board/main 1: 4427 => ((1 list-address))
mem: ((1 list-address)): 8541 <= 4427
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4427 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8542 <= 4427
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4427
run: list-length/init-board/main 3: 4427 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4427
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4427
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 47
run: list-length/init-board/main 5: 48 => ((2 integer))
mem: ((2 integer)): 5597 <= 48
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4427
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8570 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4427)
run: list-next/list-length/init-board/main 1: 4427 => ((1 list-address))
mem: ((1 list-address)): 8572 <= 4427
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4429 list-address) (raw)) => 4492
run: list-next/list-length/init-board/main 2: 4492 => ((2 list-address))
mem: ((2 list-address)): 8573 <= 4492
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4492
run: list-length/init-board/main 6: 4492 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4492
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4492
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8601 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: list-value-address/list-length/init-board/main 1: 4492 => ((1 list-address))
mem: ((1 list-address)): 8603 <= 4492
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4492 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8604 <= 4492
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4492
run: list-length/init-board/main 3: 4492 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4492
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4492
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 48
run: list-length/init-board/main 5: 49 => ((2 integer))
mem: ((2 integer)): 5597 <= 49
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4492
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8632 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: list-next/list-length/init-board/main 1: 4492 => ((1 list-address))
mem: ((1 list-address)): 8634 <= 4492
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4494 list-address) (raw)) => 4557
run: list-next/list-length/init-board/main 2: 4557 => ((2 list-address))
mem: ((2 list-address)): 8635 <= 4557
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4557
run: list-length/init-board/main 6: 4557 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4557
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4557
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8663 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4557)
run: list-value-address/list-length/init-board/main 1: 4557 => ((1 list-address))
mem: ((1 list-address)): 8665 <= 4557
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4557 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8666 <= 4557
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4557
run: list-length/init-board/main 3: 4557 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4557
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4557
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 49
run: list-length/init-board/main 5: 50 => ((2 integer))
mem: ((2 integer)): 5597 <= 50
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4557
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8694 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4557)
run: list-next/list-length/init-board/main 1: 4557 => ((1 list-address))
mem: ((1 list-address)): 8696 <= 4557
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4559 list-address) (raw)) => 4622
run: list-next/list-length/init-board/main 2: 4622 => ((2 list-address))
mem: ((2 list-address)): 8697 <= 4622
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4622
run: list-length/init-board/main 6: 4622 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4622
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4622
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8725 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4622)
run: list-value-address/list-length/init-board/main 1: 4622 => ((1 list-address))
mem: ((1 list-address)): 8727 <= 4622
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4622 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8728 <= 4622
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4622
run: list-length/init-board/main 3: 4622 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4622
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4622
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 50
run: list-length/init-board/main 5: 51 => ((2 integer))
mem: ((2 integer)): 5597 <= 51
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4622
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8756 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4622)
run: list-next/list-length/init-board/main 1: 4622 => ((1 list-address))
mem: ((1 list-address)): 8758 <= 4622
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4624 list-address) (raw)) => 4687
run: list-next/list-length/init-board/main 2: 4687 => ((2 list-address))
mem: ((2 list-address)): 8759 <= 4687
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4687
run: list-length/init-board/main 6: 4687 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4687
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4687
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8787 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4687)
run: list-value-address/list-length/init-board/main 1: 4687 => ((1 list-address))
mem: ((1 list-address)): 8789 <= 4687
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4687 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8790 <= 4687
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4687
run: list-length/init-board/main 3: 4687 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4687
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4687
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 51
run: list-length/init-board/main 5: 52 => ((2 integer))
mem: ((2 integer)): 5597 <= 52
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4687
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8818 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4687)
run: list-next/list-length/init-board/main 1: 4687 => ((1 list-address))
mem: ((1 list-address)): 8820 <= 4687
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4689 list-address) (raw)) => 4752
run: list-next/list-length/init-board/main 2: 4752 => ((2 list-address))
mem: ((2 list-address)): 8821 <= 4752
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4752
run: list-length/init-board/main 6: 4752 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4752
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4752
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8849 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4752)
run: list-value-address/list-length/init-board/main 1: 4752 => ((1 list-address))
mem: ((1 list-address)): 8851 <= 4752
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4752 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8852 <= 4752
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4752
run: list-length/init-board/main 3: 4752 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4752
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4752
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 52
run: list-length/init-board/main 5: 53 => ((2 integer))
mem: ((2 integer)): 5597 <= 53
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4752
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8880 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4752)
run: list-next/list-length/init-board/main 1: 4752 => ((1 list-address))
mem: ((1 list-address)): 8882 <= 4752
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4754 list-address) (raw)) => 4817
run: list-next/list-length/init-board/main 2: 4817 => ((2 list-address))
mem: ((2 list-address)): 8883 <= 4817
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4817
run: list-length/init-board/main 6: 4817 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4817
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4817
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8911 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4817)
run: list-value-address/list-length/init-board/main 1: 4817 => ((1 list-address))
mem: ((1 list-address)): 8913 <= 4817
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4817 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8914 <= 4817
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4817
run: list-length/init-board/main 3: 4817 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4817
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4817
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 53
run: list-length/init-board/main 5: 54 => ((2 integer))
mem: ((2 integer)): 5597 <= 54
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4817
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 8942 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4817)
run: list-next/list-length/init-board/main 1: 4817 => ((1 list-address))
mem: ((1 list-address)): 8944 <= 4817
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4819 list-address) (raw)) => 4882
run: list-next/list-length/init-board/main 2: 4882 => ((2 list-address))
mem: ((2 list-address)): 8945 <= 4882
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4882
run: list-length/init-board/main 6: 4882 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4882
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4882
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 8973 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4882)
run: list-value-address/list-length/init-board/main 1: 4882 => ((1 list-address))
mem: ((1 list-address)): 8975 <= 4882
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4882 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 8976 <= 4882
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4882
run: list-length/init-board/main 3: 4882 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4882
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4882
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 54
run: list-length/init-board/main 5: 55 => ((2 integer))
mem: ((2 integer)): 5597 <= 55
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4882
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9004 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4882)
run: list-next/list-length/init-board/main 1: 4882 => ((1 list-address))
mem: ((1 list-address)): 9006 <= 4882
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4884 list-address) (raw)) => 4947
run: list-next/list-length/init-board/main 2: 4947 => ((2 list-address))
mem: ((2 list-address)): 9007 <= 4947
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4947
run: list-length/init-board/main 6: 4947 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 4947
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4947
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9035 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4947)
run: list-value-address/list-length/init-board/main 1: 4947 => ((1 list-address))
mem: ((1 list-address)): 9037 <= 4947
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 4947 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9038 <= 4947
schedule: scheduling list-value-address/list-length/init-board/main for further processing
schedule: list-value-address/list-length/init-board/main
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4947
run: list-length/init-board/main 3: 4947 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 4947
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 4947
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 55
run: list-length/init-board/main 5: 56 => ((2 integer))
mem: ((2 integer)): 5597 <= 56
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4947
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9066 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4947)
run: list-next/list-length/init-board/main 1: 4947 => ((1 list-address))
mem: ((1 list-address)): 9068 <= 4947
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4949 list-address) (raw)) => 5012
run: list-next/list-length/init-board/main 2: 5012 => ((2 list-address))
mem: ((2 list-address)): 9069 <= 5012
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5012
run: list-length/init-board/main 6: 5012 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 5012
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5012
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9097 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: list-value-address/list-length/init-board/main 1: 5012 => ((1 list-address))
mem: ((1 list-address)): 9099 <= 5012
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 5012 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9100 <= 5012
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5012
run: list-length/init-board/main 3: 5012 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 5012
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 5012
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 56
run: list-length/init-board/main 5: 57 => ((2 integer))
mem: ((2 integer)): 5597 <= 57
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5012
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9128 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: list-next/list-length/init-board/main 1: 5012 => ((1 list-address))
mem: ((1 list-address)): 9130 <= 5012
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5014 list-address) (raw)) => 5077
run: list-next/list-length/init-board/main 2: 5077 => ((2 list-address))
mem: ((2 list-address)): 9131 <= 5077
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5077
run: list-length/init-board/main 6: 5077 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 5077
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5077
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9159 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5077)
run: list-value-address/list-length/init-board/main 1: 5077 => ((1 list-address))
mem: ((1 list-address)): 9161 <= 5077
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 5077 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9162 <= 5077
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5077
run: list-length/init-board/main 3: 5077 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 5077
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 5077
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 57
run: list-length/init-board/main 5: 58 => ((2 integer))
mem: ((2 integer)): 5597 <= 58
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5077
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9190 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5077)
run: list-next/list-length/init-board/main 1: 5077 => ((1 list-address))
mem: ((1 list-address)): 9192 <= 5077
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5079 list-address) (raw)) => 5142
run: list-next/list-length/init-board/main 2: 5142 => ((2 list-address))
mem: ((2 list-address)): 9193 <= 5142
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5142
run: list-length/init-board/main 6: 5142 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 5142
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5142
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9221 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5142)
run: list-value-address/list-length/init-board/main 1: 5142 => ((1 list-address))
mem: ((1 list-address)): 9223 <= 5142
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 5142 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9224 <= 5142
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5142
run: list-length/init-board/main 3: 5142 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 5142
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 5142
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 58
run: list-length/init-board/main 5: 59 => ((2 integer))
mem: ((2 integer)): 5597 <= 59
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5142
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9252 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5142)
run: list-next/list-length/init-board/main 1: 5142 => ((1 list-address))
mem: ((1 list-address)): 9254 <= 5142
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5144 list-address) (raw)) => 5207
run: list-next/list-length/init-board/main 2: 5207 => ((2 list-address))
mem: ((2 list-address)): 9255 <= 5207
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5207
run: list-length/init-board/main 6: 5207 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 5207
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5207
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9283 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5207)
run: list-value-address/list-length/init-board/main 1: 5207 => ((1 list-address))
mem: ((1 list-address)): 9285 <= 5207
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 5207 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9286 <= 5207
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5207
run: list-length/init-board/main 3: 5207 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 5207
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 5207
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 59
run: list-length/init-board/main 5: 60 => ((2 integer))
mem: ((2 integer)): 5597 <= 60
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5207
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9314 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5207)
run: list-next/list-length/init-board/main 1: 5207 => ((1 list-address))
mem: ((1 list-address)): 9316 <= 5207
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5209 list-address) (raw)) => 5272
run: list-next/list-length/init-board/main 2: 5272 => ((2 list-address))
mem: ((2 list-address)): 9317 <= 5272
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5272
run: list-length/init-board/main 6: 5272 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 5272
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5272
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9345 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5272)
run: list-value-address/list-length/init-board/main 1: 5272 => ((1 list-address))
mem: ((1 list-address)): 9347 <= 5272
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 5272 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9348 <= 5272
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5272
run: list-length/init-board/main 3: 5272 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 5272
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 5272
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 60
run: list-length/init-board/main 5: 61 => ((2 integer))
mem: ((2 integer)): 5597 <= 61
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5272
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9376 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5272)
run: list-next/list-length/init-board/main 1: 5272 => ((1 list-address))
mem: ((1 list-address)): 9378 <= 5272
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5274 list-address) (raw)) => 5337
run: list-next/list-length/init-board/main 2: 5337 => ((2 list-address))
mem: ((2 list-address)): 9379 <= 5337
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5337
run: list-length/init-board/main 6: 5337 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 5337
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5337
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9407 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5337)
run: list-value-address/list-length/init-board/main 1: 5337 => ((1 list-address))
mem: ((1 list-address)): 9409 <= 5337
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 5337 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9410 <= 5337
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5337
run: list-length/init-board/main 3: 5337 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 5337
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 5337
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 61
run: list-length/init-board/main 5: 62 => ((2 integer))
mem: ((2 integer)): 5597 <= 62
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5337
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9438 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5337)
run: list-next/list-length/init-board/main 1: 5337 => ((1 list-address))
mem: ((1 list-address)): 9440 <= 5337
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5339 list-address) (raw)) => 5402
run: list-next/list-length/init-board/main 2: 5402 => ((2 list-address))
mem: ((2 list-address)): 9441 <= 5402
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5402
run: list-length/init-board/main 6: 5402 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 5402
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5402
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9469 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5402)
run: list-value-address/list-length/init-board/main 1: 5402 => ((1 list-address))
mem: ((1 list-address)): 9471 <= 5402
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 5402 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9472 <= 5402
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5402
run: list-length/init-board/main 3: 5402 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 5402
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 5402
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 62
run: list-length/init-board/main 5: 63 => ((2 integer))
mem: ((2 integer)): 5597 <= 63
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5402
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9500 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5402)
run: list-next/list-length/init-board/main 1: 5402 => ((1 list-address))
mem: ((1 list-address)): 9502 <= 5402
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5404 list-address) (raw)) => 5467
run: list-next/list-length/init-board/main 2: 5467 => ((2 list-address))
mem: ((2 list-address)): 9503 <= 5467
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5467
run: list-length/init-board/main 6: 5467 => ((1 list-address))
mem: ((1 list-address)): 5596 <= 5467
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5467
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9531 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5467)
run: list-value-address/list-length/init-board/main 1: 5467 => ((1 list-address))
mem: ((1 list-address)): 9533 <= 5467
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: 5467 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9534 <= 5467
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5467
run: list-length/init-board/main 3: 5467 => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= 5467
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => 5467
run: list-length/init-board/main 5: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
mem: ((2 integer)) => 63
run: list-length/init-board/main 5: 64 => ((2 integer))
mem: ((2 integer)): 5597 <= 64
run: list-length/init-board/main 6: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5467
run: list-next/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/list-length/init-board/main 0: 9562 => ((default-space space-address))
run: list-next/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5467)
run: list-next/list-length/init-board/main 1: 5467 => ((1 list-address))
mem: ((1 list-address)): 9564 <= 5467
run: list-next/list-length/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5469 list-address) (raw)) => nil
run: list-next/list-length/init-board/main 2: nil => ((2 list-address))
mem: ((2 list-address)): 9565 <= nil
run: list-next/list-length/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => nil
run: list-length/init-board/main 6: nil => ((1 list-address))
mem: ((1 list-address)): 5596 <= nil
run: list-length/init-board/main 7: (((jump)) ((-5 offset)))
run: list-length/init-board/main 3: (((3 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => nil
run: list-value-address/list-length/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/list-length/init-board/main 0: 9593 => ((default-space space-address))
run: list-value-address/list-length/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (nil)
run: list-value-address/list-length/init-board/main 1: nil => ((1 list-address))
mem: ((1 list-address)): 9595 <= nil
run: list-value-address/list-length/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/list-length/init-board/main 2: nil => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9596 <= nil
run: list-value-address/list-length/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => nil
run: list-length/init-board/main 3: nil => ((3 tagged-value-address))
mem: ((3 tagged-value-address)): 5598 <= nil
run: list-length/init-board/main 4: (((jump-unless)) ((3 tagged-value-address)) ((3 offset)))
mem: ((3 tagged-value-address)) => nil
run: list-length/init-board/main 8: (((reply)) ((2 integer)))
mem: ((2 integer)) => 64
run: init-board/main 2: 64 => ((2 integer))
mem: ((2 integer)): 5566 <= 64
run: init-board/main 3: (((3 boolean)) <- ((equal)) ((2 integer)) ((64 literal)))
mem: ((2 integer)) => 64
run: init-board/main 3: t => ((3 boolean))
mem: ((3 boolean)): 5567 <= t
run: init-board/main 4: (((assert)) ((3 boolean)) ((chessboard had incorrect size literal)))
mem: ((3 boolean)) => t
run: init-board/main 5: (((4 board-address)) <- ((new)) ((board literal)) ((8 literal)))
run: init-board/main 5: 9624 => ((4 board-address))
mem: ((4 board-address)): 5568 <= 9624
run: init-board/main 6: (((5 integer)) <- ((copy)) ((0 literal)))
run: init-board/main 6: 0 => ((5 integer))
mem: ((5 integer)): 5569 <= 0
run: init-board/main 7: (((6 list-address)) <- ((copy)) ((1 list-address)))
mem: ((1 list-address)) => 1372
run: init-board/main 7: 1372 => ((6 list-address))
mem: ((6 list-address)): 5570 <= 1372
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 0
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5571 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
run: init-board/main 10: 9625 => ((8 file-address-address))
mem: ((8 file-address-address)): 5572 <= 9625
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 1372
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 9633 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: init-file/init-board/main 1: 1372 => ((1 list-address))
mem: ((1 list-address)): 9635 <= 1372
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 9664 => ((2 file-address))
mem: ((2 file-address)): 9636 <= 9664
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 9637 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9638 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1372
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9673 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: list-value-address/init-file/init-board/main 1: 1372 => ((1 list-address))
mem: ((1 list-address)): 9675 <= 1372
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1372 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9676 <= 1372
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1372
run: init-file/init-board/main 6: 1372 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9639 <= 1372
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
run: init-file/init-board/main 7: 9665 => ((6 square-address))
mem: ((6 square-address)): 9640 <= 9665
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1373 location) (raw)) => R
run: init-file/init-board/main 8: #\R => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9665 <= #\R
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1372
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9704 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1372)
run: list-next/init-file/init-board/main 1: 1372 => ((1 list-address))
mem: ((1 list-address)): 9706 <= 1372
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1374 list-address) (raw)) => 1437
run: list-next/init-file/init-board/main 2: 1437 => ((2 list-address))
mem: ((2 list-address)): 9707 <= 1437
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1437
run: init-file/init-board/main 9: 1437 => ((1 list-address))
mem: ((1 list-address)): 9635 <= 1437
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 9637 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9638 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1437
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9735 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1437)
run: list-value-address/init-file/init-board/main 1: 1437 => ((1 list-address))
mem: ((1 list-address)): 9737 <= 1437
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1437 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9738 <= 1437
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1437
run: init-file/init-board/main 6: 1437 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9639 <= 1437
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
run: init-file/init-board/main 7: 9666 => ((6 square-address))
mem: ((6 square-address)): 9640 <= 9666
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1438 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9666 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1437
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9766 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1437)
run: list-next/init-file/init-board/main 1: 1437 => ((1 list-address))
mem: ((1 list-address)): 9768 <= 1437
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1439 list-address) (raw)) => 1502
run: list-next/init-file/init-board/main 2: 1502 => ((2 list-address))
mem: ((2 list-address)): 9769 <= 1502
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1502
run: init-file/init-board/main 9: 1502 => ((1 list-address))
mem: ((1 list-address)): 9635 <= 1502
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 9637 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9638 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1502
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9797 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1502)
run: list-value-address/init-file/init-board/main 1: 1502 => ((1 list-address))
mem: ((1 list-address)): 9799 <= 1502
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1502 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9800 <= 1502
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1502
run: init-file/init-board/main 6: 1502 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9639 <= 1502
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
run: init-file/init-board/main 7: 9667 => ((6 square-address))
mem: ((6 square-address)): 9640 <= 9667
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1503 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9667 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1502
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9828 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1502)
run: list-next/init-file/init-board/main 1: 1502 => ((1 list-address))
mem: ((1 list-address)): 9830 <= 1502
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1504 list-address) (raw)) => 1567
run: list-next/init-file/init-board/main 2: 1567 => ((2 list-address))
mem: ((2 list-address)): 9831 <= 1567
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1567
run: init-file/init-board/main 9: 1567 => ((1 list-address))
mem: ((1 list-address)): 9635 <= 1567
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 9637 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9638 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1567
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9859 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1567)
run: list-value-address/init-file/init-board/main 1: 1567 => ((1 list-address))
mem: ((1 list-address)): 9861 <= 1567
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1567 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9862 <= 1567
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1567
run: init-file/init-board/main 6: 1567 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9639 <= 1567
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
run: init-file/init-board/main 7: 9668 => ((6 square-address))
mem: ((6 square-address)): 9640 <= 9668
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1568 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9668 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1567
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9890 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1567)
run: list-next/init-file/init-board/main 1: 1567 => ((1 list-address))
mem: ((1 list-address)): 9892 <= 1567
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1569 list-address) (raw)) => 1632
run: list-next/init-file/init-board/main 2: 1632 => ((2 list-address))
mem: ((2 list-address)): 9893 <= 1632
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1632
run: init-file/init-board/main 9: 1632 => ((1 list-address))
mem: ((1 list-address)): 9635 <= 1632
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 9637 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9638 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1632
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9921 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1632)
run: list-value-address/init-file/init-board/main 1: 1632 => ((1 list-address))
mem: ((1 list-address)): 9923 <= 1632
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1632 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9924 <= 1632
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1632
run: init-file/init-board/main 6: 1632 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9639 <= 1632
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
run: init-file/init-board/main 7: 9669 => ((6 square-address))
mem: ((6 square-address)): 9640 <= 9669
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1633 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9669 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1632
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 9952 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1632)
run: list-next/init-file/init-board/main 1: 1632 => ((1 list-address))
mem: ((1 list-address)): 9954 <= 1632
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1634 list-address) (raw)) => 1697
run: list-next/init-file/init-board/main 2: 1697 => ((2 list-address))
mem: ((2 list-address)): 9955 <= 1697
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1697
run: init-file/init-board/main 9: 1697 => ((1 list-address))
mem: ((1 list-address)): 9635 <= 1697
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 9637 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9638 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1697
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 9983 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1697)
run: list-value-address/init-file/init-board/main 1: 1697 => ((1 list-address))
mem: ((1 list-address)): 9985 <= 1697
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1697 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 9986 <= 1697
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1697
run: init-file/init-board/main 6: 1697 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9639 <= 1697
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
run: init-file/init-board/main 7: 9670 => ((6 square-address))
mem: ((6 square-address)): 9640 <= 9670
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1698 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9670 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1697
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10014 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1697)
run: list-next/init-file/init-board/main 1: 1697 => ((1 list-address))
mem: ((1 list-address)): 10016 <= 1697
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1699 list-address) (raw)) => 1762
run: list-next/init-file/init-board/main 2: 1762 => ((2 list-address))
mem: ((2 list-address)): 10017 <= 1762
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1762
run: init-file/init-board/main 9: 1762 => ((1 list-address))
mem: ((1 list-address)): 9635 <= 1762
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 9637 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9638 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1762
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10045 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1762)
run: list-value-address/init-file/init-board/main 1: 1762 => ((1 list-address))
mem: ((1 list-address)): 10047 <= 1762
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1762 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10048 <= 1762
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1762
run: init-file/init-board/main 6: 1762 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9639 <= 1762
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
run: init-file/init-board/main 7: 9671 => ((6 square-address))
mem: ((6 square-address)): 9640 <= 9671
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1763 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9671 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1762
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10076 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1762)
run: list-next/init-file/init-board/main 1: 1762 => ((1 list-address))
mem: ((1 list-address)): 10078 <= 1762
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1764 list-address) (raw)) => 1827
run: list-next/init-file/init-board/main 2: 1827 => ((2 list-address))
mem: ((2 list-address)): 10079 <= 1827
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1827
run: init-file/init-board/main 9: 1827 => ((1 list-address))
mem: ((1 list-address)): 9635 <= 1827
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 9637 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 9638 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1827
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10107 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1827)
run: list-value-address/init-file/init-board/main 1: 1827 => ((1 list-address))
mem: ((1 list-address)): 10109 <= 1827
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1827 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10110 <= 1827
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1827
run: init-file/init-board/main 6: 1827 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 9639 <= 1827
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
run: init-file/init-board/main 7: 9672 => ((6 square-address))
mem: ((6 square-address)): 9640 <= 9672
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1828 location) (raw)) => r
run: init-file/init-board/main 8: #\r => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 9672 <= #\r
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1827
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10138 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1827)
run: list-next/init-file/init-board/main 1: 1827 => ((1 list-address))
mem: ((1 list-address)): 10140 <= 1827
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1829 list-address) (raw)) => 1892
run: list-next/init-file/init-board/main 2: 1892 => ((2 list-address))
mem: ((2 list-address)): 10141 <= 1892
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1892
run: init-file/init-board/main 9: 1892 => ((1 list-address))
mem: ((1 list-address)): 9635 <= 1892
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 9637 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 9638 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 9664
mem: ((1 list-address)) => 1892
run: init-board/main 11: 9664 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9625 <= 9664
run: init-board/main 11: 1892 => ((6 list-address))
mem: ((6 list-address)): 5570 <= 1892
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 0
run: init-board/main 12: 1 => ((5 integer))
mem: ((5 integer)): 5569 <= 1
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 1
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5571 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 1
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
run: init-board/main 10: 9626 => ((8 file-address-address))
mem: ((8 file-address-address)): 5572 <= 9626
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 1892
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 10169 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: init-file/init-board/main 1: 1892 => ((1 list-address))
mem: ((1 list-address)): 10171 <= 1892
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 10200 => ((2 file-address))
mem: ((2 file-address)): 10172 <= 10200
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 10173 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10174 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1892
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10209 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: list-value-address/init-file/init-board/main 1: 1892 => ((1 list-address))
mem: ((1 list-address)): 10211 <= 1892
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1892 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10212 <= 1892
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1892
run: init-file/init-board/main 6: 1892 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10175 <= 1892
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
run: init-file/init-board/main 7: 10201 => ((6 square-address))
mem: ((6 square-address)): 10176 <= 10201
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1893 location) (raw)) => N
run: init-file/init-board/main 8: #\N => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10201 <= #\N
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1892
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10240 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1892)
run: list-next/init-file/init-board/main 1: 1892 => ((1 list-address))
mem: ((1 list-address)): 10242 <= 1892
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1894 list-address) (raw)) => 1957
run: list-next/init-file/init-board/main 2: 1957 => ((2 list-address))
mem: ((2 list-address)): 10243 <= 1957
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 1957
run: init-file/init-board/main 9: 1957 => ((1 list-address))
mem: ((1 list-address)): 10171 <= 1957
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 10173 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10174 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 1957
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10271 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1957)
run: list-value-address/init-file/init-board/main 1: 1957 => ((1 list-address))
mem: ((1 list-address)): 10273 <= 1957
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 1957 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10274 <= 1957
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 1957
run: init-file/init-board/main 6: 1957 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10175 <= 1957
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
run: init-file/init-board/main 7: 10202 => ((6 square-address))
mem: ((6 square-address)): 10176 <= 10202
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((1958 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10202 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 1957
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10302 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (1957)
run: list-next/init-file/init-board/main 1: 1957 => ((1 list-address))
mem: ((1 list-address)): 10304 <= 1957
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((1959 list-address) (raw)) => 2022
run: list-next/init-file/init-board/main 2: 2022 => ((2 list-address))
mem: ((2 list-address)): 10305 <= 2022
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2022
run: init-file/init-board/main 9: 2022 => ((1 list-address))
mem: ((1 list-address)): 10171 <= 2022
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 10173 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10174 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2022
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10333 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2022)
run: list-value-address/init-file/init-board/main 1: 2022 => ((1 list-address))
mem: ((1 list-address)): 10335 <= 2022
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2022 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10336 <= 2022
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2022
run: init-file/init-board/main 6: 2022 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10175 <= 2022
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
run: init-file/init-board/main 7: 10203 => ((6 square-address))
mem: ((6 square-address)): 10176 <= 10203
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2023 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10203 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2022
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10364 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2022)
run: list-next/init-file/init-board/main 1: 2022 => ((1 list-address))
mem: ((1 list-address)): 10366 <= 2022
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2024 list-address) (raw)) => 2087
run: list-next/init-file/init-board/main 2: 2087 => ((2 list-address))
mem: ((2 list-address)): 10367 <= 2087
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2087
run: init-file/init-board/main 9: 2087 => ((1 list-address))
mem: ((1 list-address)): 10171 <= 2087
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 10173 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10174 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2087
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10395 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2087)
run: list-value-address/init-file/init-board/main 1: 2087 => ((1 list-address))
mem: ((1 list-address)): 10397 <= 2087
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2087 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10398 <= 2087
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2087
run: init-file/init-board/main 6: 2087 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10175 <= 2087
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
run: init-file/init-board/main 7: 10204 => ((6 square-address))
mem: ((6 square-address)): 10176 <= 10204
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2088 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10204 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2087
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10426 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2087)
run: list-next/init-file/init-board/main 1: 2087 => ((1 list-address))
mem: ((1 list-address)): 10428 <= 2087
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2089 list-address) (raw)) => 2152
run: list-next/init-file/init-board/main 2: 2152 => ((2 list-address))
mem: ((2 list-address)): 10429 <= 2152
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2152
run: init-file/init-board/main 9: 2152 => ((1 list-address))
mem: ((1 list-address)): 10171 <= 2152
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 10173 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10174 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2152
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10457 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2152)
run: list-value-address/init-file/init-board/main 1: 2152 => ((1 list-address))
mem: ((1 list-address)): 10459 <= 2152
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2152 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10460 <= 2152
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2152
run: init-file/init-board/main 6: 2152 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10175 <= 2152
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
run: init-file/init-board/main 7: 10205 => ((6 square-address))
mem: ((6 square-address)): 10176 <= 10205
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2153 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10205 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2152
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10488 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2152)
run: list-next/init-file/init-board/main 1: 2152 => ((1 list-address))
mem: ((1 list-address)): 10490 <= 2152
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2154 list-address) (raw)) => 2217
run: list-next/init-file/init-board/main 2: 2217 => ((2 list-address))
mem: ((2 list-address)): 10491 <= 2217
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2217
run: init-file/init-board/main 9: 2217 => ((1 list-address))
mem: ((1 list-address)): 10171 <= 2217
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 10173 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10174 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2217
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10519 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2217)
run: list-value-address/init-file/init-board/main 1: 2217 => ((1 list-address))
mem: ((1 list-address)): 10521 <= 2217
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2217 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10522 <= 2217
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2217
run: init-file/init-board/main 6: 2217 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10175 <= 2217
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
run: init-file/init-board/main 7: 10206 => ((6 square-address))
mem: ((6 square-address)): 10176 <= 10206
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2218 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10206 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2217
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10550 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2217)
run: list-next/init-file/init-board/main 1: 2217 => ((1 list-address))
mem: ((1 list-address)): 10552 <= 2217
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2219 list-address) (raw)) => 2282
run: list-next/init-file/init-board/main 2: 2282 => ((2 list-address))
mem: ((2 list-address)): 10553 <= 2282
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2282
run: init-file/init-board/main 9: 2282 => ((1 list-address))
mem: ((1 list-address)): 10171 <= 2282
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 10173 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10174 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2282
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10581 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2282)
run: list-value-address/init-file/init-board/main 1: 2282 => ((1 list-address))
mem: ((1 list-address)): 10583 <= 2282
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2282 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10584 <= 2282
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2282
run: init-file/init-board/main 6: 2282 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10175 <= 2282
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
run: init-file/init-board/main 7: 10207 => ((6 square-address))
mem: ((6 square-address)): 10176 <= 10207
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2283 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10207 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2282
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10612 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2282)
run: list-next/init-file/init-board/main 1: 2282 => ((1 list-address))
mem: ((1 list-address)): 10614 <= 2282
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2284 list-address) (raw)) => 2347
run: list-next/init-file/init-board/main 2: 2347 => ((2 list-address))
mem: ((2 list-address)): 10615 <= 2347
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2347
run: init-file/init-board/main 9: 2347 => ((1 list-address))
mem: ((1 list-address)): 10171 <= 2347
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 10173 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10174 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2347
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10643 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2347)
run: list-value-address/init-file/init-board/main 1: 2347 => ((1 list-address))
mem: ((1 list-address)): 10645 <= 2347
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2347 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10646 <= 2347
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2347
run: init-file/init-board/main 6: 2347 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10175 <= 2347
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
run: init-file/init-board/main 7: 10208 => ((6 square-address))
mem: ((6 square-address)): 10176 <= 10208
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2348 location) (raw)) => n
run: init-file/init-board/main 8: #\n => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10208 <= #\n
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2347
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10674 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2347)
run: list-next/init-file/init-board/main 1: 2347 => ((1 list-address))
mem: ((1 list-address)): 10676 <= 2347
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2349 list-address) (raw)) => 2412
run: list-next/init-file/init-board/main 2: 2412 => ((2 list-address))
mem: ((2 list-address)): 10677 <= 2412
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2412
run: init-file/init-board/main 9: 2412 => ((1 list-address))
mem: ((1 list-address)): 10171 <= 2412
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 10173 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 10174 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 10200
mem: ((1 list-address)) => 2412
run: init-board/main 11: 10200 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9626 <= 10200
run: init-board/main 11: 2412 => ((6 list-address))
mem: ((6 list-address)): 5570 <= 2412
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 1
run: init-board/main 12: 2 => ((5 integer))
mem: ((5 integer)): 5569 <= 2
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 2
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5571 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 2
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
run: init-board/main 10: 9627 => ((8 file-address-address))
mem: ((8 file-address-address)): 5572 <= 9627
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 2412
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 10705 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: init-file/init-board/main 1: 2412 => ((1 list-address))
mem: ((1 list-address)): 10707 <= 2412
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 10736 => ((2 file-address))
mem: ((2 file-address)): 10708 <= 10736
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 10709 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10710 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2412
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10745 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: list-value-address/init-file/init-board/main 1: 2412 => ((1 list-address))
mem: ((1 list-address)): 10747 <= 2412
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2412 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10748 <= 2412
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2412
run: init-file/init-board/main 6: 2412 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10711 <= 2412
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
run: init-file/init-board/main 7: 10737 => ((6 square-address))
mem: ((6 square-address)): 10712 <= 10737
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2413 location) (raw)) => B
run: init-file/init-board/main 8: #\B => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10737 <= #\B
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2412
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10776 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2412)
run: list-next/init-file/init-board/main 1: 2412 => ((1 list-address))
mem: ((1 list-address)): 10778 <= 2412
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2414 list-address) (raw)) => 2477
run: list-next/init-file/init-board/main 2: 2477 => ((2 list-address))
mem: ((2 list-address)): 10779 <= 2477
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2477
run: init-file/init-board/main 9: 2477 => ((1 list-address))
mem: ((1 list-address)): 10707 <= 2477
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 10709 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10710 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2477
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10807 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2477)
run: list-value-address/init-file/init-board/main 1: 2477 => ((1 list-address))
mem: ((1 list-address)): 10809 <= 2477
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2477 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10810 <= 2477
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2477
run: init-file/init-board/main 6: 2477 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10711 <= 2477
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
run: init-file/init-board/main 7: 10738 => ((6 square-address))
mem: ((6 square-address)): 10712 <= 10738
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2478 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10738 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2477
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10838 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2477)
run: list-next/init-file/init-board/main 1: 2477 => ((1 list-address))
mem: ((1 list-address)): 10840 <= 2477
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2479 list-address) (raw)) => 2542
run: list-next/init-file/init-board/main 2: 2542 => ((2 list-address))
mem: ((2 list-address)): 10841 <= 2542
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2542
run: init-file/init-board/main 9: 2542 => ((1 list-address))
mem: ((1 list-address)): 10707 <= 2542
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 10709 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10710 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2542
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10869 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2542)
run: list-value-address/init-file/init-board/main 1: 2542 => ((1 list-address))
mem: ((1 list-address)): 10871 <= 2542
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2542 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10872 <= 2542
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2542
run: init-file/init-board/main 6: 2542 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10711 <= 2542
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
run: init-file/init-board/main 7: 10739 => ((6 square-address))
mem: ((6 square-address)): 10712 <= 10739
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2543 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10739 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2542
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10900 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2542)
run: list-next/init-file/init-board/main 1: 2542 => ((1 list-address))
mem: ((1 list-address)): 10902 <= 2542
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2544 list-address) (raw)) => 2607
run: list-next/init-file/init-board/main 2: 2607 => ((2 list-address))
mem: ((2 list-address)): 10903 <= 2607
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2607
run: init-file/init-board/main 9: 2607 => ((1 list-address))
mem: ((1 list-address)): 10707 <= 2607
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 10709 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10710 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2607
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10931 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2607)
run: list-value-address/init-file/init-board/main 1: 2607 => ((1 list-address))
mem: ((1 list-address)): 10933 <= 2607
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2607 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10934 <= 2607
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2607
run: init-file/init-board/main 6: 2607 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10711 <= 2607
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
run: init-file/init-board/main 7: 10740 => ((6 square-address))
mem: ((6 square-address)): 10712 <= 10740
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2608 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10740 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2607
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 10962 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2607)
run: list-next/init-file/init-board/main 1: 2607 => ((1 list-address))
mem: ((1 list-address)): 10964 <= 2607
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2609 list-address) (raw)) => 2672
run: list-next/init-file/init-board/main 2: 2672 => ((2 list-address))
mem: ((2 list-address)): 10965 <= 2672
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2672
run: init-file/init-board/main 9: 2672 => ((1 list-address))
mem: ((1 list-address)): 10707 <= 2672
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 10709 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10710 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2672
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 10993 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2672)
run: list-value-address/init-file/init-board/main 1: 2672 => ((1 list-address))
mem: ((1 list-address)): 10995 <= 2672
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2672 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 10996 <= 2672
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2672
run: init-file/init-board/main 6: 2672 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10711 <= 2672
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
run: init-file/init-board/main 7: 10741 => ((6 square-address))
mem: ((6 square-address)): 10712 <= 10741
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2673 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10741 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2672
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11024 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2672)
run: list-next/init-file/init-board/main 1: 2672 => ((1 list-address))
mem: ((1 list-address)): 11026 <= 2672
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2674 list-address) (raw)) => 2737
run: list-next/init-file/init-board/main 2: 2737 => ((2 list-address))
mem: ((2 list-address)): 11027 <= 2737
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2737
run: init-file/init-board/main 9: 2737 => ((1 list-address))
mem: ((1 list-address)): 10707 <= 2737
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 10709 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10710 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2737
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11055 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2737)
run: list-value-address/init-file/init-board/main 1: 2737 => ((1 list-address))
mem: ((1 list-address)): 11057 <= 2737
schedule: scheduling list-value-address/init-file/init-board/main for further processing
schedule: list-value-address/init-file/init-board/main
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2737 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11058 <= 2737
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2737
run: init-file/init-board/main 6: 2737 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10711 <= 2737
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
run: init-file/init-board/main 7: 10742 => ((6 square-address))
mem: ((6 square-address)): 10712 <= 10742
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2738 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10742 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2737
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11086 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2737)
run: list-next/init-file/init-board/main 1: 2737 => ((1 list-address))
mem: ((1 list-address)): 11088 <= 2737
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2739 list-address) (raw)) => 2802
run: list-next/init-file/init-board/main 2: 2802 => ((2 list-address))
mem: ((2 list-address)): 11089 <= 2802
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2802
run: init-file/init-board/main 9: 2802 => ((1 list-address))
mem: ((1 list-address)): 10707 <= 2802
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 10709 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10710 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2802
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11117 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2802)
run: list-value-address/init-file/init-board/main 1: 2802 => ((1 list-address))
mem: ((1 list-address)): 11119 <= 2802
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2802 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11120 <= 2802
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2802
run: init-file/init-board/main 6: 2802 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10711 <= 2802
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
run: init-file/init-board/main 7: 10743 => ((6 square-address))
mem: ((6 square-address)): 10712 <= 10743
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2803 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10743 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2802
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11148 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2802)
run: list-next/init-file/init-board/main 1: 2802 => ((1 list-address))
mem: ((1 list-address)): 11150 <= 2802
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2804 list-address) (raw)) => 2867
run: list-next/init-file/init-board/main 2: 2867 => ((2 list-address))
mem: ((2 list-address)): 11151 <= 2867
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2867
run: init-file/init-board/main 9: 2867 => ((1 list-address))
mem: ((1 list-address)): 10707 <= 2867
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 10709 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 10710 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2867
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11179 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2867)
run: list-value-address/init-file/init-board/main 1: 2867 => ((1 list-address))
mem: ((1 list-address)): 11181 <= 2867
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2867 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11182 <= 2867
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2867
run: init-file/init-board/main 6: 2867 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 10711 <= 2867
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
run: init-file/init-board/main 7: 10744 => ((6 square-address))
mem: ((6 square-address)): 10712 <= 10744
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2868 location) (raw)) => b
run: init-file/init-board/main 8: #\b => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 10744 <= #\b
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2867
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11210 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2867)
run: list-next/init-file/init-board/main 1: 2867 => ((1 list-address))
mem: ((1 list-address)): 11212 <= 2867
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2869 list-address) (raw)) => 2932
run: list-next/init-file/init-board/main 2: 2932 => ((2 list-address))
mem: ((2 list-address)): 11213 <= 2932
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2932
run: init-file/init-board/main 9: 2932 => ((1 list-address))
mem: ((1 list-address)): 10707 <= 2932
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 10709 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 10710 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 10736
mem: ((1 list-address)) => 2932
run: init-board/main 11: 10736 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9627 <= 10736
run: init-board/main 11: 2932 => ((6 list-address))
mem: ((6 list-address)): 5570 <= 2932
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 2
run: init-board/main 12: 3 => ((5 integer))
mem: ((5 integer)): 5569 <= 3
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 3
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5571 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 3
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
run: init-board/main 10: 9628 => ((8 file-address-address))
mem: ((8 file-address-address)): 5572 <= 9628
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 2932
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 11241 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: init-file/init-board/main 1: 2932 => ((1 list-address))
mem: ((1 list-address)): 11243 <= 2932
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 11272 => ((2 file-address))
mem: ((2 file-address)): 11244 <= 11272
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 11245 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11246 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2932
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11281 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: list-value-address/init-file/init-board/main 1: 2932 => ((1 list-address))
mem: ((1 list-address)): 11283 <= 2932
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2932 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11284 <= 2932
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2932
run: init-file/init-board/main 6: 2932 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11247 <= 2932
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
run: init-file/init-board/main 7: 11273 => ((6 square-address))
mem: ((6 square-address)): 11248 <= 11273
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2933 location) (raw)) => Q
run: init-file/init-board/main 8: #\Q => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11273 <= #\Q
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2932
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11312 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2932)
run: list-next/init-file/init-board/main 1: 2932 => ((1 list-address))
mem: ((1 list-address)): 11314 <= 2932
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2934 list-address) (raw)) => 2997
run: list-next/init-file/init-board/main 2: 2997 => ((2 list-address))
mem: ((2 list-address)): 11315 <= 2997
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 2997
run: init-file/init-board/main 9: 2997 => ((1 list-address))
mem: ((1 list-address)): 11243 <= 2997
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 11245 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11246 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 2997
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11343 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2997)
run: list-value-address/init-file/init-board/main 1: 2997 => ((1 list-address))
mem: ((1 list-address)): 11345 <= 2997
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 2997 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11346 <= 2997
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 2997
run: init-file/init-board/main 6: 2997 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11247 <= 2997
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
run: init-file/init-board/main 7: 11274 => ((6 square-address))
mem: ((6 square-address)): 11248 <= 11274
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((2998 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11274 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 2997
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11374 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (2997)
run: list-next/init-file/init-board/main 1: 2997 => ((1 list-address))
mem: ((1 list-address)): 11376 <= 2997
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((2999 list-address) (raw)) => 3062
run: list-next/init-file/init-board/main 2: 3062 => ((2 list-address))
mem: ((2 list-address)): 11377 <= 3062
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3062
run: init-file/init-board/main 9: 3062 => ((1 list-address))
mem: ((1 list-address)): 11243 <= 3062
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 11245 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11246 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3062
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11405 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3062)
run: list-value-address/init-file/init-board/main 1: 3062 => ((1 list-address))
mem: ((1 list-address)): 11407 <= 3062
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3062 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11408 <= 3062
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3062
run: init-file/init-board/main 6: 3062 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11247 <= 3062
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
run: init-file/init-board/main 7: 11275 => ((6 square-address))
mem: ((6 square-address)): 11248 <= 11275
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3063 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11275 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3062
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11436 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3062)
run: list-next/init-file/init-board/main 1: 3062 => ((1 list-address))
mem: ((1 list-address)): 11438 <= 3062
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3064 list-address) (raw)) => 3127
run: list-next/init-file/init-board/main 2: 3127 => ((2 list-address))
mem: ((2 list-address)): 11439 <= 3127
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3127
run: init-file/init-board/main 9: 3127 => ((1 list-address))
mem: ((1 list-address)): 11243 <= 3127
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 11245 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11246 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3127
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11467 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3127)
run: list-value-address/init-file/init-board/main 1: 3127 => ((1 list-address))
mem: ((1 list-address)): 11469 <= 3127
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3127 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11470 <= 3127
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3127
run: init-file/init-board/main 6: 3127 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11247 <= 3127
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
run: init-file/init-board/main 7: 11276 => ((6 square-address))
mem: ((6 square-address)): 11248 <= 11276
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3128 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11276 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3127
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11498 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3127)
run: list-next/init-file/init-board/main 1: 3127 => ((1 list-address))
mem: ((1 list-address)): 11500 <= 3127
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3129 list-address) (raw)) => 3192
run: list-next/init-file/init-board/main 2: 3192 => ((2 list-address))
mem: ((2 list-address)): 11501 <= 3192
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3192
run: init-file/init-board/main 9: 3192 => ((1 list-address))
mem: ((1 list-address)): 11243 <= 3192
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 11245 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11246 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3192
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11529 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3192)
run: list-value-address/init-file/init-board/main 1: 3192 => ((1 list-address))
mem: ((1 list-address)): 11531 <= 3192
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3192 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11532 <= 3192
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3192
run: init-file/init-board/main 6: 3192 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11247 <= 3192
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
run: init-file/init-board/main 7: 11277 => ((6 square-address))
mem: ((6 square-address)): 11248 <= 11277
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3193 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11277 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3192
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11560 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3192)
run: list-next/init-file/init-board/main 1: 3192 => ((1 list-address))
mem: ((1 list-address)): 11562 <= 3192
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3194 list-address) (raw)) => 3257
run: list-next/init-file/init-board/main 2: 3257 => ((2 list-address))
mem: ((2 list-address)): 11563 <= 3257
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3257
run: init-file/init-board/main 9: 3257 => ((1 list-address))
mem: ((1 list-address)): 11243 <= 3257
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 11245 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11246 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3257
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11591 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3257)
run: list-value-address/init-file/init-board/main 1: 3257 => ((1 list-address))
mem: ((1 list-address)): 11593 <= 3257
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3257 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11594 <= 3257
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3257
run: init-file/init-board/main 6: 3257 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11247 <= 3257
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
run: init-file/init-board/main 7: 11278 => ((6 square-address))
mem: ((6 square-address)): 11248 <= 11278
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3258 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11278 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3257
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11622 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3257)
run: list-next/init-file/init-board/main 1: 3257 => ((1 list-address))
mem: ((1 list-address)): 11624 <= 3257
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3259 list-address) (raw)) => 3322
run: list-next/init-file/init-board/main 2: 3322 => ((2 list-address))
mem: ((2 list-address)): 11625 <= 3322
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3322
run: init-file/init-board/main 9: 3322 => ((1 list-address))
mem: ((1 list-address)): 11243 <= 3322
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 11245 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11246 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3322
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11653 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3322)
run: list-value-address/init-file/init-board/main 1: 3322 => ((1 list-address))
mem: ((1 list-address)): 11655 <= 3322
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3322 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11656 <= 3322
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3322
run: init-file/init-board/main 6: 3322 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11247 <= 3322
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
run: init-file/init-board/main 7: 11279 => ((6 square-address))
mem: ((6 square-address)): 11248 <= 11279
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3323 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11279 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3322
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11684 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3322)
run: list-next/init-file/init-board/main 1: 3322 => ((1 list-address))
mem: ((1 list-address)): 11686 <= 3322
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3324 list-address) (raw)) => 3387
run: list-next/init-file/init-board/main 2: 3387 => ((2 list-address))
mem: ((2 list-address)): 11687 <= 3387
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3387
run: init-file/init-board/main 9: 3387 => ((1 list-address))
mem: ((1 list-address)): 11243 <= 3387
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 11245 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11246 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3387
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11715 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3387)
run: list-value-address/init-file/init-board/main 1: 3387 => ((1 list-address))
mem: ((1 list-address)): 11717 <= 3387
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3387 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11718 <= 3387
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3387
run: init-file/init-board/main 6: 3387 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11247 <= 3387
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
run: init-file/init-board/main 7: 11280 => ((6 square-address))
mem: ((6 square-address)): 11248 <= 11280
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3388 location) (raw)) => q
run: init-file/init-board/main 8: #\q => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11280 <= #\q
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3387
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11746 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3387)
run: list-next/init-file/init-board/main 1: 3387 => ((1 list-address))
mem: ((1 list-address)): 11748 <= 3387
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3389 list-address) (raw)) => 3452
run: list-next/init-file/init-board/main 2: 3452 => ((2 list-address))
mem: ((2 list-address)): 11749 <= 3452
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3452
run: init-file/init-board/main 9: 3452 => ((1 list-address))
mem: ((1 list-address)): 11243 <= 3452
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 11245 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 11246 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 11272
mem: ((1 list-address)) => 3452
run: init-board/main 11: 11272 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9628 <= 11272
run: init-board/main 11: 3452 => ((6 list-address))
mem: ((6 list-address)): 5570 <= 3452
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 3
run: init-board/main 12: 4 => ((5 integer))
mem: ((5 integer)): 5569 <= 4
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 4
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5571 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 4
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
run: init-board/main 10: 9629 => ((8 file-address-address))
mem: ((8 file-address-address)): 5572 <= 9629
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 3452
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 11777 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: init-file/init-board/main 1: 3452 => ((1 list-address))
mem: ((1 list-address)): 11779 <= 3452
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 11808 => ((2 file-address))
mem: ((2 file-address)): 11780 <= 11808
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 11781 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11782 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3452
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11817 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: list-value-address/init-file/init-board/main 1: 3452 => ((1 list-address))
mem: ((1 list-address)): 11819 <= 3452
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3452 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11820 <= 3452
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3452
run: init-file/init-board/main 6: 3452 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11783 <= 3452
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
run: init-file/init-board/main 7: 11809 => ((6 square-address))
mem: ((6 square-address)): 11784 <= 11809
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3453 location) (raw)) => K
run: init-file/init-board/main 8: #\K => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11809 <= #\K
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3452
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11848 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3452)
run: list-next/init-file/init-board/main 1: 3452 => ((1 list-address))
mem: ((1 list-address)): 11850 <= 3452
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3454 list-address) (raw)) => 3517
run: list-next/init-file/init-board/main 2: 3517 => ((2 list-address))
mem: ((2 list-address)): 11851 <= 3517
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3517
run: init-file/init-board/main 9: 3517 => ((1 list-address))
mem: ((1 list-address)): 11779 <= 3517
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 11781 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11782 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3517
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11879 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3517)
run: list-value-address/init-file/init-board/main 1: 3517 => ((1 list-address))
mem: ((1 list-address)): 11881 <= 3517
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3517 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11882 <= 3517
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3517
run: init-file/init-board/main 6: 3517 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11783 <= 3517
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
run: init-file/init-board/main 7: 11810 => ((6 square-address))
mem: ((6 square-address)): 11784 <= 11810
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3518 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11810 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3517
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11910 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3517)
run: list-next/init-file/init-board/main 1: 3517 => ((1 list-address))
mem: ((1 list-address)): 11912 <= 3517
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3519 list-address) (raw)) => 3582
run: list-next/init-file/init-board/main 2: 3582 => ((2 list-address))
mem: ((2 list-address)): 11913 <= 3582
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3582
run: init-file/init-board/main 9: 3582 => ((1 list-address))
mem: ((1 list-address)): 11779 <= 3582
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 11781 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11782 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3582
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 11941 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3582)
run: list-value-address/init-file/init-board/main 1: 3582 => ((1 list-address))
mem: ((1 list-address)): 11943 <= 3582
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3582 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 11944 <= 3582
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3582
run: init-file/init-board/main 6: 3582 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11783 <= 3582
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
run: init-file/init-board/main 7: 11811 => ((6 square-address))
mem: ((6 square-address)): 11784 <= 11811
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3583 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11811 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3582
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 11972 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3582)
run: list-next/init-file/init-board/main 1: 3582 => ((1 list-address))
mem: ((1 list-address)): 11974 <= 3582
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3584 list-address) (raw)) => 3647
run: list-next/init-file/init-board/main 2: 3647 => ((2 list-address))
mem: ((2 list-address)): 11975 <= 3647
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3647
run: init-file/init-board/main 9: 3647 => ((1 list-address))
mem: ((1 list-address)): 11779 <= 3647
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 11781 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11782 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3647
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12003 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3647)
run: list-value-address/init-file/init-board/main 1: 3647 => ((1 list-address))
mem: ((1 list-address)): 12005 <= 3647
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3647 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12006 <= 3647
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3647
run: init-file/init-board/main 6: 3647 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11783 <= 3647
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
run: init-file/init-board/main 7: 11812 => ((6 square-address))
mem: ((6 square-address)): 11784 <= 11812
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3648 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11812 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3647
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12034 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3647)
run: list-next/init-file/init-board/main 1: 3647 => ((1 list-address))
mem: ((1 list-address)): 12036 <= 3647
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3649 list-address) (raw)) => 3712
run: list-next/init-file/init-board/main 2: 3712 => ((2 list-address))
mem: ((2 list-address)): 12037 <= 3712
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3712
run: init-file/init-board/main 9: 3712 => ((1 list-address))
mem: ((1 list-address)): 11779 <= 3712
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 11781 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11782 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3712
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12065 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3712)
run: list-value-address/init-file/init-board/main 1: 3712 => ((1 list-address))
mem: ((1 list-address)): 12067 <= 3712
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3712 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12068 <= 3712
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3712
run: init-file/init-board/main 6: 3712 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11783 <= 3712
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
run: init-file/init-board/main 7: 11813 => ((6 square-address))
mem: ((6 square-address)): 11784 <= 11813
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3713 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11813 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3712
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12096 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3712)
run: list-next/init-file/init-board/main 1: 3712 => ((1 list-address))
mem: ((1 list-address)): 12098 <= 3712
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3714 list-address) (raw)) => 3777
run: list-next/init-file/init-board/main 2: 3777 => ((2 list-address))
mem: ((2 list-address)): 12099 <= 3777
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3777
run: init-file/init-board/main 9: 3777 => ((1 list-address))
mem: ((1 list-address)): 11779 <= 3777
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 11781 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11782 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3777
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12127 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3777)
run: list-value-address/init-file/init-board/main 1: 3777 => ((1 list-address))
mem: ((1 list-address)): 12129 <= 3777
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3777 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12130 <= 3777
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3777
run: init-file/init-board/main 6: 3777 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11783 <= 3777
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
run: init-file/init-board/main 7: 11814 => ((6 square-address))
mem: ((6 square-address)): 11784 <= 11814
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3778 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11814 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3777
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12158 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3777)
run: list-next/init-file/init-board/main 1: 3777 => ((1 list-address))
mem: ((1 list-address)): 12160 <= 3777
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3779 list-address) (raw)) => 3842
run: list-next/init-file/init-board/main 2: 3842 => ((2 list-address))
mem: ((2 list-address)): 12161 <= 3842
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3842
run: init-file/init-board/main 9: 3842 => ((1 list-address))
mem: ((1 list-address)): 11779 <= 3842
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 11781 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11782 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3842
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12189 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3842)
run: list-value-address/init-file/init-board/main 1: 3842 => ((1 list-address))
mem: ((1 list-address)): 12191 <= 3842
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3842 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12192 <= 3842
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3842
run: init-file/init-board/main 6: 3842 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11783 <= 3842
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
run: init-file/init-board/main 7: 11815 => ((6 square-address))
mem: ((6 square-address)): 11784 <= 11815
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3843 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11815 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3842
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12220 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3842)
run: list-next/init-file/init-board/main 1: 3842 => ((1 list-address))
mem: ((1 list-address)): 12222 <= 3842
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3844 list-address) (raw)) => 3907
run: list-next/init-file/init-board/main 2: 3907 => ((2 list-address))
mem: ((2 list-address)): 12223 <= 3907
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3907
run: init-file/init-board/main 9: 3907 => ((1 list-address))
mem: ((1 list-address)): 11779 <= 3907
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 11781 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 11782 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3907
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12251 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3907)
run: list-value-address/init-file/init-board/main 1: 3907 => ((1 list-address))
mem: ((1 list-address)): 12253 <= 3907
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3907 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12254 <= 3907
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3907
run: init-file/init-board/main 6: 3907 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 11783 <= 3907
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
run: init-file/init-board/main 7: 11816 => ((6 square-address))
mem: ((6 square-address)): 11784 <= 11816
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3908 location) (raw)) => k
run: init-file/init-board/main 8: #\k => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 11816 <= #\k
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3907
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12282 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3907)
run: list-next/init-file/init-board/main 1: 3907 => ((1 list-address))
mem: ((1 list-address)): 12284 <= 3907
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3909 list-address) (raw)) => 3972
run: list-next/init-file/init-board/main 2: 3972 => ((2 list-address))
mem: ((2 list-address)): 12285 <= 3972
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 3972
run: init-file/init-board/main 9: 3972 => ((1 list-address))
mem: ((1 list-address)): 11779 <= 3972
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 11781 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 11782 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 11808
mem: ((1 list-address)) => 3972
run: init-board/main 11: 11808 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9629 <= 11808
run: init-board/main 11: 3972 => ((6 list-address))
mem: ((6 list-address)): 5570 <= 3972
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 4
run: init-board/main 12: 5 => ((5 integer))
mem: ((5 integer)): 5569 <= 5
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 5
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5571 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 5
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
run: init-board/main 10: 9630 => ((8 file-address-address))
mem: ((8 file-address-address)): 5572 <= 9630
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 3972
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 12313 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: init-file/init-board/main 1: 3972 => ((1 list-address))
mem: ((1 list-address)): 12315 <= 3972
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 12344 => ((2 file-address))
mem: ((2 file-address)): 12316 <= 12344
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 12317 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12318 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 3972
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12353 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: list-value-address/init-file/init-board/main 1: 3972 => ((1 list-address))
mem: ((1 list-address)): 12355 <= 3972
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 3972 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12356 <= 3972
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 3972
run: init-file/init-board/main 6: 3972 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12319 <= 3972
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
run: init-file/init-board/main 7: 12345 => ((6 square-address))
mem: ((6 square-address)): 12320 <= 12345
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((3973 location) (raw)) => B
run: init-file/init-board/main 8: #\B => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12345 <= #\B
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 3972
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12384 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (3972)
run: list-next/init-file/init-board/main 1: 3972 => ((1 list-address))
mem: ((1 list-address)): 12386 <= 3972
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((3974 list-address) (raw)) => 4037
run: list-next/init-file/init-board/main 2: 4037 => ((2 list-address))
mem: ((2 list-address)): 12387 <= 4037
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4037
run: init-file/init-board/main 9: 4037 => ((1 list-address))
mem: ((1 list-address)): 12315 <= 4037
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 12317 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12318 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4037
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12415 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4037)
run: list-value-address/init-file/init-board/main 1: 4037 => ((1 list-address))
mem: ((1 list-address)): 12417 <= 4037
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4037 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12418 <= 4037
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4037
run: init-file/init-board/main 6: 4037 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12319 <= 4037
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
run: init-file/init-board/main 7: 12346 => ((6 square-address))
mem: ((6 square-address)): 12320 <= 12346
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4038 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12346 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4037
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12446 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4037)
run: list-next/init-file/init-board/main 1: 4037 => ((1 list-address))
mem: ((1 list-address)): 12448 <= 4037
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4039 list-address) (raw)) => 4102
run: list-next/init-file/init-board/main 2: 4102 => ((2 list-address))
mem: ((2 list-address)): 12449 <= 4102
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4102
run: init-file/init-board/main 9: 4102 => ((1 list-address))
mem: ((1 list-address)): 12315 <= 4102
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 12317 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12318 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4102
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12477 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4102)
run: list-value-address/init-file/init-board/main 1: 4102 => ((1 list-address))
mem: ((1 list-address)): 12479 <= 4102
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4102 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12480 <= 4102
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4102
run: init-file/init-board/main 6: 4102 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12319 <= 4102
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
run: init-file/init-board/main 7: 12347 => ((6 square-address))
mem: ((6 square-address)): 12320 <= 12347
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4103 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12347 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4102
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12508 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4102)
run: list-next/init-file/init-board/main 1: 4102 => ((1 list-address))
mem: ((1 list-address)): 12510 <= 4102
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4104 list-address) (raw)) => 4167
run: list-next/init-file/init-board/main 2: 4167 => ((2 list-address))
mem: ((2 list-address)): 12511 <= 4167
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4167
run: init-file/init-board/main 9: 4167 => ((1 list-address))
mem: ((1 list-address)): 12315 <= 4167
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 12317 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12318 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4167
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12539 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4167)
run: list-value-address/init-file/init-board/main 1: 4167 => ((1 list-address))
mem: ((1 list-address)): 12541 <= 4167
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4167 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12542 <= 4167
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4167
run: init-file/init-board/main 6: 4167 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12319 <= 4167
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
run: init-file/init-board/main 7: 12348 => ((6 square-address))
mem: ((6 square-address)): 12320 <= 12348
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4168 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12348 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4167
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12570 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4167)
run: list-next/init-file/init-board/main 1: 4167 => ((1 list-address))
mem: ((1 list-address)): 12572 <= 4167
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4169 list-address) (raw)) => 4232
run: list-next/init-file/init-board/main 2: 4232 => ((2 list-address))
mem: ((2 list-address)): 12573 <= 4232
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4232
run: init-file/init-board/main 9: 4232 => ((1 list-address))
mem: ((1 list-address)): 12315 <= 4232
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 12317 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12318 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4232
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12601 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4232)
run: list-value-address/init-file/init-board/main 1: 4232 => ((1 list-address))
mem: ((1 list-address)): 12603 <= 4232
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4232 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12604 <= 4232
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4232
run: init-file/init-board/main 6: 4232 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12319 <= 4232
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
run: init-file/init-board/main 7: 12349 => ((6 square-address))
mem: ((6 square-address)): 12320 <= 12349
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4233 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12349 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4232
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12632 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4232)
run: list-next/init-file/init-board/main 1: 4232 => ((1 list-address))
mem: ((1 list-address)): 12634 <= 4232
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4234 list-address) (raw)) => 4297
run: list-next/init-file/init-board/main 2: 4297 => ((2 list-address))
mem: ((2 list-address)): 12635 <= 4297
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4297
run: init-file/init-board/main 9: 4297 => ((1 list-address))
mem: ((1 list-address)): 12315 <= 4297
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 12317 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12318 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4297
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12663 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4297)
run: list-value-address/init-file/init-board/main 1: 4297 => ((1 list-address))
mem: ((1 list-address)): 12665 <= 4297
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4297 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12666 <= 4297
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4297
run: init-file/init-board/main 6: 4297 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12319 <= 4297
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
run: init-file/init-board/main 7: 12350 => ((6 square-address))
mem: ((6 square-address)): 12320 <= 12350
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4298 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12350 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4297
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12694 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4297)
run: list-next/init-file/init-board/main 1: 4297 => ((1 list-address))
mem: ((1 list-address)): 12696 <= 4297
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4299 list-address) (raw)) => 4362
run: list-next/init-file/init-board/main 2: 4362 => ((2 list-address))
mem: ((2 list-address)): 12697 <= 4362
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4362
run: init-file/init-board/main 9: 4362 => ((1 list-address))
mem: ((1 list-address)): 12315 <= 4362
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 12317 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12318 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4362
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12725 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4362)
run: list-value-address/init-file/init-board/main 1: 4362 => ((1 list-address))
mem: ((1 list-address)): 12727 <= 4362
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4362 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12728 <= 4362
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4362
run: init-file/init-board/main 6: 4362 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12319 <= 4362
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
run: init-file/init-board/main 7: 12351 => ((6 square-address))
mem: ((6 square-address)): 12320 <= 12351
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4363 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12351 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4362
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12756 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4362)
run: list-next/init-file/init-board/main 1: 4362 => ((1 list-address))
mem: ((1 list-address)): 12758 <= 4362
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4364 list-address) (raw)) => 4427
run: list-next/init-file/init-board/main 2: 4427 => ((2 list-address))
mem: ((2 list-address)): 12759 <= 4427
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4427
run: init-file/init-board/main 9: 4427 => ((1 list-address))
mem: ((1 list-address)): 12315 <= 4427
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 12317 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12318 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4427
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12787 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4427)
run: list-value-address/init-file/init-board/main 1: 4427 => ((1 list-address))
mem: ((1 list-address)): 12789 <= 4427
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4427 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12790 <= 4427
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4427
run: init-file/init-board/main 6: 4427 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12319 <= 4427
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
run: init-file/init-board/main 7: 12352 => ((6 square-address))
mem: ((6 square-address)): 12320 <= 12352
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4428 location) (raw)) => b
run: init-file/init-board/main 8: #\b => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12352 <= #\b
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4427
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12818 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4427)
run: list-next/init-file/init-board/main 1: 4427 => ((1 list-address))
mem: ((1 list-address)): 12820 <= 4427
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4429 list-address) (raw)) => 4492
run: list-next/init-file/init-board/main 2: 4492 => ((2 list-address))
mem: ((2 list-address)): 12821 <= 4492
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4492
run: init-file/init-board/main 9: 4492 => ((1 list-address))
mem: ((1 list-address)): 12315 <= 4492
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 12317 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 12318 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 12344
mem: ((1 list-address)) => 4492
run: init-board/main 11: 12344 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9630 <= 12344
run: init-board/main 11: 4492 => ((6 list-address))
mem: ((6 list-address)): 5570 <= 4492
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 5
run: init-board/main 12: 6 => ((5 integer))
mem: ((5 integer)): 5569 <= 6
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 6
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5571 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 6
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
run: init-board/main 10: 9631 => ((8 file-address-address))
mem: ((8 file-address-address)): 5572 <= 9631
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 4492
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 12849 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: init-file/init-board/main 1: 4492 => ((1 list-address))
mem: ((1 list-address)): 12851 <= 4492
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 12880 => ((2 file-address))
mem: ((2 file-address)): 12852 <= 12880
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 12853 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12854 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4492
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12889 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: list-value-address/init-file/init-board/main 1: 4492 => ((1 list-address))
mem: ((1 list-address)): 12891 <= 4492
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4492 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12892 <= 4492
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4492
run: init-file/init-board/main 6: 4492 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12855 <= 4492
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
run: init-file/init-board/main 7: 12881 => ((6 square-address))
mem: ((6 square-address)): 12856 <= 12881
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4493 location) (raw)) => N
run: init-file/init-board/main 8: #\N => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12881 <= #\N
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4492
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12920 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4492)
run: list-next/init-file/init-board/main 1: 4492 => ((1 list-address))
mem: ((1 list-address)): 12922 <= 4492
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4494 list-address) (raw)) => 4557
run: list-next/init-file/init-board/main 2: 4557 => ((2 list-address))
mem: ((2 list-address)): 12923 <= 4557
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4557
run: init-file/init-board/main 9: 4557 => ((1 list-address))
mem: ((1 list-address)): 12851 <= 4557
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 12853 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12854 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4557
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 12951 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4557)
run: list-value-address/init-file/init-board/main 1: 4557 => ((1 list-address))
mem: ((1 list-address)): 12953 <= 4557
schedule: scheduling list-value-address/init-file/init-board/main for further processing
schedule: list-value-address/init-file/init-board/main
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4557 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 12954 <= 4557
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4557
run: init-file/init-board/main 6: 4557 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12855 <= 4557
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
run: init-file/init-board/main 7: 12882 => ((6 square-address))
mem: ((6 square-address)): 12856 <= 12882
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4558 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12882 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4557
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 12982 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4557)
run: list-next/init-file/init-board/main 1: 4557 => ((1 list-address))
mem: ((1 list-address)): 12984 <= 4557
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4559 list-address) (raw)) => 4622
run: list-next/init-file/init-board/main 2: 4622 => ((2 list-address))
mem: ((2 list-address)): 12985 <= 4622
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4622
run: init-file/init-board/main 9: 4622 => ((1 list-address))
mem: ((1 list-address)): 12851 <= 4622
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 12853 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12854 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4622
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13013 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4622)
run: list-value-address/init-file/init-board/main 1: 4622 => ((1 list-address))
mem: ((1 list-address)): 13015 <= 4622
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4622 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13016 <= 4622
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4622
run: init-file/init-board/main 6: 4622 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12855 <= 4622
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
run: init-file/init-board/main 7: 12883 => ((6 square-address))
mem: ((6 square-address)): 12856 <= 12883
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4623 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12883 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4622
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13044 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4622)
run: list-next/init-file/init-board/main 1: 4622 => ((1 list-address))
mem: ((1 list-address)): 13046 <= 4622
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4624 list-address) (raw)) => 4687
run: list-next/init-file/init-board/main 2: 4687 => ((2 list-address))
mem: ((2 list-address)): 13047 <= 4687
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4687
run: init-file/init-board/main 9: 4687 => ((1 list-address))
mem: ((1 list-address)): 12851 <= 4687
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 12853 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12854 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4687
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13075 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4687)
run: list-value-address/init-file/init-board/main 1: 4687 => ((1 list-address))
mem: ((1 list-address)): 13077 <= 4687
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4687 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13078 <= 4687
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4687
run: init-file/init-board/main 6: 4687 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12855 <= 4687
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
run: init-file/init-board/main 7: 12884 => ((6 square-address))
mem: ((6 square-address)): 12856 <= 12884
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4688 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12884 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4687
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13106 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4687)
run: list-next/init-file/init-board/main 1: 4687 => ((1 list-address))
mem: ((1 list-address)): 13108 <= 4687
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4689 list-address) (raw)) => 4752
run: list-next/init-file/init-board/main 2: 4752 => ((2 list-address))
mem: ((2 list-address)): 13109 <= 4752
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4752
run: init-file/init-board/main 9: 4752 => ((1 list-address))
mem: ((1 list-address)): 12851 <= 4752
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 12853 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12854 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4752
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13137 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4752)
run: list-value-address/init-file/init-board/main 1: 4752 => ((1 list-address))
mem: ((1 list-address)): 13139 <= 4752
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4752 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13140 <= 4752
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4752
run: init-file/init-board/main 6: 4752 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12855 <= 4752
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
run: init-file/init-board/main 7: 12885 => ((6 square-address))
mem: ((6 square-address)): 12856 <= 12885
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4753 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12885 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4752
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13168 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4752)
run: list-next/init-file/init-board/main 1: 4752 => ((1 list-address))
mem: ((1 list-address)): 13170 <= 4752
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4754 list-address) (raw)) => 4817
run: list-next/init-file/init-board/main 2: 4817 => ((2 list-address))
mem: ((2 list-address)): 13171 <= 4817
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4817
run: init-file/init-board/main 9: 4817 => ((1 list-address))
mem: ((1 list-address)): 12851 <= 4817
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 12853 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12854 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4817
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13199 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4817)
run: list-value-address/init-file/init-board/main 1: 4817 => ((1 list-address))
mem: ((1 list-address)): 13201 <= 4817
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4817 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13202 <= 4817
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4817
run: init-file/init-board/main 6: 4817 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12855 <= 4817
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
run: init-file/init-board/main 7: 12886 => ((6 square-address))
mem: ((6 square-address)): 12856 <= 12886
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4818 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12886 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4817
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13230 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4817)
run: list-next/init-file/init-board/main 1: 4817 => ((1 list-address))
mem: ((1 list-address)): 13232 <= 4817
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4819 list-address) (raw)) => 4882
run: list-next/init-file/init-board/main 2: 4882 => ((2 list-address))
mem: ((2 list-address)): 13233 <= 4882
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4882
run: init-file/init-board/main 9: 4882 => ((1 list-address))
mem: ((1 list-address)): 12851 <= 4882
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 12853 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12854 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4882
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13261 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4882)
run: list-value-address/init-file/init-board/main 1: 4882 => ((1 list-address))
mem: ((1 list-address)): 13263 <= 4882
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4882 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13264 <= 4882
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4882
run: init-file/init-board/main 6: 4882 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12855 <= 4882
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
run: init-file/init-board/main 7: 12887 => ((6 square-address))
mem: ((6 square-address)): 12856 <= 12887
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4883 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12887 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4882
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13292 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4882)
run: list-next/init-file/init-board/main 1: 4882 => ((1 list-address))
mem: ((1 list-address)): 13294 <= 4882
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4884 list-address) (raw)) => 4947
run: list-next/init-file/init-board/main 2: 4947 => ((2 list-address))
mem: ((2 list-address)): 13295 <= 4947
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 4947
run: init-file/init-board/main 9: 4947 => ((1 list-address))
mem: ((1 list-address)): 12851 <= 4947
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 12853 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 12854 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 4947
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13323 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4947)
run: list-value-address/init-file/init-board/main 1: 4947 => ((1 list-address))
mem: ((1 list-address)): 13325 <= 4947
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 4947 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13326 <= 4947
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 4947
run: init-file/init-board/main 6: 4947 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 12855 <= 4947
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
run: init-file/init-board/main 7: 12888 => ((6 square-address))
mem: ((6 square-address)): 12856 <= 12888
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((4948 location) (raw)) => n
run: init-file/init-board/main 8: #\n => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 12888 <= #\n
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 4947
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13354 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (4947)
run: list-next/init-file/init-board/main 1: 4947 => ((1 list-address))
mem: ((1 list-address)): 13356 <= 4947
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((4949 list-address) (raw)) => 5012
run: list-next/init-file/init-board/main 2: 5012 => ((2 list-address))
mem: ((2 list-address)): 13357 <= 5012
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5012
run: init-file/init-board/main 9: 5012 => ((1 list-address))
mem: ((1 list-address)): 12851 <= 5012
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 12853 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 12854 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 12880
mem: ((1 list-address)) => 5012
run: init-board/main 11: 12880 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9631 <= 12880
run: init-board/main 11: 5012 => ((6 list-address))
mem: ((6 list-address)): 5570 <= 5012
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 6
run: init-board/main 12: 7 => ((5 integer))
mem: ((5 integer)): 5569 <= 7
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 7
run: init-board/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5571 <= nil
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => nil
run: init-board/main 10: (((8 file-address-address)) <- ((index-address)) ((4 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 7
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
run: init-board/main 10: 9632 => ((8 file-address-address))
mem: ((8 file-address-address)): 5572 <= 9632
run: init-board/main 11: (((8 file-address-address) (deref)) ((6 list-address)) <- ((init-file)) ((6 list-address)))
mem: ((6 list-address)) => 5012
run: init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-file/init-board/main 0: 13385 => ((default-space space-address))
run: init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: init-file/init-board/main 1: 5012 => ((1 list-address))
mem: ((1 list-address)): 13387 <= 5012
run: init-file/init-board/main 2: (((2 file-address)) <- ((new)) ((file literal)) ((8 literal)))
run: init-file/init-board/main 2: 13416 => ((2 file-address))
mem: ((2 file-address)): 13388 <= 13416
run: init-file/init-board/main 3: (((3 integer)) <- ((copy)) ((0 literal)))
run: init-file/init-board/main 3: 0 => ((3 integer))
mem: ((3 integer)): 13389 <= 0
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13390 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5012
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13425 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: list-value-address/init-file/init-board/main 1: 5012 => ((1 list-address))
mem: ((1 list-address)): 13427 <= 5012
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 5012 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13428 <= 5012
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5012
run: init-file/init-board/main 6: 5012 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13391 <= 5012
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
run: init-file/init-board/main 7: 13417 => ((6 square-address))
mem: ((6 square-address)): 13392 <= 13417
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((5013 location) (raw)) => R
run: init-file/init-board/main 8: #\R => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13417 <= #\R
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5012
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13456 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5012)
run: list-next/init-file/init-board/main 1: 5012 => ((1 list-address))
mem: ((1 list-address)): 13458 <= 5012
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5014 list-address) (raw)) => 5077
run: list-next/init-file/init-board/main 2: 5077 => ((2 list-address))
mem: ((2 list-address)): 13459 <= 5077
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5077
run: init-file/init-board/main 9: 5077 => ((1 list-address))
mem: ((1 list-address)): 13387 <= 5077
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: init-file/init-board/main 10: 1 => ((3 integer))
mem: ((3 integer)): 13389 <= 1
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13390 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5077
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13487 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5077)
run: list-value-address/init-file/init-board/main 1: 5077 => ((1 list-address))
mem: ((1 list-address)): 13489 <= 5077
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 5077 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13490 <= 5077
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5077
run: init-file/init-board/main 6: 5077 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13391 <= 5077
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
run: init-file/init-board/main 7: 13418 => ((6 square-address))
mem: ((6 square-address)): 13392 <= 13418
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((5078 location) (raw)) => P
run: init-file/init-board/main 8: #\P => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13418 <= #\P
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5077
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13518 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5077)
run: list-next/init-file/init-board/main 1: 5077 => ((1 list-address))
mem: ((1 list-address)): 13520 <= 5077
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5079 list-address) (raw)) => 5142
run: list-next/init-file/init-board/main 2: 5142 => ((2 list-address))
mem: ((2 list-address)): 13521 <= 5142
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5142
run: init-file/init-board/main 9: 5142 => ((1 list-address))
mem: ((1 list-address)): 13387 <= 5142
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: init-file/init-board/main 10: 2 => ((3 integer))
mem: ((3 integer)): 13389 <= 2
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13390 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5142
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13549 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5142)
run: list-value-address/init-file/init-board/main 1: 5142 => ((1 list-address))
mem: ((1 list-address)): 13551 <= 5142
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 5142 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13552 <= 5142
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5142
run: init-file/init-board/main 6: 5142 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13391 <= 5142
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
run: init-file/init-board/main 7: 13419 => ((6 square-address))
mem: ((6 square-address)): 13392 <= 13419
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((5143 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13419 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5142
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13580 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5142)
run: list-next/init-file/init-board/main 1: 5142 => ((1 list-address))
mem: ((1 list-address)): 13582 <= 5142
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5144 list-address) (raw)) => 5207
run: list-next/init-file/init-board/main 2: 5207 => ((2 list-address))
mem: ((2 list-address)): 13583 <= 5207
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5207
run: init-file/init-board/main 9: 5207 => ((1 list-address))
mem: ((1 list-address)): 13387 <= 5207
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: init-file/init-board/main 10: 3 => ((3 integer))
mem: ((3 integer)): 13389 <= 3
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13390 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5207
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13611 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5207)
run: list-value-address/init-file/init-board/main 1: 5207 => ((1 list-address))
mem: ((1 list-address)): 13613 <= 5207
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 5207 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13614 <= 5207
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5207
run: init-file/init-board/main 6: 5207 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13391 <= 5207
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
run: init-file/init-board/main 7: 13420 => ((6 square-address))
mem: ((6 square-address)): 13392 <= 13420
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((5208 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13420 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5207
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13642 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5207)
run: list-next/init-file/init-board/main 1: 5207 => ((1 list-address))
mem: ((1 list-address)): 13644 <= 5207
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5209 list-address) (raw)) => 5272
run: list-next/init-file/init-board/main 2: 5272 => ((2 list-address))
mem: ((2 list-address)): 13645 <= 5272
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5272
run: init-file/init-board/main 9: 5272 => ((1 list-address))
mem: ((1 list-address)): 13387 <= 5272
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: init-file/init-board/main 10: 4 => ((3 integer))
mem: ((3 integer)): 13389 <= 4
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13390 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5272
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13673 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5272)
run: list-value-address/init-file/init-board/main 1: 5272 => ((1 list-address))
mem: ((1 list-address)): 13675 <= 5272
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 5272 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13676 <= 5272
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5272
run: init-file/init-board/main 6: 5272 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13391 <= 5272
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
run: init-file/init-board/main 7: 13421 => ((6 square-address))
mem: ((6 square-address)): 13392 <= 13421
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((5273 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13421 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5272
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13704 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5272)
run: list-next/init-file/init-board/main 1: 5272 => ((1 list-address))
mem: ((1 list-address)): 13706 <= 5272
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5274 list-address) (raw)) => 5337
run: list-next/init-file/init-board/main 2: 5337 => ((2 list-address))
mem: ((2 list-address)): 13707 <= 5337
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5337
run: init-file/init-board/main 9: 5337 => ((1 list-address))
mem: ((1 list-address)): 13387 <= 5337
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: init-file/init-board/main 10: 5 => ((3 integer))
mem: ((3 integer)): 13389 <= 5
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13390 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5337
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13735 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5337)
run: list-value-address/init-file/init-board/main 1: 5337 => ((1 list-address))
mem: ((1 list-address)): 13737 <= 5337
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 5337 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13738 <= 5337
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5337
run: init-file/init-board/main 6: 5337 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13391 <= 5337
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
run: init-file/init-board/main 7: 13422 => ((6 square-address))
mem: ((6 square-address)): 13392 <= 13422
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((5338 location) (raw)) => _
run: init-file/init-board/main 8: #\_ => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13422 <= #\_
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5337
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13766 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5337)
run: list-next/init-file/init-board/main 1: 5337 => ((1 list-address))
mem: ((1 list-address)): 13768 <= 5337
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5339 list-address) (raw)) => 5402
run: list-next/init-file/init-board/main 2: 5402 => ((2 list-address))
mem: ((2 list-address)): 13769 <= 5402
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5402
run: init-file/init-board/main 9: 5402 => ((1 list-address))
mem: ((1 list-address)): 13387 <= 5402
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: init-file/init-board/main 10: 6 => ((3 integer))
mem: ((3 integer)): 13389 <= 6
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13390 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5402
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13797 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5402)
run: list-value-address/init-file/init-board/main 1: 5402 => ((1 list-address))
mem: ((1 list-address)): 13799 <= 5402
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 5402 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13800 <= 5402
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5402
run: init-file/init-board/main 6: 5402 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13391 <= 5402
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
run: init-file/init-board/main 7: 13423 => ((6 square-address))
mem: ((6 square-address)): 13392 <= 13423
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((5403 location) (raw)) => p
run: init-file/init-board/main 8: #\p => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13423 <= #\p
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5402
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13828 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5402)
run: list-next/init-file/init-board/main 1: 5402 => ((1 list-address))
mem: ((1 list-address)): 13830 <= 5402
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5404 list-address) (raw)) => 5467
run: list-next/init-file/init-board/main 2: 5467 => ((2 list-address))
mem: ((2 list-address)): 13831 <= 5467
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => 5467
run: init-file/init-board/main 9: 5467 => ((1 list-address))
mem: ((1 list-address)): 13387 <= 5467
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: init-file/init-board/main 10: 7 => ((3 integer))
mem: ((3 integer)): 13389 <= 7
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13390 <= nil
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: init-file/init-board/main 6: (((5 tagged-value-address)) <- ((list-value-address)) ((1 list-address)))
mem: ((1 list-address)) => 5467
run: list-value-address/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-value-address/init-file/init-board/main 0: 13859 => ((default-space space-address))
run: list-value-address/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5467)
run: list-value-address/init-file/init-board/main 1: 5467 => ((1 list-address))
mem: ((1 list-address)): 13861 <= 5467
run: list-value-address/init-file/init-board/main 2: (((2 tagged-value-address)) <- ((get-address)) ((1 list-address) (deref)) ((0 offset)))
run: list-value-address/init-file/init-board/main 2: 5467 => ((2 tagged-value-address))
mem: ((2 tagged-value-address)): 13862 <= 5467
run: list-value-address/init-file/init-board/main 3: (((reply)) ((2 tagged-value-address)))
mem: ((2 tagged-value-address)) => 5467
run: init-file/init-board/main 6: 5467 => ((5 tagged-value-address))
mem: ((5 tagged-value-address)): 13391 <= 5467
run: init-file/init-board/main 7: (((6 square-address)) <- ((index-address)) ((2 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
run: init-file/init-board/main 7: 13424 => ((6 square-address))
mem: ((6 square-address)): 13392 <= 13424
run: init-file/init-board/main 8: (((6 square-address) (deref)) <- ((get)) ((5 tagged-value-address) (deref)) ((1 offset)))
mem: ((5468 location) (raw)) => r
run: init-file/init-board/main 8: #\r => ((6 square-address) (deref))
mem: ((6 square-address) (deref)): 13424 <= #\r
run: init-file/init-board/main 9: (((1 list-address)) <- ((list-next)) ((1 list-address)))
mem: ((1 list-address)) => 5467
run: list-next/init-file/init-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: list-next/init-file/init-board/main 0: 13890 => ((default-space space-address))
run: list-next/init-file/init-board/main 1: (((1 list-address)) <- ((next-input)))
arg: nil 0 (5467)
run: list-next/init-file/init-board/main 1: 5467 => ((1 list-address))
mem: ((1 list-address)): 13892 <= 5467
run: list-next/init-file/init-board/main 2: (((2 list-address)) <- ((get)) ((1 list-address) (deref)) ((1 offset)))
mem: ((5469 list-address) (raw)) => nil
run: list-next/init-file/init-board/main 2: nil => ((2 list-address))
mem: ((2 list-address)): 13893 <= nil
run: list-next/init-file/init-board/main 3: (((reply)) ((2 list-address)))
mem: ((2 list-address)) => nil
run: init-file/init-board/main 9: nil => ((1 list-address))
mem: ((1 list-address)): 13387 <= nil
run: init-file/init-board/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: init-file/init-board/main 10: 8 => ((3 integer))
mem: ((3 integer)): 13389 <= 8
run: init-file/init-board/main 11: (((jump)) ((-8 offset)))
run: init-file/init-board/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((8 literal)))
mem: ((3 integer)) => 8
run: init-file/init-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 13390 <= t
run: init-file/init-board/main 5: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: init-file/init-board/main 12: (((reply)) ((2 file-address)) ((1 list-address)))
mem: ((2 file-address)) => 13416
mem: ((1 list-address)) => nil
run: init-board/main 11: 13416 => ((8 file-address-address) (deref))
mem: ((8 file-address-address) (deref)): 9632 <= 13416
run: init-board/main 11: nil => ((6 list-address))
mem: ((6 list-address)): 5570 <= nil
run: init-board/main 12: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 7
run: init-board/main 12: 8 => ((5 integer))
mem: ((5 integer)): 5569 <= 8
run: init-board/main 13: (((jump)) ((-6 offset)))
run: init-board/main 8: (((7 boolean)) <- ((equal)) ((5 integer)) ((8 literal)))
mem: ((5 integer)) => 8
run: init-board/main 8: t => ((7 boolean))
mem: ((7 boolean)): 5571 <= t
run: init-board/main 9: (((jump-if)) ((7 boolean)) ((4 offset)))
mem: ((7 boolean)) => t
run: init-board/main 14: (((reply)) ((4 board-address)))
mem: ((4 board-address)) => 9624
run: main 4: 9624 => ((4 board-address))
mem: ((4 board-address)): 1005 <= 9624
run: main 5: (((5 move-address)) <- ((new)) ((move literal)))
run: main 5: 13921 => ((5 move-address))
mem: ((5 move-address)): 1006 <= 13921
run: main 6: (((6 integer-integer-pair-address)) <- ((get-address)) ((5 move-address) (deref)) ((0 offset)))
run: main 6: 13921 => ((6 integer-integer-pair-address))
mem: ((6 integer-integer-pair-address)): 1007 <= 13921
run: main 7: (((7 integer-address)) <- ((get-address)) ((6 integer-integer-pair-address) (deref)) ((0 offset)))
run: main 7: 13921 => ((7 integer-address))
mem: ((7 integer-address)): 1008 <= 13921
run: main 8: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: main 8: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 13921 <= 0
run: main 9: (((7 integer-address)) <- ((get-address)) ((6 integer-integer-pair-address) (deref)) ((1 offset)))
run: main 9: 13922 => ((7 integer-address))
mem: ((7 integer-address)): 1008 <= 13922
run: main 10: (((7 integer-address) (deref)) <- ((copy)) ((1 literal)))
run: main 10: 1 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 13922 <= 1
run: main 11: (((8 integer-integer-pair-address)) <- ((get-address)) ((5 move-address) (deref)) ((1 offset)))
run: main 11: 13923 => ((8 integer-integer-pair-address))
mem: ((8 integer-integer-pair-address)): 1009 <= 13923
run: main 12: (((7 integer-address)) <- ((get-address)) ((8 integer-integer-pair-address) (deref)) ((0 offset)))
run: main 12: 13923 => ((7 integer-address))
mem: ((7 integer-address)): 1008 <= 13923
run: main 13: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: main 13: 0 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 13923 <= 0
run: main 14: (((7 integer-address)) <- ((get-address)) ((8 integer-integer-pair-address) (deref)) ((1 offset)))
run: main 14: 13924 => ((7 integer-address))
mem: ((7 integer-address)): 1008 <= 13924
run: main 15: (((7 integer-address) (deref)) <- ((copy)) ((3 literal)))
run: main 15: 3 => ((7 integer-address) (deref))
mem: ((7 integer-address) (deref)): 13924 <= 3
run: main 16: (((4 board-address)) <- ((make-move)) ((4 board-address)) ((5 move-address)))
mem: ((4 board-address)) => 9624
mem: ((5 move-address)) => 13921
run: make-move/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: make-move/main 0: 13925 => ((default-space space-address))
run: make-move/main 1: (((1 board-address)) <- ((next-input)))
arg: nil 0 (9624 13921)
run: make-move/main 1: 9624 => ((1 board-address))
mem: ((1 board-address)): 13927 <= 9624
run: make-move/main 2: (((2 move-address)) <- ((next-input)))
arg: nil 1 (9624 13921)
run: make-move/main 2: 13921 => ((2 move-address))
mem: ((2 move-address)): 13928 <= 13921
run: make-move/main 3: (((3 integer-integer-pair)) <- ((get)) ((2 move-address) (deref)) ((0 offset)))
mem: ((13921 integer-integer-pair) (raw)) => #(tagged record (0 1 . nil))
run: make-move/main 3: #(tagged record (0 1 . nil)) => ((3 integer-integer-pair))
mem: ((3 integer-integer-pair)): 13929 <= 0
mem: ((3 integer-integer-pair)): 13930 <= 1
run: make-move/main 4: (((5 integer)) <- ((get)) ((3 integer-integer-pair)) ((0 offset)))
mem: ((13929 integer) (raw)) => 0
run: make-move/main 4: 0 => ((5 integer))
mem: ((5 integer)): 13931 <= 0
run: make-move/main 5: (((6 integer)) <- ((get)) ((3 integer-integer-pair)) ((1 offset)))
mem: ((13930 integer) (raw)) => 1
run: make-move/main 5: 1 => ((6 integer))
mem: ((6 integer)): 13932 <= 1
run: make-move/main 6: (((7 file-address)) <- ((index)) ((1 board-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9625 file-address) (raw)) => 9664
run: make-move/main 6: 9664 => ((7 file-address))
mem: ((7 file-address)): 13933 <= 9664
run: make-move/main 7: (((8 square-address)) <- ((index-address)) ((7 file-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
run: make-move/main 7: 9666 => ((8 square-address))
mem: ((8 square-address)): 13934 <= 9666
run: make-move/main 8: (((3 integer-integer-pair)) <- ((get)) ((2 move-address) (deref)) ((1 offset)))
mem: ((13923 integer-integer-pair) (raw)) => #(tagged record (0 3 . nil))
run: make-move/main 8: #(tagged record (0 3 . nil)) => ((3 integer-integer-pair))
mem: ((3 integer-integer-pair)): 13929 <= 0
mem: ((3 integer-integer-pair)): 13930 <= 3
run: make-move/main 9: (((9 integer)) <- ((get)) ((3 integer-integer-pair)) ((0 offset)))
mem: ((13929 integer) (raw)) => 0
run: make-move/main 9: 0 => ((9 integer))
mem: ((9 integer)): 13935 <= 0
run: make-move/main 10: (((10 integer)) <- ((get)) ((3 integer-integer-pair)) ((1 offset)))
mem: ((13930 integer) (raw)) => 3
run: make-move/main 10: 3 => ((10 integer))
mem: ((10 integer)): 13936 <= 3
run: make-move/main 11: (((7 file-address)) <- ((index)) ((1 board-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 0
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9625 file-address) (raw)) => 9664
run: make-move/main 11: 9664 => ((7 file-address))
mem: ((7 file-address)): 13933 <= 9664
run: make-move/main 12: (((11 square-address)) <- ((index-address)) ((7 file-address) (deref)) ((10 integer)))
mem: ((10 integer)) => 3
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
run: make-move/main 12: 9668 => ((11 square-address))
mem: ((11 square-address)): 13937 <= 9668
run: make-move/main 13: (((11 square-address) (deref)) <- ((copy)) ((8 square-address) (deref)))
mem: ((8 square-address) (deref)) => P
run: make-move/main 13: #\P => ((11 square-address) (deref))
mem: ((11 square-address) (deref)): 9668 <= #\P
run: make-move/main 14: (((8 square-address) (deref)) <- ((copy)) ((_ literal)))
run: make-move/main 14: #\_ => ((8 square-address) (deref))
mem: ((8 square-address) (deref)): 9666 <= #\_
run: make-move/main 15: (((reply)) ((1 board-address)))
mem: ((1 board-address)) => 9624
run: main 16: 9624 => ((4 board-address))
mem: ((4 board-address)): 1005 <= 9624
run: main 17: (((print-board)) ((2 terminal-address)) ((4 board-address)))
mem: ((2 terminal-address)) => 1101
mem: ((4 board-address)) => 9624
run: print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-board/main 0: 13956 => ((default-space space-address))
run: print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 9624)
run: print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 13958 <= 1101
run: print-board/main 2: (((2 board-address)) <- ((next-input)))
arg: nil 1 (1101 9624)
run: print-board/main 2: 9624 => ((2 board-address))
mem: ((2 board-address)): 13959 <= 9624
run: print-board/main 3: (((3 integer)) <- ((copy)) ((7 literal)))
run: print-board/main 3: 7 => ((3 integer))
mem: ((3 integer)): 13960 <= 7
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 7
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: print-board/main 6: 8 => ((5 integer))
mem: ((5 integer)): 13962 <= 8
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 8
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 13987 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 8)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 13989 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 8)
run: print-integer/print-board/main 2: 8 => ((2 integer))
mem: ((2 integer)): 13990 <= 8
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 14018 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (8)
run: integer-to-decimal-string/print-integer/print-board/main 1: 8 => ((1 integer))
mem: ((1 integer)): 14020 <= 8
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 14021 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 14023 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 14024 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 14049 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 14080 => ((1 buffer-address))
mem: ((1 buffer-address)): 14051 <= 14080
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 14080 => ((2 integer-address))
mem: ((2 integer-address)): 14052 <= 14080
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 14080 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 14081 => ((3 string-address-address))
mem: ((3 string-address-address)): 14053 <= 14081
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 14054 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 14082 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 14081 <= 14082
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 14080
run: integer-to-decimal-string/print-integer/print-board/main 11: 14080 => ((6 buffer-address))
mem: ((6 buffer-address)): 14025 <= 14080
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 14026 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 14027 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 14028 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 8
mem: ((1 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 14020 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 8 => ((10 integer))
mem: ((10 integer)): 14029 <= 8
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 17: 56 => ((11 integer))
mem: ((11 integer)): 14030 <= 56
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 56
run: integer-to-decimal-string/print-integer/print-board/main 18: #\8 => ((12 character))
mem: ((12 character)): 14031 <= #\8
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 14080
mem: ((12 character)) => 8
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 14113 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14080 #\8)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 14080 => ((1 buffer-address))
mem: ((1 buffer-address)): 14115 <= 14080
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (14080 #\8)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\8 => ((2 character))
mem: ((2 character)): 14116 <= #\8
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 14080
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 14144 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14080)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 14080 => ((1 buffer-address))
mem: ((1 buffer-address)): 14146 <= 14080
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((14080 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 14147 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((14081 string-address) (raw)) => 14082
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 14082 => ((3 string-address))
mem: ((3 string-address)): 14148 <= 14082
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((14082 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 14149 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 14150 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 14117 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 14080 => ((4 integer-address))
mem: ((4 integer-address)): 14118 <= 14080
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((14081 string-address) (raw)) => 14082
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 14082 => ((5 string-address))
mem: ((5 string-address)): 14119 <= 14082
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((14082 string) (raw))
mem: ((14082 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 14083 => ((6 byte-address))
mem: ((6 byte-address)): 14120 <= 14083
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 8
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\8 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 14083 <= #\8
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 14080 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 14080
run: integer-to-decimal-string/print-integer/print-board/main 19: 14080 => ((6 buffer-address))
mem: ((6 buffer-address)): 14025 <= 14080
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 14028 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((14080 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 14032 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((14081 string-address) (raw)) => 14082
run: integer-to-decimal-string/print-integer/print-board/main 24: 14082 => ((14 string-address))
mem: ((14 string-address)): 14033 <= 14082
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 14175 => ((15 string-address))
mem: ((15 string-address)): 14034 <= 14175
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 14035 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 14036 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 14028 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((14082 string) (raw))
mem: ((14082 integer) (raw)) => 30
mem: ((14083 byte) (raw)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 30: #\8 => ((18 byte))
mem: ((18 byte)): 14037 <= #\8
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((14175 string) (raw))
mem: ((14175 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 14176 => ((19 byte-address))
mem: ((19 byte-address)): 14038 <= 14176
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 8
run: integer-to-decimal-string/print-integer/print-board/main 32: #\8 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 14176 <= #\8
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 14035 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 14036 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 14028 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 14175
run: print-integer/print-board/main 3: 14175 => ((3 string-address))
mem: ((3 string-address)): 13991 <= 14175
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 14175
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 14177 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 14175)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14179 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 14175)
run: print-string/print-integer/print-board/main 2: 14175 => ((2 string-address))
mem: ((2 string-address)): 14180 <= 14175
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((14175 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 14181 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 14182 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 14183 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((14175 string) (raw))
mem: ((14175 integer) (raw)) => 1
mem: ((14176 byte) (raw)) => 8
run: print-string/print-integer/print-board/main 7: #\8 => ((6 character))
mem: ((6 character)): 14184 <= #\8
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 8
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 14208 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\8)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14210 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\8)
run: print-character/print-string/print-integer/print-board/main 2: #\8 => ((2 character))
mem: ((2 character)): 14211 <= #\8
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\8)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14212 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\8)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14213 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14214 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14215 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14216 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14217 <= 0
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 0 => ((9 integer))
mem: ((9 integer)): 14218 <= 0
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14219 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 0
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1107 => ((11 byte-address))
mem: ((11 byte-address)): 14220 <= 1107
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 8
run: print-character/print-string/print-integer/print-board/main 13: #\8 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1107 <= #\8
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 14182 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 14183 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 14239 => ((6 string-address))
mem: ((6 string-address)): 13963 <= 14239
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 14239
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 14243 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 14239)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14245 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 14239)
run: print-string/print-board/main 2: 14239 => ((2 string-address))
mem: ((2 string-address)): 14246 <= 14239
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((14239 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 14247 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 14248 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 14249 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((14239 string) (raw))
mem: ((14239 integer) (raw)) => 3
mem: ((14240 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 14250 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 14274 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14276 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14277 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14278 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14279 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14280 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14281 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14282 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14283 <= 0
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 1 => ((9 integer))
mem: ((9 integer)): 14284 <= 1
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14285 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 1
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1108 => ((11 byte-address))
mem: ((11 byte-address)): 14286 <= 1108
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1108 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 14248 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 14249 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((14239 string) (raw))
mem: ((14239 integer) (raw)) => 3
mem: ((14241 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 14250 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 14305 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14307 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 14308 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14309 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14310 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14311 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14312 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14313 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14314 <= 0
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 2 => ((9 integer))
mem: ((9 integer)): 14315 <= 2
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14316 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 2
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1109 => ((11 byte-address))
mem: ((11 byte-address)): 14317 <= 1109
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1109 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 14248 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 14249 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((14239 string) (raw))
mem: ((14239 integer) (raw)) => 3
mem: ((14242 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 14250 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 14336 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14338 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14339 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14340 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14341 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14342 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14343 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14344 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14345 <= 0
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 3 => ((9 integer))
mem: ((9 integer)): 14346 <= 3
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14347 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 3
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1110 => ((11 byte-address))
mem: ((11 byte-address)): 14348 <= 1110
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1110 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 14248 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 14249 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13964 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9625 file-address) (raw)) => 9664
run: print-board/main 13: 9664 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 9664
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
mem: ((9672 square) (raw)) => r
run: print-board/main 14: #\r => ((6 square))
mem: ((6 square)): 13963 <= #\r
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => r
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14367 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\r)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14369 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\r)
run: print-character/print-board/main 2: #\r => ((2 character))
mem: ((2 character)): 14370 <= #\r
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\r)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14371 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\r)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14372 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14373 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14374 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14375 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14376 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 4 => ((9 integer))
mem: ((9 integer)): 14377 <= 4
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14378 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 4
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1111 => ((11 byte-address))
mem: ((11 byte-address)): 14379 <= 1111
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => r
run: print-character/print-board/main 13: #\r => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1111 <= #\r
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14398 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14400 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14401 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14402 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14403 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14404 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14405 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14406 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14407 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 5 => ((9 integer))
mem: ((9 integer)): 14408 <= 5
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14409 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 5
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1112 => ((11 byte-address))
mem: ((11 byte-address)): 14410 <= 1112
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1112 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13964 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9626 file-address) (raw)) => 10200
run: print-board/main 13: 10200 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10200
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
mem: ((10208 square) (raw)) => n
run: print-board/main 14: #\n => ((6 square))
mem: ((6 square)): 13963 <= #\n
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => n
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14429 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\n)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14431 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\n)
run: print-character/print-board/main 2: #\n => ((2 character))
mem: ((2 character)): 14432 <= #\n
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\n)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14433 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\n)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14434 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14435 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14436 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14437 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14438 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 6 => ((9 integer))
mem: ((9 integer)): 14439 <= 6
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14440 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 6
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1113 => ((11 byte-address))
mem: ((11 byte-address)): 14441 <= 1113
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => n
run: print-character/print-board/main 13: #\n => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1113 <= #\n
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14460 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14462 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14463 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14464 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14465 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14466 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14467 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14468 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14469 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 7 => ((9 integer))
mem: ((9 integer)): 14470 <= 7
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14471 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 7
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1114 => ((11 byte-address))
mem: ((11 byte-address)): 14472 <= 1114
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1114 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13964 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9627 file-address) (raw)) => 10736
run: print-board/main 13: 10736 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10736
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
mem: ((10744 square) (raw)) => b
run: print-board/main 14: #\b => ((6 square))
mem: ((6 square)): 13963 <= #\b
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => b
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14491 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\b)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14493 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\b)
run: print-character/print-board/main 2: #\b => ((2 character))
mem: ((2 character)): 14494 <= #\b
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\b)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14495 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\b)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14496 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14497 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14498 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14499 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14500 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 8 => ((9 integer))
mem: ((9 integer)): 14501 <= 8
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14502 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 8
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1115 => ((11 byte-address))
mem: ((11 byte-address)): 14503 <= 1115
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => b
run: print-character/print-board/main 13: #\b => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1115 <= #\b
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14522 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14524 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14525 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14526 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14527 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14528 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14529 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14530 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14531 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 9 => ((9 integer))
mem: ((9 integer)): 14532 <= 9
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14533 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 9
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1116 => ((11 byte-address))
mem: ((11 byte-address)): 14534 <= 1116
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1116 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13964 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9628 file-address) (raw)) => 11272
run: print-board/main 13: 11272 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11272
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
mem: ((11280 square) (raw)) => q
run: print-board/main 14: #\q => ((6 square))
mem: ((6 square)): 13963 <= #\q
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => q
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14553 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\q)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14555 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\q)
run: print-character/print-board/main 2: #\q => ((2 character))
mem: ((2 character)): 14556 <= #\q
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\q)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14557 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\q)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14558 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14559 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14560 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14561 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14562 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 10 => ((9 integer))
mem: ((9 integer)): 14563 <= 10
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14564 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 10
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1117 => ((11 byte-address))
mem: ((11 byte-address)): 14565 <= 1117
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => q
run: print-character/print-board/main 13: #\q => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1117 <= #\q
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14584 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14586 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14587 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14588 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14589 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14590 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14591 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14592 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14593 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 11 => ((9 integer))
mem: ((9 integer)): 14594 <= 11
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14595 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 11
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1118 => ((11 byte-address))
mem: ((11 byte-address)): 14596 <= 1118
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1118 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13964 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9629 file-address) (raw)) => 11808
run: print-board/main 13: 11808 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11808
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
mem: ((11816 square) (raw)) => k
run: print-board/main 14: #\k => ((6 square))
mem: ((6 square)): 13963 <= #\k
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => k
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14615 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\k)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14617 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\k)
run: print-character/print-board/main 2: #\k => ((2 character))
mem: ((2 character)): 14618 <= #\k
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\k)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14619 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\k)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14620 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14621 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14622 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14623 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14624 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 12 => ((9 integer))
mem: ((9 integer)): 14625 <= 12
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14626 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 12
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1119 => ((11 byte-address))
mem: ((11 byte-address)): 14627 <= 1119
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => k
run: print-character/print-board/main 13: #\k => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1119 <= #\k
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14646 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14648 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14649 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14650 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14651 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14652 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14653 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14654 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14655 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 13 => ((9 integer))
mem: ((9 integer)): 14656 <= 13
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14657 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 13
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1120 => ((11 byte-address))
mem: ((11 byte-address)): 14658 <= 1120
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1120 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13964 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9630 file-address) (raw)) => 12344
run: print-board/main 13: 12344 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12344
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
mem: ((12352 square) (raw)) => b
run: print-board/main 14: #\b => ((6 square))
mem: ((6 square)): 13963 <= #\b
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => b
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14677 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\b)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14679 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\b)
run: print-character/print-board/main 2: #\b => ((2 character))
mem: ((2 character)): 14680 <= #\b
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\b)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14681 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\b)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14682 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14683 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14684 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14685 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14686 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 14 => ((9 integer))
mem: ((9 integer)): 14687 <= 14
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14688 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 14
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1121 => ((11 byte-address))
mem: ((11 byte-address)): 14689 <= 1121
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => b
run: print-character/print-board/main 13: #\b => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1121 <= #\b
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14708 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14710 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14711 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14712 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14713 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14714 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14715 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14716 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14717 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 15 => ((9 integer))
mem: ((9 integer)): 14718 <= 15
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14719 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 15
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1122 => ((11 byte-address))
mem: ((11 byte-address)): 14720 <= 1122
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1122 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13964 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9631 file-address) (raw)) => 12880
run: print-board/main 13: 12880 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12880
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
mem: ((12888 square) (raw)) => n
run: print-board/main 14: #\n => ((6 square))
mem: ((6 square)): 13963 <= #\n
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => n
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14739 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\n)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14741 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\n)
run: print-character/print-board/main 2: #\n => ((2 character))
mem: ((2 character)): 14742 <= #\n
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\n)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14743 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\n)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14744 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14745 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14746 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14747 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14748 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 16 => ((9 integer))
mem: ((9 integer)): 14749 <= 16
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14750 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 16
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1123 => ((11 byte-address))
mem: ((11 byte-address)): 14751 <= 1123
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => n
run: print-character/print-board/main 13: #\n => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1123 <= #\n
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14770 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14772 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14773 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14774 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14775 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14776 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14777 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14778 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14779 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 17 => ((9 integer))
mem: ((9 integer)): 14780 <= 17
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14781 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 17
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1124 => ((11 byte-address))
mem: ((11 byte-address)): 14782 <= 1124
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1124 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13964 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9632 file-address) (raw)) => 13416
run: print-board/main 13: 13416 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 13416
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
mem: ((13424 square) (raw)) => r
run: print-board/main 14: #\r => ((6 square))
mem: ((6 square)): 13963 <= #\r
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => r
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14801 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\r)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14803 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\r)
run: print-character/print-board/main 2: #\r => ((2 character))
mem: ((2 character)): 14804 <= #\r
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\r)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14805 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\r)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14806 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14807 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14808 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14809 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14810 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 18 => ((9 integer))
mem: ((9 integer)): 14811 <= 18
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14812 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 18
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1125 => ((11 byte-address))
mem: ((11 byte-address)): 14813 <= 1125
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => r
run: print-character/print-board/main 13: #\r => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1125 <= #\r
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 14832 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14834 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 14835 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 14836 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 14837 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 14838 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 14839 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 14840 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 0
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 0 => ((8 integer))
mem: ((8 integer)): 14841 <= 0
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 0
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 19 => ((9 integer))
mem: ((9 integer)): 14842 <= 19
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 14843 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 19
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1126 => ((11 byte-address))
mem: ((11 byte-address)): 14844 <= 1126
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1126 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13964 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13961 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: print-board/main 19: 6 => ((3 integer))
mem: ((3 integer)): 13960 <= 6
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 14863 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14865 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 14866 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 0
run: cursor-to-next-line/print-board/main 4: 1 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 1
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 14867 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 6
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: print-board/main 6: 7 => ((5 integer))
mem: ((5 integer)): 13962 <= 7
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 7
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 14894 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 7)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 14896 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 7)
run: print-integer/print-board/main 2: 7 => ((2 integer))
mem: ((2 integer)): 14897 <= 7
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 14925 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (7)
run: integer-to-decimal-string/print-integer/print-board/main 1: 7 => ((1 integer))
mem: ((1 integer)): 14927 <= 7
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 14928 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 14930 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 14931 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 14956 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 14987 => ((1 buffer-address))
mem: ((1 buffer-address)): 14958 <= 14987
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 14987 => ((2 integer-address))
mem: ((2 integer-address)): 14959 <= 14987
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 14987 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 14988 => ((3 string-address-address))
mem: ((3 string-address-address)): 14960 <= 14988
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 14961 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 14989 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 14988 <= 14989
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 14987
run: integer-to-decimal-string/print-integer/print-board/main 11: 14987 => ((6 buffer-address))
mem: ((6 buffer-address)): 14932 <= 14987
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 14933 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 14934 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 14935 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 7
mem: ((1 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 14927 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 7 => ((10 integer))
mem: ((10 integer)): 14936 <= 7
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 17: 55 => ((11 integer))
mem: ((11 integer)): 14937 <= 55
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 55
run: integer-to-decimal-string/print-integer/print-board/main 18: #\7 => ((12 character))
mem: ((12 character)): 14938 <= #\7
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 14987
mem: ((12 character)) => 7
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 15020 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14987 #\7)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 14987 => ((1 buffer-address))
mem: ((1 buffer-address)): 15022 <= 14987
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (14987 #\7)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\7 => ((2 character))
mem: ((2 character)): 15023 <= #\7
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 14987
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 15051 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (14987)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 14987 => ((1 buffer-address))
mem: ((1 buffer-address)): 15053 <= 14987
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((14987 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 15054 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((14988 string-address) (raw)) => 14989
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 14989 => ((3 string-address))
mem: ((3 string-address)): 15055 <= 14989
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((14989 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 15056 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15057 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 15024 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 14987 => ((4 integer-address))
mem: ((4 integer-address)): 15025 <= 14987
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((14988 string-address) (raw)) => 14989
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 14989 => ((5 string-address))
mem: ((5 string-address)): 15026 <= 14989
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((14989 string) (raw))
mem: ((14989 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 14990 => ((6 byte-address))
mem: ((6 byte-address)): 15027 <= 14990
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 7
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\7 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 14990 <= #\7
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 14987 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 14987
run: integer-to-decimal-string/print-integer/print-board/main 19: 14987 => ((6 buffer-address))
mem: ((6 buffer-address)): 14932 <= 14987
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 14935 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((14987 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 14939 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((14988 string-address) (raw)) => 14989
run: integer-to-decimal-string/print-integer/print-board/main 24: 14989 => ((14 string-address))
mem: ((14 string-address)): 14940 <= 14989
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 15082 => ((15 string-address))
mem: ((15 string-address)): 14941 <= 15082
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 14942 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 14943 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 14935 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((14989 string) (raw))
mem: ((14989 integer) (raw)) => 30
mem: ((14990 byte) (raw)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 30: #\7 => ((18 byte))
mem: ((18 byte)): 14944 <= #\7
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((15082 string) (raw))
mem: ((15082 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 15083 => ((19 byte-address))
mem: ((19 byte-address)): 14945 <= 15083
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 7
run: integer-to-decimal-string/print-integer/print-board/main 32: #\7 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 15083 <= #\7
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 14942 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 14943 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 14935 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 15082
run: print-integer/print-board/main 3: 15082 => ((3 string-address))
mem: ((3 string-address)): 14898 <= 15082
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 15082
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 15084 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 15082)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15086 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 15082)
run: print-string/print-integer/print-board/main 2: 15082 => ((2 string-address))
mem: ((2 string-address)): 15087 <= 15082
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((15082 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 15088 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 15089 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15090 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((15082 string) (raw))
mem: ((15082 integer) (raw)) => 1
mem: ((15083 byte) (raw)) => 7
run: print-string/print-integer/print-board/main 7: #\7 => ((6 character))
mem: ((6 character)): 15091 <= #\7
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 7
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 15115 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\7)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15117 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\7)
run: print-character/print-string/print-integer/print-board/main 2: #\7 => ((2 character))
mem: ((2 character)): 15118 <= #\7
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\7)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15119 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\7)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15120 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15121 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15122 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15123 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15124 <= 20
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 20 => ((9 integer))
mem: ((9 integer)): 15125 <= 20
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15126 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 20
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1127 => ((11 byte-address))
mem: ((11 byte-address)): 15127 <= 1127
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 7
run: print-character/print-string/print-integer/print-board/main 13: #\7 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1127 <= #\7
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 15089 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 15090 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 15146 => ((6 string-address))
mem: ((6 string-address)): 13963 <= 15146
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 15146
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 15150 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 15146)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15152 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 15146)
run: print-string/print-board/main 2: 15146 => ((2 string-address))
mem: ((2 string-address)): 15153 <= 15146
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((15146 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 15154 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 15155 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15156 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((15146 string) (raw))
mem: ((15146 integer) (raw)) => 3
mem: ((15147 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 15157 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 15181 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15183 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15184 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15185 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15186 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15187 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15188 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15189 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15190 <= 20
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 21 => ((9 integer))
mem: ((9 integer)): 15191 <= 21
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15192 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 21
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1128 => ((11 byte-address))
mem: ((11 byte-address)): 15193 <= 1128
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1128 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 15155 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15156 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((15146 string) (raw))
mem: ((15146 integer) (raw)) => 3
mem: ((15148 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 15157 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 15212 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15214 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 15215 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15216 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15217 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15218 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15219 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15220 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15221 <= 20
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 22 => ((9 integer))
mem: ((9 integer)): 15222 <= 22
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15223 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 22
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1129 => ((11 byte-address))
mem: ((11 byte-address)): 15224 <= 1129
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1129 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 15155 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15156 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((15146 string) (raw))
mem: ((15146 integer) (raw)) => 3
mem: ((15149 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 15157 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 15243 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15245 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15246 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15247 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15248 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15249 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15250 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15251 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15252 <= 20
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 23 => ((9 integer))
mem: ((9 integer)): 15253 <= 23
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15254 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 23
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1130 => ((11 byte-address))
mem: ((11 byte-address)): 15255 <= 1130
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1130 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 15155 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 15156 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13964 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9625 file-address) (raw)) => 9664
run: print-board/main 13: 9664 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 9664
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
mem: ((9671 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13963 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15274 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15276 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15277 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15278 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15279 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15280 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15281 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15282 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15283 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 24 => ((9 integer))
mem: ((9 integer)): 15284 <= 24
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15285 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 24
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1131 => ((11 byte-address))
mem: ((11 byte-address)): 15286 <= 1131
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1131 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15305 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15307 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15308 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15309 <= nil
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15310 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15311 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15312 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15313 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15314 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 25 => ((9 integer))
mem: ((9 integer)): 15315 <= 25
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15316 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 25
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1132 => ((11 byte-address))
mem: ((11 byte-address)): 15317 <= 1132
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1132 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13964 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9626 file-address) (raw)) => 10200
run: print-board/main 13: 10200 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10200
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
mem: ((10207 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13963 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15336 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15338 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15339 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15340 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15341 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15342 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15343 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15344 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15345 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 26 => ((9 integer))
mem: ((9 integer)): 15346 <= 26
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15347 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 26
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1133 => ((11 byte-address))
mem: ((11 byte-address)): 15348 <= 1133
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1133 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15367 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15369 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15370 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15371 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15372 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15373 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15374 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15375 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15376 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 27 => ((9 integer))
mem: ((9 integer)): 15377 <= 27
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15378 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 27
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1134 => ((11 byte-address))
mem: ((11 byte-address)): 15379 <= 1134
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1134 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13964 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9627 file-address) (raw)) => 10736
run: print-board/main 13: 10736 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10736
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
mem: ((10743 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13963 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15398 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15400 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15401 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15402 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15403 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15404 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15405 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15406 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15407 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 28 => ((9 integer))
mem: ((9 integer)): 15408 <= 28
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15409 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 28
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1135 => ((11 byte-address))
mem: ((11 byte-address)): 15410 <= 1135
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1135 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15429 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15431 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15432 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15433 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15434 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15435 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15436 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15437 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15438 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 29 => ((9 integer))
mem: ((9 integer)): 15439 <= 29
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15440 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 29
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1136 => ((11 byte-address))
mem: ((11 byte-address)): 15441 <= 1136
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1136 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13964 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9628 file-address) (raw)) => 11272
run: print-board/main 13: 11272 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11272
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
mem: ((11279 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13963 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15460 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15462 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15463 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15464 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15465 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15466 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15467 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15468 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15469 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 30 => ((9 integer))
mem: ((9 integer)): 15470 <= 30
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15471 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 30
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1137 => ((11 byte-address))
mem: ((11 byte-address)): 15472 <= 1137
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1137 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15491 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15493 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15494 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15495 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15496 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15497 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15498 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15499 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15500 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 31 => ((9 integer))
mem: ((9 integer)): 15501 <= 31
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15502 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 31
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1138 => ((11 byte-address))
mem: ((11 byte-address)): 15503 <= 1138
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1138 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13964 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9629 file-address) (raw)) => 11808
run: print-board/main 13: 11808 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11808
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
mem: ((11815 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13963 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15522 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15524 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15525 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15526 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15527 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15528 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15529 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15530 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15531 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 32 => ((9 integer))
mem: ((9 integer)): 15532 <= 32
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15533 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 32
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1139 => ((11 byte-address))
mem: ((11 byte-address)): 15534 <= 1139
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1139 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15553 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15555 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15556 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15557 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15558 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15559 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15560 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15561 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15562 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 33 => ((9 integer))
mem: ((9 integer)): 15563 <= 33
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15564 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 33
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1140 => ((11 byte-address))
mem: ((11 byte-address)): 15565 <= 1140
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1140 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13964 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9630 file-address) (raw)) => 12344
run: print-board/main 13: 12344 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12344
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
mem: ((12351 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13963 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15584 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15586 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15587 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15588 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15589 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15590 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15591 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15592 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15593 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 34 => ((9 integer))
mem: ((9 integer)): 15594 <= 34
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15595 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 34
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1141 => ((11 byte-address))
mem: ((11 byte-address)): 15596 <= 1141
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1141 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15615 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15617 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15618 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15619 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15620 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15621 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15622 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15623 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15624 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 35 => ((9 integer))
mem: ((9 integer)): 15625 <= 35
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15626 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 35
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1142 => ((11 byte-address))
mem: ((11 byte-address)): 15627 <= 1142
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1142 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13964 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9631 file-address) (raw)) => 12880
run: print-board/main 13: 12880 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12880
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
mem: ((12887 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13963 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15646 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15648 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15649 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15650 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15651 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15652 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15653 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15654 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15655 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 36 => ((9 integer))
mem: ((9 integer)): 15656 <= 36
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15657 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 36
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1143 => ((11 byte-address))
mem: ((11 byte-address)): 15658 <= 1143
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1143 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15677 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15679 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15680 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15681 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15682 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15683 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15684 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15685 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15686 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 37 => ((9 integer))
mem: ((9 integer)): 15687 <= 37
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15688 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 37
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1144 => ((11 byte-address))
mem: ((11 byte-address)): 15689 <= 1144
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1144 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13964 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9632 file-address) (raw)) => 13416
run: print-board/main 13: 13416 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 13416
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
mem: ((13423 square) (raw)) => p
run: print-board/main 14: #\p => ((6 square))
mem: ((6 square)): 13963 <= #\p
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => p
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15708 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\p)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15710 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\p)
run: print-character/print-board/main 2: #\p => ((2 character))
mem: ((2 character)): 15711 <= #\p
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\p)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15712 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\p)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15713 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15714 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15715 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15716 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15717 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 38 => ((9 integer))
mem: ((9 integer)): 15718 <= 38
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15719 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 38
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1145 => ((11 byte-address))
mem: ((11 byte-address)): 15720 <= 1145
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => p
run: print-character/print-board/main 13: #\p => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1145 <= #\p
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 15739 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15741 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 15742 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 15743 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 15744 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 15745 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 15746 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 15747 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 1
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 20 => ((8 integer))
mem: ((8 integer)): 15748 <= 20
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 20
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 39 => ((9 integer))
mem: ((9 integer)): 15749 <= 39
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 15750 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 39
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1146 => ((11 byte-address))
mem: ((11 byte-address)): 15751 <= 1146
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1146 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13964 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13961 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: print-board/main 19: 5 => ((3 integer))
mem: ((3 integer)): 13960 <= 5
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 15770 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15772 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 15773 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 1
run: cursor-to-next-line/print-board/main 4: 2 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 2
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 15774 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 5
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: print-board/main 6: 6 => ((5 integer))
mem: ((5 integer)): 13962 <= 6
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 6
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 15801 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 6)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15803 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 6)
run: print-integer/print-board/main 2: 6 => ((2 integer))
mem: ((2 integer)): 15804 <= 6
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 15832 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (6)
run: integer-to-decimal-string/print-integer/print-board/main 1: 6 => ((1 integer))
mem: ((1 integer)): 15834 <= 6
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 15835 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 15837 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 15838 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 15863 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 15894 => ((1 buffer-address))
mem: ((1 buffer-address)): 15865 <= 15894
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 15894 => ((2 integer-address))
mem: ((2 integer-address)): 15866 <= 15894
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 15894 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 15895 => ((3 string-address-address))
mem: ((3 string-address-address)): 15867 <= 15895
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 15868 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 15896 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 15895 <= 15896
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 15894
run: integer-to-decimal-string/print-integer/print-board/main 11: 15894 => ((6 buffer-address))
mem: ((6 buffer-address)): 15839 <= 15894
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 15840 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 15841 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 15842 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 6
mem: ((1 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 15834 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 6 => ((10 integer))
mem: ((10 integer)): 15843 <= 6
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 17: 54 => ((11 integer))
mem: ((11 integer)): 15844 <= 54
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 54
run: integer-to-decimal-string/print-integer/print-board/main 18: #\6 => ((12 character))
mem: ((12 character)): 15845 <= #\6
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 15894
mem: ((12 character)) => 6
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 15927 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (15894 #\6)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 15894 => ((1 buffer-address))
mem: ((1 buffer-address)): 15929 <= 15894
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (15894 #\6)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\6 => ((2 character))
mem: ((2 character)): 15930 <= #\6
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 15894
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 15958 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (15894)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 15894 => ((1 buffer-address))
mem: ((1 buffer-address)): 15960 <= 15894
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((15894 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 15961 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((15895 string-address) (raw)) => 15896
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 15896 => ((3 string-address))
mem: ((3 string-address)): 15962 <= 15896
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((15896 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 15963 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15964 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 15931 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 15894 => ((4 integer-address))
mem: ((4 integer-address)): 15932 <= 15894
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((15895 string-address) (raw)) => 15896
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 15896 => ((5 string-address))
mem: ((5 string-address)): 15933 <= 15896
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((15896 string) (raw))
mem: ((15896 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 15897 => ((6 byte-address))
mem: ((6 byte-address)): 15934 <= 15897
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 6
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\6 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 15897 <= #\6
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 15894 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 15894
run: integer-to-decimal-string/print-integer/print-board/main 19: 15894 => ((6 buffer-address))
mem: ((6 buffer-address)): 15839 <= 15894
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 15842 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((15894 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 15846 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((15895 string-address) (raw)) => 15896
run: integer-to-decimal-string/print-integer/print-board/main 24: 15896 => ((14 string-address))
mem: ((14 string-address)): 15847 <= 15896
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 15989 => ((15 string-address))
mem: ((15 string-address)): 15848 <= 15989
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 15849 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 15850 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 15842 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((15896 string) (raw))
mem: ((15896 integer) (raw)) => 30
mem: ((15897 byte) (raw)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 30: #\6 => ((18 byte))
mem: ((18 byte)): 15851 <= #\6
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((15989 string) (raw))
mem: ((15989 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 15990 => ((19 byte-address))
mem: ((19 byte-address)): 15852 <= 15990
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 6
run: integer-to-decimal-string/print-integer/print-board/main 32: #\6 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 15990 <= #\6
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 15849 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 15850 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 15842 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 15989
run: print-integer/print-board/main 3: 15989 => ((3 string-address))
mem: ((3 string-address)): 15805 <= 15989
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 15989
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 15991 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 15989)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 15993 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 15989)
run: print-string/print-integer/print-board/main 2: 15989 => ((2 string-address))
mem: ((2 string-address)): 15994 <= 15989
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((15989 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 15995 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 15996 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 15997 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((15989 string) (raw))
mem: ((15989 integer) (raw)) => 1
mem: ((15990 byte) (raw)) => 6
run: print-string/print-integer/print-board/main 7: #\6 => ((6 character))
mem: ((6 character)): 15998 <= #\6
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 6
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 16022 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\6)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16024 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\6)
run: print-character/print-string/print-integer/print-board/main 2: #\6 => ((2 character))
mem: ((2 character)): 16025 <= #\6
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\6)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16026 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\6)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16027 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16028 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16029 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16030 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16031 <= 40
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 40 => ((9 integer))
mem: ((9 integer)): 16032 <= 40
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16033 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 40
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1147 => ((11 byte-address))
mem: ((11 byte-address)): 16034 <= 1147
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 6
run: print-character/print-string/print-integer/print-board/main 13: #\6 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1147 <= #\6
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 15996 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 15997 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 16053 => ((6 string-address))
mem: ((6 string-address)): 13963 <= 16053
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 16053
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 16057 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 16053)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16059 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 16053)
run: print-string/print-board/main 2: 16053 => ((2 string-address))
mem: ((2 string-address)): 16060 <= 16053
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((16053 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 16061 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 16062 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 16063 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((16053 string) (raw))
mem: ((16053 integer) (raw)) => 3
mem: ((16054 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 16064 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 16088 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16090 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16091 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16092 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16093 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16094 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16095 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16096 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16097 <= 40
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 41 => ((9 integer))
mem: ((9 integer)): 16098 <= 41
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16099 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 41
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1148 => ((11 byte-address))
mem: ((11 byte-address)): 16100 <= 1148
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1148 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 16062 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 16063 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((16053 string) (raw))
mem: ((16053 integer) (raw)) => 3
mem: ((16055 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 16064 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 16119 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16121 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 16122 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16123 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16124 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16125 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16126 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16127 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16128 <= 40
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 42 => ((9 integer))
mem: ((9 integer)): 16129 <= 42
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16130 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 42
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1149 => ((11 byte-address))
mem: ((11 byte-address)): 16131 <= 1149
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1149 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 16062 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 16063 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((16053 string) (raw))
mem: ((16053 integer) (raw)) => 3
mem: ((16056 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 16064 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 16150 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16152 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16153 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16154 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16155 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16156 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16157 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16158 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16159 <= 40
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 43 => ((9 integer))
mem: ((9 integer)): 16160 <= 43
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16161 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 43
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1150 => ((11 byte-address))
mem: ((11 byte-address)): 16162 <= 1150
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1150 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 16062 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 16063 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13964 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9625 file-address) (raw)) => 9664
run: print-board/main 13: 9664 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 9664
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
mem: ((9670 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16181 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16183 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16184 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16185 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16186 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16187 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16188 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16189 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16190 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 44 => ((9 integer))
mem: ((9 integer)): 16191 <= 44
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16192 <= 1106
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 44
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1151 => ((11 byte-address))
mem: ((11 byte-address)): 16193 <= 1151
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1151 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16212 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16214 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16215 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16216 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16217 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16218 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16219 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16220 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16221 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 45 => ((9 integer))
mem: ((9 integer)): 16222 <= 45
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16223 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 45
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1152 => ((11 byte-address))
mem: ((11 byte-address)): 16224 <= 1152
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1152 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13964 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9626 file-address) (raw)) => 10200
run: print-board/main 13: 10200 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10200
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
mem: ((10206 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16243 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16245 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16246 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16247 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16248 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16249 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16250 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16251 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16252 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 46 => ((9 integer))
mem: ((9 integer)): 16253 <= 46
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16254 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 46
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1153 => ((11 byte-address))
mem: ((11 byte-address)): 16255 <= 1153
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1153 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16274 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16276 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16277 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16278 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16279 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16280 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16281 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16282 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16283 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 47 => ((9 integer))
mem: ((9 integer)): 16284 <= 47
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16285 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 47
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1154 => ((11 byte-address))
mem: ((11 byte-address)): 16286 <= 1154
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1154 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13964 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9627 file-address) (raw)) => 10736
run: print-board/main 13: 10736 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10736
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
mem: ((10742 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16305 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16307 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16308 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16309 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16310 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16311 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16312 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16313 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16314 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 48 => ((9 integer))
mem: ((9 integer)): 16315 <= 48
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16316 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 48
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1155 => ((11 byte-address))
mem: ((11 byte-address)): 16317 <= 1155
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1155 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16336 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16338 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16339 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16340 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16341 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16342 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16343 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16344 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16345 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 49 => ((9 integer))
mem: ((9 integer)): 16346 <= 49
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16347 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 49
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1156 => ((11 byte-address))
mem: ((11 byte-address)): 16348 <= 1156
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1156 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13964 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9628 file-address) (raw)) => 11272
run: print-board/main 13: 11272 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11272
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
mem: ((11278 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16367 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16369 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16370 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16371 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16372 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16373 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16374 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16375 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16376 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 50 => ((9 integer))
mem: ((9 integer)): 16377 <= 50
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16378 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 50
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1157 => ((11 byte-address))
mem: ((11 byte-address)): 16379 <= 1157
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1157 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16398 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16400 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16401 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16402 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16403 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16404 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16405 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16406 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16407 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 51 => ((9 integer))
mem: ((9 integer)): 16408 <= 51
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16409 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 51
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1158 => ((11 byte-address))
mem: ((11 byte-address)): 16410 <= 1158
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1158 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13964 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9629 file-address) (raw)) => 11808
run: print-board/main 13: 11808 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11808
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
mem: ((11814 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16429 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16431 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16432 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16433 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16434 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16435 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16436 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16437 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16438 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 52 => ((9 integer))
mem: ((9 integer)): 16439 <= 52
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16440 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 52
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1159 => ((11 byte-address))
mem: ((11 byte-address)): 16441 <= 1159
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1159 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16460 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16462 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16463 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16464 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16465 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16466 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16467 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16468 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16469 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 53 => ((9 integer))
mem: ((9 integer)): 16470 <= 53
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16471 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 53
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1160 => ((11 byte-address))
mem: ((11 byte-address)): 16472 <= 1160
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1160 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13964 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9630 file-address) (raw)) => 12344
run: print-board/main 13: 12344 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12344
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
mem: ((12350 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16491 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16493 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16494 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16495 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16496 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16497 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16498 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16499 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16500 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 54 => ((9 integer))
mem: ((9 integer)): 16501 <= 54
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16502 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 54
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1161 => ((11 byte-address))
mem: ((11 byte-address)): 16503 <= 1161
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1161 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16522 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16524 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16525 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16526 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16527 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16528 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16529 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16530 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16531 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 55 => ((9 integer))
mem: ((9 integer)): 16532 <= 55
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16533 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 55
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1162 => ((11 byte-address))
mem: ((11 byte-address)): 16534 <= 1162
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1162 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13964 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9631 file-address) (raw)) => 12880
run: print-board/main 13: 12880 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12880
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
mem: ((12886 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16553 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16555 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16556 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16557 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16558 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16559 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16560 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16561 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16562 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 56 => ((9 integer))
mem: ((9 integer)): 16563 <= 56
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16564 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 56
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1163 => ((11 byte-address))
mem: ((11 byte-address)): 16565 <= 1163
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1163 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16584 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16586 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16587 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16588 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16589 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16590 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16591 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16592 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16593 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 57 => ((9 integer))
mem: ((9 integer)): 16594 <= 57
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16595 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 57
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1164 => ((11 byte-address))
mem: ((11 byte-address)): 16596 <= 1164
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1164 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13964 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9632 file-address) (raw)) => 13416
run: print-board/main 13: 13416 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 13416
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
mem: ((13422 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16615 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16617 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 16618 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16619 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16620 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16621 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16622 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16623 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16624 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 58 => ((9 integer))
mem: ((9 integer)): 16625 <= 58
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16626 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 58
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1165 => ((11 byte-address))
mem: ((11 byte-address)): 16627 <= 1165
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1165 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 16646 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16648 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16649 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16650 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16651 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16652 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16653 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16654 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 2
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 40 => ((8 integer))
mem: ((8 integer)): 16655 <= 40
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 40
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 59 => ((9 integer))
mem: ((9 integer)): 16656 <= 59
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16657 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 59
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1166 => ((11 byte-address))
mem: ((11 byte-address)): 16658 <= 1166
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1166 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13964 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13961 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: print-board/main 19: 4 => ((3 integer))
mem: ((3 integer)): 13960 <= 4
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 16677 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16679 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 16680 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 2
run: cursor-to-next-line/print-board/main 4: 3 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 3
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 16681 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 4
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: print-board/main 6: 5 => ((5 integer))
mem: ((5 integer)): 13962 <= 5
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 5
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 16708 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 5)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16710 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 5)
run: print-integer/print-board/main 2: 5 => ((2 integer))
mem: ((2 integer)): 16711 <= 5
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 16739 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (5)
run: integer-to-decimal-string/print-integer/print-board/main 1: 5 => ((1 integer))
mem: ((1 integer)): 16741 <= 5
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 16742 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 16744 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 16745 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 16770 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 16801 => ((1 buffer-address))
mem: ((1 buffer-address)): 16772 <= 16801
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 16801 => ((2 integer-address))
mem: ((2 integer-address)): 16773 <= 16801
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 16801 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 16802 => ((3 string-address-address))
mem: ((3 string-address-address)): 16774 <= 16802
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 16775 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 16803 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 16802 <= 16803
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 16801
run: integer-to-decimal-string/print-integer/print-board/main 11: 16801 => ((6 buffer-address))
mem: ((6 buffer-address)): 16746 <= 16801
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 16747 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 16748 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 16749 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 5
mem: ((1 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 16741 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 5 => ((10 integer))
mem: ((10 integer)): 16750 <= 5
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 17: 53 => ((11 integer))
mem: ((11 integer)): 16751 <= 53
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 53
run: integer-to-decimal-string/print-integer/print-board/main 18: #\5 => ((12 character))
mem: ((12 character)): 16752 <= #\5
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 16801
mem: ((12 character)) => 5
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 16834 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (16801 #\5)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 16801 => ((1 buffer-address))
mem: ((1 buffer-address)): 16836 <= 16801
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (16801 #\5)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\5 => ((2 character))
mem: ((2 character)): 16837 <= #\5
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 16801
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 16865 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (16801)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 16801 => ((1 buffer-address))
mem: ((1 buffer-address)): 16867 <= 16801
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((16801 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 16868 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((16802 string-address) (raw)) => 16803
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 16803 => ((3 string-address))
mem: ((3 string-address)): 16869 <= 16803
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((16803 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 16870 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 16871 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 16838 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 16801 => ((4 integer-address))
mem: ((4 integer-address)): 16839 <= 16801
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((16802 string-address) (raw)) => 16803
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 16803 => ((5 string-address))
mem: ((5 string-address)): 16840 <= 16803
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((16803 string) (raw))
mem: ((16803 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 16804 => ((6 byte-address))
mem: ((6 byte-address)): 16841 <= 16804
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 5
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\5 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 16804 <= #\5
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 16801 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 16801
run: integer-to-decimal-string/print-integer/print-board/main 19: 16801 => ((6 buffer-address))
mem: ((6 buffer-address)): 16746 <= 16801
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 16749 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((16801 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 16753 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((16802 string-address) (raw)) => 16803
run: integer-to-decimal-string/print-integer/print-board/main 24: 16803 => ((14 string-address))
mem: ((14 string-address)): 16754 <= 16803
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 16896 => ((15 string-address))
mem: ((15 string-address)): 16755 <= 16896
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 16756 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 16757 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 16749 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((16803 string) (raw))
mem: ((16803 integer) (raw)) => 30
mem: ((16804 byte) (raw)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 30: #\5 => ((18 byte))
mem: ((18 byte)): 16758 <= #\5
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((16896 string) (raw))
mem: ((16896 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 16897 => ((19 byte-address))
mem: ((19 byte-address)): 16759 <= 16897
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 5
run: integer-to-decimal-string/print-integer/print-board/main 32: #\5 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 16897 <= #\5
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 16756 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 16757 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 16749 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 16896
run: print-integer/print-board/main 3: 16896 => ((3 string-address))
mem: ((3 string-address)): 16712 <= 16896
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 16896
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 16898 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 16896)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16900 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 16896)
run: print-string/print-integer/print-board/main 2: 16896 => ((2 string-address))
mem: ((2 string-address)): 16901 <= 16896
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((16896 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 16902 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 16903 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 16904 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((16896 string) (raw))
mem: ((16896 integer) (raw)) => 1
mem: ((16897 byte) (raw)) => 5
run: print-string/print-integer/print-board/main 7: #\5 => ((6 character))
mem: ((6 character)): 16905 <= #\5
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 5
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 16929 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\5)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16931 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\5)
run: print-character/print-string/print-integer/print-board/main 2: #\5 => ((2 character))
mem: ((2 character)): 16932 <= #\5
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\5)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16933 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\5)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 16934 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 16935 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 16936 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 16937 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 16938 <= 60
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 60 => ((9 integer))
mem: ((9 integer)): 16939 <= 60
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 16940 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 60
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1167 => ((11 byte-address))
mem: ((11 byte-address)): 16941 <= 1167
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 5
run: print-character/print-string/print-integer/print-board/main 13: #\5 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1167 <= #\5
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 16903 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 16904 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 16960 => ((6 string-address))
mem: ((6 string-address)): 13963 <= 16960
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 16960
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 16964 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 16960)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16966 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 16960)
run: print-string/print-board/main 2: 16960 => ((2 string-address))
mem: ((2 string-address)): 16967 <= 16960
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((16960 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 16968 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 16969 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 16970 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((16960 string) (raw))
mem: ((16960 integer) (raw)) => 3
mem: ((16961 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 16971 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 16995 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 16997 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 16998 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 16999 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17000 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17001 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17002 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17003 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17004 <= 60
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 61 => ((9 integer))
mem: ((9 integer)): 17005 <= 61
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17006 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 61
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1168 => ((11 byte-address))
mem: ((11 byte-address)): 17007 <= 1168
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1168 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 16969 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 16970 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((16960 string) (raw))
mem: ((16960 integer) (raw)) => 3
mem: ((16962 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 16971 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 17026 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17028 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 17029 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17030 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17031 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17032 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17033 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17034 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17035 <= 60
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 62 => ((9 integer))
mem: ((9 integer)): 17036 <= 62
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17037 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 62
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1169 => ((11 byte-address))
mem: ((11 byte-address)): 17038 <= 1169
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1169 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 16969 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 16970 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((16960 string) (raw))
mem: ((16960 integer) (raw)) => 3
mem: ((16963 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 16971 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 17057 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17059 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17060 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17061 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17062 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17063 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17064 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17065 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17066 <= 60
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 63 => ((9 integer))
mem: ((9 integer)): 17067 <= 63
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17068 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 63
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1170 => ((11 byte-address))
mem: ((11 byte-address)): 17069 <= 1170
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1170 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 16969 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 16970 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13964 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9625 file-address) (raw)) => 9664
run: print-board/main 13: 9664 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 9664
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
mem: ((9669 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17088 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17090 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17091 <= #\_
schedule: scheduling print-character/print-board/main for further processing
schedule: print-character/print-board/main
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17092 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17093 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17094 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17095 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17096 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17097 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 64 => ((9 integer))
mem: ((9 integer)): 17098 <= 64
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17099 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 64
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1171 => ((11 byte-address))
mem: ((11 byte-address)): 17100 <= 1171
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1171 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17119 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17121 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17122 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17123 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17124 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17125 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17126 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17127 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17128 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 65 => ((9 integer))
mem: ((9 integer)): 17129 <= 65
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17130 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 65
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1172 => ((11 byte-address))
mem: ((11 byte-address)): 17131 <= 1172
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1172 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13964 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9626 file-address) (raw)) => 10200
run: print-board/main 13: 10200 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10200
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
mem: ((10205 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17150 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17152 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17153 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17154 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17155 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17156 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17157 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17158 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17159 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 66 => ((9 integer))
mem: ((9 integer)): 17160 <= 66
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17161 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 66
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1173 => ((11 byte-address))
mem: ((11 byte-address)): 17162 <= 1173
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1173 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17181 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17183 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17184 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17185 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17186 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17187 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17188 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17189 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17190 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 67 => ((9 integer))
mem: ((9 integer)): 17191 <= 67
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17192 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 67
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1174 => ((11 byte-address))
mem: ((11 byte-address)): 17193 <= 1174
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1174 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13964 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9627 file-address) (raw)) => 10736
run: print-board/main 13: 10736 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10736
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
mem: ((10741 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17212 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17214 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17215 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17216 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17217 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17218 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17219 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17220 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17221 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 68 => ((9 integer))
mem: ((9 integer)): 17222 <= 68
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17223 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 68
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1175 => ((11 byte-address))
mem: ((11 byte-address)): 17224 <= 1175
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1175 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17243 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17245 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17246 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17247 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17248 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17249 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17250 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17251 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17252 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 69 => ((9 integer))
mem: ((9 integer)): 17253 <= 69
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17254 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 69
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1176 => ((11 byte-address))
mem: ((11 byte-address)): 17255 <= 1176
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1176 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13964 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9628 file-address) (raw)) => 11272
run: print-board/main 13: 11272 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11272
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
mem: ((11277 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17274 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17276 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17277 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17278 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17279 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17280 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17281 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17282 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17283 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 70 => ((9 integer))
mem: ((9 integer)): 17284 <= 70
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17285 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 70
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1177 => ((11 byte-address))
mem: ((11 byte-address)): 17286 <= 1177
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1177 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17305 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17307 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17308 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17309 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17310 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17311 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17312 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17313 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17314 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 71 => ((9 integer))
mem: ((9 integer)): 17315 <= 71
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17316 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 71
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1178 => ((11 byte-address))
mem: ((11 byte-address)): 17317 <= 1178
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1178 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13964 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9629 file-address) (raw)) => 11808
run: print-board/main 13: 11808 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11808
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
mem: ((11813 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17336 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17338 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17339 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17340 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17341 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17342 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17343 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17344 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17345 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 72 => ((9 integer))
mem: ((9 integer)): 17346 <= 72
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17347 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 72
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1179 => ((11 byte-address))
mem: ((11 byte-address)): 17348 <= 1179
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1179 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17367 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17369 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17370 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17371 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17372 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17373 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17374 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17375 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17376 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 73 => ((9 integer))
mem: ((9 integer)): 17377 <= 73
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17378 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 73
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1180 => ((11 byte-address))
mem: ((11 byte-address)): 17379 <= 1180
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1180 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13964 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9630 file-address) (raw)) => 12344
run: print-board/main 13: 12344 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12344
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
mem: ((12349 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17398 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17400 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17401 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17402 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17403 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17404 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17405 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17406 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17407 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 74 => ((9 integer))
mem: ((9 integer)): 17408 <= 74
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17409 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 74
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1181 => ((11 byte-address))
mem: ((11 byte-address)): 17410 <= 1181
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1181 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17429 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17431 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17432 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17433 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17434 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17435 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17436 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17437 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17438 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 75 => ((9 integer))
mem: ((9 integer)): 17439 <= 75
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17440 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 75
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1182 => ((11 byte-address))
mem: ((11 byte-address)): 17441 <= 1182
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1182 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13964 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9631 file-address) (raw)) => 12880
run: print-board/main 13: 12880 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12880
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
mem: ((12885 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17460 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17462 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17463 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17464 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17465 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17466 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17467 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17468 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17469 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 76 => ((9 integer))
mem: ((9 integer)): 17470 <= 76
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17471 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 76
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1183 => ((11 byte-address))
mem: ((11 byte-address)): 17472 <= 1183
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1183 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17491 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17493 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17494 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17495 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17496 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17497 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17498 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17499 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17500 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 77 => ((9 integer))
mem: ((9 integer)): 17501 <= 77
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17502 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 77
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1184 => ((11 byte-address))
mem: ((11 byte-address)): 17503 <= 1184
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1184 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13964 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9632 file-address) (raw)) => 13416
run: print-board/main 13: 13416 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 13416
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
mem: ((13421 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17522 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17524 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 17525 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17526 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17527 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17528 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17529 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17530 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17531 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 78 => ((9 integer))
mem: ((9 integer)): 17532 <= 78
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17533 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 78
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1185 => ((11 byte-address))
mem: ((11 byte-address)): 17534 <= 1185
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1185 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17553 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17555 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17556 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17557 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17558 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17559 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17560 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17561 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 3
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 60 => ((8 integer))
mem: ((8 integer)): 17562 <= 60
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 60
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 79 => ((9 integer))
mem: ((9 integer)): 17563 <= 79
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17564 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 79
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1186 => ((11 byte-address))
mem: ((11 byte-address)): 17565 <= 1186
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1186 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13964 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13961 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: print-board/main 19: 3 => ((3 integer))
mem: ((3 integer)): 13960 <= 3
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 17584 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17586 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 17587 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 3
run: cursor-to-next-line/print-board/main 4: 4 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 4
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 17588 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 3
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: print-board/main 6: 4 => ((5 integer))
mem: ((5 integer)): 13962 <= 4
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 4
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 17615 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 4)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17617 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 4)
run: print-integer/print-board/main 2: 4 => ((2 integer))
mem: ((2 integer)): 17618 <= 4
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 17646 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (4)
run: integer-to-decimal-string/print-integer/print-board/main 1: 4 => ((1 integer))
mem: ((1 integer)): 17648 <= 4
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 17649 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 17651 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 17652 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 17677 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 17708 => ((1 buffer-address))
mem: ((1 buffer-address)): 17679 <= 17708
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 17708 => ((2 integer-address))
mem: ((2 integer-address)): 17680 <= 17708
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 17708 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 17709 => ((3 string-address-address))
mem: ((3 string-address-address)): 17681 <= 17709
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 17682 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 17710 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 17709 <= 17710
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 17708
run: integer-to-decimal-string/print-integer/print-board/main 11: 17708 => ((6 buffer-address))
mem: ((6 buffer-address)): 17653 <= 17708
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 17654 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 17655 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 17656 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 4
mem: ((1 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 17648 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 4 => ((10 integer))
mem: ((10 integer)): 17657 <= 4
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 17: 52 => ((11 integer))
mem: ((11 integer)): 17658 <= 52
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 52
run: integer-to-decimal-string/print-integer/print-board/main 18: #\4 => ((12 character))
mem: ((12 character)): 17659 <= #\4
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 17708
mem: ((12 character)) => 4
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 17741 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (17708 #\4)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 17708 => ((1 buffer-address))
mem: ((1 buffer-address)): 17743 <= 17708
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (17708 #\4)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\4 => ((2 character))
mem: ((2 character)): 17744 <= #\4
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 17708
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 17772 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (17708)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 17708 => ((1 buffer-address))
mem: ((1 buffer-address)): 17774 <= 17708
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((17708 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 17775 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((17709 string-address) (raw)) => 17710
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 17710 => ((3 string-address))
mem: ((3 string-address)): 17776 <= 17710
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((17710 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 17777 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 17778 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 17745 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 17708 => ((4 integer-address))
mem: ((4 integer-address)): 17746 <= 17708
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((17709 string-address) (raw)) => 17710
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 17710 => ((5 string-address))
mem: ((5 string-address)): 17747 <= 17710
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((17710 string) (raw))
mem: ((17710 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 17711 => ((6 byte-address))
mem: ((6 byte-address)): 17748 <= 17711
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 4
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\4 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 17711 <= #\4
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 17708 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 17708
run: integer-to-decimal-string/print-integer/print-board/main 19: 17708 => ((6 buffer-address))
mem: ((6 buffer-address)): 17653 <= 17708
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 17656 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((17708 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 17660 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((17709 string-address) (raw)) => 17710
run: integer-to-decimal-string/print-integer/print-board/main 24: 17710 => ((14 string-address))
mem: ((14 string-address)): 17661 <= 17710
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 17803 => ((15 string-address))
mem: ((15 string-address)): 17662 <= 17803
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 17663 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 17664 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 17656 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((17710 string) (raw))
mem: ((17710 integer) (raw)) => 30
mem: ((17711 byte) (raw)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 30: #\4 => ((18 byte))
mem: ((18 byte)): 17665 <= #\4
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((17803 string) (raw))
mem: ((17803 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 17804 => ((19 byte-address))
mem: ((19 byte-address)): 17666 <= 17804
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 4
run: integer-to-decimal-string/print-integer/print-board/main 32: #\4 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 17804 <= #\4
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 17663 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 17664 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 17656 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 17803
run: print-integer/print-board/main 3: 17803 => ((3 string-address))
mem: ((3 string-address)): 17619 <= 17803
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 17803
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 17805 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 17803)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17807 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 17803)
run: print-string/print-integer/print-board/main 2: 17803 => ((2 string-address))
mem: ((2 string-address)): 17808 <= 17803
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((17803 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 17809 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 17810 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 17811 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((17803 string) (raw))
mem: ((17803 integer) (raw)) => 1
mem: ((17804 byte) (raw)) => 4
run: print-string/print-integer/print-board/main 7: #\4 => ((6 character))
mem: ((6 character)): 17812 <= #\4
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 4
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 17836 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\4)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17838 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\4)
run: print-character/print-string/print-integer/print-board/main 2: #\4 => ((2 character))
mem: ((2 character)): 17839 <= #\4
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\4)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17840 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\4)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17841 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17842 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17843 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17844 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 17845 <= 80
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 80 => ((9 integer))
mem: ((9 integer)): 17846 <= 80
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17847 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 80
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1187 => ((11 byte-address))
mem: ((11 byte-address)): 17848 <= 1187
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 4
run: print-character/print-string/print-integer/print-board/main 13: #\4 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1187 <= #\4
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 17810 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 17811 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 17867 => ((6 string-address))
mem: ((6 string-address)): 13963 <= 17867
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 17867
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 17871 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 17867)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17873 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 17867)
run: print-string/print-board/main 2: 17867 => ((2 string-address))
mem: ((2 string-address)): 17874 <= 17867
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((17867 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 17875 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 17876 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 17877 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((17867 string) (raw))
mem: ((17867 integer) (raw)) => 3
mem: ((17868 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 17878 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 17902 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17904 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17905 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17906 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17907 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17908 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17909 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17910 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 17911 <= 80
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 81 => ((9 integer))
mem: ((9 integer)): 17912 <= 81
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17913 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 81
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1188 => ((11 byte-address))
mem: ((11 byte-address)): 17914 <= 1188
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1188 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 17876 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 17877 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((17867 string) (raw))
mem: ((17867 integer) (raw)) => 3
mem: ((17869 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 17878 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 17933 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17935 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 17936 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17937 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17938 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17939 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17940 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17941 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 17942 <= 80
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 82 => ((9 integer))
mem: ((9 integer)): 17943 <= 82
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17944 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 82
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1189 => ((11 byte-address))
mem: ((11 byte-address)): 17945 <= 1189
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1189 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 17876 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 17877 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((17867 string) (raw))
mem: ((17867 integer) (raw)) => 3
mem: ((17870 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 17878 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 17964 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17966 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 17967 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17968 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 17969 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 17970 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 17971 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 17972 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 17973 <= 80
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 83 => ((9 integer))
mem: ((9 integer)): 17974 <= 83
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 17975 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 83
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1190 => ((11 byte-address))
mem: ((11 byte-address)): 17976 <= 1190
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1190 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 17876 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 17877 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
schedule: scheduling print-string/print-board/main for further processing
schedule: print-string/print-board/main
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13964 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9625 file-address) (raw)) => 9664
run: print-board/main 13: 9664 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 9664
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
mem: ((9668 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13963 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 17995 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 17997 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 17998 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 17999 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18000 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18001 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18002 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18003 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18004 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 84 => ((9 integer))
mem: ((9 integer)): 18005 <= 84
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18006 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 84
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1191 => ((11 byte-address))
mem: ((11 byte-address)): 18007 <= 1191
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1191 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18026 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18028 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18029 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18030 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18031 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18032 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18033 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18034 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18035 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 85 => ((9 integer))
mem: ((9 integer)): 18036 <= 85
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18037 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 85
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1192 => ((11 byte-address))
mem: ((11 byte-address)): 18038 <= 1192
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1192 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13964 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9626 file-address) (raw)) => 10200
run: print-board/main 13: 10200 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10200
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
mem: ((10204 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18057 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18059 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18060 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18061 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18062 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18063 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18064 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18065 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18066 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 86 => ((9 integer))
mem: ((9 integer)): 18067 <= 86
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18068 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 86
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1193 => ((11 byte-address))
mem: ((11 byte-address)): 18069 <= 1193
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1193 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18088 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18090 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18091 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18092 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18093 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18094 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18095 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18096 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18097 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 87 => ((9 integer))
mem: ((9 integer)): 18098 <= 87
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18099 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 87
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1194 => ((11 byte-address))
mem: ((11 byte-address)): 18100 <= 1194
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1194 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13964 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9627 file-address) (raw)) => 10736
run: print-board/main 13: 10736 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10736
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
mem: ((10740 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18119 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18121 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18122 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18123 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18124 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18125 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18126 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18127 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18128 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 88 => ((9 integer))
mem: ((9 integer)): 18129 <= 88
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18130 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 88
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1195 => ((11 byte-address))
mem: ((11 byte-address)): 18131 <= 1195
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1195 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18150 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18152 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18153 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18154 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18155 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18156 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18157 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18158 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18159 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 89 => ((9 integer))
mem: ((9 integer)): 18160 <= 89
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18161 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 89
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1196 => ((11 byte-address))
mem: ((11 byte-address)): 18162 <= 1196
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1196 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13964 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9628 file-address) (raw)) => 11272
run: print-board/main 13: 11272 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11272
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
mem: ((11276 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18181 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18183 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18184 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18185 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18186 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18187 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18188 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18189 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18190 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 90 => ((9 integer))
mem: ((9 integer)): 18191 <= 90
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18192 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 90
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1197 => ((11 byte-address))
mem: ((11 byte-address)): 18193 <= 1197
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1197 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18212 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18214 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18215 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18216 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18217 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18218 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18219 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18220 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18221 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 91 => ((9 integer))
mem: ((9 integer)): 18222 <= 91
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18223 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 91
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1198 => ((11 byte-address))
mem: ((11 byte-address)): 18224 <= 1198
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1198 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13964 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9629 file-address) (raw)) => 11808
run: print-board/main 13: 11808 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11808
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
mem: ((11812 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18243 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18245 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18246 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18247 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18248 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18249 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18250 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18251 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18252 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 92 => ((9 integer))
mem: ((9 integer)): 18253 <= 92
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18254 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 92
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1199 => ((11 byte-address))
mem: ((11 byte-address)): 18255 <= 1199
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1199 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18274 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18276 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18277 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18278 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18279 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18280 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18281 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18282 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18283 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 93 => ((9 integer))
mem: ((9 integer)): 18284 <= 93
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18285 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 93
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1200 => ((11 byte-address))
mem: ((11 byte-address)): 18286 <= 1200
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1200 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13964 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9630 file-address) (raw)) => 12344
run: print-board/main 13: 12344 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12344
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
mem: ((12348 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18305 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18307 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18308 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18309 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18310 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18311 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18312 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18313 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18314 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 94 => ((9 integer))
mem: ((9 integer)): 18315 <= 94
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18316 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 94
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1201 => ((11 byte-address))
mem: ((11 byte-address)): 18317 <= 1201
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1201 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18336 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18338 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18339 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18340 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18341 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18342 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18343 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18344 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18345 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 95 => ((9 integer))
mem: ((9 integer)): 18346 <= 95
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18347 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 95
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1202 => ((11 byte-address))
mem: ((11 byte-address)): 18348 <= 1202
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1202 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13964 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9631 file-address) (raw)) => 12880
run: print-board/main 13: 12880 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12880
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
mem: ((12884 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18367 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18369 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18370 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18371 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18372 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18373 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18374 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18375 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18376 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 96 => ((9 integer))
mem: ((9 integer)): 18377 <= 96
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18378 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 96
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1203 => ((11 byte-address))
mem: ((11 byte-address)): 18379 <= 1203
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1203 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18398 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18400 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18401 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18402 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18403 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18404 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18405 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18406 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18407 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 97 => ((9 integer))
mem: ((9 integer)): 18408 <= 97
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18409 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 97
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1204 => ((11 byte-address))
mem: ((11 byte-address)): 18410 <= 1204
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1204 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13964 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9632 file-address) (raw)) => 13416
run: print-board/main 13: 13416 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 13416
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
mem: ((13420 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18429 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18431 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18432 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18433 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18434 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18435 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18436 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18437 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18438 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 98 => ((9 integer))
mem: ((9 integer)): 18439 <= 98
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18440 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 98
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1205 => ((11 byte-address))
mem: ((11 byte-address)): 18441 <= 1205
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1205 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18460 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18462 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18463 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18464 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18465 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18466 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18467 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18468 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 4
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 80 => ((8 integer))
mem: ((8 integer)): 18469 <= 80
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 80
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 99 => ((9 integer))
mem: ((9 integer)): 18470 <= 99
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18471 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 99
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1206 => ((11 byte-address))
mem: ((11 byte-address)): 18472 <= 1206
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1206 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13964 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13961 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: print-board/main 19: 2 => ((3 integer))
mem: ((3 integer)): 13960 <= 2
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 18491 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18493 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 18494 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 4
run: cursor-to-next-line/print-board/main 4: 5 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 5
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 18495 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 2
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: print-board/main 6: 3 => ((5 integer))
mem: ((5 integer)): 13962 <= 3
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 3
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 18522 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 3)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18524 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 3)
run: print-integer/print-board/main 2: 3 => ((2 integer))
mem: ((2 integer)): 18525 <= 3
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 18553 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (3)
run: integer-to-decimal-string/print-integer/print-board/main 1: 3 => ((1 integer))
mem: ((1 integer)): 18555 <= 3
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 18556 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 18558 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 18559 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 18584 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 18615 => ((1 buffer-address))
mem: ((1 buffer-address)): 18586 <= 18615
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 18615 => ((2 integer-address))
mem: ((2 integer-address)): 18587 <= 18615
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 18615 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 18616 => ((3 string-address-address))
mem: ((3 string-address-address)): 18588 <= 18616
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 18589 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 18617 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 18616 <= 18617
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 18615
run: integer-to-decimal-string/print-integer/print-board/main 11: 18615 => ((6 buffer-address))
mem: ((6 buffer-address)): 18560 <= 18615
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 18561 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 18562 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 18563 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 3
mem: ((1 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 18555 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 3 => ((10 integer))
mem: ((10 integer)): 18564 <= 3
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 17: 51 => ((11 integer))
mem: ((11 integer)): 18565 <= 51
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 51
run: integer-to-decimal-string/print-integer/print-board/main 18: #\3 => ((12 character))
mem: ((12 character)): 18566 <= #\3
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 18615
mem: ((12 character)) => 3
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 18648 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (18615 #\3)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 18615 => ((1 buffer-address))
mem: ((1 buffer-address)): 18650 <= 18615
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (18615 #\3)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\3 => ((2 character))
mem: ((2 character)): 18651 <= #\3
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 18615
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 18679 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (18615)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 18615 => ((1 buffer-address))
mem: ((1 buffer-address)): 18681 <= 18615
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((18615 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 18682 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((18616 string-address) (raw)) => 18617
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 18617 => ((3 string-address))
mem: ((3 string-address)): 18683 <= 18617
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((18617 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 18684 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 18685 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 18652 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 18615 => ((4 integer-address))
mem: ((4 integer-address)): 18653 <= 18615
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((18616 string-address) (raw)) => 18617
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 18617 => ((5 string-address))
mem: ((5 string-address)): 18654 <= 18617
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((18617 string) (raw))
mem: ((18617 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 18618 => ((6 byte-address))
mem: ((6 byte-address)): 18655 <= 18618
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 3
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\3 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 18618 <= #\3
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 18615 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 18615
run: integer-to-decimal-string/print-integer/print-board/main 19: 18615 => ((6 buffer-address))
mem: ((6 buffer-address)): 18560 <= 18615
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 18563 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((18615 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 18567 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((18616 string-address) (raw)) => 18617
run: integer-to-decimal-string/print-integer/print-board/main 24: 18617 => ((14 string-address))
mem: ((14 string-address)): 18568 <= 18617
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 18710 => ((15 string-address))
mem: ((15 string-address)): 18569 <= 18710
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 18570 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 18571 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 18563 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((18617 string) (raw))
mem: ((18617 integer) (raw)) => 30
mem: ((18618 byte) (raw)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 30: #\3 => ((18 byte))
mem: ((18 byte)): 18572 <= #\3
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((18710 string) (raw))
mem: ((18710 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 18711 => ((19 byte-address))
mem: ((19 byte-address)): 18573 <= 18711
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 3
run: integer-to-decimal-string/print-integer/print-board/main 32: #\3 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 18711 <= #\3
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 18570 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 18571 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 18563 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 18710
run: print-integer/print-board/main 3: 18710 => ((3 string-address))
mem: ((3 string-address)): 18526 <= 18710
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 18710
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 18712 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 18710)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18714 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 18710)
run: print-string/print-integer/print-board/main 2: 18710 => ((2 string-address))
mem: ((2 string-address)): 18715 <= 18710
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((18710 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 18716 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 18717 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 18718 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((18710 string) (raw))
mem: ((18710 integer) (raw)) => 1
mem: ((18711 byte) (raw)) => 3
run: print-string/print-integer/print-board/main 7: #\3 => ((6 character))
mem: ((6 character)): 18719 <= #\3
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 3
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 18743 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\3)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18745 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\3)
run: print-character/print-string/print-integer/print-board/main 2: #\3 => ((2 character))
mem: ((2 character)): 18746 <= #\3
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\3)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18747 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\3)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18748 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18749 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18750 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18751 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18752 <= 100
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 100 => ((9 integer))
mem: ((9 integer)): 18753 <= 100
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18754 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 100
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1207 => ((11 byte-address))
mem: ((11 byte-address)): 18755 <= 1207
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 3
run: print-character/print-string/print-integer/print-board/main 13: #\3 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1207 <= #\3
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 18717 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 18718 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 18774 => ((6 string-address))
mem: ((6 string-address)): 13963 <= 18774
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 18774
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 18778 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 18774)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18780 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 18774)
run: print-string/print-board/main 2: 18774 => ((2 string-address))
mem: ((2 string-address)): 18781 <= 18774
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((18774 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 18782 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 18783 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 18784 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((18774 string) (raw))
mem: ((18774 integer) (raw)) => 3
mem: ((18775 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 18785 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 18809 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18811 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18812 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18813 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18814 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18815 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18816 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18817 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18818 <= 100
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 101 => ((9 integer))
mem: ((9 integer)): 18819 <= 101
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18820 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 101
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1208 => ((11 byte-address))
mem: ((11 byte-address)): 18821 <= 1208
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1208 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 18783 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 18784 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((18774 string) (raw))
mem: ((18774 integer) (raw)) => 3
mem: ((18776 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 18785 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 18840 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18842 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 18843 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18844 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18845 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18846 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18847 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18848 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18849 <= 100
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 102 => ((9 integer))
mem: ((9 integer)): 18850 <= 102
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18851 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 102
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1209 => ((11 byte-address))
mem: ((11 byte-address)): 18852 <= 1209
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1209 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 18783 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 18784 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((18774 string) (raw))
mem: ((18774 integer) (raw)) => 3
mem: ((18777 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 18785 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 18871 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18873 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18874 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18875 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18876 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18877 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18878 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18879 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18880 <= 100
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 103 => ((9 integer))
mem: ((9 integer)): 18881 <= 103
schedule: scheduling print-character/print-string/print-board/main for further processing
schedule: print-character/print-string/print-board/main
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18882 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 103
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1210 => ((11 byte-address))
mem: ((11 byte-address)): 18883 <= 1210
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1210 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 18783 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 18784 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13964 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9625 file-address) (raw)) => 9664
run: print-board/main 13: 9664 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 9664
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
mem: ((9667 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18902 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18904 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18905 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18906 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18907 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18908 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18909 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18910 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18911 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 104 => ((9 integer))
mem: ((9 integer)): 18912 <= 104
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18913 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 104
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1211 => ((11 byte-address))
mem: ((11 byte-address)): 18914 <= 1211
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1211 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18933 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18935 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18936 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18937 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18938 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18939 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18940 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18941 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18942 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 105 => ((9 integer))
mem: ((9 integer)): 18943 <= 105
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18944 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 105
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1212 => ((11 byte-address))
mem: ((11 byte-address)): 18945 <= 1212
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1212 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13964 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9626 file-address) (raw)) => 10200
run: print-board/main 13: 10200 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10200
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
mem: ((10203 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18964 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18966 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 18967 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18968 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 18969 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 18970 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 18971 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 18972 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 18973 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 106 => ((9 integer))
mem: ((9 integer)): 18974 <= 106
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 18975 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 106
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1213 => ((11 byte-address))
mem: ((11 byte-address)): 18976 <= 1213
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1213 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 18995 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 18997 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 18998 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 18999 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19000 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19001 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19002 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19003 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19004 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 107 => ((9 integer))
mem: ((9 integer)): 19005 <= 107
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19006 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 107
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1214 => ((11 byte-address))
mem: ((11 byte-address)): 19007 <= 1214
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1214 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13964 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9627 file-address) (raw)) => 10736
run: print-board/main 13: 10736 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10736
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
mem: ((10739 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19026 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19028 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 19029 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19030 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19031 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19032 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19033 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19034 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19035 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 108 => ((9 integer))
mem: ((9 integer)): 19036 <= 108
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19037 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 108
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1215 => ((11 byte-address))
mem: ((11 byte-address)): 19038 <= 1215
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1215 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19057 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19059 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19060 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19061 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19062 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19063 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19064 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19065 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19066 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 109 => ((9 integer))
mem: ((9 integer)): 19067 <= 109
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19068 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 109
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1216 => ((11 byte-address))
mem: ((11 byte-address)): 19069 <= 1216
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1216 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13964 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9628 file-address) (raw)) => 11272
run: print-board/main 13: 11272 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11272
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
mem: ((11275 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19088 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19090 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 19091 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19092 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19093 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19094 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19095 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19096 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19097 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 110 => ((9 integer))
mem: ((9 integer)): 19098 <= 110
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19099 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 110
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1217 => ((11 byte-address))
mem: ((11 byte-address)): 19100 <= 1217
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1217 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19119 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19121 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19122 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19123 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19124 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19125 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19126 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19127 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19128 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 111 => ((9 integer))
mem: ((9 integer)): 19129 <= 111
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19130 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 111
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1218 => ((11 byte-address))
mem: ((11 byte-address)): 19131 <= 1218
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1218 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13964 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9629 file-address) (raw)) => 11808
run: print-board/main 13: 11808 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11808
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
mem: ((11811 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19150 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19152 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 19153 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19154 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19155 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19156 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19157 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19158 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19159 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 112 => ((9 integer))
mem: ((9 integer)): 19160 <= 112
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19161 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 112
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1219 => ((11 byte-address))
mem: ((11 byte-address)): 19162 <= 1219
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1219 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19181 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19183 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19184 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19185 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19186 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19187 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19188 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19189 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19190 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 113 => ((9 integer))
mem: ((9 integer)): 19191 <= 113
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19192 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 113
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1220 => ((11 byte-address))
mem: ((11 byte-address)): 19193 <= 1220
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1220 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13964 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9630 file-address) (raw)) => 12344
run: print-board/main 13: 12344 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12344
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
mem: ((12347 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19212 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19214 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 19215 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19216 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19217 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19218 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19219 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19220 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19221 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 114 => ((9 integer))
mem: ((9 integer)): 19222 <= 114
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19223 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 114
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1221 => ((11 byte-address))
mem: ((11 byte-address)): 19224 <= 1221
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1221 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19243 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19245 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19246 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19247 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19248 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19249 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19250 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19251 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19252 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 115 => ((9 integer))
mem: ((9 integer)): 19253 <= 115
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19254 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 115
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1222 => ((11 byte-address))
mem: ((11 byte-address)): 19255 <= 1222
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1222 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13964 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9631 file-address) (raw)) => 12880
run: print-board/main 13: 12880 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12880
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
mem: ((12883 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19274 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19276 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 19277 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19278 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19279 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19280 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19281 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19282 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19283 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 116 => ((9 integer))
mem: ((9 integer)): 19284 <= 116
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19285 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 116
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1223 => ((11 byte-address))
mem: ((11 byte-address)): 19286 <= 1223
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1223 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19305 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19307 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19308 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19309 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19310 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19311 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19312 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19313 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19314 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 117 => ((9 integer))
mem: ((9 integer)): 19315 <= 117
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19316 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 117
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1224 => ((11 byte-address))
mem: ((11 byte-address)): 19317 <= 1224
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1224 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13964 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9632 file-address) (raw)) => 13416
run: print-board/main 13: 13416 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 13416
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
mem: ((13419 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19336 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19338 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 19339 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19340 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19341 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19342 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19343 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19344 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19345 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 118 => ((9 integer))
mem: ((9 integer)): 19346 <= 118
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19347 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 118
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1225 => ((11 byte-address))
mem: ((11 byte-address)): 19348 <= 1225
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1225 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19367 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19369 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19370 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19371 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19372 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19373 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19374 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19375 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 5
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 100 => ((8 integer))
mem: ((8 integer)): 19376 <= 100
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 100
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 119 => ((9 integer))
mem: ((9 integer)): 19377 <= 119
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19378 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 119
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1226 => ((11 byte-address))
mem: ((11 byte-address)): 19379 <= 1226
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1226 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13964 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13961 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: print-board/main 19: 1 => ((3 integer))
mem: ((3 integer)): 13960 <= 1
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 19398 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19400 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 19401 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 5
run: cursor-to-next-line/print-board/main 4: 6 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 6
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 19402 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 1
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: print-board/main 6: 2 => ((5 integer))
mem: ((5 integer)): 13962 <= 2
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 2
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 19429 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 2)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19431 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 2)
run: print-integer/print-board/main 2: 2 => ((2 integer))
mem: ((2 integer)): 19432 <= 2
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 19460 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (2)
run: integer-to-decimal-string/print-integer/print-board/main 1: 2 => ((1 integer))
mem: ((1 integer)): 19462 <= 2
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 19463 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 19465 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 19466 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 19491 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 19522 => ((1 buffer-address))
mem: ((1 buffer-address)): 19493 <= 19522
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 19522 => ((2 integer-address))
mem: ((2 integer-address)): 19494 <= 19522
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 19522 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 19523 => ((3 string-address-address))
mem: ((3 string-address-address)): 19495 <= 19523
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 19496 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 19524 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 19523 <= 19524
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 19522
run: integer-to-decimal-string/print-integer/print-board/main 11: 19522 => ((6 buffer-address))
mem: ((6 buffer-address)): 19467 <= 19522
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 19468 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 19469 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 19470 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 2
mem: ((1 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 19462 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 2 => ((10 integer))
mem: ((10 integer)): 19471 <= 2
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 17: 50 => ((11 integer))
mem: ((11 integer)): 19472 <= 50
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 50
run: integer-to-decimal-string/print-integer/print-board/main 18: #\2 => ((12 character))
mem: ((12 character)): 19473 <= #\2
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 19522
mem: ((12 character)) => 2
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 19555 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (19522 #\2)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 19522 => ((1 buffer-address))
mem: ((1 buffer-address)): 19557 <= 19522
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (19522 #\2)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\2 => ((2 character))
mem: ((2 character)): 19558 <= #\2
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 19522
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 19586 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (19522)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 19522 => ((1 buffer-address))
mem: ((1 buffer-address)): 19588 <= 19522
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((19522 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 19589 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((19523 string-address) (raw)) => 19524
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 19524 => ((3 string-address))
mem: ((3 string-address)): 19590 <= 19524
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((19524 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 19591 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 19592 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 19559 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 19522 => ((4 integer-address))
mem: ((4 integer-address)): 19560 <= 19522
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((19523 string-address) (raw)) => 19524
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 19524 => ((5 string-address))
mem: ((5 string-address)): 19561 <= 19524
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((19524 string) (raw))
mem: ((19524 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 19525 => ((6 byte-address))
mem: ((6 byte-address)): 19562 <= 19525
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 2
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\2 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 19525 <= #\2
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 19522 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 19522
run: integer-to-decimal-string/print-integer/print-board/main 19: 19522 => ((6 buffer-address))
mem: ((6 buffer-address)): 19467 <= 19522
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 19470 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((19522 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 19474 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((19523 string-address) (raw)) => 19524
run: integer-to-decimal-string/print-integer/print-board/main 24: 19524 => ((14 string-address))
mem: ((14 string-address)): 19475 <= 19524
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 19617 => ((15 string-address))
mem: ((15 string-address)): 19476 <= 19617
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 19477 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 19478 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 19470 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((19524 string) (raw))
mem: ((19524 integer) (raw)) => 30
mem: ((19525 byte) (raw)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 30: #\2 => ((18 byte))
mem: ((18 byte)): 19479 <= #\2
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((19617 string) (raw))
mem: ((19617 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 19618 => ((19 byte-address))
mem: ((19 byte-address)): 19480 <= 19618
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 2
run: integer-to-decimal-string/print-integer/print-board/main 32: #\2 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 19618 <= #\2
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 19477 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 19478 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 19470 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 19617
run: print-integer/print-board/main 3: 19617 => ((3 string-address))
mem: ((3 string-address)): 19433 <= 19617
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 19617
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 19619 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 19617)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19621 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 19617)
run: print-string/print-integer/print-board/main 2: 19617 => ((2 string-address))
mem: ((2 string-address)): 19622 <= 19617
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((19617 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 19623 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 19624 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 19625 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((19617 string) (raw))
mem: ((19617 integer) (raw)) => 1
mem: ((19618 byte) (raw)) => 2
run: print-string/print-integer/print-board/main 7: #\2 => ((6 character))
mem: ((6 character)): 19626 <= #\2
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 2
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 19650 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\2)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19652 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\2)
run: print-character/print-string/print-integer/print-board/main 2: #\2 => ((2 character))
mem: ((2 character)): 19653 <= #\2
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\2)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19654 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\2)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19655 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19656 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19657 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19658 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19659 <= 120
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 120 => ((9 integer))
mem: ((9 integer)): 19660 <= 120
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19661 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 120
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1227 => ((11 byte-address))
mem: ((11 byte-address)): 19662 <= 1227
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 2
run: print-character/print-string/print-integer/print-board/main 13: #\2 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1227 <= #\2
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 19624 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 19625 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 19681 => ((6 string-address))
mem: ((6 string-address)): 13963 <= 19681
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 19681
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 19685 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 19681)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19687 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 19681)
run: print-string/print-board/main 2: 19681 => ((2 string-address))
mem: ((2 string-address)): 19688 <= 19681
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((19681 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 19689 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 19690 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 19691 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((19681 string) (raw))
mem: ((19681 integer) (raw)) => 3
mem: ((19682 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 19692 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 19716 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19718 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19719 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19720 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19721 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19722 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19723 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19724 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19725 <= 120
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 121 => ((9 integer))
mem: ((9 integer)): 19726 <= 121
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19727 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 121
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1228 => ((11 byte-address))
mem: ((11 byte-address)): 19728 <= 1228
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1228 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 19690 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 19691 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((19681 string) (raw))
mem: ((19681 integer) (raw)) => 3
mem: ((19683 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 19692 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 19747 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19749 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 19750 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19751 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19752 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19753 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19754 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19755 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19756 <= 120
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 122 => ((9 integer))
mem: ((9 integer)): 19757 <= 122
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19758 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 122
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1229 => ((11 byte-address))
mem: ((11 byte-address)): 19759 <= 1229
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1229 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 19690 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 19691 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((19681 string) (raw))
mem: ((19681 integer) (raw)) => 3
mem: ((19684 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 19692 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 19778 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19780 <= 1101
schedule: scheduling print-character/print-string/print-board/main for further processing
schedule: print-character/print-string/print-board/main
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19781 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19782 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19783 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19784 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19785 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19786 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19787 <= 120
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 123 => ((9 integer))
mem: ((9 integer)): 19788 <= 123
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19789 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 123
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1230 => ((11 byte-address))
mem: ((11 byte-address)): 19790 <= 1230
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1230 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 19690 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 19691 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13964 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9625 file-address) (raw)) => 9664
run: print-board/main 13: 9664 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 9664
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
mem: ((9666 square) (raw)) => _
run: print-board/main 14: #\_ => ((6 square))
mem: ((6 square)): 13963 <= #\_
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => _
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19809 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\_)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19811 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\_)
run: print-character/print-board/main 2: #\_ => ((2 character))
mem: ((2 character)): 19812 <= #\_
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\_)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19813 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\_)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19814 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19815 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19816 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19817 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19818 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 124 => ((9 integer))
mem: ((9 integer)): 19819 <= 124
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19820 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 124
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1231 => ((11 byte-address))
mem: ((11 byte-address)): 19821 <= 1231
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => _
run: print-character/print-board/main 13: #\_ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1231 <= #\_
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19840 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19842 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19843 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19844 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19845 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19846 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19847 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19848 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19849 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 125 => ((9 integer))
mem: ((9 integer)): 19850 <= 125
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19851 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 125
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1232 => ((11 byte-address))
mem: ((11 byte-address)): 19852 <= 1232
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1232 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13964 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9626 file-address) (raw)) => 10200
run: print-board/main 13: 10200 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10200
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
mem: ((10202 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13963 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19871 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19873 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 19874 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19875 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19876 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19877 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19878 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19879 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19880 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 126 => ((9 integer))
mem: ((9 integer)): 19881 <= 126
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19882 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 126
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1233 => ((11 byte-address))
mem: ((11 byte-address)): 19883 <= 1233
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1233 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19902 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19904 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19905 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19906 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19907 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19908 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19909 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19910 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19911 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 127 => ((9 integer))
mem: ((9 integer)): 19912 <= 127
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19913 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 127
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1234 => ((11 byte-address))
mem: ((11 byte-address)): 19914 <= 1234
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1234 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13964 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9627 file-address) (raw)) => 10736
run: print-board/main 13: 10736 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10736
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
mem: ((10738 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13963 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19933 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19935 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 19936 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19937 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19938 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19939 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19940 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19941 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19942 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 128 => ((9 integer))
mem: ((9 integer)): 19943 <= 128
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19944 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 128
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1235 => ((11 byte-address))
mem: ((11 byte-address)): 19945 <= 1235
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1235 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19964 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19966 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 19967 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19968 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 19969 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 19970 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 19971 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 19972 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 19973 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 129 => ((9 integer))
mem: ((9 integer)): 19974 <= 129
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 19975 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 129
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1236 => ((11 byte-address))
mem: ((11 byte-address)): 19976 <= 1236
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1236 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13964 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9628 file-address) (raw)) => 11272
run: print-board/main 13: 11272 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11272
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
mem: ((11274 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13963 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 19995 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 19997 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 19998 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 19999 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20000 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20001 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20002 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20003 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20004 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 130 => ((9 integer))
mem: ((9 integer)): 20005 <= 130
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20006 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 130
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1237 => ((11 byte-address))
mem: ((11 byte-address)): 20007 <= 1237
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1237 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20026 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20028 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20029 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20030 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20031 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20032 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20033 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20034 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20035 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 131 => ((9 integer))
mem: ((9 integer)): 20036 <= 131
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20037 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 131
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1238 => ((11 byte-address))
mem: ((11 byte-address)): 20038 <= 1238
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1238 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13964 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9629 file-address) (raw)) => 11808
run: print-board/main 13: 11808 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11808
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
mem: ((11810 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13963 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20057 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20059 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 20060 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20061 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20062 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20063 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20064 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20065 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20066 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 132 => ((9 integer))
mem: ((9 integer)): 20067 <= 132
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20068 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 132
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1239 => ((11 byte-address))
mem: ((11 byte-address)): 20069 <= 1239
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1239 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20088 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20090 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20091 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20092 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20093 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20094 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20095 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20096 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20097 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 133 => ((9 integer))
mem: ((9 integer)): 20098 <= 133
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20099 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 133
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1240 => ((11 byte-address))
mem: ((11 byte-address)): 20100 <= 1240
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1240 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13964 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9630 file-address) (raw)) => 12344
run: print-board/main 13: 12344 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12344
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
mem: ((12346 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13963 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20119 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20121 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 20122 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20123 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20124 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20125 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20126 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20127 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20128 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 134 => ((9 integer))
mem: ((9 integer)): 20129 <= 134
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20130 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 134
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1241 => ((11 byte-address))
mem: ((11 byte-address)): 20131 <= 1241
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1241 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20150 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20152 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20153 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20154 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20155 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20156 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20157 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20158 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20159 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 135 => ((9 integer))
mem: ((9 integer)): 20160 <= 135
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20161 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 135
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1242 => ((11 byte-address))
mem: ((11 byte-address)): 20162 <= 1242
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1242 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13964 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9631 file-address) (raw)) => 12880
run: print-board/main 13: 12880 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12880
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
mem: ((12882 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13963 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20181 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20183 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 20184 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20185 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20186 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20187 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20188 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20189 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20190 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 136 => ((9 integer))
mem: ((9 integer)): 20191 <= 136
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20192 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 136
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1243 => ((11 byte-address))
mem: ((11 byte-address)): 20193 <= 1243
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1243 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20212 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20214 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20215 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20216 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20217 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20218 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20219 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20220 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20221 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 137 => ((9 integer))
mem: ((9 integer)): 20222 <= 137
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20223 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 137
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1244 => ((11 byte-address))
mem: ((11 byte-address)): 20224 <= 1244
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1244 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13964 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9632 file-address) (raw)) => 13416
run: print-board/main 13: 13416 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 13416
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
mem: ((13418 square) (raw)) => P
run: print-board/main 14: #\P => ((6 square))
mem: ((6 square)): 13963 <= #\P
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => P
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20243 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\P)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20245 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\P)
run: print-character/print-board/main 2: #\P => ((2 character))
mem: ((2 character)): 20246 <= #\P
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\P)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20247 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\P)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20248 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20249 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20250 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20251 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20252 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 138 => ((9 integer))
mem: ((9 integer)): 20253 <= 138
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20254 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 138
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1245 => ((11 byte-address))
mem: ((11 byte-address)): 20255 <= 1245
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => P
run: print-character/print-board/main 13: #\P => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1245 <= #\P
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20274 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20276 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20277 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20278 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20279 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20280 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20281 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20282 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 6
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 120 => ((8 integer))
mem: ((8 integer)): 20283 <= 120
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 120
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 139 => ((9 integer))
mem: ((9 integer)): 20284 <= 139
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20285 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 139
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1246 => ((11 byte-address))
mem: ((11 byte-address)): 20286 <= 1246
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1246 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13964 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13961 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: print-board/main 19: 0 => ((3 integer))
mem: ((3 integer)): 13960 <= 0
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 20305 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20307 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 20308 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 6
run: cursor-to-next-line/print-board/main 4: 7 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 7
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 20309 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 0
run: print-board/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 6: (((5 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: print-board/main 6: 1 => ((5 integer))
mem: ((5 integer)): 13962 <= 1
run: print-board/main 7: (((print-integer)) ((1 terminal-address)) ((5 integer)))
mem: ((1 terminal-address)) => 1101
mem: ((5 integer)) => 1
run: print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-integer/print-board/main 0: 20336 => ((default-space space-address))
run: print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 1)
run: print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20338 <= 1101
run: print-integer/print-board/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1101 1)
run: print-integer/print-board/main 2: 1 => ((2 integer))
mem: ((2 integer)): 20339 <= 1
run: print-integer/print-board/main 3: (((3 string-address)) <- ((integer-to-decimal-string)) ((2 integer)))
mem: ((2 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 0: 20367 => ((default-space space-address))
run: integer-to-decimal-string/print-integer/print-board/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (1)
run: integer-to-decimal-string/print-integer/print-board/main 1: 1 => ((1 integer))
mem: ((1 integer)): 20369 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 2: (((2 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 2: nil => ((2 boolean))
mem: ((2 boolean)): 20370 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
mem: ((2 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 6: (((4 boolean)) <- ((copy)) ((nil literal)))
run: integer-to-decimal-string/print-integer/print-board/main 6: nil => ((4 boolean))
mem: ((4 boolean)): 20372 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 7: (((5 boolean)) <- ((less-than)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 7: nil => ((5 boolean))
mem: ((5 boolean)): 20373 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 8: (((jump-unless)) ((5 boolean)) ((2 offset)))
mem: ((5 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 11: (((6 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 0: 20398 => ((default-space space-address))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 1: 20429 => ((1 buffer-address))
mem: ((1 buffer-address)): 20400 <= 20429
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 2: 20429 => ((2 integer-address))
mem: ((2 integer-address)): 20401 <= 20429
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 20429 <= 0
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 4: 20430 => ((3 string-address-address))
mem: ((3 string-address-address)): 20402 <= 20430
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 5: 30 => ((4 integer))
mem: ((4 integer)): 20403 <= 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 6: 20431 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 20430 <= 20431
run: init-buffer/integer-to-decimal-string/print-integer/print-board/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 20429
run: integer-to-decimal-string/print-integer/print-board/main 11: 20429 => ((6 buffer-address))
mem: ((6 buffer-address)): 20374 <= 20429
run: integer-to-decimal-string/print-integer/print-board/main 12: (((7 character)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 12: #\0 => ((7 character))
mem: ((7 character)): 20375 <= #\0
run: integer-to-decimal-string/print-integer/print-board/main 13: (((8 integer)) <- ((character-to-integer)) ((7 character)))
mem: ((7 character)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 13: 48 => ((8 integer))
mem: ((8 integer)): 20376 <= 48
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 14: nil => ((9 boolean))
mem: ((9 boolean)): 20377 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 16: (((1 integer)) ((10 integer)) <- ((divide-with-remainder)) ((1 integer)) ((10 literal)))
mem: ((1 integer)) => 1
mem: ((1 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 16: 0 => ((1 integer))
mem: ((1 integer)): 20369 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 16: 1 => ((10 integer))
mem: ((10 integer)): 20378 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 17: (((11 integer)) <- ((add)) ((8 integer)) ((10 integer)))
mem: ((8 integer)) => 48
mem: ((10 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 17: 49 => ((11 integer))
mem: ((11 integer)): 20379 <= 49
run: integer-to-decimal-string/print-integer/print-board/main 18: (((12 character)) <- ((integer-to-character)) ((11 integer)))
mem: ((11 integer)) => 49
run: integer-to-decimal-string/print-integer/print-board/main 18: #\1 => ((12 character))
mem: ((12 character)): 20380 <= #\1
run: integer-to-decimal-string/print-integer/print-board/main 19: (((6 buffer-address)) <- ((append)) ((6 buffer-address)) ((12 character)))
mem: ((6 buffer-address)) => 20429
mem: ((12 character)) => 1
run: append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/integer-to-decimal-string/print-integer/print-board/main 0: 20462 => ((default-space space-address))
run: append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (20429 #\1)
run: append/integer-to-decimal-string/print-integer/print-board/main 1: 20429 => ((1 buffer-address))
mem: ((1 buffer-address)): 20464 <= 20429
run: append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (20429 #\1)
run: append/integer-to-decimal-string/print-integer/print-board/main 2: #\1 => ((2 character))
mem: ((2 character)): 20465 <= #\1
run: append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 20429
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 0: 20493 => ((default-space space-address))
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (20429)
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 1: 20429 => ((1 buffer-address))
mem: ((1 buffer-address)): 20495 <= 20429
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((20429 integer) (raw)) => 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 2: 0 => ((2 integer))
mem: ((2 integer)): 20496 <= 0
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((20430 string-address) (raw)) => 20431
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 3: 20431 => ((3 string-address))
mem: ((3 string-address)): 20497 <= 20431
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((20431 integer) (raw)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 4: 30 => ((4 integer))
mem: ((4 integer)): 20498 <= 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 20499 <= nil
run: buffer-full?/append/integer-to-decimal-string/print-integer/print-board/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 20466 <= nil
run: append/integer-to-decimal-string/print-integer/print-board/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/integer-to-decimal-string/print-integer/print-board/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/integer-to-decimal-string/print-integer/print-board/main 6: 20429 => ((4 integer-address))
mem: ((4 integer-address)): 20467 <= 20429
run: append/integer-to-decimal-string/print-integer/print-board/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((20430 string-address) (raw)) => 20431
run: append/integer-to-decimal-string/print-integer/print-board/main 7: 20431 => ((5 string-address))
mem: ((5 string-address)): 20468 <= 20431
run: append/integer-to-decimal-string/print-integer/print-board/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((20431 string) (raw))
mem: ((20431 integer) (raw)) => 30
run: append/integer-to-decimal-string/print-integer/print-board/main 8: 20432 => ((6 byte-address))
mem: ((6 byte-address)): 20469 <= 20432
run: append/integer-to-decimal-string/print-integer/print-board/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 1
run: append/integer-to-decimal-string/print-integer/print-board/main 9: #\1 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 20432 <= #\1
run: append/integer-to-decimal-string/print-integer/print-board/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/integer-to-decimal-string/print-integer/print-board/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 20429 <= 1
run: append/integer-to-decimal-string/print-integer/print-board/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 20429
run: integer-to-decimal-string/print-integer/print-board/main 19: 20429 => ((6 buffer-address))
mem: ((6 buffer-address)): 20374 <= 20429
run: integer-to-decimal-string/print-integer/print-board/main 20: (((jump)) ((-7 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 14: (((9 boolean)) <- ((equal)) ((1 integer)) ((0 literal)))
mem: ((1 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 14: t => ((9 boolean))
mem: ((9 boolean)): 20377 <= t
run: integer-to-decimal-string/print-integer/print-board/main 15: (((jump-if)) ((9 boolean)) ((5 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 21: (((jump-unless)) ((4 boolean)) ((1 offset)))
mem: ((4 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 23: (((13 integer)) <- ((get)) ((6 buffer-address) (deref)) ((0 offset)))
mem: ((20429 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 23: 1 => ((13 integer))
mem: ((13 integer)): 20381 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 24: (((14 string-address)) <- ((get)) ((6 buffer-address) (deref)) ((1 offset)))
mem: ((20430 string-address) (raw)) => 20431
run: integer-to-decimal-string/print-integer/print-board/main 24: 20431 => ((14 string-address))
mem: ((14 string-address)): 20382 <= 20431
run: integer-to-decimal-string/print-integer/print-board/main 25: (((15 string-address)) <- ((new)) ((string literal)) ((13 integer)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 25: 20524 => ((15 string-address))
mem: ((15 string-address)): 20383 <= 20524
run: integer-to-decimal-string/print-integer/print-board/main 26: (((16 integer)) <- ((subtract)) ((13 integer)) ((1 literal)))
mem: ((13 integer)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 26: 0 => ((16 integer))
mem: ((16 integer)): 20384 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 27: (((17 integer)) <- ((copy)) ((0 literal)))
run: integer-to-decimal-string/print-integer/print-board/main 27: 0 => ((17 integer))
mem: ((17 integer)): 20385 <= 0
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 28: nil => ((9 boolean))
mem: ((9 boolean)): 20377 <= nil
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => nil
run: integer-to-decimal-string/print-integer/print-board/main 30: (((18 byte)) <- ((index)) ((14 string-address) (deref)) ((16 integer)))
mem: ((16 integer)) => 0
array-len: ((20431 string) (raw))
mem: ((20431 integer) (raw)) => 30
mem: ((20432 byte) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 30: #\1 => ((18 byte))
mem: ((18 byte)): 20386 <= #\1
run: integer-to-decimal-string/print-integer/print-board/main 31: (((19 byte-address)) <- ((index-address)) ((15 string-address) (deref)) ((17 integer)))
mem: ((17 integer)) => 0
array-len: ((20524 string) (raw))
mem: ((20524 integer) (raw)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 31: 20525 => ((19 byte-address))
mem: ((19 byte-address)): 20387 <= 20525
run: integer-to-decimal-string/print-integer/print-board/main 32: (((19 byte-address) (deref)) <- ((copy)) ((18 byte)))
mem: ((18 byte)) => 1
run: integer-to-decimal-string/print-integer/print-board/main 32: #\1 => ((19 byte-address) (deref))
mem: ((19 byte-address) (deref)): 20525 <= #\1
run: integer-to-decimal-string/print-integer/print-board/main 33: (((16 integer)) <- ((subtract)) ((16 integer)) ((1 literal)))
mem: ((16 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 33: -1 => ((16 integer))
mem: ((16 integer)): 20384 <= -1
run: integer-to-decimal-string/print-integer/print-board/main 34: (((17 integer)) <- ((add)) ((17 integer)) ((1 literal)))
mem: ((17 integer)) => 0
run: integer-to-decimal-string/print-integer/print-board/main 34: 1 => ((17 integer))
mem: ((17 integer)): 20385 <= 1
run: integer-to-decimal-string/print-integer/print-board/main 35: (((jump)) ((-8 offset)))
run: integer-to-decimal-string/print-integer/print-board/main 28: (((9 boolean)) <- ((less-than)) ((16 integer)) ((0 literal)))
mem: ((16 integer)) => -1
run: integer-to-decimal-string/print-integer/print-board/main 28: t => ((9 boolean))
mem: ((9 boolean)): 20377 <= t
run: integer-to-decimal-string/print-integer/print-board/main 29: (((jump-if)) ((9 boolean)) ((6 offset)))
mem: ((9 boolean)) => t
run: integer-to-decimal-string/print-integer/print-board/main 36: (((reply)) ((15 string-address)))
mem: ((15 string-address)) => 20524
run: print-integer/print-board/main 3: 20524 => ((3 string-address))
mem: ((3 string-address)): 20340 <= 20524
run: print-integer/print-board/main 4: (((print-string)) ((1 terminal-address)) ((3 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((3 string-address)) => 20524
run: print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-integer/print-board/main 0: 20526 => ((default-space space-address))
run: print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 20524)
run: print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20528 <= 1101
run: print-string/print-integer/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 20524)
run: print-string/print-integer/print-board/main 2: 20524 => ((2 string-address))
mem: ((2 string-address)): 20529 <= 20524
run: print-string/print-integer/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((20524 integer) (raw)) => 1
run: print-string/print-integer/print-board/main 3: 1 => ((3 integer))
mem: ((3 integer)): 20530 <= 1
run: print-string/print-integer/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-integer/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 20531 <= 0
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 20532 <= nil
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-integer/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((20524 string) (raw))
mem: ((20524 integer) (raw)) => 1
mem: ((20525 byte) (raw)) => 1
run: print-string/print-integer/print-board/main 7: #\1 => ((6 character))
mem: ((6 character)): 20533 <= #\1
run: print-string/print-integer/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => 1
run: print-character/print-string/print-integer/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-integer/print-board/main 0: 20557 => ((default-space space-address))
run: print-character/print-string/print-integer/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\1)
run: print-character/print-string/print-integer/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20559 <= 1101
run: print-character/print-string/print-integer/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\1)
run: print-character/print-string/print-integer/print-board/main 2: #\1 => ((2 character))
mem: ((2 character)): 20560 <= #\1
run: print-character/print-string/print-integer/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\1)
run: print-character/print-string/print-integer/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20561 <= nil
run: print-character/print-string/print-integer/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\1)
run: print-character/print-string/print-integer/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20562 <= nil
run: print-character/print-string/print-integer/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-integer/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-integer/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20563 <= 1103
run: print-character/print-string/print-integer/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-integer/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20564 <= 1104
run: print-character/print-string/print-integer/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-integer/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20565 <= 20
run: print-character/print-string/print-integer/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-integer/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20566 <= 140
run: print-character/print-string/print-integer/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 10: 140 => ((9 integer))
mem: ((9 integer)): 20567 <= 140
run: print-character/print-string/print-integer/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-integer/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20568 <= 1106
run: print-character/print-string/print-integer/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 140
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-integer/print-board/main 12: 1247 => ((11 byte-address))
mem: ((11 byte-address)): 20569 <= 1247
run: print-character/print-string/print-integer/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 1
run: print-character/print-string/print-integer/print-board/main 13: #\1 => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1247 <= #\1
run: print-character/print-string/print-integer/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-integer/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-integer/print-board/main 15: (((reply)))
run: print-string/print-integer/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-integer/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 20531 <= 1
run: print-string/print-integer/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-integer/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 1
run: print-string/print-integer/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 20532 <= t
run: print-string/print-integer/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 8: (((6 string-address)) <- ((new))  | )
run: print-board/main 8: 20588 => ((6 string-address))
mem: ((6 string-address)): 13963 <= 20588
run: print-board/main 9: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 20588
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 20592 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 20588)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20594 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 20588)
run: print-string/print-board/main 2: 20588 => ((2 string-address))
mem: ((2 string-address)): 20595 <= 20588
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((20588 integer) (raw)) => 3
run: print-string/print-board/main 3: 3 => ((3 integer))
mem: ((3 integer)): 20596 <= 3
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 20597 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 20598 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((20588 string) (raw))
mem: ((20588 integer) (raw)) => 3
mem: ((20589 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 20599 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 20623 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20625 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20626 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20627 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20628 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20629 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20630 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20631 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20632 <= 140
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 141 => ((9 integer))
mem: ((9 integer)): 20633 <= 141
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20634 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 141
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1248 => ((11 byte-address))
mem: ((11 byte-address)): 20635 <= 1248
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1248 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 20597 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 20598 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((20588 string) (raw))
mem: ((20588 integer) (raw)) => 3
mem: ((20590 byte) (raw)) => |
run: print-string/print-board/main 7: #\| => ((6 character))
mem: ((6 character)): 20599 <= #\|
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => |
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 20654 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\|)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20656 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\|)
run: print-character/print-string/print-board/main 2: #\| => ((2 character))
mem: ((2 character)): 20657 <= #\|
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\|)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20658 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\|)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20659 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20660 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20661 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20662 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20663 <= 140
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 142 => ((9 integer))
mem: ((9 integer)): 20664 <= 142
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20665 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 142
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1249 => ((11 byte-address))
mem: ((11 byte-address)): 20666 <= 1249
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => |
run: print-character/print-string/print-board/main 13: #\| => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1249 <= #\|
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
schedule: scheduling print-character/print-string/print-board/main for further processing
schedule: print-character/print-string/print-board/main
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 20597 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 20598 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((20588 string) (raw))
mem: ((20588 integer) (raw)) => 3
mem: ((20591 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 20599 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 20685 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20687 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20688 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20689 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20690 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20691 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20692 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20693 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20694 <= 140
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 143 => ((9 integer))
mem: ((9 integer)): 20695 <= 143
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20696 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 143
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1250 => ((11 byte-address))
mem: ((11 byte-address)): 20697 <= 1250
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1250 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 20597 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 3
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 20598 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: print-board/main 10: 0 => ((7 integer))
mem: ((7 integer)): 13964 <= 0
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 0
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9625 file-address) (raw)) => 9664
run: print-board/main 13: 9664 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 9664
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((9664 file) (raw))
mem: ((9664 integer) (raw)) => 8
mem: ((9665 square) (raw)) => R
run: print-board/main 14: #\R => ((6 square))
mem: ((6 square)): 13963 <= #\R
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => R
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20716 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\R)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20718 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\R)
run: print-character/print-board/main 2: #\R => ((2 character))
mem: ((2 character)): 20719 <= #\R
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\R)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20720 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\R)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20721 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20722 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20723 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20724 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20725 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 10: 144 => ((9 integer))
mem: ((9 integer)): 20726 <= 144
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20727 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 144
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1251 => ((11 byte-address))
mem: ((11 byte-address)): 20728 <= 1251
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => R
run: print-character/print-board/main 13: #\R => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1251 <= #\R
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20747 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20749 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20750 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20751 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20752 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20753 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20754 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20755 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20756 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 10: 145 => ((9 integer))
mem: ((9 integer)): 20757 <= 145
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20758 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 145
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1252 => ((11 byte-address))
mem: ((11 byte-address)): 20759 <= 1252
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1252 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: print-board/main 17: 1 => ((7 integer))
mem: ((7 integer)): 13964 <= 1
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 1
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9626 file-address) (raw)) => 10200
run: print-board/main 13: 10200 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10200
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((10200 file) (raw))
mem: ((10200 integer) (raw)) => 8
mem: ((10201 square) (raw)) => N
run: print-board/main 14: #\N => ((6 square))
mem: ((6 square)): 13963 <= #\N
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => N
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20778 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\N)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20780 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\N)
run: print-character/print-board/main 2: #\N => ((2 character))
mem: ((2 character)): 20781 <= #\N
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\N)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20782 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\N)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20783 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20784 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20785 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20786 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20787 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 10: 146 => ((9 integer))
mem: ((9 integer)): 20788 <= 146
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20789 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 146
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1253 => ((11 byte-address))
mem: ((11 byte-address)): 20790 <= 1253
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => N
run: print-character/print-board/main 13: #\N => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1253 <= #\N
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20809 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20811 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20812 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20813 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20814 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20815 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20816 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20817 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20818 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 10: 147 => ((9 integer))
mem: ((9 integer)): 20819 <= 147
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20820 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 147
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1254 => ((11 byte-address))
mem: ((11 byte-address)): 20821 <= 1254
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1254 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: print-board/main 17: 2 => ((7 integer))
mem: ((7 integer)): 13964 <= 2
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 2
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9627 file-address) (raw)) => 10736
run: print-board/main 13: 10736 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 10736
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((10736 file) (raw))
mem: ((10736 integer) (raw)) => 8
mem: ((10737 square) (raw)) => B
run: print-board/main 14: #\B => ((6 square))
mem: ((6 square)): 13963 <= #\B
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => B
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20840 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\B)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20842 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\B)
run: print-character/print-board/main 2: #\B => ((2 character))
mem: ((2 character)): 20843 <= #\B
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\B)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20844 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\B)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20845 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20846 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20847 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20848 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20849 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 10: 148 => ((9 integer))
mem: ((9 integer)): 20850 <= 148
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20851 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 148
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1255 => ((11 byte-address))
mem: ((11 byte-address)): 20852 <= 1255
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => B
run: print-character/print-board/main 13: #\B => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1255 <= #\B
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20871 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20873 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20874 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20875 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20876 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20877 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20878 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20879 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20880 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 10: 149 => ((9 integer))
mem: ((9 integer)): 20881 <= 149
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20882 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 149
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1256 => ((11 byte-address))
mem: ((11 byte-address)): 20883 <= 1256
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1256 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: print-board/main 17: 3 => ((7 integer))
mem: ((7 integer)): 13964 <= 3
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 3
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9628 file-address) (raw)) => 11272
run: print-board/main 13: 11272 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11272
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((11272 file) (raw))
mem: ((11272 integer) (raw)) => 8
mem: ((11273 square) (raw)) => Q
run: print-board/main 14: #\Q => ((6 square))
mem: ((6 square)): 13963 <= #\Q
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => Q
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20902 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\Q)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20904 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\Q)
run: print-character/print-board/main 2: #\Q => ((2 character))
mem: ((2 character)): 20905 <= #\Q
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\Q)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20906 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\Q)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20907 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20908 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20909 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20910 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20911 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 10: 150 => ((9 integer))
mem: ((9 integer)): 20912 <= 150
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20913 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 150
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1257 => ((11 byte-address))
mem: ((11 byte-address)): 20914 <= 1257
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => Q
run: print-character/print-board/main 13: #\Q => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1257 <= #\Q
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20933 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20935 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20936 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20937 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20938 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20939 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20940 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20941 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20942 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 10: 151 => ((9 integer))
mem: ((9 integer)): 20943 <= 151
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20944 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 151
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1258 => ((11 byte-address))
mem: ((11 byte-address)): 20945 <= 1258
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1258 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: print-board/main 17: 4 => ((7 integer))
mem: ((7 integer)): 13964 <= 4
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 4
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9629 file-address) (raw)) => 11808
run: print-board/main 13: 11808 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 11808
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((11808 file) (raw))
mem: ((11808 integer) (raw)) => 8
mem: ((11809 square) (raw)) => K
run: print-board/main 14: #\K => ((6 square))
mem: ((6 square)): 13963 <= #\K
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => K
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20964 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\K)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20966 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\K)
run: print-character/print-board/main 2: #\K => ((2 character))
mem: ((2 character)): 20967 <= #\K
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\K)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20968 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\K)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 20969 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 20970 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 20971 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 20972 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 20973 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 10: 152 => ((9 integer))
mem: ((9 integer)): 20974 <= 152
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 20975 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 152
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1259 => ((11 byte-address))
mem: ((11 byte-address)): 20976 <= 1259
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => K
run: print-character/print-board/main 13: #\K => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1259 <= #\K
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 20995 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 20997 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 20998 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 20999 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21000 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21001 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21002 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21003 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 21004 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 10: 153 => ((9 integer))
mem: ((9 integer)): 21005 <= 153
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21006 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 153
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1260 => ((11 byte-address))
mem: ((11 byte-address)): 21007 <= 1260
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1260 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: print-board/main 17: 5 => ((7 integer))
mem: ((7 integer)): 13964 <= 5
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 5
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9630 file-address) (raw)) => 12344
run: print-board/main 13: 12344 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12344
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((12344 file) (raw))
mem: ((12344 integer) (raw)) => 8
mem: ((12345 square) (raw)) => B
run: print-board/main 14: #\B => ((6 square))
mem: ((6 square)): 13963 <= #\B
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => B
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 21026 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\B)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21028 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\B)
run: print-character/print-board/main 2: #\B => ((2 character))
mem: ((2 character)): 21029 <= #\B
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\B)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21030 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\B)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21031 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21032 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21033 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21034 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 21035 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 10: 154 => ((9 integer))
mem: ((9 integer)): 21036 <= 154
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21037 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 154
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1261 => ((11 byte-address))
mem: ((11 byte-address)): 21038 <= 1261
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => B
run: print-character/print-board/main 13: #\B => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1261 <= #\B
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 21057 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21059 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21060 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21061 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21062 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21063 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21064 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21065 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 21066 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 10: 155 => ((9 integer))
mem: ((9 integer)): 21067 <= 155
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21068 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 155
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1262 => ((11 byte-address))
mem: ((11 byte-address)): 21069 <= 1262
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1262 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: print-board/main 17: 6 => ((7 integer))
mem: ((7 integer)): 13964 <= 6
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 6
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9631 file-address) (raw)) => 12880
run: print-board/main 13: 12880 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 12880
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((12880 file) (raw))
mem: ((12880 integer) (raw)) => 8
mem: ((12881 square) (raw)) => N
run: print-board/main 14: #\N => ((6 square))
mem: ((6 square)): 13963 <= #\N
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => N
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 21088 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\N)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21090 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\N)
run: print-character/print-board/main 2: #\N => ((2 character))
mem: ((2 character)): 21091 <= #\N
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\N)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21092 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\N)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21093 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21094 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21095 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21096 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 21097 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 10: 156 => ((9 integer))
mem: ((9 integer)): 21098 <= 156
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21099 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 156
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1263 => ((11 byte-address))
mem: ((11 byte-address)): 21100 <= 1263
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => N
run: print-character/print-board/main 13: #\N => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1263 <= #\N
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 21119 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21121 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21122 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21123 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21124 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21125 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21126 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21127 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 21128 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 10: 157 => ((9 integer))
mem: ((9 integer)): 21129 <= 157
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21130 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 157
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1264 => ((11 byte-address))
mem: ((11 byte-address)): 21131 <= 1264
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1264 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: print-board/main 17: 7 => ((7 integer))
mem: ((7 integer)): 13964 <= 7
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 7
run: print-board/main 11: nil => ((4 boolean))
mem: ((4 boolean)): 13961 <= nil
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => nil
run: print-board/main 13: (((8 file-address)) <- ((index)) ((2 board-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((9624 board) (raw))
mem: ((9624 integer) (raw)) => 8
mem: ((9632 file-address) (raw)) => 13416
run: print-board/main 13: 13416 => ((8 file-address))
mem: ((8 file-address)): 13965 <= 13416
run: print-board/main 14: (((6 square)) <- ((index)) ((8 file-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((13416 file) (raw))
mem: ((13416 integer) (raw)) => 8
mem: ((13417 square) (raw)) => R
run: print-board/main 14: #\R => ((6 square))
mem: ((6 square)): 13963 <= #\R
run: print-board/main 15: (((print-character)) ((1 terminal-address)) ((6 square)))
mem: ((1 terminal-address)) => 1101
mem: ((6 square)) => R
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 21150 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\R)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21152 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\R)
run: print-character/print-board/main 2: #\R => ((2 character))
mem: ((2 character)): 21153 <= #\R
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\R)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21154 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\R)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21155 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21156 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21157 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21158 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 21159 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 10: 158 => ((9 integer))
mem: ((9 integer)): 21160 <= 158
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21161 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 158
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1265 => ((11 byte-address))
mem: ((11 byte-address)): 21162 <= 1265
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => R
run: print-character/print-board/main 13: #\R => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1265 <= #\R
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 16: (((print-character)) ((1 terminal-address)) ((  literal)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-board/main 0: 21181 => ((default-space space-address))
run: print-character/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21183 <= 1101
run: print-character/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21184 <= #\space
run: print-character/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21185 <= nil
run: print-character/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21186 <= nil
run: print-character/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21187 <= 1103
run: print-character/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21188 <= 1104
run: print-character/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21189 <= 20
run: print-character/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 7
mem: ((7 integer)) => 20
run: print-character/print-board/main 9: 140 => ((8 integer))
mem: ((8 integer)): 21190 <= 140
run: print-character/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 140
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 10: 159 => ((9 integer))
mem: ((9 integer)): 21191 <= 159
run: print-character/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21192 <= 1106
run: print-character/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 159
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-board/main 12: 1266 => ((11 byte-address))
mem: ((11 byte-address)): 21193 <= 1266
run: print-character/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1266 <= #\space
run: print-character/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 19
run: print-character/print-board/main 14: 20 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 20
run: print-character/print-board/main 15: (((reply)))
run: print-board/main 17: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: print-board/main 17: 8 => ((7 integer))
mem: ((7 integer)): 13964 <= 8
run: print-board/main 18: (((jump)) ((-8 offset)))
run: print-board/main 11: (((4 boolean)) <- ((equal)) ((7 integer)) ((8 literal)))
mem: ((7 integer)) => 8
run: print-board/main 11: t => ((4 boolean))
mem: ((4 boolean)): 13961 <= t
run: print-board/main 12: (((jump-if)) ((4 boolean)) ((6 offset)))
mem: ((4 boolean)) => t
run: print-board/main 19: (((3 integer)) <- ((subtract)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: print-board/main 19: -1 => ((3 integer))
mem: ((3 integer)): 13960 <= -1
run: print-board/main 20: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 21212 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21214 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 21215 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 7
run: cursor-to-next-line/print-board/main 4: 8 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 8
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 21216 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 21: (((jump)) ((-18 offset)))
run: print-board/main 4: (((4 boolean)) <- ((less-than)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => -1
run: print-board/main 4: t => ((4 boolean))
mem: ((4 boolean)): 13961 <= t
run: print-board/main 5: (((jump-if)) ((4 boolean)) ((16 offset)))
mem: ((4 boolean)) => t
run: print-board/main 22: (((6 string-address)) <- ((new))   +----------------)
run: print-board/main 22: 21243 => ((6 string-address))
mem: ((6 string-address)): 13963 <= 21243
run: print-board/main 23: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 21243
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 21263 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 21243)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21265 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 21243)
run: print-string/print-board/main 2: 21243 => ((2 string-address))
mem: ((2 string-address)): 21266 <= 21243
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((21243 integer) (raw)) => 19
run: print-string/print-board/main 3: 19 => ((3 integer))
mem: ((3 integer)): 21267 <= 19
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 21268 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21244 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21270 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21294 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21296 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21297 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21298 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21299 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21300 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21301 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21302 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21303 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 10: 160 => ((9 integer))
mem: ((9 integer)): 21304 <= 160
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21305 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 160
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1267 => ((11 byte-address))
mem: ((11 byte-address)): 21306 <= 1267
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1267 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 21268 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21245 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21270 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21325 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21327 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21328 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21329 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21330 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21331 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21332 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21333 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21334 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 161 => ((9 integer))
mem: ((9 integer)): 21335 <= 161
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21336 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 161
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1268 => ((11 byte-address))
mem: ((11 byte-address)): 21337 <= 1268
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1268 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 21268 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21246 byte) (raw)) => +
run: print-string/print-board/main 7: #\+ => ((6 character))
mem: ((6 character)): 21270 <= #\+
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => +
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21356 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\+)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21358 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\+)
run: print-character/print-string/print-board/main 2: #\+ => ((2 character))
mem: ((2 character)): 21359 <= #\+
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\+)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21360 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\+)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21361 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21362 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21363 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21364 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21365 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 162 => ((9 integer))
mem: ((9 integer)): 21366 <= 162
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21367 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 162
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1269 => ((11 byte-address))
mem: ((11 byte-address)): 21368 <= 1269
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => +
run: print-character/print-string/print-board/main 13: #\+ => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1269 <= #\+
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 21268 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21247 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21387 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21389 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21390 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21391 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21392 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21393 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21394 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21395 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21396 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 163 => ((9 integer))
mem: ((9 integer)): 21397 <= 163
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21398 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 163
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1270 => ((11 byte-address))
mem: ((11 byte-address)): 21399 <= 1270
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1270 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: print-string/print-board/main 9: 4 => ((4 integer))
mem: ((4 integer)): 21268 <= 4
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21248 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21418 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21420 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21421 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21422 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21423 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21424 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21425 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21426 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21427 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 10: 164 => ((9 integer))
mem: ((9 integer)): 21428 <= 164
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21429 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 164
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1271 => ((11 byte-address))
mem: ((11 byte-address)): 21430 <= 1271
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1271 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: print-string/print-board/main 9: 5 => ((4 integer))
mem: ((4 integer)): 21268 <= 5
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21249 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21449 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21451 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21452 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21453 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21454 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21455 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21456 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21457 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21458 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 10: 165 => ((9 integer))
mem: ((9 integer)): 21459 <= 165
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21460 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 165
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1272 => ((11 byte-address))
mem: ((11 byte-address)): 21461 <= 1272
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1272 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-string/print-board/main 15: (((reply)))
schedule: scheduling print-string/print-board/main for further processing
schedule: print-string/print-board/main
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: print-string/print-board/main 9: 6 => ((4 integer))
mem: ((4 integer)): 21268 <= 6
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21250 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21480 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21482 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21483 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21484 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21485 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21486 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21487 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21488 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21489 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 10: 166 => ((9 integer))
mem: ((9 integer)): 21490 <= 166
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21491 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 166
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1273 => ((11 byte-address))
mem: ((11 byte-address)): 21492 <= 1273
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1273 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: print-string/print-board/main 9: 7 => ((4 integer))
mem: ((4 integer)): 21268 <= 7
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21251 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21511 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21513 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21514 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21515 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21516 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21517 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21518 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21519 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21520 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 10: 167 => ((9 integer))
mem: ((9 integer)): 21521 <= 167
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21522 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 167
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1274 => ((11 byte-address))
mem: ((11 byte-address)): 21523 <= 1274
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1274 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: print-string/print-board/main 9: 8 => ((4 integer))
mem: ((4 integer)): 21268 <= 8
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21252 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21542 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21544 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21545 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21546 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21547 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21548 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21549 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21550 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21551 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 10: 168 => ((9 integer))
mem: ((9 integer)): 21552 <= 168
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21553 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 168
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1275 => ((11 byte-address))
mem: ((11 byte-address)): 21554 <= 1275
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1275 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: print-string/print-board/main 9: 9 => ((4 integer))
mem: ((4 integer)): 21268 <= 9
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21253 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21573 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21575 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21576 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21577 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21578 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21579 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21580 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21581 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21582 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 10: 169 => ((9 integer))
mem: ((9 integer)): 21583 <= 169
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21584 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 169
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1276 => ((11 byte-address))
mem: ((11 byte-address)): 21585 <= 1276
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1276 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: print-string/print-board/main 9: 10 => ((4 integer))
mem: ((4 integer)): 21268 <= 10
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21254 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21604 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21606 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21607 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21608 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21609 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21610 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21611 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21612 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21613 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 10: 170 => ((9 integer))
mem: ((9 integer)): 21614 <= 170
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21615 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 170
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1277 => ((11 byte-address))
mem: ((11 byte-address)): 21616 <= 1277
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1277 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: print-string/print-board/main 9: 11 => ((4 integer))
mem: ((4 integer)): 21268 <= 11
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21255 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21635 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21637 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21638 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21639 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21640 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21641 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21642 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21643 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21644 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 10: 171 => ((9 integer))
mem: ((9 integer)): 21645 <= 171
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21646 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 171
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1278 => ((11 byte-address))
mem: ((11 byte-address)): 21647 <= 1278
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1278 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: print-string/print-board/main 9: 12 => ((4 integer))
mem: ((4 integer)): 21268 <= 12
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21256 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21666 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21668 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21669 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21670 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21671 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21672 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21673 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21674 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21675 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 10: 172 => ((9 integer))
mem: ((9 integer)): 21676 <= 172
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21677 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 172
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1279 => ((11 byte-address))
mem: ((11 byte-address)): 21678 <= 1279
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1279 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: print-string/print-board/main 9: 13 => ((4 integer))
mem: ((4 integer)): 21268 <= 13
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21257 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21697 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21699 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21700 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21701 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21702 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21703 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21704 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21705 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21706 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 10: 173 => ((9 integer))
mem: ((9 integer)): 21707 <= 173
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21708 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 173
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1280 => ((11 byte-address))
mem: ((11 byte-address)): 21709 <= 1280
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1280 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: print-string/print-board/main 9: 14 => ((4 integer))
mem: ((4 integer)): 21268 <= 14
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21258 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21728 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21730 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21731 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21732 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21733 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21734 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21735 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21736 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21737 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 10: 174 => ((9 integer))
mem: ((9 integer)): 21738 <= 174
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21739 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 174
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1281 => ((11 byte-address))
mem: ((11 byte-address)): 21740 <= 1281
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1281 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: print-string/print-board/main 9: 15 => ((4 integer))
mem: ((4 integer)): 21268 <= 15
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21259 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21759 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21761 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21762 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21763 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21764 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21765 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21766 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21767 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21768 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 10: 175 => ((9 integer))
mem: ((9 integer)): 21769 <= 175
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21770 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 175
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1282 => ((11 byte-address))
mem: ((11 byte-address)): 21771 <= 1282
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1282 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: print-string/print-board/main 9: 16 => ((4 integer))
mem: ((4 integer)): 21268 <= 16
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21260 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21790 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21792 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21793 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21794 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21795 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21796 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21797 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21798 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21799 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 10: 176 => ((9 integer))
mem: ((9 integer)): 21800 <= 176
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21801 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 176
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1283 => ((11 byte-address))
mem: ((11 byte-address)): 21802 <= 1283
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1283 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: print-string/print-board/main 9: 17 => ((4 integer))
mem: ((4 integer)): 21268 <= 17
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21261 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21821 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21823 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21824 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21825 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21826 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21827 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21828 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21829 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21830 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 10: 177 => ((9 integer))
mem: ((9 integer)): 21831 <= 177
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21832 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 177
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1284 => ((11 byte-address))
mem: ((11 byte-address)): 21833 <= 1284
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1284 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: print-string/print-board/main 9: 18 => ((4 integer))
mem: ((4 integer)): 21268 <= 18
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21269 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((21243 string) (raw))
mem: ((21243 integer) (raw)) => 19
mem: ((21262 byte) (raw)) => -
run: print-string/print-board/main 7: #\- => ((6 character))
mem: ((6 character)): 21270 <= #\-
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => -
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21852 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\-)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21854 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\-)
run: print-character/print-string/print-board/main 2: #\- => ((2 character))
mem: ((2 character)): 21855 <= #\-
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\-)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21856 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\-)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21857 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21858 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21859 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21860 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 8
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 160 => ((8 integer))
mem: ((8 integer)): 21861 <= 160
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 160
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 10: 178 => ((9 integer))
mem: ((9 integer)): 21862 <= 178
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21863 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 178
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1285 => ((11 byte-address))
mem: ((11 byte-address)): 21864 <= 1285
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => -
run: print-character/print-string/print-board/main 13: #\- => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1285 <= #\-
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: print-string/print-board/main 9: 19 => ((4 integer))
mem: ((4 integer)): 21268 <= 19
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 21269 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 24: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 21883 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21885 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 21886 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 8
run: cursor-to-next-line/print-board/main 4: 9 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 9
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 21887 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: print-board/main 25: (((6 string-address)) <- ((new))     a b c d e f g h)
run: print-board/main 25: 21914 => ((6 string-address))
mem: ((6 string-address)): 13963 <= 21914
run: print-board/main 26: (((print-string)) ((1 terminal-address)) ((6 string-address)))
mem: ((1 terminal-address)) => 1101
mem: ((6 string-address)) => 21914
run: print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-string/print-board/main 0: 21934 => ((default-space space-address))
run: print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 21914)
run: print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21936 <= 1101
run: print-string/print-board/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1101 21914)
run: print-string/print-board/main 2: 21914 => ((2 string-address))
mem: ((2 string-address)): 21937 <= 21914
run: print-string/print-board/main 3: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((21914 integer) (raw)) => 19
run: print-string/print-board/main 3: 19 => ((3 integer))
mem: ((3 integer)): 21938 <= 19
run: print-string/print-board/main 4: (((4 integer)) <- ((copy)) ((0 literal)))
run: print-string/print-board/main 4: 0 => ((4 integer))
mem: ((4 integer)): 21939 <= 0
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 0
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 0
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21915 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21941 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21965 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21967 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21968 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 21969 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 21970 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 21971 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 21972 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 21973 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 21974 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 10: 180 => ((9 integer))
mem: ((9 integer)): 21975 <= 180
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 21976 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 180
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1287 => ((11 byte-address))
mem: ((11 byte-address)): 21977 <= 1287
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1287 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 0
run: print-character/print-string/print-board/main 14: 1 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 1
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 0
run: print-string/print-board/main 9: 1 => ((4 integer))
mem: ((4 integer)): 21939 <= 1
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 1
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 1
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21916 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21941 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 21996 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 21998 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 21999 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22000 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22001 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22002 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22003 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22004 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22005 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 10: 181 => ((9 integer))
mem: ((9 integer)): 22006 <= 181
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22007 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 181
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1288 => ((11 byte-address))
mem: ((11 byte-address)): 22008 <= 1288
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1288 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 1
run: print-character/print-string/print-board/main 14: 2 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 2
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 1
run: print-string/print-board/main 9: 2 => ((4 integer))
mem: ((4 integer)): 21939 <= 2
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 2
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 2
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21917 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21941 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22027 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22029 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22030 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22031 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22032 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22033 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22034 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22035 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22036 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 10: 182 => ((9 integer))
mem: ((9 integer)): 22037 <= 182
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22038 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 182
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1289 => ((11 byte-address))
mem: ((11 byte-address)): 22039 <= 1289
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1289 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 2
run: print-character/print-string/print-board/main 14: 3 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 3
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 2
run: print-string/print-board/main 9: 3 => ((4 integer))
mem: ((4 integer)): 21939 <= 3
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 3
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 3
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21918 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21941 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22058 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22060 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22061 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22062 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22063 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22064 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22065 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22066 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22067 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 10: 183 => ((9 integer))
mem: ((9 integer)): 22068 <= 183
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22069 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 183
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1290 => ((11 byte-address))
mem: ((11 byte-address)): 22070 <= 1290
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1290 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 3
run: print-character/print-string/print-board/main 14: 4 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 4
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 3
run: print-string/print-board/main 9: 4 => ((4 integer))
mem: ((4 integer)): 21939 <= 4
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 4
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21919 byte) (raw)) => a
run: print-string/print-board/main 7: #\a => ((6 character))
mem: ((6 character)): 21941 <= #\a
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => a
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22089 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\a)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22091 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\a)
run: print-character/print-string/print-board/main 2: #\a => ((2 character))
mem: ((2 character)): 22092 <= #\a
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\a)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22093 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\a)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22094 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22095 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22096 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22097 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22098 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 10: 184 => ((9 integer))
mem: ((9 integer)): 22099 <= 184
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22100 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 184
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1291 => ((11 byte-address))
mem: ((11 byte-address)): 22101 <= 1291
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => a
run: print-character/print-string/print-board/main 13: #\a => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1291 <= #\a
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 4
run: print-character/print-string/print-board/main 14: 5 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 5
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 4
run: print-string/print-board/main 9: 5 => ((4 integer))
mem: ((4 integer)): 21939 <= 5
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 5
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 5
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21920 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21941 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22120 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22122 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22123 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22124 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22125 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22126 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22127 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22128 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22129 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 10: 185 => ((9 integer))
mem: ((9 integer)): 22130 <= 185
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22131 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 185
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1292 => ((11 byte-address))
mem: ((11 byte-address)): 22132 <= 1292
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1292 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 5
run: print-character/print-string/print-board/main 14: 6 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 6
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 5
run: print-string/print-board/main 9: 6 => ((4 integer))
mem: ((4 integer)): 21939 <= 6
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 6
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 6
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21921 byte) (raw)) => b
run: print-string/print-board/main 7: #\b => ((6 character))
mem: ((6 character)): 21941 <= #\b
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => b
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22151 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\b)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22153 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\b)
run: print-character/print-string/print-board/main 2: #\b => ((2 character))
mem: ((2 character)): 22154 <= #\b
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\b)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22155 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\b)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22156 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22157 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22158 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22159 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22160 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 10: 186 => ((9 integer))
mem: ((9 integer)): 22161 <= 186
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22162 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 186
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1293 => ((11 byte-address))
mem: ((11 byte-address)): 22163 <= 1293
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => b
run: print-character/print-string/print-board/main 13: #\b => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1293 <= #\b
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 6
run: print-character/print-string/print-board/main 14: 7 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 7
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 6
run: print-string/print-board/main 9: 7 => ((4 integer))
mem: ((4 integer)): 21939 <= 7
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 7
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 7
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21922 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21941 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22182 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22184 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22185 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22186 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22187 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22188 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22189 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22190 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22191 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 10: 187 => ((9 integer))
mem: ((9 integer)): 22192 <= 187
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22193 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 187
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1294 => ((11 byte-address))
mem: ((11 byte-address)): 22194 <= 1294
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1294 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 7
run: print-character/print-string/print-board/main 14: 8 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 8
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 7
run: print-string/print-board/main 9: 8 => ((4 integer))
mem: ((4 integer)): 21939 <= 8
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 8
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 8
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21923 byte) (raw)) => c
run: print-string/print-board/main 7: #\c => ((6 character))
mem: ((6 character)): 21941 <= #\c
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => c
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22213 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\c)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22215 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\c)
run: print-character/print-string/print-board/main 2: #\c => ((2 character))
mem: ((2 character)): 22216 <= #\c
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\c)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22217 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\c)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22218 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22219 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22220 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22221 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22222 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 10: 188 => ((9 integer))
mem: ((9 integer)): 22223 <= 188
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22224 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 188
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1295 => ((11 byte-address))
mem: ((11 byte-address)): 22225 <= 1295
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => c
run: print-character/print-string/print-board/main 13: #\c => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1295 <= #\c
schedule: scheduling print-character/print-string/print-board/main for further processing
schedule: print-character/print-string/print-board/main
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 8
run: print-character/print-string/print-board/main 14: 9 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 9
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 8
run: print-string/print-board/main 9: 9 => ((4 integer))
mem: ((4 integer)): 21939 <= 9
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 9
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 9
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21924 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21941 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22244 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22246 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22247 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22248 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22249 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22250 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22251 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22252 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22253 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 10: 189 => ((9 integer))
mem: ((9 integer)): 22254 <= 189
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22255 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 189
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1296 => ((11 byte-address))
mem: ((11 byte-address)): 22256 <= 1296
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1296 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 9
run: print-character/print-string/print-board/main 14: 10 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 10
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 9
run: print-string/print-board/main 9: 10 => ((4 integer))
mem: ((4 integer)): 21939 <= 10
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 10
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 10
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21925 byte) (raw)) => d
run: print-string/print-board/main 7: #\d => ((6 character))
mem: ((6 character)): 21941 <= #\d
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => d
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22275 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\d)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22277 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\d)
run: print-character/print-string/print-board/main 2: #\d => ((2 character))
mem: ((2 character)): 22278 <= #\d
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\d)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22279 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\d)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22280 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22281 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22282 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22283 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22284 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 10: 190 => ((9 integer))
mem: ((9 integer)): 22285 <= 190
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22286 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 190
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1297 => ((11 byte-address))
mem: ((11 byte-address)): 22287 <= 1297
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => d
run: print-character/print-string/print-board/main 13: #\d => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1297 <= #\d
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 10
run: print-character/print-string/print-board/main 14: 11 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 11
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 10
run: print-string/print-board/main 9: 11 => ((4 integer))
mem: ((4 integer)): 21939 <= 11
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 11
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 11
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21926 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21941 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22306 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22308 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22309 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22310 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22311 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22312 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22313 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22314 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22315 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 10: 191 => ((9 integer))
mem: ((9 integer)): 22316 <= 191
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22317 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 191
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1298 => ((11 byte-address))
mem: ((11 byte-address)): 22318 <= 1298
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1298 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 11
run: print-character/print-string/print-board/main 14: 12 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 12
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 11
run: print-string/print-board/main 9: 12 => ((4 integer))
mem: ((4 integer)): 21939 <= 12
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 12
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 12
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21927 byte) (raw)) => e
run: print-string/print-board/main 7: #\e => ((6 character))
mem: ((6 character)): 21941 <= #\e
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => e
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22337 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\e)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22339 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\e)
run: print-character/print-string/print-board/main 2: #\e => ((2 character))
mem: ((2 character)): 22340 <= #\e
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\e)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22341 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\e)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22342 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22343 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22344 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22345 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22346 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 10: 192 => ((9 integer))
mem: ((9 integer)): 22347 <= 192
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22348 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 192
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1299 => ((11 byte-address))
mem: ((11 byte-address)): 22349 <= 1299
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => e
run: print-character/print-string/print-board/main 13: #\e => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1299 <= #\e
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 12
run: print-character/print-string/print-board/main 14: 13 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 13
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 12
run: print-string/print-board/main 9: 13 => ((4 integer))
mem: ((4 integer)): 21939 <= 13
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 13
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 13
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21928 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21941 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22368 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22370 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22371 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22372 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22373 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22374 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22375 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22376 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22377 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 10: 193 => ((9 integer))
mem: ((9 integer)): 22378 <= 193
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22379 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 193
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1300 => ((11 byte-address))
mem: ((11 byte-address)): 22380 <= 1300
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1300 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 13
run: print-character/print-string/print-board/main 14: 14 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 14
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 13
run: print-string/print-board/main 9: 14 => ((4 integer))
mem: ((4 integer)): 21939 <= 14
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 14
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21929 byte) (raw)) => f
run: print-string/print-board/main 7: #\f => ((6 character))
mem: ((6 character)): 21941 <= #\f
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => f
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22399 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\f)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22401 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\f)
run: print-character/print-string/print-board/main 2: #\f => ((2 character))
mem: ((2 character)): 22402 <= #\f
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\f)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22403 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\f)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22404 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22405 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22406 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22407 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22408 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 10: 194 => ((9 integer))
mem: ((9 integer)): 22409 <= 194
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22410 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 194
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1301 => ((11 byte-address))
mem: ((11 byte-address)): 22411 <= 1301
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => f
run: print-character/print-string/print-board/main 13: #\f => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1301 <= #\f
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 14
run: print-character/print-string/print-board/main 14: 15 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 15
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: print-string/print-board/main 9: 15 => ((4 integer))
mem: ((4 integer)): 21939 <= 15
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 15
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 15
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21930 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21941 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22430 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22432 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22433 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22434 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22435 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22436 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22437 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22438 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22439 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 10: 195 => ((9 integer))
mem: ((9 integer)): 22440 <= 195
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22441 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 195
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1302 => ((11 byte-address))
mem: ((11 byte-address)): 22442 <= 1302
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1302 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 15
run: print-character/print-string/print-board/main 14: 16 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 16
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 15
run: print-string/print-board/main 9: 16 => ((4 integer))
mem: ((4 integer)): 21939 <= 16
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 16
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 16
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21931 byte) (raw)) => g
run: print-string/print-board/main 7: #\g => ((6 character))
mem: ((6 character)): 21941 <= #\g
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => g
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22461 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\g)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22463 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\g)
run: print-character/print-string/print-board/main 2: #\g => ((2 character))
mem: ((2 character)): 22464 <= #\g
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\g)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22465 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\g)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22466 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22467 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22468 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22469 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22470 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 10: 196 => ((9 integer))
mem: ((9 integer)): 22471 <= 196
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22472 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 196
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1303 => ((11 byte-address))
mem: ((11 byte-address)): 22473 <= 1303
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => g
run: print-character/print-string/print-board/main 13: #\g => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1303 <= #\g
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 16
run: print-character/print-string/print-board/main 14: 17 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 17
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 16
run: print-string/print-board/main 9: 17 => ((4 integer))
mem: ((4 integer)): 21939 <= 17
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 17
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 17
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21932 byte) (raw)) =>  
run: print-string/print-board/main 7: #\space => ((6 character))
mem: ((6 character)): 21941 <= #\space
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) =>  
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22492 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\space)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22494 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\space)
run: print-character/print-string/print-board/main 2: #\space => ((2 character))
mem: ((2 character)): 22495 <= #\space
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\space)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22496 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\space)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22497 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22498 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22499 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22500 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22501 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 10: 197 => ((9 integer))
mem: ((9 integer)): 22502 <= 197
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22503 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 197
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1304 => ((11 byte-address))
mem: ((11 byte-address)): 22504 <= 1304
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) =>  
run: print-character/print-string/print-board/main 13: #\space => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1304 <= #\space
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 17
run: print-character/print-string/print-board/main 14: 18 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 18
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 17
run: print-string/print-board/main 9: 18 => ((4 integer))
mem: ((4 integer)): 21939 <= 18
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 18
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 21940 <= nil
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => nil
run: print-string/print-board/main 7: (((6 character)) <- ((index)) ((2 string-address) (deref)) ((4 integer)))
mem: ((4 integer)) => 18
array-len: ((21914 string) (raw))
mem: ((21914 integer) (raw)) => 19
mem: ((21933 byte) (raw)) => h
run: print-string/print-board/main 7: #\h => ((6 character))
mem: ((6 character)): 21941 <= #\h
run: print-string/print-board/main 8: (((print-character)) ((1 terminal-address)) ((6 character)))
mem: ((1 terminal-address)) => 1101
mem: ((6 character)) => h
run: print-character/print-string/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: print-character/print-string/print-board/main 0: 22523 => ((default-space space-address))
run: print-character/print-string/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101 #\h)
run: print-character/print-string/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22525 <= 1101
run: print-character/print-string/print-board/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1101 #\h)
run: print-character/print-string/print-board/main 2: #\h => ((2 character))
mem: ((2 character)): 22526 <= #\h
run: print-character/print-string/print-board/main 3: (((3 integer) (color)) <- ((next-input)))
arg: nil 2 (1101 #\h)
run: print-character/print-string/print-board/main 3: nil => ((3 integer) (color))
mem: ((3 integer) (color)): 22527 <= nil
run: print-character/print-string/print-board/main 4: (((4 integer) (color)) <- ((next-input)))
arg: nil 3 (1101 #\h)
run: print-character/print-string/print-board/main 4: nil => ((4 integer) (color))
mem: ((4 integer) (color)): 22528 <= nil
run: print-character/print-string/print-board/main 5: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
mem: ((1 terminal-address)) => 1101
run: print-character/print-string/print-board/main 6: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: print-character/print-string/print-board/main 6: 1103 => ((5 integer-address))
mem: ((5 integer-address)): 22529 <= 1103
run: print-character/print-string/print-board/main 7: (((6 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: print-character/print-string/print-board/main 7: 1104 => ((6 integer-address))
mem: ((6 integer-address)): 22530 <= 1104
run: print-character/print-string/print-board/main 8: (((7 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
mem: ((1102 integer) (raw)) => 20
run: print-character/print-string/print-board/main 8: 20 => ((7 integer))
mem: ((7 integer)): 22531 <= 20
run: print-character/print-string/print-board/main 9: (((8 integer)) <- ((multiply)) ((5 integer-address) (deref)) ((7 integer)))
mem: ((5 integer-address) (deref)) => 9
mem: ((7 integer)) => 20
run: print-character/print-string/print-board/main 9: 180 => ((8 integer))
mem: ((8 integer)): 22532 <= 180
run: print-character/print-string/print-board/main 10: (((9 integer)) <- ((add)) ((8 integer)) ((6 integer-address) (deref)))
mem: ((8 integer)) => 180
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 10: 198 => ((9 integer))
mem: ((9 integer)): 22533 <= 198
run: print-character/print-string/print-board/main 11: (((10 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: print-character/print-string/print-board/main 11: 1106 => ((10 string-address))
mem: ((10 string-address)): 22534 <= 1106
run: print-character/print-string/print-board/main 12: (((11 byte-address)) <- ((index-address)) ((10 string-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 198
array-len: ((1106 string) (raw))
mem: ((1106 integer) (raw)) => 200
run: print-character/print-string/print-board/main 12: 1305 => ((11 byte-address))
mem: ((11 byte-address)): 22535 <= 1305
run: print-character/print-string/print-board/main 13: (((11 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => h
run: print-character/print-string/print-board/main 13: #\h => ((11 byte-address) (deref))
mem: ((11 byte-address) (deref)): 1305 <= #\h
run: print-character/print-string/print-board/main 14: (((6 integer-address) (deref)) <- ((add)) ((6 integer-address) (deref)) ((1 literal)))
mem: ((6 integer-address) (deref)) => 18
run: print-character/print-string/print-board/main 14: 19 => ((6 integer-address) (deref))
mem: ((6 integer-address) (deref)): 1104 <= 19
run: print-character/print-string/print-board/main 15: (((reply)))
run: print-string/print-board/main 9: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 18
run: print-string/print-board/main 9: 19 => ((4 integer))
mem: ((4 integer)): 21939 <= 19
run: print-string/print-board/main 10: (((jump)) ((-6 offset)))
run: print-string/print-board/main 5: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 19
mem: ((3 integer)) => 19
run: print-string/print-board/main 5: t => ((5 boolean))
mem: ((5 boolean)): 21940 <= t
run: print-string/print-board/main 6: (((jump-if)) ((5 boolean)) ((4 offset)))
mem: ((5 boolean)) => t
run: print-board/main 27: (((cursor-to-next-line)) ((1 terminal-address)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: cursor-to-next-line/print-board/main 0: 22554 => ((default-space space-address))
run: cursor-to-next-line/print-board/main 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1101)
run: cursor-to-next-line/print-board/main 1: 1101 => ((1 terminal-address))
mem: ((1 terminal-address)): 22556 <= 1101
run: cursor-to-next-line/print-board/main 2: (((jump-unless)) ((1 terminal-address)) ((5 offset)))
mem: ((1 terminal-address)) => 1101
run: cursor-to-next-line/print-board/main 3: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
run: cursor-to-next-line/print-board/main 3: 1103 => ((2 integer-address))
mem: ((2 integer-address)): 22557 <= 1103
run: cursor-to-next-line/print-board/main 4: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
mem: ((2 integer-address) (deref)) => 9
run: cursor-to-next-line/print-board/main 4: 10 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1103 <= 10
run: cursor-to-next-line/print-board/main 5: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
run: cursor-to-next-line/print-board/main 5: 1104 => ((3 integer-address))
mem: ((3 integer-address)): 22558 <= 1104
run: cursor-to-next-line/print-board/main 6: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: cursor-to-next-line/print-board/main 6: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1104 <= 0
run: cursor-to-next-line/print-board/main 7: (((reply)))
run: main 18: (((5 string-address) (raw)) <- ((get)) ((2 terminal-address) (deref)) ((4 offset)))
mem: ((1105 string-address) (raw)) => 1106
run: main 18: 1106 => ((5 string-address) (raw))
mem: ((5 string-address) (raw)): 5 <= 1106
schedule: done with routine 
