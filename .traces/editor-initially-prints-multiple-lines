parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abc\ndef]\n    new-editor s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .abc  .\n    .def  .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initially-prints-multiple-lines
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initially-prints-multiple-lines
 101 run: screen:address <- new-fake-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1069
 103 run: break-unless x:address:screen, 
9999 mem: location 1069 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1070
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1070 is 1036
9999 mem: storing 15 in location 1071
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1072
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 0
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 0
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 0
9999 mem: storing 1037 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 0
9999 mem: storing 1 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 1
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 1
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 1
9999 mem: storing 1039 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 1
9999 mem: storing 2 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 2
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 2
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 2
9999 mem: storing 1041 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 2
9999 mem: storing 3 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 3
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 3
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 3
9999 mem: storing 1043 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 3
9999 mem: storing 4 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 4
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 4
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 4
9999 mem: storing 1045 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 4
9999 mem: storing 5 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 5
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 5
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 5
9999 mem: storing 1047 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 5
9999 mem: storing 6 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 6
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 6
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 6
9999 mem: storing 1049 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 6
9999 mem: storing 7 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 7
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 7
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 7
9999 mem: storing 1051 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 7
9999 mem: storing 8 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 8
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 8
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 8
9999 mem: storing 1053 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 8
9999 mem: storing 9 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 9
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 9
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 9
9999 mem: storing 1055 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 9
9999 mem: storing 10 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 10
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 10
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 10
9999 mem: storing 1057 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 10
9999 mem: storing 11 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 11
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 11
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 11
9999 mem: storing 1059 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 11
9999 mem: storing 12 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 12
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 12
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 12
9999 mem: storing 1061 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 12
9999 mem: storing 13 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 13
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 13
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 13
9999 mem: storing 1063 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 13
9999 mem: storing 14 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 14
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 14
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 14
9999 mem: storing 1065 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 14
9999 mem: storing 15 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 15
9999 mem: location 1071 is 15
9999 mem: storing 1 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1069 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    s:address:array:character <- new [abc
def]
    new-editor s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right
  ]
parse: instruction: new
parse:   ingredient: {name: "abc\ndef", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "top": ]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
name: assign s 1
after-brace: recipe run1001
after-brace: new ...
after-brace: new-editor ...
 101 run: s:address:array:character <- new [abc
def]
9999 mem: storing 1098 in location 1
 101 run: new-editor s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1098
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1106
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1098 in location 1108
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1109
 102 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1110
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1111
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1112
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1112 is 5
9999 mem: storing 4 in location 1112
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1137
9999 mem: storing 1137 in location 1113
 102 run: sc:address:address:screen <- get-address result:address:editor-data/deref, screen:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1114
 102 run: sc:address:address:screen/deref <- copy screen:address
9999 mem: location 1109 is 1031
9999 mem: location 1114 is 1141
9999 mem: storing 1031 in location 1141
 102 run: x:address:number <- get-address result:address:editor-data/deref, top:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1142
9999 mem: storing 0 in location 1142
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1115
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1111 is 0
9999 mem: location 1115 is 1143
9999 mem: storing 0 in location 1143
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 1115
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1112 is 4
9999 mem: location 1115 is 1145
9999 mem: storing 4 in location 1145
 102 run: x:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1144
9999 mem: storing 1144 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1144
9999 mem: storing 0 in location 1144
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1146
9999 mem: storing 1146 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1146
9999 mem: storing 0 in location 1146
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1147
9999 mem: storing 1147 in location 1115
 102 run: response:address:address:array:character <- get-address result:address:editor-data/deref, response:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1116
 102 run: response:address:address:array:character/deref <- copy 0:literal
9999 mem: location 1116 is 1139
9999 mem: storing 0 in location 1139
 102 run: warnings:address:address:array:character <- get-address result:address:editor-data/deref, warnings:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1117
 102 run: warnings:address:address:array:character/deref <- copy 0:literal
9999 mem: location 1117 is 1140
9999 mem: storing 0 in location 1140
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1111 is 0
9999 mem: location 1115 is 1147
9999 mem: storing 0 in location 1147
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1118
 102 run: init:address:address:duplex-list/deref <- push-duplex 167:literal/§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1150
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1152
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1153
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1181
9999 mem: storing 1181 in location 1154
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1154 is 1181
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1154 is 1181
9999 run: address to copy is 1181
9999 mem: storing 1181 in location 1155
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1152 is 167
9999 mem: location 1155 is 1181
9999 mem: storing 167 in location 1181
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1154 is 1181
9999 mem: location 1181 is 167
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1154 is 1181
9999 run: address to copy is 1182
9999 mem: storing 1182 in location 1156
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1153 is 0
9999 mem: location 1156 is 1182
9999 mem: storing 0 in location 1182
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1153 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1154 is 1181
9999 run: result 0 is 1181
9999 mem: location 1118 is 1137
9999 mem: storing 1181 in location 1137
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1119
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1118 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1119 is 1138
9999 mem: storing 1181 in location 1138
 102 run: b:address:boolean <- get-address result:address:editor-data/deref, in-focus?:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1149
9999 mem: storing 1149 in location 1120
 102 run: b:address:boolean/deref <- copy 1:literal/true
9999 mem: location 1120 is 1149
9999 mem: storing 1 in location 1149
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1108 is 1098
9999 run: jumping to instruction 34
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1108 is 1098
9999 mem: storing 7 in location 1121
 102 run: jump-if len:number, 1:offset
9999 mem: location 1121 is 7
9999 run: jumping to instruction 37
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1122
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1118 is 1137
9999 mem: location 1137 is 1181
9999 mem: storing 1181 in location 1123
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1122 is 0
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1124
 102 run: break-if done?:boolean, 
9999 mem: location 1124 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1122 is 0
9999 mem: location 1108 is 1098
9999 mem: location 1122 is 0
9999 run: address to copy is 1099
9999 run: its type is character
9999 mem: location 1099 is 97
9999 mem: storing 97 in location 1125
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1125 is 97
9999 mem: location 1123 is 1181
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1184
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1186
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1181 in location 1187
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1215
9999 mem: storing 1215 in location 1188
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1188 is 1215
9999 mem: location 1215 is 0
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1188 is 1215
9999 run: address to copy is 1215
9999 mem: storing 1215 in location 1189
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1186 is 97
9999 mem: location 1189 is 1215
9999 mem: storing 97 in location 1215
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1187 is 1181
9999 mem: location 1181 is 167
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1187 is 1181
9999 run: address to copy is 1182
9999 run: its type is address
9999 mem: location 1182 is 0
9999 mem: storing 0 in location 1190
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1187 is 1181
9999 mem: location 1181 is 167
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1187 is 1181
9999 run: address to copy is 1182
9999 mem: storing 1182 in location 1191
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1188 is 1215
9999 mem: location 1191 is 1182
9999 mem: storing 1215 in location 1182
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1188 is 1215
9999 mem: location 1215 is 97
9999 mem: location 1216 is 0
9999 mem: location 1217 is 0
9999 mem: location 1188 is 1215
9999 run: address to copy is 1217
9999 mem: storing 1217 in location 1191
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1187 is 1181
9999 mem: location 1191 is 1217
9999 mem: storing 1181 in location 1217
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1188 is 1215
9999 mem: location 1215 is 97
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1181
9999 mem: location 1188 is 1215
9999 run: address to copy is 1216
9999 mem: storing 1216 in location 1191
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1190 is 0
9999 mem: location 1191 is 1216
9999 mem: storing 0 in location 1216
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1190 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1188 is 1215
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1123 is 1181
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1218
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1181 in location 1220
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1220 is 1181
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1220 is 1181
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1215
9999 mem: location 1183 is 0
9999 mem: location 1220 is 1181
9999 run: address to copy is 1182
9999 run: its type is address
9999 mem: location 1182 is 1215
9999 mem: storing 1215 in location 1221
 103 run: reply result:address:duplex-list
9999 mem: location 1221 is 1215
9999 run: result 0 is 1215
9999 mem: storing 1215 in location 1123
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1122
 102 run: loop 
9999 run: jumping to instruction 40
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1122 is 1
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1124
 102 run: break-if done?:boolean, 
9999 mem: location 1124 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1122 is 1
9999 mem: location 1108 is 1098
9999 mem: location 1122 is 1
9999 run: address to copy is 1100
9999 run: its type is character
9999 mem: location 1100 is 98
9999 mem: storing 98 in location 1125
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1125 is 98
9999 mem: location 1123 is 1215
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1249
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1251
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1215 in location 1252
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1280
9999 mem: storing 1280 in location 1253
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1253 is 1280
9999 mem: location 1280 is 0
9999 mem: location 1281 is 0
9999 mem: location 1282 is 0
9999 mem: location 1253 is 1280
9999 run: address to copy is 1280
9999 mem: storing 1280 in location 1254
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1251 is 98
9999 mem: location 1254 is 1280
9999 mem: storing 98 in location 1280
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1252 is 1215
9999 mem: location 1215 is 97
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1181
9999 mem: location 1252 is 1215
9999 run: address to copy is 1216
9999 run: its type is address
9999 mem: location 1216 is 0
9999 mem: storing 0 in location 1255
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1252 is 1215
9999 mem: location 1215 is 97
9999 mem: location 1216 is 0
9999 mem: location 1217 is 1181
9999 mem: location 1252 is 1215
9999 run: address to copy is 1216
9999 mem: storing 1216 in location 1256
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1253 is 1280
9999 mem: location 1256 is 1216
9999 mem: storing 1280 in location 1216
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1253 is 1280
9999 mem: location 1280 is 98
9999 mem: location 1281 is 0
9999 mem: location 1282 is 0
9999 mem: location 1253 is 1280
9999 run: address to copy is 1282
9999 mem: storing 1282 in location 1256
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1252 is 1215
9999 mem: location 1256 is 1282
9999 mem: storing 1215 in location 1282
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1253 is 1280
9999 mem: location 1280 is 98
9999 mem: location 1281 is 0
9999 mem: location 1282 is 1215
9999 mem: location 1253 is 1280
9999 run: address to copy is 1281
9999 mem: storing 1281 in location 1256
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1255 is 0
9999 mem: location 1256 is 1281
9999 mem: storing 0 in location 1281
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1255 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1253 is 1280
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1123 is 1215
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1283
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1215 in location 1285
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1285 is 1215
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1285 is 1215
9999 mem: location 1215 is 97
9999 mem: location 1216 is 1280
9999 mem: location 1217 is 1181
9999 mem: location 1285 is 1215
9999 run: address to copy is 1216
9999 run: its type is address
9999 mem: location 1216 is 1280
9999 mem: storing 1280 in location 1286
 103 run: reply result:address:duplex-list
9999 mem: location 1286 is 1280
9999 run: result 0 is 1280
9999 mem: storing 1280 in location 1123
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1122 is 1
9999 mem: storing 2 in location 1122
 102 run: loop 
9999 run: jumping to instruction 40
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1122 is 2
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1124
 102 run: break-if done?:boolean, 
9999 mem: location 1124 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1122 is 2
9999 mem: location 1108 is 1098
9999 mem: location 1122 is 2
9999 run: address to copy is 1101
9999 run: its type is character
9999 mem: location 1101 is 99
9999 mem: storing 99 in location 1125
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1125 is 99
9999 mem: location 1123 is 1280
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1314
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1316
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1280 in location 1317
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1345
9999 mem: storing 1345 in location 1318
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1318 is 1345
9999 mem: location 1345 is 0
9999 mem: location 1346 is 0
9999 mem: location 1347 is 0
9999 mem: location 1318 is 1345
9999 run: address to copy is 1345
9999 mem: storing 1345 in location 1319
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1316 is 99
9999 mem: location 1319 is 1345
9999 mem: storing 99 in location 1345
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1317 is 1280
9999 mem: location 1280 is 98
9999 mem: location 1281 is 0
9999 mem: location 1282 is 1215
9999 mem: location 1317 is 1280
9999 run: address to copy is 1281
9999 run: its type is address
9999 mem: location 1281 is 0
9999 mem: storing 0 in location 1320
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1317 is 1280
9999 mem: location 1280 is 98
9999 mem: location 1281 is 0
9999 mem: location 1282 is 1215
9999 mem: location 1317 is 1280
9999 run: address to copy is 1281
9999 mem: storing 1281 in location 1321
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1318 is 1345
9999 mem: location 1321 is 1281
9999 mem: storing 1345 in location 1281
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1318 is 1345
9999 mem: location 1345 is 99
9999 mem: location 1346 is 0
9999 mem: location 1347 is 0
9999 mem: location 1318 is 1345
9999 run: address to copy is 1347
9999 mem: storing 1347 in location 1321
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1317 is 1280
9999 mem: location 1321 is 1347
9999 mem: storing 1280 in location 1347
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1318 is 1345
9999 mem: location 1345 is 99
9999 mem: location 1346 is 0
9999 mem: location 1347 is 1280
9999 mem: location 1318 is 1345
9999 run: address to copy is 1346
9999 mem: storing 1346 in location 1321
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1320 is 0
9999 mem: location 1321 is 1346
9999 mem: storing 0 in location 1346
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1320 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1318 is 1345
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1123 is 1280
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1348
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1280 in location 1350
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1350 is 1280
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1350 is 1280
9999 mem: location 1280 is 98
9999 mem: location 1281 is 1345
9999 mem: location 1282 is 1215
9999 mem: location 1350 is 1280
9999 run: address to copy is 1281
9999 run: its type is address
9999 mem: location 1281 is 1345
9999 mem: storing 1345 in location 1351
 103 run: reply result:address:duplex-list
9999 mem: location 1351 is 1345
9999 run: result 0 is 1345
9999 mem: storing 1345 in location 1123
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1122 is 2
9999 mem: storing 3 in location 1122
 102 run: loop 
9999 run: jumping to instruction 40
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1122 is 3
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1124
 102 run: break-if done?:boolean, 
9999 mem: location 1124 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1122 is 3
9999 mem: location 1108 is 1098
9999 mem: location 1122 is 3
9999 run: address to copy is 1102
9999 run: its type is character
9999 mem: location 1102 is 10
9999 mem: storing 10 in location 1125
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1125 is 10
9999 mem: location 1123 is 1345
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1379
 103 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1381
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1345 in location 1382
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1410
9999 mem: storing 1410 in location 1383
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1383 is 1410
9999 mem: location 1410 is 0
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: location 1383 is 1410
9999 run: address to copy is 1410
9999 mem: storing 1410 in location 1384
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1381 is 10
9999 mem: location 1384 is 1410
9999 mem: storing 10 in location 1410
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1382 is 1345
9999 mem: location 1345 is 99
9999 mem: location 1346 is 0
9999 mem: location 1347 is 1280
9999 mem: location 1382 is 1345
9999 run: address to copy is 1346
9999 run: its type is address
9999 mem: location 1346 is 0
9999 mem: storing 0 in location 1385
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1382 is 1345
9999 mem: location 1345 is 99
9999 mem: location 1346 is 0
9999 mem: location 1347 is 1280
9999 mem: location 1382 is 1345
9999 run: address to copy is 1346
9999 mem: storing 1346 in location 1386
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1383 is 1410
9999 mem: location 1386 is 1346
9999 mem: storing 1410 in location 1346
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1383 is 1410
9999 mem: location 1410 is 10
9999 mem: location 1411 is 0
9999 mem: location 1412 is 0
9999 mem: location 1383 is 1410
9999 run: address to copy is 1412
9999 mem: storing 1412 in location 1386
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1382 is 1345
9999 mem: location 1386 is 1412
9999 mem: storing 1345 in location 1412
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1383 is 1410
9999 mem: location 1410 is 10
9999 mem: location 1411 is 0
9999 mem: location 1412 is 1345
9999 mem: location 1383 is 1410
9999 run: address to copy is 1411
9999 mem: storing 1411 in location 1386
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1385 is 0
9999 mem: location 1386 is 1411
9999 mem: storing 0 in location 1411
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1385 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1383 is 1410
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1123 is 1345
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1413
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1345 in location 1415
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1415 is 1345
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1415 is 1345
9999 mem: location 1345 is 99
9999 mem: location 1346 is 1410
9999 mem: location 1347 is 1280
9999 mem: location 1415 is 1345
9999 run: address to copy is 1346
9999 run: its type is address
9999 mem: location 1346 is 1410
9999 mem: storing 1410 in location 1416
 103 run: reply result:address:duplex-list
9999 mem: location 1416 is 1410
9999 run: result 0 is 1410
9999 mem: storing 1410 in location 1123
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1122 is 3
9999 mem: storing 4 in location 1122
 102 run: loop 
9999 run: jumping to instruction 40
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1122 is 4
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1124
 102 run: break-if done?:boolean, 
9999 mem: location 1124 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1122 is 4
9999 mem: location 1108 is 1098
9999 mem: location 1122 is 4
9999 run: address to copy is 1103
9999 run: its type is character
9999 mem: location 1103 is 100
9999 mem: storing 100 in location 1125
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1125 is 100
9999 mem: location 1123 is 1410
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1444
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1446
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1410 in location 1447
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1475
9999 mem: storing 1475 in location 1448
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1448 is 1475
9999 mem: location 1475 is 0
9999 mem: location 1476 is 0
9999 mem: location 1477 is 0
9999 mem: location 1448 is 1475
9999 run: address to copy is 1475
9999 mem: storing 1475 in location 1449
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1446 is 100
9999 mem: location 1449 is 1475
9999 mem: storing 100 in location 1475
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1447 is 1410
9999 mem: location 1410 is 10
9999 mem: location 1411 is 0
9999 mem: location 1412 is 1345
9999 mem: location 1447 is 1410
9999 run: address to copy is 1411
9999 run: its type is address
9999 mem: location 1411 is 0
9999 mem: storing 0 in location 1450
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1447 is 1410
9999 mem: location 1410 is 10
9999 mem: location 1411 is 0
9999 mem: location 1412 is 1345
9999 mem: location 1447 is 1410
9999 run: address to copy is 1411
9999 mem: storing 1411 in location 1451
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1448 is 1475
9999 mem: location 1451 is 1411
9999 mem: storing 1475 in location 1411
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1448 is 1475
9999 mem: location 1475 is 100
9999 mem: location 1476 is 0
9999 mem: location 1477 is 0
9999 mem: location 1448 is 1475
9999 run: address to copy is 1477
9999 mem: storing 1477 in location 1451
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1447 is 1410
9999 mem: location 1451 is 1477
9999 mem: storing 1410 in location 1477
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1448 is 1475
9999 mem: location 1475 is 100
9999 mem: location 1476 is 0
9999 mem: location 1477 is 1410
9999 mem: location 1448 is 1475
9999 run: address to copy is 1476
9999 mem: storing 1476 in location 1451
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1450 is 0
9999 mem: location 1451 is 1476
9999 mem: storing 0 in location 1476
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1450 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1448 is 1475
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1123 is 1410
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1478
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1410 in location 1480
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1480 is 1410
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1480 is 1410
9999 mem: location 1410 is 10
9999 mem: location 1411 is 1475
9999 mem: location 1412 is 1345
9999 mem: location 1480 is 1410
9999 run: address to copy is 1411
9999 run: its type is address
9999 mem: location 1411 is 1475
9999 mem: storing 1475 in location 1481
 103 run: reply result:address:duplex-list
9999 mem: location 1481 is 1475
9999 run: result 0 is 1475
9999 mem: storing 1475 in location 1123
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1122 is 4
9999 mem: storing 5 in location 1122
 102 run: loop 
9999 run: jumping to instruction 40
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1122 is 5
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1124
 102 run: break-if done?:boolean, 
9999 mem: location 1124 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1122 is 5
9999 mem: location 1108 is 1098
9999 mem: location 1122 is 5
9999 run: address to copy is 1104
9999 run: its type is character
9999 mem: location 1104 is 101
9999 mem: storing 101 in location 1125
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1125 is 101
9999 mem: location 1123 is 1475
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1509
 103 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1511
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1475 in location 1512
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1540
9999 mem: storing 1540 in location 1513
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1513 is 1540
9999 mem: location 1540 is 0
9999 mem: location 1541 is 0
9999 mem: location 1542 is 0
9999 mem: location 1513 is 1540
9999 run: address to copy is 1540
9999 mem: storing 1540 in location 1514
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1511 is 101
9999 mem: location 1514 is 1540
9999 mem: storing 101 in location 1540
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1512 is 1475
9999 mem: location 1475 is 100
9999 mem: location 1476 is 0
9999 mem: location 1477 is 1410
9999 mem: location 1512 is 1475
9999 run: address to copy is 1476
9999 run: its type is address
9999 mem: location 1476 is 0
9999 mem: storing 0 in location 1515
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1512 is 1475
9999 mem: location 1475 is 100
9999 mem: location 1476 is 0
9999 mem: location 1477 is 1410
9999 mem: location 1512 is 1475
9999 run: address to copy is 1476
9999 mem: storing 1476 in location 1516
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1513 is 1540
9999 mem: location 1516 is 1476
9999 mem: storing 1540 in location 1476
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1513 is 1540
9999 mem: location 1540 is 101
9999 mem: location 1541 is 0
9999 mem: location 1542 is 0
9999 mem: location 1513 is 1540
9999 run: address to copy is 1542
9999 mem: storing 1542 in location 1516
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1512 is 1475
9999 mem: location 1516 is 1542
9999 mem: storing 1475 in location 1542
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1513 is 1540
9999 mem: location 1540 is 101
9999 mem: location 1541 is 0
9999 mem: location 1542 is 1475
9999 mem: location 1513 is 1540
9999 run: address to copy is 1541
9999 mem: storing 1541 in location 1516
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1515 is 0
9999 mem: location 1516 is 1541
9999 mem: storing 0 in location 1541
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1515 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1513 is 1540
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1123 is 1475
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1543
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1475 in location 1545
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1545 is 1475
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1545 is 1475
9999 mem: location 1475 is 100
9999 mem: location 1476 is 1540
9999 mem: location 1477 is 1410
9999 mem: location 1545 is 1475
9999 run: address to copy is 1476
9999 run: its type is address
9999 mem: location 1476 is 1540
9999 mem: storing 1540 in location 1546
 103 run: reply result:address:duplex-list
9999 mem: location 1546 is 1540
9999 run: result 0 is 1540
9999 mem: storing 1540 in location 1123
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1122 is 5
9999 mem: storing 6 in location 1122
 102 run: loop 
9999 run: jumping to instruction 40
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1122 is 6
9999 mem: location 1121 is 7
9999 mem: storing 0 in location 1124
 102 run: break-if done?:boolean, 
9999 mem: location 1124 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 10
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1122 is 6
9999 mem: location 1108 is 1098
9999 mem: location 1122 is 6
9999 run: address to copy is 1105
9999 run: its type is character
9999 mem: location 1105 is 102
9999 mem: storing 102 in location 1125
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1125 is 102
9999 mem: location 1123 is 1540
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1574
 103 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 1576
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1540 in location 1577
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1605
9999 mem: storing 1605 in location 1578
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1578 is 1605
9999 mem: location 1605 is 0
9999 mem: location 1606 is 0
9999 mem: location 1607 is 0
9999 mem: location 1578 is 1605
9999 run: address to copy is 1605
9999 mem: storing 1605 in location 1579
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1576 is 102
9999 mem: location 1579 is 1605
9999 mem: storing 102 in location 1605
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1577 is 1540
9999 mem: location 1540 is 101
9999 mem: location 1541 is 0
9999 mem: location 1542 is 1475
9999 mem: location 1577 is 1540
9999 run: address to copy is 1541
9999 run: its type is address
9999 mem: location 1541 is 0
9999 mem: storing 0 in location 1580
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1577 is 1540
9999 mem: location 1540 is 101
9999 mem: location 1541 is 0
9999 mem: location 1542 is 1475
9999 mem: location 1577 is 1540
9999 run: address to copy is 1541
9999 mem: storing 1541 in location 1581
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1578 is 1605
9999 mem: location 1581 is 1541
9999 mem: storing 1605 in location 1541
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1578 is 1605
9999 mem: location 1605 is 102
9999 mem: location 1606 is 0
9999 mem: location 1607 is 0
9999 mem: location 1578 is 1605
9999 run: address to copy is 1607
9999 mem: storing 1607 in location 1581
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1577 is 1540
9999 mem: location 1581 is 1607
9999 mem: storing 1540 in location 1607
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1578 is 1605
9999 mem: location 1605 is 102
9999 mem: location 1606 is 0
9999 mem: location 1607 is 1540
9999 mem: location 1578 is 1605
9999 run: address to copy is 1606
9999 mem: storing 1606 in location 1581
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1580 is 0
9999 mem: location 1581 is 1606
9999 mem: storing 0 in location 1606
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1580 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1578 is 1605
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1123 is 1540
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1608
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1540 in location 1610
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1610 is 1540
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1610 is 1540
9999 mem: location 1540 is 101
9999 mem: location 1541 is 1605
9999 mem: location 1542 is 1475
9999 mem: location 1610 is 1540
9999 run: address to copy is 1541
9999 run: its type is address
9999 mem: location 1541 is 1605
9999 mem: storing 1605 in location 1611
 103 run: reply result:address:duplex-list
9999 mem: location 1611 is 1605
9999 run: result 0 is 1605
9999 mem: storing 1605 in location 1123
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1122 is 6
9999 mem: storing 7 in location 1122
 102 run: loop 
9999 run: jumping to instruction 40
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1122 is 7
9999 mem: location 1121 is 7
9999 mem: storing 1 in location 1124
 102 run: break-if done?:boolean, 
9999 mem: location 1124 is 1
9999 run: jumping to instruction 47
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1113 is 1137
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1119
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1118 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1119 is 1138
9999 mem: storing 1181 in location 1138
 102 run: bottom:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1113 is 1137
9999 run: address to copy is 1144
9999 mem: storing 1144 in location 1126
 102 run: result:address:editor-data <- render result:address:editor-data
9999 mem: location 1113 is 1137
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1639
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1137 in location 1641
 103 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 1641 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1641 is 1137
9999 run: address to copy is 1141
9999 run: its type is address
9999 mem: location 1141 is 1031
9999 mem: storing 1031 in location 1642
 103 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 1641 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1641 is 1137
9999 run: address to copy is 1142
9999 run: its type is number
9999 mem: location 1142 is 0
9999 mem: storing 0 in location 1643
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1641 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1641 is 1137
9999 run: address to copy is 1143
9999 run: its type is number
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1644
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1642 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1680
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1682
 104 run: break-unless x:address:screen, 
9999 mem: location 1682 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1682 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1682 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1683
 104 run: reply height:number
9999 mem: location 1683 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1645
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1641 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1641 is 1137
9999 run: address to copy is 1145
9999 run: its type is number
9999 mem: location 1145 is 4
9999 mem: storing 4 in location 1646
 103 run: hide-screen screen:address
9999 mem: location 1642 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1711
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1713
 104 run: break-unless x:address:screen, 
9999 mem: location 1713 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1713 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1641 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1641 is 1137
9999 run: address to copy is 1137
9999 run: its type is address
9999 mem: location 1137 is 1181
9999 mem: storing 1181 in location 1647
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1647 is 1181
9999 mem: storing 1181 in location 1648
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1647 is 1181
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1742
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1181 in location 1744
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1744 is 1181
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1744 is 1181
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1215
9999 mem: location 1183 is 0
9999 mem: location 1744 is 1181
9999 run: address to copy is 1182
9999 run: its type is address
9999 mem: location 1182 is 1215
9999 mem: storing 1215 in location 1745
 104 run: reply result:address:duplex-list
9999 mem: location 1745 is 1215
9999 run: result 0 is 1215
9999 mem: storing 1215 in location 1647
 103 run: row:number <- copy top:number
9999 mem: location 1643 is 0
9999 mem: storing 0 in location 1649
 103 run: column:number <- copy left:number
9999 mem: location 1644 is 0
9999 mem: storing 0 in location 1650
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1641 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1641 is 1137
9999 run: address to copy is 1146
9999 mem: storing 1146 in location 1651
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1641 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1641 is 1137
9999 run: address to copy is 1147
9999 mem: storing 1147 in location 1652
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1641 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1641 is 1137
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1653
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1642 is 1031
9999 mem: location 1649 is 0
9999 mem: location 1650 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1773
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1775
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1776
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1777
 104 run: break-unless x:address:screen, 
9999 mem: location 1775 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1775 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1775 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1778
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1776 is 0
9999 mem: location 1778 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1775 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1775 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1779
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1777 is 0
9999 mem: location 1779 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1775 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1647 is 1215
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1649 is 0
9999 mem: location 1645 is 3
9999 mem: storing 0 in location 1654
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1654 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1649 is 0
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 0
9999 mem: storing 1 in location 1655
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1655 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1650 is 0
9999 mem: location 1652 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 1 in location 1656
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1656 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1647 is 1215
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1804
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1215 in location 1806
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1806 is 1215
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1806 is 1215
9999 mem: location 1215 is 97
9999 mem: location 1216 is 1280
9999 mem: location 1217 is 1181
9999 mem: location 1806 is 1215
9999 run: address to copy is 1217
9999 run: its type is address
9999 mem: location 1217 is 1181
9999 mem: storing 1181 in location 1807
 104 run: reply result:address:duplex-list
9999 mem: location 1807 is 1181
9999 run: result 0 is 1181
9999 mem: location 1653 is 1138
9999 mem: storing 1181 in location 1138
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1647 is 1215
9999 mem: location 1215 is 97
9999 mem: location 1216 is 1280
9999 mem: location 1217 is 1181
9999 mem: location 1647 is 1215
9999 run: address to copy is 1215
9999 run: its type is number
9999 mem: location 1215 is 97
9999 mem: storing 97 in location 1657
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1657 is 97
9999 mem: storing 0 in location 1658
 103 run: break-unless newline?:boolean, 
9999 mem: location 1658 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1650 is 0
9999 mem: location 1646 is 4
9999 mem: storing 0 in location 1660
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 57
 103 run: print-character screen:address, c:character
9999 mem: location 1642 is 1031
9999 mem: location 1657 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1835
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1837
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1838
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1839
9999 mem: storing 0 in location 1840
 104 run: break-if color-found?:boolean, 
9999 mem: location 1840 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1839
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1841
9999 mem: storing 0 in location 1842
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1842 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1841
 104 run: break-unless x:address:screen, 
9999 mem: location 1837 is 1031
9999 run: jump-unless fell through
schedule: print-character/render/new-editor/run1001/editor-initially-prints-multiple-lines
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1837 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1837 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1843
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1837 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1837 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1844
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1837 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1837 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1845
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1837 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1837 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1846
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1838 is 97
9999 mem: storing 0 in location 1847
 104 run: break-unless newline?:boolean, 
9999 mem: location 1847 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1843 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1845 is 5
9999 mem: storing 0 in location 1850
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1850 is 0
9999 mem: location 1844 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 1850
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1837 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1837 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1851
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1838 is 97
9999 mem: storing 0 in location 1852
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1852 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1851 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1850 is 0
9999 mem: location 1851 is 1036
9999 mem: location 1850 is 0
9999 mem: storing 1037 in location 1854
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1854 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1854 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1855
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1854 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1854 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1856
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1838 is 97
9999 mem: location 1855 is 1037
9999 mem: storing 97 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1839 is 7
9999 mem: location 1856 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1845 is 5
9999 mem: storing 4 in location 1857
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1844 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1857 is 4
9999 mem: storing 0 in location 1858
 104 run: break-if at-right?:boolean, 
9999 mem: location 1858 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1844 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1844 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1837 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1647 is 1215
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1866
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1215 in location 1868
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1868 is 1215
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1868 is 1215
9999 mem: location 1215 is 97
9999 mem: location 1216 is 1280
9999 mem: location 1217 is 1181
9999 mem: location 1868 is 1215
9999 run: address to copy is 1216
9999 run: its type is address
9999 mem: location 1216 is 1280
9999 mem: storing 1280 in location 1869
 104 run: reply result:address:duplex-list
9999 mem: location 1869 is 1280
9999 run: result 0 is 1280
9999 mem: storing 1280 in location 1647
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1648 is 1181
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1897
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1181 in location 1899
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1899 is 1181
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1899 is 1181
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1215
9999 mem: location 1183 is 0
9999 mem: location 1899 is 1181
9999 run: address to copy is 1182
9999 run: its type is address
9999 mem: location 1182 is 1215
9999 mem: storing 1215 in location 1900
 104 run: reply result:address:duplex-list
9999 mem: location 1900 is 1215
9999 run: result 0 is 1215
9999 mem: storing 1215 in location 1648
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1650 is 0
9999 mem: storing 1 in location 1650
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1647 is 1280
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1649 is 0
9999 mem: location 1645 is 3
9999 mem: storing 0 in location 1654
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1654 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1649 is 0
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 0
9999 mem: storing 1 in location 1655
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1655 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1650 is 1
9999 mem: location 1652 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1656
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1656 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1647 is 1280
9999 mem: location 1280 is 98
9999 mem: location 1281 is 1345
9999 mem: location 1282 is 1215
9999 mem: location 1647 is 1280
9999 run: address to copy is 1280
9999 run: its type is number
9999 mem: location 1280 is 98
9999 mem: storing 98 in location 1657
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1657 is 98
9999 mem: storing 0 in location 1658
 103 run: break-unless newline?:boolean, 
9999 mem: location 1658 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1650 is 1
9999 mem: location 1646 is 4
9999 mem: storing 0 in location 1660
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 57
 103 run: print-character screen:address, c:character
9999 mem: location 1642 is 1031
9999 mem: location 1657 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1928
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1930
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1931
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1932
9999 mem: storing 0 in location 1933
 104 run: break-if color-found?:boolean, 
9999 mem: location 1933 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1932
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1934
9999 mem: storing 0 in location 1935
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1935 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1934
 104 run: break-unless x:address:screen, 
9999 mem: location 1930 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1930 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1930 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1936
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1930 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1930 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1937
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1930 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1930 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1938
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1930 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1930 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1939
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1931 is 98
9999 mem: storing 0 in location 1940
 104 run: break-unless newline?:boolean, 
9999 mem: location 1940 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1936 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1938 is 5
9999 mem: storing 0 in location 1943
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1943 is 0
9999 mem: location 1937 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 1943
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1930 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1930 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1944
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1931 is 98
9999 mem: storing 0 in location 1945
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1945 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1944 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1943 is 1
9999 mem: location 1944 is 1036
9999 mem: location 1943 is 1
9999 mem: storing 1039 in location 1947
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1947 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1947 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1948
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1947 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1947 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1949
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1931 is 98
9999 mem: location 1948 is 1039
9999 mem: storing 98 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1932 is 7
9999 mem: location 1949 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1938 is 5
9999 mem: storing 4 in location 1950
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1937 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1950 is 4
9999 mem: storing 0 in location 1951
 104 run: break-if at-right?:boolean, 
9999 mem: location 1951 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1937 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1937 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1930 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1647 is 1280
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1959
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1280 in location 1961
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1961 is 1280
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1961 is 1280
9999 mem: location 1280 is 98
9999 mem: location 1281 is 1345
9999 mem: location 1282 is 1215
9999 mem: location 1961 is 1280
9999 run: address to copy is 1281
9999 run: its type is address
9999 mem: location 1281 is 1345
9999 mem: storing 1345 in location 1962
 104 run: reply result:address:duplex-list
9999 mem: location 1962 is 1345
9999 run: result 0 is 1345
9999 mem: storing 1345 in location 1647
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1648 is 1215
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1990
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1215 in location 1992
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1992 is 1215
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1992 is 1215
9999 mem: location 1215 is 97
9999 mem: location 1216 is 1280
9999 mem: location 1217 is 1181
9999 mem: location 1992 is 1215
9999 run: address to copy is 1216
9999 run: its type is address
9999 mem: location 1216 is 1280
9999 mem: storing 1280 in location 1993
 104 run: reply result:address:duplex-list
9999 mem: location 1993 is 1280
9999 run: result 0 is 1280
9999 mem: storing 1280 in location 1648
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1650 is 1
9999 mem: storing 2 in location 1650
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1647 is 1345
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1649 is 0
9999 mem: location 1645 is 3
9999 mem: storing 0 in location 1654
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1654 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1649 is 0
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 0
9999 mem: storing 1 in location 1655
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1655 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1650 is 2
9999 mem: location 1652 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1656
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1656 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1647 is 1345
9999 mem: location 1345 is 99
9999 mem: location 1346 is 1410
9999 mem: location 1347 is 1280
9999 mem: location 1647 is 1345
9999 run: address to copy is 1345
9999 run: its type is number
9999 mem: location 1345 is 99
9999 mem: storing 99 in location 1657
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1657 is 99
9999 mem: storing 0 in location 1658
 103 run: break-unless newline?:boolean, 
9999 mem: location 1658 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1650 is 2
9999 mem: location 1646 is 4
9999 mem: storing 0 in location 1660
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 57
 103 run: print-character screen:address, c:character
9999 mem: location 1642 is 1031
9999 mem: location 1657 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2021
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2023
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2024
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2025
9999 mem: storing 0 in location 2026
 104 run: break-if color-found?:boolean, 
9999 mem: location 2026 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2025
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2027
9999 mem: storing 0 in location 2028
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2028 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2027
 104 run: break-unless x:address:screen, 
9999 mem: location 2023 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2023 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2023 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2029
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2023 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2023 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2030
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2023 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2023 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2031
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2023 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2023 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2032
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2024 is 99
9999 mem: storing 0 in location 2033
 104 run: break-unless newline?:boolean, 
9999 mem: location 2033 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2029 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2031 is 5
9999 mem: storing 0 in location 2036
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2036 is 0
9999 mem: location 2030 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 2036
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2023 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2023 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2037
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2024 is 99
9999 mem: storing 0 in location 2038
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2038 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2037 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2036 is 2
9999 mem: location 2037 is 1036
9999 mem: location 2036 is 2
9999 mem: storing 1041 in location 2040
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2040 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 2040 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 2041
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2040 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 2040 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 2042
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2024 is 99
9999 mem: location 2041 is 1041
9999 mem: storing 99 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2025 is 7
9999 mem: location 2042 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2031 is 5
9999 mem: storing 4 in location 2043
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2030 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2043 is 4
9999 mem: storing 0 in location 2044
 104 run: break-if at-right?:boolean, 
9999 mem: location 2044 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2030 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2030 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2023 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1647 is 1345
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2052
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1345 in location 2054
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2054 is 1345
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2054 is 1345
9999 mem: location 1345 is 99
9999 mem: location 1346 is 1410
9999 mem: location 1347 is 1280
9999 mem: location 2054 is 1345
9999 run: address to copy is 1346
9999 run: its type is address
9999 mem: location 1346 is 1410
9999 mem: storing 1410 in location 2055
 104 run: reply result:address:duplex-list
9999 mem: location 2055 is 1410
9999 run: result 0 is 1410
9999 mem: storing 1410 in location 1647
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1648 is 1280
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2083
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1280 in location 2085
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2085 is 1280
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2085 is 1280
9999 mem: location 1280 is 98
9999 mem: location 1281 is 1345
9999 mem: location 1282 is 1215
9999 mem: location 2085 is 1280
9999 run: address to copy is 1281
9999 run: its type is address
9999 mem: location 1281 is 1345
9999 mem: storing 1345 in location 2086
 104 run: reply result:address:duplex-list
9999 mem: location 2086 is 1345
9999 run: result 0 is 1345
9999 mem: storing 1345 in location 1648
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1650 is 2
9999 mem: storing 3 in location 1650
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1647 is 1410
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1649 is 0
9999 mem: location 1645 is 3
9999 mem: storing 0 in location 1654
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1654 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1649 is 0
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 0
9999 mem: storing 1 in location 1655
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1655 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1650 is 3
9999 mem: location 1652 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1656
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1656 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1647 is 1410
9999 mem: location 1410 is 10
9999 mem: location 1411 is 1475
9999 mem: location 1412 is 1345
9999 mem: location 1647 is 1410
9999 run: address to copy is 1410
9999 run: its type is number
9999 mem: location 1410 is 10
9999 mem: storing 10 in location 1657
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1657 is 10
9999 mem: storing 1 in location 1658
 103 run: break-unless newline?:boolean, 
9999 mem: location 1658 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1649 is 0
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 0
9999 mem: storing 1 in location 1655
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1655 is 1
9999 run: jump-unless fell through
 103 run: left-of-cursor?:boolean <- lesser-than column:number, cursor-column:address:number/deref
9999 mem: location 1650 is 3
9999 mem: location 1652 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1659
 103 run: break-unless left-of-cursor?:boolean, 
9999 mem: location 1659 is 0
9999 run: jumping to instruction 40
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1642 is 1031
9999 mem: location 1650 is 3
9999 mem: location 1646 is 4
 104 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 2114
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2116
 104 run: left:number <- next-ingredient 
9999 mem: storing 3 in location 2117
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2118
 104 run: column:number <- copy left:number
9999 mem: location 2117 is 3
9999 mem: storing 3 in location 2119
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2119 is 3
9999 mem: location 2118 is 4
9999 mem: storing 0 in location 2120
 104 run: break-if done?:boolean, 
9999 mem: location 2120 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2116 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2155
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2157
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2158
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2159
9999 mem: storing 0 in location 2160
 105 run: break-if color-found?:boolean, 
9999 mem: location 2160 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2159
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2161
9999 mem: storing 0 in location 2162
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2162 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2161
 105 run: break-unless x:address:screen, 
9999 mem: location 2157 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2157 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2157 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2163
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2157 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2157 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2164
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2157 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2157 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2165
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2157 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2157 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2166
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2158 is 32
9999 mem: storing 0 in location 2167
 105 run: break-unless newline?:boolean, 
9999 mem: location 2167 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2163 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2165 is 5
9999 mem: storing 0 in location 2170
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2170 is 0
9999 mem: location 2164 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 2170
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2157 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2157 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2171
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2158 is 32
9999 mem: storing 0 in location 2172
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2172 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2171 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2170 is 3
9999 mem: location 2171 is 1036
9999 mem: location 2170 is 3
9999 mem: storing 1043 in location 2174
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2174 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 2174 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 2175
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2174 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 2174 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 2176
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2158 is 32
9999 mem: location 2175 is 1043
9999 mem: storing 32 in location 1043
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2159 is 7
9999 mem: location 2176 is 1044
9999 mem: storing 7 in location 1044
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2165 is 5
9999 mem: storing 4 in location 2177
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2164 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2177 is 4
9999 mem: storing 0 in location 2178
 105 run: break-if at-right?:boolean, 
9999 mem: location 2178 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2164 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2164 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2157 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2119 is 3
9999 mem: storing 4 in location 2119
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2119 is 4
9999 mem: location 2118 is 4
9999 mem: storing 0 in location 2120
 104 run: break-if done?:boolean, 
9999 mem: location 2120 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2116 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2186
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2188
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2189
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2190
9999 mem: storing 0 in location 2191
 105 run: break-if color-found?:boolean, 
9999 mem: location 2191 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2190
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2192
9999 mem: storing 0 in location 2193
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2193 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2192
 105 run: break-unless x:address:screen, 
9999 mem: location 2188 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2188 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2188 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2194
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2188 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2188 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2195
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2188 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2188 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2196
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2188 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2188 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2197
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2189 is 32
9999 mem: storing 0 in location 2198
 105 run: break-unless newline?:boolean, 
9999 mem: location 2198 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2194 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2196 is 5
9999 mem: storing 0 in location 2201
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2201 is 0
9999 mem: location 2195 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 2201
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2188 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2188 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2202
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2189 is 32
9999 mem: storing 0 in location 2203
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2203 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2202 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2201 is 4
9999 mem: location 2202 is 1036
9999 mem: location 2201 is 4
9999 mem: storing 1045 in location 2205
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2205 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2205 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 2206
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2205 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2205 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 2207
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2189 is 32
9999 mem: location 2206 is 1045
9999 mem: storing 32 in location 1045
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2190 is 7
9999 mem: location 2207 is 1046
9999 mem: storing 7 in location 1046
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2196 is 5
9999 mem: storing 4 in location 2208
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2195 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2208 is 4
9999 mem: storing 1 in location 2209
 105 run: break-if at-right?:boolean, 
9999 mem: location 2209 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2188 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2119 is 4
9999 mem: storing 5 in location 2119
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2119 is 5
9999 mem: location 2118 is 4
9999 mem: storing 1 in location 2120
 104 run: break-if done?:boolean, 
9999 mem: location 2120 is 1
9999 run: jumping to instruction 11
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1649 is 0
9999 mem: storing 1 in location 1649
 103 run: column:number <- copy left:number
9999 mem: location 1644 is 0
9999 mem: storing 0 in location 1650
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1642 is 1031
9999 mem: location 1649 is 1
9999 mem: location 1650 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2217
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2219
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 2220
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2221
 104 run: break-unless x:address:screen, 
9999 mem: location 2219 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2219 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2219 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2222
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2220 is 1
9999 mem: location 2222 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2219 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2219 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2223
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2221 is 0
9999 mem: location 2223 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2219 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1647 is 1410
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2248
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1410 in location 2250
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2250 is 1410
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2250 is 1410
9999 mem: location 1410 is 10
9999 mem: location 1411 is 1475
9999 mem: location 1412 is 1345
9999 mem: location 2250 is 1410
9999 run: address to copy is 1411
9999 run: its type is address
9999 mem: location 1411 is 1475
9999 mem: storing 1475 in location 2251
 104 run: reply result:address:duplex-list
9999 mem: location 2251 is 1475
9999 run: result 0 is 1475
9999 mem: storing 1475 in location 1647
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1648 is 1345
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2279
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1345 in location 2281
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2281 is 1345
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2281 is 1345
9999 mem: location 1345 is 99
9999 mem: location 1346 is 1410
9999 mem: location 1347 is 1280
9999 mem: location 2281 is 1345
9999 run: address to copy is 1346
9999 run: its type is address
9999 mem: location 1346 is 1410
9999 mem: storing 1410 in location 2282
 104 run: reply result:address:duplex-list
9999 mem: location 2282 is 1410
9999 run: result 0 is 1410
9999 mem: storing 1410 in location 1648
 103 run: loop +next-character:label
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1647 is 1475
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1649 is 1
9999 mem: location 1645 is 3
9999 mem: storing 0 in location 1654
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1654 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1649 is 1
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1655
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1655 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1647 is 1475
9999 mem: location 1475 is 100
9999 mem: location 1476 is 1540
9999 mem: location 1477 is 1410
9999 mem: location 1647 is 1475
9999 run: address to copy is 1475
9999 run: its type is number
9999 mem: location 1475 is 100
9999 mem: storing 100 in location 1657
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1657 is 100
9999 mem: storing 0 in location 1658
 103 run: break-unless newline?:boolean, 
9999 mem: location 1658 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1650 is 0
9999 mem: location 1646 is 4
9999 mem: storing 0 in location 1660
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 57
 103 run: print-character screen:address, c:character
9999 mem: location 1642 is 1031
9999 mem: location 1657 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2310
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2312
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 2313
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2314
9999 mem: storing 0 in location 2315
 104 run: break-if color-found?:boolean, 
9999 mem: location 2315 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2314
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2316
9999 mem: storing 0 in location 2317
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2317 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2316
 104 run: break-unless x:address:screen, 
9999 mem: location 2312 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2312 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2312 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2318
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2312 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2312 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2319
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2312 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2312 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2320
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2312 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2312 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2321
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2313 is 100
9999 mem: storing 0 in location 2322
 104 run: break-unless newline?:boolean, 
9999 mem: location 2322 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2318 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2320 is 5
9999 mem: storing 5 in location 2325
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2325 is 5
9999 mem: location 2319 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 2325
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2312 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2312 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2326
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2313 is 100
9999 mem: storing 0 in location 2327
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2327 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2326 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2325 is 5
9999 mem: location 2326 is 1036
9999 mem: location 2325 is 5
9999 mem: storing 1047 in location 2329
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2329 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 2329 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 2330
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2329 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 2329 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 2331
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2313 is 100
9999 mem: location 2330 is 1047
9999 mem: storing 100 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2314 is 7
9999 mem: location 2331 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2320 is 5
9999 mem: storing 4 in location 2332
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2319 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2332 is 4
9999 mem: storing 0 in location 2333
 104 run: break-if at-right?:boolean, 
9999 mem: location 2333 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2319 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2319 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2312 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1647 is 1475
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2341
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1475 in location 2343
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2343 is 1475
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2343 is 1475
9999 mem: location 1475 is 100
9999 mem: location 1476 is 1540
9999 mem: location 1477 is 1410
9999 mem: location 2343 is 1475
9999 run: address to copy is 1476
9999 run: its type is address
9999 mem: location 1476 is 1540
9999 mem: storing 1540 in location 2344
 104 run: reply result:address:duplex-list
9999 mem: location 2344 is 1540
9999 run: result 0 is 1540
9999 mem: storing 1540 in location 1647
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1648 is 1410
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2372
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1410 in location 2374
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2374 is 1410
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2374 is 1410
9999 mem: location 1410 is 10
9999 mem: location 1411 is 1475
9999 mem: location 1412 is 1345
9999 mem: location 2374 is 1410
9999 run: address to copy is 1411
9999 run: its type is address
9999 mem: location 1411 is 1475
9999 mem: storing 1475 in location 2375
 104 run: reply result:address:duplex-list
9999 mem: location 2375 is 1475
9999 run: result 0 is 1475
9999 mem: storing 1475 in location 1648
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1650 is 0
9999 mem: storing 1 in location 1650
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1647 is 1540
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1649 is 1
9999 mem: location 1645 is 3
9999 mem: storing 0 in location 1654
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1654 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1649 is 1
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1655
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1655 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1647 is 1540
9999 mem: location 1540 is 101
9999 mem: location 1541 is 1605
9999 mem: location 1542 is 1475
9999 mem: location 1647 is 1540
9999 run: address to copy is 1540
9999 run: its type is number
9999 mem: location 1540 is 101
9999 mem: storing 101 in location 1657
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1657 is 101
9999 mem: storing 0 in location 1658
 103 run: break-unless newline?:boolean, 
9999 mem: location 1658 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1650 is 1
9999 mem: location 1646 is 4
9999 mem: storing 0 in location 1660
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 57
 103 run: print-character screen:address, c:character
9999 mem: location 1642 is 1031
9999 mem: location 1657 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2403
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2405
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2406
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2407
9999 mem: storing 0 in location 2408
 104 run: break-if color-found?:boolean, 
9999 mem: location 2408 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2407
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2409
9999 mem: storing 0 in location 2410
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2410 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2409
 104 run: break-unless x:address:screen, 
9999 mem: location 2405 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2405 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2405 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2411
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2405 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2405 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2412
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2405 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2405 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2413
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2405 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2405 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2414
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2406 is 101
9999 mem: storing 0 in location 2415
 104 run: break-unless newline?:boolean, 
9999 mem: location 2415 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2411 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2413 is 5
9999 mem: storing 5 in location 2418
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2418 is 5
9999 mem: location 2412 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 2418
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2405 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2405 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2419
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2406 is 101
9999 mem: storing 0 in location 2420
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2420 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2419 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2418 is 6
9999 mem: location 2419 is 1036
9999 mem: location 2418 is 6
9999 mem: storing 1049 in location 2422
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2422 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2422 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 2423
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2422 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2422 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 2424
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2406 is 101
9999 mem: location 2423 is 1049
9999 mem: storing 101 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2407 is 7
9999 mem: location 2424 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2413 is 5
9999 mem: storing 4 in location 2425
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2412 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2425 is 4
9999 mem: storing 0 in location 2426
 104 run: break-if at-right?:boolean, 
9999 mem: location 2426 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2412 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2412 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2405 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1647 is 1540
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2434
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1540 in location 2436
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2436 is 1540
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2436 is 1540
9999 mem: location 1540 is 101
9999 mem: location 1541 is 1605
9999 mem: location 1542 is 1475
9999 mem: location 2436 is 1540
9999 run: address to copy is 1541
9999 run: its type is address
9999 mem: location 1541 is 1605
9999 mem: storing 1605 in location 2437
 104 run: reply result:address:duplex-list
9999 mem: location 2437 is 1605
9999 run: result 0 is 1605
9999 mem: storing 1605 in location 1647
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1648 is 1475
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2465
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1475 in location 2467
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2467 is 1475
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2467 is 1475
9999 mem: location 1475 is 100
9999 mem: location 1476 is 1540
9999 mem: location 1477 is 1410
9999 mem: location 2467 is 1475
9999 run: address to copy is 1476
9999 run: its type is address
9999 mem: location 1476 is 1540
9999 mem: storing 1540 in location 2468
 104 run: reply result:address:duplex-list
9999 mem: location 2468 is 1540
9999 run: result 0 is 1540
9999 mem: storing 1540 in location 1648
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1650 is 1
9999 mem: storing 2 in location 1650
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1647 is 1605
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1649 is 1
9999 mem: location 1645 is 3
9999 mem: storing 0 in location 1654
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1654 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1649 is 1
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1655
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1655 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1647 is 1605
9999 mem: location 1605 is 102
9999 mem: location 1606 is 0
9999 mem: location 1607 is 1540
9999 mem: location 1647 is 1605
9999 run: address to copy is 1605
9999 run: its type is number
9999 mem: location 1605 is 102
9999 mem: storing 102 in location 1657
schedule: render/new-editor/run1001/editor-initially-prints-multiple-lines
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1657 is 102
9999 mem: storing 0 in location 1658
 103 run: break-unless newline?:boolean, 
9999 mem: location 1658 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1650 is 2
9999 mem: location 1646 is 4
9999 mem: storing 0 in location 1660
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 57
 103 run: print-character screen:address, c:character
9999 mem: location 1642 is 1031
9999 mem: location 1657 is 102
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2496
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2498
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 2499
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2500
9999 mem: storing 0 in location 2501
 104 run: break-if color-found?:boolean, 
9999 mem: location 2501 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2500
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2502
9999 mem: storing 0 in location 2503
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2503 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2502
 104 run: break-unless x:address:screen, 
9999 mem: location 2498 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2498 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2498 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2504
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2498 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2498 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2505
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2498 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2498 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2506
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2498 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2498 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2507
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2499 is 102
9999 mem: storing 0 in location 2508
 104 run: break-unless newline?:boolean, 
9999 mem: location 2508 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2504 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2506 is 5
9999 mem: storing 5 in location 2511
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2511 is 5
9999 mem: location 2505 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 2511
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2498 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2498 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2512
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2499 is 102
9999 mem: storing 0 in location 2513
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2513 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2512 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2511 is 7
9999 mem: location 2512 is 1036
9999 mem: location 2511 is 7
9999 mem: storing 1051 in location 2515
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2515 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2515 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 2516
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2515 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2515 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 2517
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2499 is 102
9999 mem: location 2516 is 1051
9999 mem: storing 102 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2500 is 7
9999 mem: location 2517 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2506 is 5
9999 mem: storing 4 in location 2518
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2505 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2518 is 4
9999 mem: storing 0 in location 2519
 104 run: break-if at-right?:boolean, 
9999 mem: location 2519 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2505 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2505 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2498 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1647 is 1605
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2527
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1605 in location 2529
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2529 is 1605
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2529 is 1605
9999 mem: location 1605 is 102
9999 mem: location 1606 is 0
9999 mem: location 1607 is 1540
9999 mem: location 2529 is 1605
9999 run: address to copy is 1606
9999 run: its type is address
9999 mem: location 1606 is 0
9999 mem: storing 0 in location 2530
 104 run: reply result:address:duplex-list
9999 mem: location 2530 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1647
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1648 is 1540
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2558
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1540 in location 2560
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2560 is 1540
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2560 is 1540
9999 mem: location 1540 is 101
9999 mem: location 1541 is 1605
9999 mem: location 1542 is 1475
9999 mem: location 2560 is 1540
9999 run: address to copy is 1541
9999 run: its type is address
9999 mem: location 1541 is 1605
9999 mem: storing 1605 in location 2561
 104 run: reply result:address:duplex-list
9999 mem: location 2561 is 1605
9999 run: result 0 is 1605
9999 mem: storing 1605 in location 1648
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1650 is 2
9999 mem: storing 3 in location 1650
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1647 is 0
9999 run: jumping to instruction 63
 103 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 1641 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1641 is 1137
9999 run: address to copy is 1144
9999 mem: storing 1144 in location 1661
 103 run: bottom:address:number/deref <- copy row:number
9999 mem: location 1649 is 1
9999 mem: location 1661 is 1144
9999 mem: storing 1 in location 1144
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1649 is 1
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1655
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1650 is 3
9999 mem: location 1652 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1662
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1655 is 0
9999 mem: location 1662 is 0
9999 mem: storing 0 in location 1663
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1649 is 1
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 0
9999 mem: storing 0 in location 1664
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1663 is 0
9999 mem: location 1664 is 0
9999 mem: storing 0 in location 1665
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1665 is 0
9999 run: jumping to instruction 84
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1642 is 1031
9999 mem: location 1650 is 3
9999 mem: location 1646 is 4
 104 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 2589
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2591
 104 run: left:number <- next-ingredient 
9999 mem: storing 3 in location 2592
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2593
 104 run: column:number <- copy left:number
9999 mem: location 2592 is 3
9999 mem: storing 3 in location 2594
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2594 is 3
9999 mem: location 2593 is 4
9999 mem: storing 0 in location 2595
 104 run: break-if done?:boolean, 
9999 mem: location 2595 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2591 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2630
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2632
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2633
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2634
9999 mem: storing 0 in location 2635
 105 run: break-if color-found?:boolean, 
9999 mem: location 2635 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2634
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2636
9999 mem: storing 0 in location 2637
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2637 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2636
 105 run: break-unless x:address:screen, 
9999 mem: location 2632 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2632 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2632 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2638
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2632 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2632 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2639
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2632 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2632 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2640
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2632 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2632 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2641
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2633 is 32
9999 mem: storing 0 in location 2642
 105 run: break-unless newline?:boolean, 
9999 mem: location 2642 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2638 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2640 is 5
9999 mem: storing 5 in location 2645
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2645 is 5
9999 mem: location 2639 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 2645
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2632 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2632 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2646
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2633 is 32
9999 mem: storing 0 in location 2647
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2647 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2646 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2645 is 8
9999 mem: location 2646 is 1036
9999 mem: location 2645 is 8
9999 mem: storing 1053 in location 2649
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2649 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2649 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 2650
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2649 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2649 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 2651
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2633 is 32
9999 mem: location 2650 is 1053
9999 mem: storing 32 in location 1053
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2634 is 7
9999 mem: location 2651 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2640 is 5
9999 mem: storing 4 in location 2652
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2639 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2652 is 4
9999 mem: storing 0 in location 2653
 105 run: break-if at-right?:boolean, 
9999 mem: location 2653 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2639 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2639 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2632 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2594 is 3
9999 mem: storing 4 in location 2594
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2594 is 4
9999 mem: location 2593 is 4
9999 mem: storing 0 in location 2595
 104 run: break-if done?:boolean, 
9999 mem: location 2595 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2591 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2661
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2663
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2664
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2665
9999 mem: storing 0 in location 2666
 105 run: break-if color-found?:boolean, 
9999 mem: location 2666 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2665
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2667
9999 mem: storing 0 in location 2668
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2668 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2667
 105 run: break-unless x:address:screen, 
9999 mem: location 2663 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2663 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2663 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2669
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2663 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2663 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2670
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2663 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2663 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2671
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2663 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2663 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2672
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2664 is 32
9999 mem: storing 0 in location 2673
 105 run: break-unless newline?:boolean, 
9999 mem: location 2673 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2669 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2671 is 5
9999 mem: storing 5 in location 2676
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2676 is 5
9999 mem: location 2670 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 2676
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2663 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2663 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2677
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2664 is 32
9999 mem: storing 0 in location 2678
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2678 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2677 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2676 is 9
9999 mem: location 2677 is 1036
9999 mem: location 2676 is 9
9999 mem: storing 1055 in location 2680
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2680 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2680 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 2681
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2680 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2680 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 2682
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2664 is 32
9999 mem: location 2681 is 1055
9999 mem: storing 32 in location 1055
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2665 is 7
9999 mem: location 2682 is 1056
9999 mem: storing 7 in location 1056
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2671 is 5
9999 mem: storing 4 in location 2683
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2670 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2683 is 4
9999 mem: storing 1 in location 2684
 105 run: break-if at-right?:boolean, 
9999 mem: location 2684 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2663 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2594 is 4
9999 mem: storing 5 in location 2594
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2594 is 5
9999 mem: location 2593 is 4
9999 mem: storing 1 in location 2595
 104 run: break-if done?:boolean, 
9999 mem: location 2595 is 1
9999 run: jumping to instruction 11
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1649 is 1
9999 mem: storing 2 in location 1649
 103 run: warnings:address:array:character <- get editor:address:editor-data/deref, warnings:offset
9999 mem: location 1641 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1641 is 1137
9999 run: address to copy is 1140
9999 run: its type is address
9999 mem: location 1140 is 0
9999 mem: storing 0 in location 1668
 103 run: break-unless warnings:address:array:character, 
9999 mem: location 1668 is 0
9999 run: jumping to instruction 92
 103 run: break-if warnings:address:array:character, 
9999 mem: location 1668 is 0
9999 run: jump-if fell through
 103 run: response:address:array:character <- get editor:address:editor-data/deref, response:offset
9999 mem: location 1641 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1641 is 1137
9999 run: address to copy is 1139
9999 run: its type is address
9999 mem: location 1139 is 0
9999 mem: storing 0 in location 1669
 103 run: break-unless response:address:array:character, 
9999 mem: location 1669 is 0
9999 run: jumping to instruction 98
 103 run: break-if screen:address, 
9999 mem: location 1642 is 1031
9999 run: jumping to instruction 111
 103 run: done?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1649 is 2
9999 mem: location 1645 is 3
9999 mem: storing 0 in location 1670
 103 run: break-if done?:boolean, 
9999 mem: location 1670 is 0
9999 run: jump-if fell through
 103 run: draw-horizontal screen:address, row:number, left:number, right:number, 32:literal/space
9999 mem: location 1642 is 1031
9999 mem: location 1649 is 2
9999 mem: location 1644 is 0
9999 mem: location 1646 is 4
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2692
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2694
 104 run: row:number <- next-ingredient 
9999 mem: storing 2 in location 2695
 104 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 2696
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2697
 104 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 32 in location 2698
9999 mem: storing 1 in location 2699
 104 run: break-if style-found?:boolean, 
9999 mem: location 2699 is 1
9999 run: jumping to instruction 9
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2700
9999 mem: storing 0 in location 2701
 104 run: break-if color-found?:boolean, 
9999 mem: location 2701 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 245:literal/grey
9999 mem: storing 245 in location 2700
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2702
9999 mem: storing 0 in location 2703
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2703 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2702
 104 run: move-cursor screen:address, row:number, x:number
9999 mem: location 2694 is 1031
9999 mem: location 2695 is 2
9999 mem: location 2696 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2723
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2725
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 2726
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2727
 105 run: break-unless x:address:screen, 
9999 mem: location 2725 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2725 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2725 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2728
 105 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2726 is 2
9999 mem: location 2728 is 1033
9999 mem: storing 2 in location 1033
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2725 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2725 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2729
 105 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2727 is 0
9999 mem: location 2729 is 1034
9999 mem: storing 0 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2725 is 1031
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2696 is 0
9999 mem: location 2697 is 4
9999 mem: storing 1 in location 2704
 104 run: break-unless continue?:boolean, 
9999 mem: location 2704 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 2694 is 1031
9999 mem: location 2698 is 32
9999 mem: location 2700 is 245
9999 mem: location 2702 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2754
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2756
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2757
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2758
9999 mem: storing 1 in location 2759
 105 run: break-if color-found?:boolean, 
9999 mem: location 2759 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2760
9999 mem: storing 1 in location 2761
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2761 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2756 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2756 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2756 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2762
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2756 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2756 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2763
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2756 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2756 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2764
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2756 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2756 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2765
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2757 is 32
9999 mem: storing 0 in location 2766
 105 run: break-unless newline?:boolean, 
9999 mem: location 2766 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2762 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2764 is 5
9999 mem: storing 10 in location 2769
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2769 is 10
9999 mem: location 2763 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 10 in location 2769
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2756 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2756 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2770
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2757 is 32
9999 mem: storing 0 in location 2771
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2771 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2770 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2769 is 10
9999 mem: location 2770 is 1036
9999 mem: location 2769 is 10
9999 mem: storing 1057 in location 2773
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2773 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2773 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 2774
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2773 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2773 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 2775
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2757 is 32
9999 mem: location 2774 is 1057
9999 mem: storing 32 in location 1057
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2758 is 245
9999 mem: location 2775 is 1058
9999 mem: storing 245 in location 1058
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2764 is 5
9999 mem: storing 4 in location 2776
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2763 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2776 is 4
9999 mem: storing 0 in location 2777
 105 run: break-if at-right?:boolean, 
9999 mem: location 2777 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2763 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2763 is 1034
9999 mem: storing 1 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2756 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 2696 is 0
9999 mem: storing 1 in location 2696
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2696 is 1
9999 mem: location 2697 is 4
9999 mem: storing 1 in location 2704
 104 run: break-unless continue?:boolean, 
9999 mem: location 2704 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 2694 is 1031
9999 mem: location 2698 is 32
9999 mem: location 2700 is 245
9999 mem: location 2702 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2785
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2787
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2788
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2789
9999 mem: storing 1 in location 2790
 105 run: break-if color-found?:boolean, 
9999 mem: location 2790 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2791
9999 mem: storing 1 in location 2792
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2792 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2787 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2787 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2787 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2793
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2787 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2787 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2794
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2787 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2787 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2795
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2787 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2787 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2796
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2788 is 32
9999 mem: storing 0 in location 2797
 105 run: break-unless newline?:boolean, 
9999 mem: location 2797 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2793 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2795 is 5
9999 mem: storing 10 in location 2800
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2800 is 10
9999 mem: location 2794 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 11 in location 2800
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2787 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2787 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2801
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2788 is 32
9999 mem: storing 0 in location 2802
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2802 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2801 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2800 is 11
9999 mem: location 2801 is 1036
9999 mem: location 2800 is 11
9999 mem: storing 1059 in location 2804
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2804 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2804 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 2805
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2804 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2804 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 2806
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2788 is 32
9999 mem: location 2805 is 1059
9999 mem: storing 32 in location 1059
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2789 is 245
9999 mem: location 2806 is 1060
9999 mem: storing 245 in location 1060
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2795 is 5
9999 mem: storing 4 in location 2807
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2794 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2807 is 4
9999 mem: storing 0 in location 2808
 105 run: break-if at-right?:boolean, 
9999 mem: location 2808 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2794 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2794 is 1034
9999 mem: storing 2 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2787 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 2696 is 1
9999 mem: storing 2 in location 2696
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2696 is 2
9999 mem: location 2697 is 4
9999 mem: storing 1 in location 2704
 104 run: break-unless continue?:boolean, 
9999 mem: location 2704 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 2694 is 1031
9999 mem: location 2698 is 32
9999 mem: location 2700 is 245
9999 mem: location 2702 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2816
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2818
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2819
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2820
9999 mem: storing 1 in location 2821
 105 run: break-if color-found?:boolean, 
9999 mem: location 2821 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2822
9999 mem: storing 1 in location 2823
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2823 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2818 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2818 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2818 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2824
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2818 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2818 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2825
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2818 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2818 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2826
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2818 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2818 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2827
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2819 is 32
9999 mem: storing 0 in location 2828
 105 run: break-unless newline?:boolean, 
9999 mem: location 2828 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2824 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2826 is 5
9999 mem: storing 10 in location 2831
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2831 is 10
9999 mem: location 2825 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 12 in location 2831
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2818 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2818 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2832
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2819 is 32
9999 mem: storing 0 in location 2833
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2833 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2832 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2831 is 12
9999 mem: location 2832 is 1036
9999 mem: location 2831 is 12
9999 mem: storing 1061 in location 2835
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2835 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2835 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 2836
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2835 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2835 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 2837
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2819 is 32
9999 mem: location 2836 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2820 is 245
9999 mem: location 2837 is 1062
9999 mem: storing 245 in location 1062
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2826 is 5
9999 mem: storing 4 in location 2838
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2825 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2838 is 4
9999 mem: storing 0 in location 2839
 105 run: break-if at-right?:boolean, 
9999 mem: location 2839 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2825 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2825 is 1034
9999 mem: storing 3 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2818 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 2696 is 2
9999 mem: storing 3 in location 2696
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2696 is 3
9999 mem: location 2697 is 4
9999 mem: storing 1 in location 2704
 104 run: break-unless continue?:boolean, 
9999 mem: location 2704 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 2694 is 1031
9999 mem: location 2698 is 32
9999 mem: location 2700 is 245
9999 mem: location 2702 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2847
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2849
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2850
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2851
9999 mem: storing 1 in location 2852
 105 run: break-if color-found?:boolean, 
9999 mem: location 2852 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2853
9999 mem: storing 1 in location 2854
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2854 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2849 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2849 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2849 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2855
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2849 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2849 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2856
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2849 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2849 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2857
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2849 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2849 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2858
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2850 is 32
9999 mem: storing 0 in location 2859
 105 run: break-unless newline?:boolean, 
9999 mem: location 2859 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2855 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2857 is 5
9999 mem: storing 10 in location 2862
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2862 is 10
9999 mem: location 2856 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 13 in location 2862
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2849 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2849 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2863
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2850 is 32
9999 mem: storing 0 in location 2864
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2864 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2863 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 32
9999 mem: location 1046 is 7
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2862 is 13
9999 mem: location 2863 is 1036
9999 mem: location 2862 is 13
9999 mem: storing 1063 in location 2866
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2866 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2866 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 2867
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2866 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2866 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 2868
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2850 is 32
9999 mem: location 2867 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2851 is 245
9999 mem: location 2868 is 1064
9999 mem: storing 245 in location 1064
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2857 is 5
9999 mem: storing 4 in location 2869
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2856 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2869 is 4
9999 mem: storing 0 in location 2870
 105 run: break-if at-right?:boolean, 
9999 mem: location 2870 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2856 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2856 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2849 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 2696 is 3
9999 mem: storing 4 in location 2696
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2696 is 4
9999 mem: location 2697 is 4
9999 mem: storing 0 in location 2704
 104 run: break-unless continue?:boolean, 
9999 mem: location 2704 is 0
9999 run: jumping to instruction 27
 103 run: in-focus?:boolean <- get editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 1641 is 1137
9999 mem: location 1137 is 1181
9999 mem: location 1138 is 1181
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 1031
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 1
9999 mem: location 1145 is 4
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 1
9999 mem: location 1641 is 1137
9999 run: address to copy is 1149
9999 run: its type is boolean
9999 mem: location 1149 is 1
9999 mem: storing 1 in location 1671
 103 run: break-unless in-focus?:boolean, 
9999 mem: location 1671 is 1
9999 run: jump-unless fell through
 103 run: cursor-inside-right-margin?:boolean <- lesser-or-equal cursor-column:address:number/deref, right:number
9999 mem: location 1652 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1646 is 4
9999 mem: storing 1 in location 1672
 103 run: assert cursor-inside-right-margin?:boolean, [cursor outside right margin]
9999 mem: location 1672 is 1
 103 run: cursor-inside-left-margin?:boolean <- greater-or-equal cursor-column:address:number/deref, left:number
9999 mem: location 1652 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1644 is 0
9999 mem: storing 1 in location 1673
 103 run: assert cursor-inside-left-margin?:boolean, [cursor outside left margin]
9999 mem: location 1673 is 1
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 1642 is 1031
9999 mem: location 1651 is 1146
9999 mem: location 1146 is 0
9999 mem: location 1652 is 1147
9999 mem: location 1147 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2878
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2880
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2881
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2882
 104 run: break-unless x:address:screen, 
9999 mem: location 2880 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2880 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2880 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2883
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2881 is 0
9999 mem: location 2883 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2880 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2880 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2884
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2882 is 0
9999 mem: location 2884 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2880 is 1031
 103 run: show-screen screen:address
9999 mem: location 1642 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2909
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2911
 104 run: break-unless x:address:screen, 
9999 mem: location 2911 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2911 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 1641 is 1137
9999 run: result 0 is 1137
9999 mem: storing 1137 in location 1113
 102 run: reply result:address:editor-data
9999 mem: location 1113 is 1137
 100 run: screen-should-contain [
    .abc  .
    .def  .
    .     .
  ]
