parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abc\ndef]\n    new-editor s:address:array:character, screen:address, 0:literal/left, 5:literal/right\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .abc  .\n    .def  .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initially-prints-multiple-lines
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initially-prints-multiple-lines
 101 run: screen:address <- new-fake-screen 5:literal/width, 5:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 5 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 5
9999 mem: storing 25 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 25
9999 mem: array size is 25
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1087
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1089
 103 run: break-unless x:address:screen, 
9999 mem: location 1089 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1090
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1090 is 1036
9999 mem: storing 25 in location 1091
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1092
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 0
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 0
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 0
9999 mem: storing 1037 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1094 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1094 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 0
9999 mem: storing 1 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 1
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 1
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 1
9999 mem: storing 1039 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1094 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1094 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 1
9999 mem: storing 2 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 2
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 2
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 2
9999 mem: storing 1041 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1094 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1094 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 2
9999 mem: storing 3 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 3
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 3
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 3
9999 mem: storing 1043 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1094 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1094 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 3
9999 mem: storing 4 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 4
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 4
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 4
9999 mem: storing 1045 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1094 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1094 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 4
9999 mem: storing 5 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 5
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 5
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 5
9999 mem: storing 1047 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1094 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1094 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 5
9999 mem: storing 6 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 6
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 6
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 6
9999 mem: storing 1049 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1094 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1094 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 6
9999 mem: storing 7 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 7
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 7
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 7
9999 mem: storing 1051 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1094 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1094 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 7
9999 mem: storing 8 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 8
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 8
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 8
9999 mem: storing 1053 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1094 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1094 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 8
9999 mem: storing 9 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 9
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 9
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 9
9999 mem: storing 1055 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1094 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1094 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 9
9999 mem: storing 10 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 10
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 10
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 10
9999 mem: storing 1057 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1094 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1094 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 10
9999 mem: storing 11 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 11
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 11
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 11
9999 mem: storing 1059 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1094 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1094 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 11
9999 mem: storing 12 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 12
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 12
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 12
9999 mem: storing 1061 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1094 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1094 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 12
9999 mem: storing 13 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 13
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 13
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 13
9999 mem: storing 1063 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1094 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1094 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 13
9999 mem: storing 14 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 14
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 14
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 14
9999 mem: storing 1065 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1094 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1094 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 14
9999 mem: storing 15 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 15
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 15
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 15
9999 mem: storing 1067 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1094 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1094 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1068
9999 mem: storing 7 in location 1068
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 15
9999 mem: storing 16 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 16
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 16
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 16
9999 mem: storing 1069 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1094 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1094 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1070
9999 mem: storing 7 in location 1070
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 16
9999 mem: storing 17 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 17
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 17
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 17
9999 mem: storing 1071 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1094 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1094 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1072
9999 mem: storing 7 in location 1072
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 17
9999 mem: storing 18 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 18
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 18
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 18
9999 mem: storing 1073 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1094 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1094 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1074
9999 mem: storing 7 in location 1074
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 18
9999 mem: storing 19 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 19
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 19
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 19
9999 mem: storing 1075 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1094 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1094 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1076
9999 mem: storing 7 in location 1076
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 19
9999 mem: storing 20 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 20
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 20
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 20
9999 mem: storing 1077 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1094 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1094 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1078
9999 mem: storing 7 in location 1078
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 20
9999 mem: storing 21 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 21
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 21
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 21
9999 mem: storing 1079 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1094 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1094 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1080
9999 mem: storing 7 in location 1080
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 21
9999 mem: storing 22 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 22
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 22
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 22
9999 mem: storing 1081 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1094 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1094 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1082
9999 mem: storing 7 in location 1082
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 22
9999 mem: storing 23 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 23
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 23
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 23
9999 mem: storing 1083 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1094 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1094 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1084
9999 mem: storing 7 in location 1084
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 23
9999 mem: storing 24 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 24
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 24
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 24
9999 mem: storing 1085 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1094 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1094 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1086
9999 mem: storing 7 in location 1086
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 24
9999 mem: storing 25 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 25
9999 mem: location 1091 is 25
9999 mem: storing 1 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1097
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1097 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1097
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1097 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1089 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    s:address:array:character <- new [abc
def]
    new-editor s:address:array:character, screen:address, 0:literal/left, 5:literal/right
  ]
parse: instruction: new
parse:   ingredient: {name: "abc\ndef", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
name: assign s 1
after-brace: recipe run1001
after-brace: new ...
after-brace: new-editor ...
 101 run: s:address:array:character <- new [abc
def]
9999 mem: storing 1118 in location 1
 101 run: new-editor s:address:array:character, screen:address, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1118
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1126
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1118 in location 1128
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1129
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1130
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1131
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1131 is 5
9999 mem: storing 4 in location 1131
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1157
9999 mem: storing 1157 in location 1132
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1161
9999 mem: storing 1161 in location 1133
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1130 is 0
9999 mem: location 1133 is 1161
9999 mem: storing 0 in location 1161
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1133
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1131 is 4
9999 mem: location 1133 is 1162
9999 mem: storing 4 in location 1162
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 0
9999 mem: location 1164 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1163
9999 mem: storing 1163 in location 1133
 102 run: x:address:number/deref <- copy 1:literal/top
9999 mem: location 1133 is 1163
9999 mem: storing 1 in location 1163
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1164
9999 mem: storing 1164 in location 1133
 102 run: response:address:address:array:character <- get-address result:address:editor-data/deref, response:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 1134
 102 run: response:address:address:array:character/deref <- copy 0:literal
9999 mem: location 1134 is 1159
9999 mem: storing 0 in location 1159
 102 run: warnings:address:address:array:character <- get-address result:address:editor-data/deref, warnings:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 1135
 102 run: warnings:address:address:array:character/deref <- copy 0:literal
9999 mem: location 1135 is 1160
9999 mem: storing 0 in location 1160
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1130 is 0
9999 mem: location 1133 is 1164
9999 mem: storing 0 in location 1164
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 1136
 102 run: init:address:address:duplex-list/deref <- push-duplex 167:literal/§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1165
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1167
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1168
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1196
9999 mem: storing 1196 in location 1169
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1169 is 1196
9999 mem: location 1196 is 0
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1169 is 1196
9999 run: address to copy is 1196
9999 mem: storing 1196 in location 1170
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1167 is 167
9999 mem: location 1170 is 1196
9999 mem: storing 167 in location 1196
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1169 is 1196
9999 mem: location 1196 is 167
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1169 is 1196
9999 run: address to copy is 1197
9999 mem: storing 1197 in location 1171
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1168 is 0
9999 mem: location 1171 is 1197
9999 mem: storing 0 in location 1197
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1168 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1169 is 1196
9999 run: result 0 is 1196
9999 mem: location 1136 is 1157
9999 mem: storing 1196 in location 1157
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 1196
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 1137
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1136 is 1157
9999 mem: location 1157 is 1196
9999 mem: location 1137 is 1158
9999 mem: storing 1196 in location 1158
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1128 is 1118
9999 run: jumping to instruction 25
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 10
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1128 is 1118
9999 mem: storing 7 in location 1138
 102 run: jump-if len:number, 1:offset
9999 mem: location 1138 is 7
9999 run: jumping to instruction 28
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1139
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1136 is 1157
9999 mem: location 1157 is 1196
9999 mem: storing 1196 in location 1140
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1139 is 0
9999 mem: location 1138 is 7
9999 mem: storing 0 in location 1141
 102 run: break-if done?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 10
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1139 is 0
9999 mem: location 1128 is 1118
9999 mem: location 1139 is 0
9999 run: address to copy is 1119
9999 run: its type is character
9999 mem: location 1119 is 97
9999 mem: storing 97 in location 1142
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1142 is 97
9999 mem: location 1140 is 1196
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1199
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1201
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1196 in location 1202
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1230
9999 mem: storing 1230 in location 1203
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1203 is 1230
9999 mem: location 1230 is 0
9999 mem: location 1231 is 0
9999 mem: location 1232 is 0
9999 mem: location 1203 is 1230
9999 run: address to copy is 1230
9999 mem: storing 1230 in location 1204
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1201 is 97
9999 mem: location 1204 is 1230
9999 mem: storing 97 in location 1230
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1202 is 1196
9999 mem: location 1196 is 167
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1202 is 1196
9999 run: address to copy is 1197
9999 run: its type is address
9999 mem: location 1197 is 0
9999 mem: storing 0 in location 1205
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1202 is 1196
9999 mem: location 1196 is 167
9999 mem: location 1197 is 0
9999 mem: location 1198 is 0
9999 mem: location 1202 is 1196
9999 run: address to copy is 1197
9999 mem: storing 1197 in location 1206
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1203 is 1230
9999 mem: location 1206 is 1197
9999 mem: storing 1230 in location 1197
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1203 is 1230
9999 mem: location 1230 is 97
9999 mem: location 1231 is 0
9999 mem: location 1232 is 0
9999 mem: location 1203 is 1230
9999 run: address to copy is 1232
9999 mem: storing 1232 in location 1206
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1202 is 1196
9999 mem: location 1206 is 1232
9999 mem: storing 1196 in location 1232
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1203 is 1230
9999 mem: location 1230 is 97
9999 mem: location 1231 is 0
9999 mem: location 1232 is 1196
9999 mem: location 1203 is 1230
9999 run: address to copy is 1231
9999 mem: storing 1231 in location 1206
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1205 is 0
9999 mem: location 1206 is 1231
9999 mem: storing 0 in location 1231
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1205 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1203 is 1230
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1140 is 1196
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1233
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1196 in location 1235
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1235 is 1196
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1235 is 1196
9999 mem: location 1196 is 167
9999 mem: location 1197 is 1230
9999 mem: location 1198 is 0
9999 mem: location 1235 is 1196
9999 run: address to copy is 1197
9999 run: its type is address
9999 mem: location 1197 is 1230
9999 mem: storing 1230 in location 1236
 103 run: reply result:address:duplex-list
9999 mem: location 1236 is 1230
9999 run: result 0 is 1230
9999 mem: storing 1230 in location 1140
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1139 is 0
9999 mem: storing 1 in location 1139
 102 run: loop 
9999 run: jumping to instruction 31
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1139 is 1
9999 mem: location 1138 is 7
9999 mem: storing 0 in location 1141
 102 run: break-if done?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 10
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1139 is 1
9999 mem: location 1128 is 1118
9999 mem: location 1139 is 1
9999 run: address to copy is 1120
9999 run: its type is character
9999 mem: location 1120 is 98
9999 mem: storing 98 in location 1142
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1142 is 98
9999 mem: location 1140 is 1230
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1264
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1266
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1230 in location 1267
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1295
9999 mem: storing 1295 in location 1268
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1268 is 1295
9999 mem: location 1295 is 0
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: location 1268 is 1295
9999 run: address to copy is 1295
9999 mem: storing 1295 in location 1269
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1266 is 98
9999 mem: location 1269 is 1295
9999 mem: storing 98 in location 1295
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1267 is 1230
9999 mem: location 1230 is 97
9999 mem: location 1231 is 0
9999 mem: location 1232 is 1196
9999 mem: location 1267 is 1230
9999 run: address to copy is 1231
9999 run: its type is address
9999 mem: location 1231 is 0
9999 mem: storing 0 in location 1270
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1267 is 1230
9999 mem: location 1230 is 97
9999 mem: location 1231 is 0
9999 mem: location 1232 is 1196
9999 mem: location 1267 is 1230
9999 run: address to copy is 1231
9999 mem: storing 1231 in location 1271
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1268 is 1295
9999 mem: location 1271 is 1231
9999 mem: storing 1295 in location 1231
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1268 is 1295
9999 mem: location 1295 is 98
9999 mem: location 1296 is 0
9999 mem: location 1297 is 0
9999 mem: location 1268 is 1295
9999 run: address to copy is 1297
9999 mem: storing 1297 in location 1271
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1267 is 1230
9999 mem: location 1271 is 1297
9999 mem: storing 1230 in location 1297
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1268 is 1295
9999 mem: location 1295 is 98
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1230
9999 mem: location 1268 is 1295
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1271
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1270 is 0
9999 mem: location 1271 is 1296
9999 mem: storing 0 in location 1296
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1270 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1268 is 1295
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1140 is 1230
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1298
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1230 in location 1300
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1300 is 1230
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1300 is 1230
9999 mem: location 1230 is 97
9999 mem: location 1231 is 1295
9999 mem: location 1232 is 1196
9999 mem: location 1300 is 1230
9999 run: address to copy is 1231
9999 run: its type is address
9999 mem: location 1231 is 1295
9999 mem: storing 1295 in location 1301
 103 run: reply result:address:duplex-list
9999 mem: location 1301 is 1295
9999 run: result 0 is 1295
9999 mem: storing 1295 in location 1140
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1139 is 1
9999 mem: storing 2 in location 1139
 102 run: loop 
9999 run: jumping to instruction 31
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1139 is 2
9999 mem: location 1138 is 7
9999 mem: storing 0 in location 1141
 102 run: break-if done?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 10
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1139 is 2
9999 mem: location 1128 is 1118
9999 mem: location 1139 is 2
9999 run: address to copy is 1121
9999 run: its type is character
9999 mem: location 1121 is 99
9999 mem: storing 99 in location 1142
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1142 is 99
9999 mem: location 1140 is 1295
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1329
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1331
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1295 in location 1332
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1360
9999 mem: storing 1360 in location 1333
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1333 is 1360
9999 mem: location 1360 is 0
9999 mem: location 1361 is 0
9999 mem: location 1362 is 0
9999 mem: location 1333 is 1360
9999 run: address to copy is 1360
9999 mem: storing 1360 in location 1334
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1331 is 99
9999 mem: location 1334 is 1360
9999 mem: storing 99 in location 1360
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1332 is 1295
9999 mem: location 1295 is 98
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1230
9999 mem: location 1332 is 1295
9999 run: address to copy is 1296
9999 run: its type is address
9999 mem: location 1296 is 0
9999 mem: storing 0 in location 1335
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1332 is 1295
9999 mem: location 1295 is 98
9999 mem: location 1296 is 0
9999 mem: location 1297 is 1230
9999 mem: location 1332 is 1295
9999 run: address to copy is 1296
9999 mem: storing 1296 in location 1336
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1333 is 1360
9999 mem: location 1336 is 1296
9999 mem: storing 1360 in location 1296
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1333 is 1360
9999 mem: location 1360 is 99
9999 mem: location 1361 is 0
9999 mem: location 1362 is 0
9999 mem: location 1333 is 1360
9999 run: address to copy is 1362
9999 mem: storing 1362 in location 1336
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1332 is 1295
9999 mem: location 1336 is 1362
9999 mem: storing 1295 in location 1362
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1333 is 1360
9999 mem: location 1360 is 99
9999 mem: location 1361 is 0
9999 mem: location 1362 is 1295
9999 mem: location 1333 is 1360
9999 run: address to copy is 1361
9999 mem: storing 1361 in location 1336
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1335 is 0
9999 mem: location 1336 is 1361
9999 mem: storing 0 in location 1361
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1335 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1333 is 1360
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1140 is 1295
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1363
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1295 in location 1365
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1365 is 1295
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1365 is 1295
9999 mem: location 1295 is 98
9999 mem: location 1296 is 1360
9999 mem: location 1297 is 1230
9999 mem: location 1365 is 1295
9999 run: address to copy is 1296
9999 run: its type is address
9999 mem: location 1296 is 1360
9999 mem: storing 1360 in location 1366
 103 run: reply result:address:duplex-list
9999 mem: location 1366 is 1360
9999 run: result 0 is 1360
9999 mem: storing 1360 in location 1140
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1139 is 2
9999 mem: storing 3 in location 1139
 102 run: loop 
9999 run: jumping to instruction 31
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1139 is 3
9999 mem: location 1138 is 7
9999 mem: storing 0 in location 1141
 102 run: break-if done?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 10
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1139 is 3
9999 mem: location 1128 is 1118
9999 mem: location 1139 is 3
9999 run: address to copy is 1122
9999 run: its type is character
9999 mem: location 1122 is 10
9999 mem: storing 10 in location 1142
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1142 is 10
9999 mem: location 1140 is 1360
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1394
 103 run: x:location <- next-ingredient 
9999 mem: storing 10 in location 1396
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1360 in location 1397
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1425
9999 mem: storing 1425 in location 1398
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1398 is 1425
9999 mem: location 1425 is 0
9999 mem: location 1426 is 0
9999 mem: location 1427 is 0
9999 mem: location 1398 is 1425
9999 run: address to copy is 1425
9999 mem: storing 1425 in location 1399
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1396 is 10
9999 mem: location 1399 is 1425
9999 mem: storing 10 in location 1425
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1397 is 1360
9999 mem: location 1360 is 99
9999 mem: location 1361 is 0
9999 mem: location 1362 is 1295
9999 mem: location 1397 is 1360
9999 run: address to copy is 1361
9999 run: its type is address
9999 mem: location 1361 is 0
9999 mem: storing 0 in location 1400
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1397 is 1360
9999 mem: location 1360 is 99
9999 mem: location 1361 is 0
9999 mem: location 1362 is 1295
9999 mem: location 1397 is 1360
9999 run: address to copy is 1361
9999 mem: storing 1361 in location 1401
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1398 is 1425
9999 mem: location 1401 is 1361
9999 mem: storing 1425 in location 1361
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1398 is 1425
9999 mem: location 1425 is 10
9999 mem: location 1426 is 0
9999 mem: location 1427 is 0
9999 mem: location 1398 is 1425
9999 run: address to copy is 1427
9999 mem: storing 1427 in location 1401
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1397 is 1360
9999 mem: location 1401 is 1427
9999 mem: storing 1360 in location 1427
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1398 is 1425
9999 mem: location 1425 is 10
9999 mem: location 1426 is 0
9999 mem: location 1427 is 1360
9999 mem: location 1398 is 1425
9999 run: address to copy is 1426
9999 mem: storing 1426 in location 1401
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1400 is 0
9999 mem: location 1401 is 1426
9999 mem: storing 0 in location 1426
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1400 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1398 is 1425
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1140 is 1360
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1428
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1360 in location 1430
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1430 is 1360
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1430 is 1360
9999 mem: location 1360 is 99
9999 mem: location 1361 is 1425
9999 mem: location 1362 is 1295
9999 mem: location 1430 is 1360
9999 run: address to copy is 1361
9999 run: its type is address
9999 mem: location 1361 is 1425
9999 mem: storing 1425 in location 1431
 103 run: reply result:address:duplex-list
9999 mem: location 1431 is 1425
9999 run: result 0 is 1425
9999 mem: storing 1425 in location 1140
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1139 is 3
9999 mem: storing 4 in location 1139
 102 run: loop 
9999 run: jumping to instruction 31
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1139 is 4
9999 mem: location 1138 is 7
9999 mem: storing 0 in location 1141
 102 run: break-if done?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 10
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1139 is 4
9999 mem: location 1128 is 1118
9999 mem: location 1139 is 4
9999 run: address to copy is 1123
9999 run: its type is character
9999 mem: location 1123 is 100
9999 mem: storing 100 in location 1142
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1142 is 100
9999 mem: location 1140 is 1425
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1459
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1461
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1425 in location 1462
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1490
9999 mem: storing 1490 in location 1463
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1463 is 1490
9999 mem: location 1490 is 0
9999 mem: location 1491 is 0
9999 mem: location 1492 is 0
9999 mem: location 1463 is 1490
9999 run: address to copy is 1490
9999 mem: storing 1490 in location 1464
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1461 is 100
9999 mem: location 1464 is 1490
9999 mem: storing 100 in location 1490
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1462 is 1425
9999 mem: location 1425 is 10
9999 mem: location 1426 is 0
9999 mem: location 1427 is 1360
9999 mem: location 1462 is 1425
9999 run: address to copy is 1426
9999 run: its type is address
9999 mem: location 1426 is 0
9999 mem: storing 0 in location 1465
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1462 is 1425
9999 mem: location 1425 is 10
9999 mem: location 1426 is 0
9999 mem: location 1427 is 1360
9999 mem: location 1462 is 1425
9999 run: address to copy is 1426
9999 mem: storing 1426 in location 1466
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1463 is 1490
9999 mem: location 1466 is 1426
9999 mem: storing 1490 in location 1426
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1463 is 1490
9999 mem: location 1490 is 100
9999 mem: location 1491 is 0
9999 mem: location 1492 is 0
9999 mem: location 1463 is 1490
9999 run: address to copy is 1492
9999 mem: storing 1492 in location 1466
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1462 is 1425
9999 mem: location 1466 is 1492
9999 mem: storing 1425 in location 1492
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1463 is 1490
9999 mem: location 1490 is 100
9999 mem: location 1491 is 0
9999 mem: location 1492 is 1425
9999 mem: location 1463 is 1490
9999 run: address to copy is 1491
9999 mem: storing 1491 in location 1466
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1465 is 0
9999 mem: location 1466 is 1491
9999 mem: storing 0 in location 1491
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1465 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1463 is 1490
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1140 is 1425
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1493
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1425 in location 1495
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1495 is 1425
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1495 is 1425
9999 mem: location 1425 is 10
9999 mem: location 1426 is 1490
9999 mem: location 1427 is 1360
9999 mem: location 1495 is 1425
9999 run: address to copy is 1426
9999 run: its type is address
9999 mem: location 1426 is 1490
9999 mem: storing 1490 in location 1496
 103 run: reply result:address:duplex-list
9999 mem: location 1496 is 1490
9999 run: result 0 is 1490
9999 mem: storing 1490 in location 1140
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1139 is 4
9999 mem: storing 5 in location 1139
 102 run: loop 
9999 run: jumping to instruction 31
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1139 is 5
9999 mem: location 1138 is 7
9999 mem: storing 0 in location 1141
 102 run: break-if done?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 10
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1139 is 5
9999 mem: location 1128 is 1118
9999 mem: location 1139 is 5
9999 run: address to copy is 1124
9999 run: its type is character
9999 mem: location 1124 is 101
9999 mem: storing 101 in location 1142
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1142 is 101
9999 mem: location 1140 is 1490
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1524
 103 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1526
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1490 in location 1527
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1555
9999 mem: storing 1555 in location 1528
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1528 is 1555
9999 mem: location 1555 is 0
9999 mem: location 1556 is 0
9999 mem: location 1557 is 0
9999 mem: location 1528 is 1555
9999 run: address to copy is 1555
9999 mem: storing 1555 in location 1529
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1526 is 101
9999 mem: location 1529 is 1555
9999 mem: storing 101 in location 1555
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1527 is 1490
9999 mem: location 1490 is 100
9999 mem: location 1491 is 0
9999 mem: location 1492 is 1425
9999 mem: location 1527 is 1490
9999 run: address to copy is 1491
9999 run: its type is address
9999 mem: location 1491 is 0
9999 mem: storing 0 in location 1530
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1527 is 1490
9999 mem: location 1490 is 100
9999 mem: location 1491 is 0
9999 mem: location 1492 is 1425
9999 mem: location 1527 is 1490
9999 run: address to copy is 1491
9999 mem: storing 1491 in location 1531
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1528 is 1555
9999 mem: location 1531 is 1491
9999 mem: storing 1555 in location 1491
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1528 is 1555
9999 mem: location 1555 is 101
9999 mem: location 1556 is 0
9999 mem: location 1557 is 0
9999 mem: location 1528 is 1555
9999 run: address to copy is 1557
9999 mem: storing 1557 in location 1531
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1527 is 1490
9999 mem: location 1531 is 1557
9999 mem: storing 1490 in location 1557
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1528 is 1555
9999 mem: location 1555 is 101
9999 mem: location 1556 is 0
9999 mem: location 1557 is 1490
9999 mem: location 1528 is 1555
9999 run: address to copy is 1556
9999 mem: storing 1556 in location 1531
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1530 is 0
9999 mem: location 1531 is 1556
9999 mem: storing 0 in location 1556
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1530 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1528 is 1555
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1140 is 1490
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1558
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1490 in location 1560
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1560 is 1490
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1560 is 1490
9999 mem: location 1490 is 100
9999 mem: location 1491 is 1555
9999 mem: location 1492 is 1425
9999 mem: location 1560 is 1490
9999 run: address to copy is 1491
9999 run: its type is address
9999 mem: location 1491 is 1555
9999 mem: storing 1555 in location 1561
 103 run: reply result:address:duplex-list
9999 mem: location 1561 is 1555
9999 run: result 0 is 1555
9999 mem: storing 1555 in location 1140
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1139 is 5
9999 mem: storing 6 in location 1139
 102 run: loop 
9999 run: jumping to instruction 31
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1139 is 6
9999 mem: location 1138 is 7
9999 mem: storing 0 in location 1141
 102 run: break-if done?:boolean, 
9999 mem: location 1141 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 10
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1139 is 6
9999 mem: location 1128 is 1118
9999 mem: location 1139 is 6
9999 run: address to copy is 1125
9999 run: its type is character
9999 mem: location 1125 is 102
9999 mem: storing 102 in location 1142
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1142 is 102
9999 mem: location 1140 is 1555
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1589
 103 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 1591
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1555 in location 1592
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1620
9999 mem: storing 1620 in location 1593
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1593 is 1620
9999 mem: location 1620 is 0
9999 mem: location 1621 is 0
9999 mem: location 1622 is 0
9999 mem: location 1593 is 1620
9999 run: address to copy is 1620
9999 mem: storing 1620 in location 1594
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1591 is 102
9999 mem: location 1594 is 1620
9999 mem: storing 102 in location 1620
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1592 is 1555
9999 mem: location 1555 is 101
9999 mem: location 1556 is 0
9999 mem: location 1557 is 1490
9999 mem: location 1592 is 1555
9999 run: address to copy is 1556
9999 run: its type is address
9999 mem: location 1556 is 0
9999 mem: storing 0 in location 1595
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1592 is 1555
9999 mem: location 1555 is 101
9999 mem: location 1556 is 0
9999 mem: location 1557 is 1490
9999 mem: location 1592 is 1555
9999 run: address to copy is 1556
9999 mem: storing 1556 in location 1596
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1593 is 1620
9999 mem: location 1596 is 1556
9999 mem: storing 1620 in location 1556
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1593 is 1620
9999 mem: location 1620 is 102
9999 mem: location 1621 is 0
9999 mem: location 1622 is 0
9999 mem: location 1593 is 1620
9999 run: address to copy is 1622
9999 mem: storing 1622 in location 1596
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1592 is 1555
9999 mem: location 1596 is 1622
9999 mem: storing 1555 in location 1622
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1593 is 1620
9999 mem: location 1620 is 102
9999 mem: location 1621 is 0
9999 mem: location 1622 is 1555
9999 mem: location 1593 is 1620
9999 run: address to copy is 1621
9999 mem: storing 1621 in location 1596
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1595 is 0
9999 mem: location 1596 is 1621
9999 mem: storing 0 in location 1621
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1595 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1593 is 1620
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1140 is 1555
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1623
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1555 in location 1625
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1625 is 1555
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1625 is 1555
9999 mem: location 1555 is 101
9999 mem: location 1556 is 1620
9999 mem: location 1557 is 1490
9999 mem: location 1625 is 1555
9999 run: address to copy is 1556
9999 run: its type is address
9999 mem: location 1556 is 1620
9999 mem: storing 1620 in location 1626
 103 run: reply result:address:duplex-list
9999 mem: location 1626 is 1620
9999 run: result 0 is 1620
9999 mem: storing 1620 in location 1140
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1139 is 6
9999 mem: storing 7 in location 1139
 102 run: loop 
9999 run: jumping to instruction 31
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1139 is 7
9999 mem: location 1138 is 7
9999 mem: storing 1 in location 1141
 102 run: break-if done?:boolean, 
9999 mem: location 1141 is 1
9999 run: jumping to instruction 38
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 1196
9999 mem: location 1158 is 1196
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 1137
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1136 is 1157
9999 mem: location 1157 is 1196
9999 mem: location 1137 is 1158
9999 mem: storing 1196 in location 1158
 102 run: result:address:editor-data, screen:address <- render screen:address, result:address:editor-data
9999 mem: location 1129 is 1031
9999 mem: location 1132 is 1157
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1654
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1656
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1157 in location 1657
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1657 is 1157
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1657 is 1157
9999 mem: location 1157 is 1196
9999 mem: location 1158 is 1196
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1657 is 1157
9999 run: address to copy is 1161
9999 run: its type is number
9999 mem: location 1161 is 0
9999 mem: storing 0 in location 1658
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1656 is 1031
schedule: screen-height/render/new-editor/run1001/editor-initially-prints-multiple-lines
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1695
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1697
 104 run: break-unless x:address:screen, 
9999 mem: location 1697 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1697 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1697 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1698
 104 run: reply height:number
9999 mem: location 1698 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1659
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1657 is 1157
9999 mem: location 1157 is 1196
9999 mem: location 1158 is 1196
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1657 is 1157
9999 run: address to copy is 1162
9999 run: its type is number
9999 mem: location 1162 is 4
9999 mem: storing 4 in location 1660
 103 run: hide-screen screen:address
9999 mem: location 1656 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1726
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1728
 104 run: break-unless x:address:screen, 
9999 mem: location 1728 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1728 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1657 is 1157
9999 mem: location 1157 is 1196
9999 mem: location 1158 is 1196
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1657 is 1157
9999 run: address to copy is 1157
9999 run: its type is address
9999 mem: location 1157 is 1196
9999 mem: storing 1196 in location 1661
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1661 is 1196
9999 mem: storing 1196 in location 1662
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1661 is 1196
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1757
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1196 in location 1759
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1759 is 1196
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1759 is 1196
9999 mem: location 1196 is 167
9999 mem: location 1197 is 1230
9999 mem: location 1198 is 0
9999 mem: location 1759 is 1196
9999 run: address to copy is 1197
9999 run: its type is address
9999 mem: location 1197 is 1230
9999 mem: storing 1230 in location 1760
 104 run: reply result:address:duplex-list
9999 mem: location 1760 is 1230
9999 run: result 0 is 1230
9999 mem: storing 1230 in location 1661
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1663
 103 run: column:number <- copy left:number
9999 mem: location 1658 is 0
9999 mem: storing 0 in location 1664
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1657 is 1157
9999 mem: location 1157 is 1196
9999 mem: location 1158 is 1196
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1657 is 1157
9999 run: address to copy is 1163
9999 mem: storing 1163 in location 1665
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1657 is 1157
9999 mem: location 1157 is 1196
9999 mem: location 1158 is 1196
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1657 is 1157
9999 run: address to copy is 1164
9999 mem: storing 1164 in location 1666
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1657 is 1157
9999 mem: location 1157 is 1196
9999 mem: location 1158 is 1196
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1657 is 1157
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 1667
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1656 is 1031
9999 mem: location 1663 is 1
9999 mem: location 1664 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1788
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1790
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1791
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1792
 104 run: break-unless x:address:screen, 
9999 mem: location 1790 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1790 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1790 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1793
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1791 is 1
9999 mem: location 1793 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1790 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1790 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1794
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1792 is 0
9999 mem: location 1794 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1790 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1661 is 1230
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1663 is 1
9999 mem: location 1659 is 5
9999 mem: storing 0 in location 1668
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1668 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1663 is 1
9999 mem: location 1665 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1669
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1669 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1664 is 0
9999 mem: location 1666 is 1164
9999 mem: location 1164 is 0
9999 mem: storing 1 in location 1670
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1670 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1661 is 1230
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1819
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1230 in location 1821
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1821 is 1230
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1821 is 1230
9999 mem: location 1230 is 97
9999 mem: location 1231 is 1295
9999 mem: location 1232 is 1196
9999 mem: location 1821 is 1230
9999 run: address to copy is 1232
9999 run: its type is address
9999 mem: location 1232 is 1196
9999 mem: storing 1196 in location 1822
 104 run: reply result:address:duplex-list
9999 mem: location 1822 is 1196
9999 run: result 0 is 1196
9999 mem: location 1667 is 1158
9999 mem: storing 1196 in location 1158
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1661 is 1230
9999 mem: location 1230 is 97
9999 mem: location 1231 is 1295
9999 mem: location 1232 is 1196
9999 mem: location 1661 is 1230
9999 run: address to copy is 1230
9999 run: its type is number
9999 mem: location 1230 is 97
9999 mem: storing 97 in location 1671
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1671 is 97
9999 mem: storing 0 in location 1672
 103 run: break-unless newline?:boolean, 
9999 mem: location 1672 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1664 is 0
9999 mem: location 1660 is 4
9999 mem: storing 0 in location 1674
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1674 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1656 is 1031
9999 mem: location 1671 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1850
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1852
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1853
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1854
9999 mem: storing 0 in location 1855
 104 run: break-if color-found?:boolean, 
9999 mem: location 1855 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1854
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1856
9999 mem: storing 0 in location 1857
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1857 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1856
 104 run: break-unless x:address:screen, 
9999 mem: location 1852 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1852 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1852 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1858
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1852 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1852 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1859
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1852 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1852 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1860
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1852 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1852 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1861
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1853 is 97
9999 mem: storing 0 in location 1862
 104 run: break-unless newline?:boolean, 
9999 mem: location 1862 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1858 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1860 is 5
9999 mem: storing 5 in location 1865
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1865 is 5
9999 mem: location 1859 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 1865
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1852 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1852 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1866
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1853 is 97
9999 mem: storing 0 in location 1867
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1867 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1866 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1865 is 5
9999 mem: location 1866 is 1036
9999 mem: location 1865 is 5
9999 mem: storing 1047 in location 1869
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1869 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1869 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1870
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1869 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1869 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1871
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1853 is 97
9999 mem: location 1870 is 1047
9999 mem: storing 97 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1854 is 7
9999 mem: location 1871 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1860 is 5
9999 mem: storing 4 in location 1872
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1859 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1872 is 4
9999 mem: storing 0 in location 1873
 104 run: break-if at-right?:boolean, 
9999 mem: location 1873 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1859 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1859 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1852 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1661 is 1230
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1881
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1230 in location 1883
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1883 is 1230
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1883 is 1230
9999 mem: location 1230 is 97
9999 mem: location 1231 is 1295
9999 mem: location 1232 is 1196
9999 mem: location 1883 is 1230
9999 run: address to copy is 1231
9999 run: its type is address
9999 mem: location 1231 is 1295
9999 mem: storing 1295 in location 1884
 104 run: reply result:address:duplex-list
9999 mem: location 1884 is 1295
9999 run: result 0 is 1295
9999 mem: storing 1295 in location 1661
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1662 is 1196
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1912
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1196 in location 1914
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1914 is 1196
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1914 is 1196
9999 mem: location 1196 is 167
9999 mem: location 1197 is 1230
9999 mem: location 1198 is 0
9999 mem: location 1914 is 1196
9999 run: address to copy is 1197
9999 run: its type is address
9999 mem: location 1197 is 1230
9999 mem: storing 1230 in location 1915
 104 run: reply result:address:duplex-list
9999 mem: location 1915 is 1230
9999 run: result 0 is 1230
9999 mem: storing 1230 in location 1662
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1664 is 0
9999 mem: storing 1 in location 1664
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1661 is 1295
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1663 is 1
9999 mem: location 1659 is 5
9999 mem: storing 0 in location 1668
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1668 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1663 is 1
9999 mem: location 1665 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1669
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1669 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1664 is 1
9999 mem: location 1666 is 1164
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1670
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1670 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1661 is 1295
9999 mem: location 1295 is 98
9999 mem: location 1296 is 1360
9999 mem: location 1297 is 1230
9999 mem: location 1661 is 1295
9999 run: address to copy is 1295
9999 run: its type is number
9999 mem: location 1295 is 98
9999 mem: storing 98 in location 1671
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1671 is 98
9999 mem: storing 0 in location 1672
 103 run: break-unless newline?:boolean, 
9999 mem: location 1672 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1664 is 1
9999 mem: location 1660 is 4
9999 mem: storing 0 in location 1674
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1674 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1656 is 1031
9999 mem: location 1671 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1943
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1945
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1946
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1947
9999 mem: storing 0 in location 1948
 104 run: break-if color-found?:boolean, 
9999 mem: location 1948 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1947
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1949
9999 mem: storing 0 in location 1950
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1950 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1949
 104 run: break-unless x:address:screen, 
9999 mem: location 1945 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1945 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1945 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1951
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1945 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1945 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1952
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1945 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1945 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1953
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1945 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1945 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1954
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1946 is 98
9999 mem: storing 0 in location 1955
 104 run: break-unless newline?:boolean, 
9999 mem: location 1955 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1951 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1953 is 5
9999 mem: storing 5 in location 1958
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1958 is 5
9999 mem: location 1952 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 1958
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1945 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1945 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1959
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1946 is 98
9999 mem: storing 0 in location 1960
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1960 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1959 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1958 is 6
9999 mem: location 1959 is 1036
9999 mem: location 1958 is 6
9999 mem: storing 1049 in location 1962
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1962 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1962 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1963
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1962 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1962 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1964
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1946 is 98
9999 mem: location 1963 is 1049
9999 mem: storing 98 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1947 is 7
9999 mem: location 1964 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1953 is 5
9999 mem: storing 4 in location 1965
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1952 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1965 is 4
9999 mem: storing 0 in location 1966
 104 run: break-if at-right?:boolean, 
9999 mem: location 1966 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1952 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1952 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1945 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1661 is 1295
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1974
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1295 in location 1976
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1976 is 1295
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1976 is 1295
9999 mem: location 1295 is 98
9999 mem: location 1296 is 1360
9999 mem: location 1297 is 1230
9999 mem: location 1976 is 1295
9999 run: address to copy is 1296
9999 run: its type is address
9999 mem: location 1296 is 1360
9999 mem: storing 1360 in location 1977
 104 run: reply result:address:duplex-list
9999 mem: location 1977 is 1360
9999 run: result 0 is 1360
9999 mem: storing 1360 in location 1661
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1662 is 1230
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2005
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1230 in location 2007
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2007 is 1230
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2007 is 1230
9999 mem: location 1230 is 97
9999 mem: location 1231 is 1295
9999 mem: location 1232 is 1196
9999 mem: location 2007 is 1230
9999 run: address to copy is 1231
9999 run: its type is address
9999 mem: location 1231 is 1295
9999 mem: storing 1295 in location 2008
 104 run: reply result:address:duplex-list
9999 mem: location 2008 is 1295
9999 run: result 0 is 1295
9999 mem: storing 1295 in location 1662
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1664 is 1
9999 mem: storing 2 in location 1664
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1661 is 1360
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1663 is 1
9999 mem: location 1659 is 5
9999 mem: storing 0 in location 1668
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1668 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1663 is 1
9999 mem: location 1665 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1669
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1669 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1664 is 2
9999 mem: location 1666 is 1164
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1670
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1670 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1661 is 1360
9999 mem: location 1360 is 99
9999 mem: location 1361 is 1425
9999 mem: location 1362 is 1295
9999 mem: location 1661 is 1360
9999 run: address to copy is 1360
9999 run: its type is number
9999 mem: location 1360 is 99
9999 mem: storing 99 in location 1671
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1671 is 99
9999 mem: storing 0 in location 1672
 103 run: break-unless newline?:boolean, 
9999 mem: location 1672 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1664 is 2
9999 mem: location 1660 is 4
9999 mem: storing 0 in location 1674
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1674 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1656 is 1031
9999 mem: location 1671 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2036
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2038
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2039
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2040
9999 mem: storing 0 in location 2041
 104 run: break-if color-found?:boolean, 
9999 mem: location 2041 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2040
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2042
9999 mem: storing 0 in location 2043
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2043 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2042
 104 run: break-unless x:address:screen, 
9999 mem: location 2038 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2038 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2038 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2044
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2038 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2038 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2045
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2038 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2038 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2046
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2038 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2038 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2047
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2039 is 99
9999 mem: storing 0 in location 2048
 104 run: break-unless newline?:boolean, 
9999 mem: location 2048 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2044 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2046 is 5
9999 mem: storing 5 in location 2051
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2051 is 5
9999 mem: location 2045 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 2051
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2038 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2038 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2052
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2039 is 99
9999 mem: storing 0 in location 2053
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2053 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2052 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2051 is 7
9999 mem: location 2052 is 1036
9999 mem: location 2051 is 7
9999 mem: storing 1051 in location 2055
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2055 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2055 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 2056
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2055 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2055 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 2057
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2039 is 99
9999 mem: location 2056 is 1051
9999 mem: storing 99 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2040 is 7
9999 mem: location 2057 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2046 is 5
9999 mem: storing 4 in location 2058
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2045 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2058 is 4
9999 mem: storing 0 in location 2059
 104 run: break-if at-right?:boolean, 
9999 mem: location 2059 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2045 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2045 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2038 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1661 is 1360
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2067
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1360 in location 2069
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2069 is 1360
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2069 is 1360
9999 mem: location 1360 is 99
9999 mem: location 1361 is 1425
9999 mem: location 1362 is 1295
9999 mem: location 2069 is 1360
9999 run: address to copy is 1361
9999 run: its type is address
9999 mem: location 1361 is 1425
9999 mem: storing 1425 in location 2070
 104 run: reply result:address:duplex-list
9999 mem: location 2070 is 1425
9999 run: result 0 is 1425
9999 mem: storing 1425 in location 1661
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1662 is 1295
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2098
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1295 in location 2100
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2100 is 1295
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2100 is 1295
9999 mem: location 1295 is 98
9999 mem: location 1296 is 1360
9999 mem: location 1297 is 1230
9999 mem: location 2100 is 1295
9999 run: address to copy is 1296
9999 run: its type is address
9999 mem: location 1296 is 1360
9999 mem: storing 1360 in location 2101
 104 run: reply result:address:duplex-list
9999 mem: location 2101 is 1360
9999 run: result 0 is 1360
9999 mem: storing 1360 in location 1662
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1664 is 2
9999 mem: storing 3 in location 1664
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1661 is 1425
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1663 is 1
9999 mem: location 1659 is 5
9999 mem: storing 0 in location 1668
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1668 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1663 is 1
9999 mem: location 1665 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1669
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1669 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1664 is 3
9999 mem: location 1666 is 1164
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1670
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1670 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1661 is 1425
9999 mem: location 1425 is 10
9999 mem: location 1426 is 1490
9999 mem: location 1427 is 1360
9999 mem: location 1661 is 1425
9999 run: address to copy is 1425
9999 run: its type is number
9999 mem: location 1425 is 10
9999 mem: storing 10 in location 1671
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1671 is 10
9999 mem: storing 1 in location 1672
 103 run: break-unless newline?:boolean, 
9999 mem: location 1672 is 1
9999 run: jump-unless fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1663 is 1
9999 mem: location 1665 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 1 in location 1669
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1669 is 1
9999 run: jump-unless fell through
 103 run: left-of-cursor?:boolean <- lesser-than column:number, cursor-column:address:number/deref
9999 mem: location 1664 is 3
9999 mem: location 1666 is 1164
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1673
 103 run: break-unless left-of-cursor?:boolean, 
9999 mem: location 1673 is 0
9999 run: jumping to instruction 41
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1656 is 1031
9999 mem: location 1664 is 3
9999 mem: location 1660 is 4
 104 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 2129
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2131
 104 run: left:number <- next-ingredient 
9999 mem: storing 3 in location 2132
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2133
 104 run: column:number <- copy left:number
9999 mem: location 2132 is 3
9999 mem: storing 3 in location 2134
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2134 is 3
9999 mem: location 2133 is 4
9999 mem: storing 0 in location 2135
 104 run: break-if done?:boolean, 
9999 mem: location 2135 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2131 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2170
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2172
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2173
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2174
9999 mem: storing 0 in location 2175
 105 run: break-if color-found?:boolean, 
9999 mem: location 2175 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2174
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2176
9999 mem: storing 0 in location 2177
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2177 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2176
 105 run: break-unless x:address:screen, 
9999 mem: location 2172 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2172 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2172 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2178
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2172 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2172 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2179
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2172 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2172 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2180
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2172 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2172 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2181
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2173 is 32
9999 mem: storing 0 in location 2182
 105 run: break-unless newline?:boolean, 
9999 mem: location 2182 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2178 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2180 is 5
9999 mem: storing 5 in location 2185
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2185 is 5
9999 mem: location 2179 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 2185
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2172 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2172 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2186
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2173 is 32
9999 mem: storing 0 in location 2187
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2187 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2186 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2185 is 8
9999 mem: location 2186 is 1036
9999 mem: location 2185 is 8
9999 mem: storing 1053 in location 2189
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2189 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2189 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 2190
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2189 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2189 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 2191
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2173 is 32
9999 mem: location 2190 is 1053
9999 mem: storing 32 in location 1053
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2174 is 7
9999 mem: location 2191 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2180 is 5
9999 mem: storing 4 in location 2192
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2179 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2192 is 4
9999 mem: storing 0 in location 2193
 105 run: break-if at-right?:boolean, 
9999 mem: location 2193 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2179 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2179 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2172 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2134 is 3
9999 mem: storing 4 in location 2134
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2134 is 4
9999 mem: location 2133 is 4
9999 mem: storing 0 in location 2135
 104 run: break-if done?:boolean, 
9999 mem: location 2135 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2131 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2201
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2203
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2204
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2205
9999 mem: storing 0 in location 2206
 105 run: break-if color-found?:boolean, 
9999 mem: location 2206 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2205
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2207
9999 mem: storing 0 in location 2208
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2208 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2207
 105 run: break-unless x:address:screen, 
9999 mem: location 2203 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2203 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2203 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2209
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2203 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2203 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2210
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2203 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2203 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2211
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2203 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2203 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2212
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2204 is 32
9999 mem: storing 0 in location 2213
 105 run: break-unless newline?:boolean, 
9999 mem: location 2213 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2209 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2211 is 5
9999 mem: storing 5 in location 2216
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2216 is 5
9999 mem: location 2210 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 2216
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2203 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2203 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2217
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2204 is 32
9999 mem: storing 0 in location 2218
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2218 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2217 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2216 is 9
9999 mem: location 2217 is 1036
9999 mem: location 2216 is 9
9999 mem: storing 1055 in location 2220
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2220 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2220 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 2221
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2220 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2220 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 2222
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2204 is 32
9999 mem: location 2221 is 1055
9999 mem: storing 32 in location 1055
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2205 is 7
9999 mem: location 2222 is 1056
9999 mem: storing 7 in location 1056
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2211 is 5
9999 mem: storing 4 in location 2223
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2210 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2223 is 4
9999 mem: storing 1 in location 2224
 105 run: break-if at-right?:boolean, 
9999 mem: location 2224 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2203 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2134 is 4
9999 mem: storing 5 in location 2134
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2134 is 5
9999 mem: location 2133 is 4
9999 mem: storing 1 in location 2135
 104 run: break-if done?:boolean, 
9999 mem: location 2135 is 1
9999 run: jumping to instruction 11
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1663 is 1
9999 mem: storing 2 in location 1663
 103 run: column:number <- copy left:number
9999 mem: location 1658 is 0
9999 mem: storing 0 in location 1664
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1656 is 1031
9999 mem: location 1663 is 2
9999 mem: location 1664 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2232
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2234
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 2235
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2236
 104 run: break-unless x:address:screen, 
9999 mem: location 2234 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2234 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2234 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2237
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2235 is 2
9999 mem: location 2237 is 1033
9999 mem: storing 2 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2234 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2234 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2238
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2236 is 0
9999 mem: location 2238 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2234 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1661 is 1425
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2263
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1425 in location 2265
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2265 is 1425
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2265 is 1425
9999 mem: location 1425 is 10
9999 mem: location 1426 is 1490
9999 mem: location 1427 is 1360
9999 mem: location 2265 is 1425
9999 run: address to copy is 1426
9999 run: its type is address
9999 mem: location 1426 is 1490
9999 mem: storing 1490 in location 2266
 104 run: reply result:address:duplex-list
9999 mem: location 2266 is 1490
9999 run: result 0 is 1490
9999 mem: storing 1490 in location 1661
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1662 is 1360
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2294
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1360 in location 2296
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2296 is 1360
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2296 is 1360
9999 mem: location 1360 is 99
9999 mem: location 1361 is 1425
9999 mem: location 1362 is 1295
9999 mem: location 2296 is 1360
9999 run: address to copy is 1361
9999 run: its type is address
9999 mem: location 1361 is 1425
9999 mem: storing 1425 in location 2297
 104 run: reply result:address:duplex-list
9999 mem: location 2297 is 1425
9999 run: result 0 is 1425
9999 mem: storing 1425 in location 1662
 103 run: loop +next-character:label
9999 run: jumping to instruction 20
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1661 is 1490
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1663 is 2
9999 mem: location 1659 is 5
9999 mem: storing 0 in location 1668
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1668 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1663 is 2
9999 mem: location 1665 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 0 in location 1669
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1669 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1661 is 1490
9999 mem: location 1490 is 100
9999 mem: location 1491 is 1555
9999 mem: location 1492 is 1425
9999 mem: location 1661 is 1490
9999 run: address to copy is 1490
9999 run: its type is number
9999 mem: location 1490 is 100
9999 mem: storing 100 in location 1671
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1671 is 100
9999 mem: storing 0 in location 1672
 103 run: break-unless newline?:boolean, 
9999 mem: location 1672 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1664 is 0
9999 mem: location 1660 is 4
9999 mem: storing 0 in location 1674
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1674 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1656 is 1031
9999 mem: location 1671 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2325
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2327
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 2328
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2329
9999 mem: storing 0 in location 2330
 104 run: break-if color-found?:boolean, 
9999 mem: location 2330 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2329
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2331
9999 mem: storing 0 in location 2332
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2332 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2331
 104 run: break-unless x:address:screen, 
9999 mem: location 2327 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2327 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2327 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2333
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2327 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2327 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2334
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2327 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2327 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2335
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2327 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2327 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2336
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2328 is 100
9999 mem: storing 0 in location 2337
 104 run: break-unless newline?:boolean, 
9999 mem: location 2337 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2333 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2335 is 5
9999 mem: storing 10 in location 2340
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2340 is 10
9999 mem: location 2334 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 10 in location 2340
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2327 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2327 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2341
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2328 is 100
9999 mem: storing 0 in location 2342
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2342 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2341 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2340 is 10
9999 mem: location 2341 is 1036
9999 mem: location 2340 is 10
9999 mem: storing 1057 in location 2344
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2344 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2344 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 2345
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2344 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2344 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 2346
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2328 is 100
9999 mem: location 2345 is 1057
9999 mem: storing 100 in location 1057
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2329 is 7
9999 mem: location 2346 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2335 is 5
9999 mem: storing 4 in location 2347
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2334 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2347 is 4
9999 mem: storing 0 in location 2348
 104 run: break-if at-right?:boolean, 
9999 mem: location 2348 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2334 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2334 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2327 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1661 is 1490
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2356
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1490 in location 2358
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2358 is 1490
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2358 is 1490
9999 mem: location 1490 is 100
9999 mem: location 1491 is 1555
9999 mem: location 1492 is 1425
9999 mem: location 2358 is 1490
9999 run: address to copy is 1491
9999 run: its type is address
9999 mem: location 1491 is 1555
9999 mem: storing 1555 in location 2359
 104 run: reply result:address:duplex-list
9999 mem: location 2359 is 1555
9999 run: result 0 is 1555
9999 mem: storing 1555 in location 1661
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1662 is 1425
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2387
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1425 in location 2389
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2389 is 1425
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2389 is 1425
9999 mem: location 1425 is 10
9999 mem: location 1426 is 1490
9999 mem: location 1427 is 1360
9999 mem: location 2389 is 1425
9999 run: address to copy is 1426
9999 run: its type is address
9999 mem: location 1426 is 1490
9999 mem: storing 1490 in location 2390
 104 run: reply result:address:duplex-list
9999 mem: location 2390 is 1490
9999 run: result 0 is 1490
9999 mem: storing 1490 in location 1662
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1664 is 0
9999 mem: storing 1 in location 1664
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1661 is 1555
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1663 is 2
9999 mem: location 1659 is 5
9999 mem: storing 0 in location 1668
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1668 is 0
9999 run: jump-if fell through
schedule: render/new-editor/run1001/editor-initially-prints-multiple-lines
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1663 is 2
9999 mem: location 1665 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 0 in location 1669
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1669 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1661 is 1555
9999 mem: location 1555 is 101
9999 mem: location 1556 is 1620
9999 mem: location 1557 is 1490
9999 mem: location 1661 is 1555
9999 run: address to copy is 1555
9999 run: its type is number
9999 mem: location 1555 is 101
9999 mem: storing 101 in location 1671
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1671 is 101
9999 mem: storing 0 in location 1672
 103 run: break-unless newline?:boolean, 
9999 mem: location 1672 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1664 is 1
9999 mem: location 1660 is 4
9999 mem: storing 0 in location 1674
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1674 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1656 is 1031
9999 mem: location 1671 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2418
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2420
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2421
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2422
9999 mem: storing 0 in location 2423
 104 run: break-if color-found?:boolean, 
9999 mem: location 2423 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2422
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2424
9999 mem: storing 0 in location 2425
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2425 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2424
 104 run: break-unless x:address:screen, 
9999 mem: location 2420 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2420 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2420 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2426
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2420 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2420 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2427
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2420 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2420 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2428
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2420 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2420 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2429
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2421 is 101
9999 mem: storing 0 in location 2430
 104 run: break-unless newline?:boolean, 
9999 mem: location 2430 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2426 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2428 is 5
9999 mem: storing 10 in location 2433
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2433 is 10
9999 mem: location 2427 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 11 in location 2433
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2420 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2420 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2434
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2421 is 101
9999 mem: storing 0 in location 2435
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2435 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2434 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2433 is 11
9999 mem: location 2434 is 1036
9999 mem: location 2433 is 11
9999 mem: storing 1059 in location 2437
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2437 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2437 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 2438
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2437 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2437 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 2439
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2421 is 101
9999 mem: location 2438 is 1059
9999 mem: storing 101 in location 1059
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2422 is 7
9999 mem: location 2439 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2428 is 5
9999 mem: storing 4 in location 2440
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2427 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2440 is 4
9999 mem: storing 0 in location 2441
 104 run: break-if at-right?:boolean, 
9999 mem: location 2441 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2427 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2427 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2420 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1661 is 1555
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2449
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1555 in location 2451
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2451 is 1555
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2451 is 1555
9999 mem: location 1555 is 101
9999 mem: location 1556 is 1620
9999 mem: location 1557 is 1490
9999 mem: location 2451 is 1555
9999 run: address to copy is 1556
9999 run: its type is address
9999 mem: location 1556 is 1620
9999 mem: storing 1620 in location 2452
 104 run: reply result:address:duplex-list
9999 mem: location 2452 is 1620
9999 run: result 0 is 1620
9999 mem: storing 1620 in location 1661
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1662 is 1490
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2480
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1490 in location 2482
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2482 is 1490
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2482 is 1490
9999 mem: location 1490 is 100
9999 mem: location 1491 is 1555
9999 mem: location 1492 is 1425
9999 mem: location 2482 is 1490
9999 run: address to copy is 1491
9999 run: its type is address
9999 mem: location 1491 is 1555
9999 mem: storing 1555 in location 2483
 104 run: reply result:address:duplex-list
9999 mem: location 2483 is 1555
9999 run: result 0 is 1555
9999 mem: storing 1555 in location 1662
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1664 is 1
9999 mem: storing 2 in location 1664
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1661 is 1620
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1663 is 2
9999 mem: location 1659 is 5
9999 mem: storing 0 in location 1668
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1668 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1663 is 2
9999 mem: location 1665 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 0 in location 1669
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1669 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1661 is 1620
9999 mem: location 1620 is 102
9999 mem: location 1621 is 0
9999 mem: location 1622 is 1555
9999 mem: location 1661 is 1620
9999 run: address to copy is 1620
9999 run: its type is number
9999 mem: location 1620 is 102
9999 mem: storing 102 in location 1671
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1671 is 102
9999 mem: storing 0 in location 1672
 103 run: break-unless newline?:boolean, 
9999 mem: location 1672 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1664 is 2
9999 mem: location 1660 is 4
9999 mem: storing 0 in location 1674
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1674 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1656 is 1031
9999 mem: location 1671 is 102
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2511
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2513
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 2514
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2515
9999 mem: storing 0 in location 2516
 104 run: break-if color-found?:boolean, 
9999 mem: location 2516 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2515
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2517
9999 mem: storing 0 in location 2518
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2518 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2517
 104 run: break-unless x:address:screen, 
9999 mem: location 2513 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2513 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2513 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2519
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2513 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2513 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2520
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2513 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2513 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2521
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2513 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2513 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2522
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2514 is 102
9999 mem: storing 0 in location 2523
 104 run: break-unless newline?:boolean, 
9999 mem: location 2523 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2519 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2521 is 5
9999 mem: storing 10 in location 2526
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2526 is 10
9999 mem: location 2520 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 12 in location 2526
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2513 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2513 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2527
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2514 is 102
9999 mem: storing 0 in location 2528
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2528 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2527 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 101
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2526 is 12
9999 mem: location 2527 is 1036
9999 mem: location 2526 is 12
9999 mem: storing 1061 in location 2530
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2530 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2530 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 2531
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2530 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2530 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 2532
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2514 is 102
9999 mem: location 2531 is 1061
9999 mem: storing 102 in location 1061
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2515 is 7
9999 mem: location 2532 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2521 is 5
9999 mem: storing 4 in location 2533
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2520 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2533 is 4
9999 mem: storing 0 in location 2534
 104 run: break-if at-right?:boolean, 
9999 mem: location 2534 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2520 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2520 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2513 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1661 is 1620
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2542
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1620 in location 2544
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2544 is 1620
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2544 is 1620
9999 mem: location 1620 is 102
9999 mem: location 1621 is 0
9999 mem: location 1622 is 1555
9999 mem: location 2544 is 1620
9999 run: address to copy is 1621
9999 run: its type is address
9999 mem: location 1621 is 0
9999 mem: storing 0 in location 2545
 104 run: reply result:address:duplex-list
9999 mem: location 2545 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1661
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1662 is 1555
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2573
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1555 in location 2575
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2575 is 1555
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2575 is 1555
9999 mem: location 1555 is 101
9999 mem: location 1556 is 1620
9999 mem: location 1557 is 1490
9999 mem: location 2575 is 1555
9999 run: address to copy is 1556
9999 run: its type is address
9999 mem: location 1556 is 1620
9999 mem: storing 1620 in location 2576
 104 run: reply result:address:duplex-list
9999 mem: location 2576 is 1620
9999 run: result 0 is 1620
9999 mem: storing 1620 in location 1662
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1664 is 2
9999 mem: storing 3 in location 1664
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1661 is 0
9999 run: jumping to instruction 64
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1663 is 2
9999 mem: location 1665 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 0 in location 1669
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1664 is 3
9999 mem: location 1666 is 1164
9999 mem: location 1164 is 0
9999 mem: storing 0 in location 1675
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1669 is 0
9999 mem: location 1675 is 0
9999 mem: storing 0 in location 1676
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1663 is 2
9999 mem: location 1665 is 1163
9999 mem: location 1163 is 1
9999 mem: storing 0 in location 1677
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1676 is 0
9999 mem: location 1677 is 0
9999 mem: storing 0 in location 1678
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1678 is 0
9999 run: jumping to instruction 83
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1656 is 1031
9999 mem: location 1664 is 3
9999 mem: location 1660 is 4
 104 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 2604
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2606
 104 run: left:number <- next-ingredient 
9999 mem: storing 3 in location 2607
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2608
 104 run: column:number <- copy left:number
9999 mem: location 2607 is 3
9999 mem: storing 3 in location 2609
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2609 is 3
9999 mem: location 2608 is 4
9999 mem: storing 0 in location 2610
 104 run: break-if done?:boolean, 
9999 mem: location 2610 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2606 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2645
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2647
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2648
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2649
9999 mem: storing 0 in location 2650
 105 run: break-if color-found?:boolean, 
9999 mem: location 2650 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2649
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2651
9999 mem: storing 0 in location 2652
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2652 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2651
 105 run: break-unless x:address:screen, 
9999 mem: location 2647 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2647 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2647 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2653
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2647 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2647 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2654
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2647 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2647 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2655
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2647 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2647 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2656
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2648 is 32
9999 mem: storing 0 in location 2657
 105 run: break-unless newline?:boolean, 
9999 mem: location 2657 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2653 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2655 is 5
9999 mem: storing 10 in location 2660
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2660 is 10
9999 mem: location 2654 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 13 in location 2660
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2647 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2647 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2661
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2648 is 32
9999 mem: storing 0 in location 2662
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2662 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2661 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 101
9999 mem: location 1060 is 7
9999 mem: location 1061 is 102
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2660 is 13
9999 mem: location 2661 is 1036
9999 mem: location 2660 is 13
9999 mem: storing 1063 in location 2664
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2664 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2664 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 2665
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2664 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2664 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 2666
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2648 is 32
9999 mem: location 2665 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2649 is 7
9999 mem: location 2666 is 1064
9999 mem: storing 7 in location 1064
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2655 is 5
9999 mem: storing 4 in location 2667
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2654 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2667 is 4
9999 mem: storing 0 in location 2668
 105 run: break-if at-right?:boolean, 
9999 mem: location 2668 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2654 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2654 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2647 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2609 is 3
9999 mem: storing 4 in location 2609
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2609 is 4
9999 mem: location 2608 is 4
9999 mem: storing 0 in location 2610
 104 run: break-if done?:boolean, 
9999 mem: location 2610 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2606 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2676
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2678
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2679
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2680
9999 mem: storing 0 in location 2681
 105 run: break-if color-found?:boolean, 
9999 mem: location 2681 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2680
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2682
9999 mem: storing 0 in location 2683
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2683 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2682
 105 run: break-unless x:address:screen, 
9999 mem: location 2678 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2678 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2678 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2684
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2678 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2678 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2685
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2678 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2678 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2686
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2678 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2678 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2687
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2679 is 32
9999 mem: storing 0 in location 2688
 105 run: break-unless newline?:boolean, 
9999 mem: location 2688 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2684 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2686 is 5
9999 mem: storing 10 in location 2691
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2691 is 10
9999 mem: location 2685 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 14 in location 2691
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2678 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2678 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2692
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2679 is 32
9999 mem: storing 0 in location 2693
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2693 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2692 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 101
9999 mem: location 1060 is 7
9999 mem: location 1061 is 102
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2691 is 14
9999 mem: location 2692 is 1036
9999 mem: location 2691 is 14
9999 mem: storing 1065 in location 2695
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2695 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2695 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 2696
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2695 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2695 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 2697
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2679 is 32
9999 mem: location 2696 is 1065
9999 mem: storing 32 in location 1065
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2680 is 7
9999 mem: location 2697 is 1066
9999 mem: storing 7 in location 1066
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2686 is 5
9999 mem: storing 4 in location 2698
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2685 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2698 is 4
9999 mem: storing 1 in location 2699
 105 run: break-if at-right?:boolean, 
9999 mem: location 2699 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2678 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2609 is 4
9999 mem: storing 5 in location 2609
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2609 is 5
9999 mem: location 2608 is 4
9999 mem: storing 1 in location 2610
 104 run: break-if done?:boolean, 
9999 mem: location 2610 is 1
9999 run: jumping to instruction 11
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1663 is 2
9999 mem: storing 3 in location 1663
 103 run: warnings:address:array:character <- get editor:address:editor-data/deref, warnings:offset
9999 mem: location 1657 is 1157
9999 mem: location 1157 is 1196
9999 mem: location 1158 is 1196
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1657 is 1157
9999 run: address to copy is 1160
9999 run: its type is address
9999 mem: location 1160 is 0
9999 mem: storing 0 in location 1681
 103 run: break-unless warnings:address:array:character, 
9999 mem: location 1681 is 0
9999 run: jumping to instruction 91
 103 run: break-if warnings:address:array:character, 
9999 mem: location 1681 is 0
9999 run: jump-if fell through
 103 run: response:address:array:character <- get editor:address:editor-data/deref, response:offset
9999 mem: location 1657 is 1157
9999 mem: location 1157 is 1196
9999 mem: location 1158 is 1196
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 4
9999 mem: location 1163 is 1
9999 mem: location 1164 is 0
9999 mem: location 1657 is 1157
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1682
 103 run: break-unless response:address:array:character, 
9999 mem: location 1682 is 0
9999 run: jumping to instruction 97
 103 run: break-if screen:address, 
9999 mem: location 1656 is 1031
9999 run: jumping to instruction 110
 103 run: done?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1663 is 3
9999 mem: location 1659 is 5
9999 mem: storing 0 in location 1683
 103 run: break-if done?:boolean, 
9999 mem: location 1683 is 0
9999 run: jump-if fell through
 103 run: draw-horizontal screen:address, row:number, left:number, right:number, 32:literal/space
9999 mem: location 1656 is 1031
9999 mem: location 1663 is 3
9999 mem: location 1658 is 0
9999 mem: location 1660 is 4
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2707
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2709
 104 run: row:number <- next-ingredient 
9999 mem: storing 3 in location 2710
 104 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 2711
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2712
 104 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 32 in location 2713
9999 mem: storing 1 in location 2714
 104 run: break-if style-found?:boolean, 
9999 mem: location 2714 is 1
9999 run: jumping to instruction 9
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2715
9999 mem: storing 0 in location 2716
 104 run: break-if color-found?:boolean, 
9999 mem: location 2716 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 245:literal/grey
9999 mem: storing 245 in location 2715
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2717
9999 mem: storing 0 in location 2718
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2718 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2717
 104 run: move-cursor screen:address, row:number, x:number
9999 mem: location 2709 is 1031
9999 mem: location 2710 is 3
9999 mem: location 2711 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2738
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2740
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 3 in location 2741
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2742
 105 run: break-unless x:address:screen, 
9999 mem: location 2740 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2740 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2740 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2743
 105 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2741 is 3
9999 mem: location 2743 is 1033
9999 mem: storing 3 in location 1033
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2740 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2740 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2744
 105 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2742 is 0
9999 mem: location 2744 is 1034
9999 mem: storing 0 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2740 is 1031
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2711 is 0
9999 mem: location 2712 is 4
9999 mem: storing 1 in location 2719
 104 run: break-unless continue?:boolean, 
9999 mem: location 2719 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 2709 is 1031
9999 mem: location 2713 is 32
9999 mem: location 2715 is 245
9999 mem: location 2717 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2769
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2771
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2772
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2773
9999 mem: storing 1 in location 2774
 105 run: break-if color-found?:boolean, 
9999 mem: location 2774 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2775
9999 mem: storing 1 in location 2776
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2776 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2771 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2771 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2771 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2777
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2771 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2771 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2778
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2771 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2771 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2779
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2771 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2771 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2780
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2772 is 32
9999 mem: storing 0 in location 2781
 105 run: break-unless newline?:boolean, 
9999 mem: location 2781 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2777 is 1033
9999 mem: location 1033 is 3
9999 mem: location 2779 is 5
9999 mem: storing 15 in location 2784
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2784 is 15
9999 mem: location 2778 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 15 in location 2784
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2771 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2771 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2785
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2772 is 32
9999 mem: storing 0 in location 2786
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2786 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2785 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 101
9999 mem: location 1060 is 7
9999 mem: location 1061 is 102
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2784 is 15
9999 mem: location 2785 is 1036
9999 mem: location 2784 is 15
9999 mem: storing 1067 in location 2788
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2788 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 2788 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 2789
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2788 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 2788 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 2790
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2772 is 32
9999 mem: location 2789 is 1067
9999 mem: storing 32 in location 1067
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2773 is 245
9999 mem: location 2790 is 1068
9999 mem: storing 245 in location 1068
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2779 is 5
9999 mem: storing 4 in location 2791
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2778 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2791 is 4
9999 mem: storing 0 in location 2792
 105 run: break-if at-right?:boolean, 
9999 mem: location 2792 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2778 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2778 is 1034
9999 mem: storing 1 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2771 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 2711 is 0
9999 mem: storing 1 in location 2711
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2711 is 1
9999 mem: location 2712 is 4
9999 mem: storing 1 in location 2719
 104 run: break-unless continue?:boolean, 
9999 mem: location 2719 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 2709 is 1031
9999 mem: location 2713 is 32
9999 mem: location 2715 is 245
9999 mem: location 2717 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2800
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2802
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2803
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2804
9999 mem: storing 1 in location 2805
 105 run: break-if color-found?:boolean, 
9999 mem: location 2805 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2806
9999 mem: storing 1 in location 2807
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2807 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2802 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2802 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2802 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2808
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2802 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2802 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2809
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2802 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2802 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2810
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2802 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2802 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2811
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2803 is 32
9999 mem: storing 0 in location 2812
 105 run: break-unless newline?:boolean, 
9999 mem: location 2812 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2808 is 1033
9999 mem: location 1033 is 3
9999 mem: location 2810 is 5
9999 mem: storing 15 in location 2815
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2815 is 15
9999 mem: location 2809 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 16 in location 2815
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2802 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2802 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2816
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2803 is 32
9999 mem: storing 0 in location 2817
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2817 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2816 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 101
9999 mem: location 1060 is 7
9999 mem: location 1061 is 102
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1067 is 32
9999 mem: location 1068 is 245
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2815 is 16
9999 mem: location 2816 is 1036
9999 mem: location 2815 is 16
9999 mem: storing 1069 in location 2819
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2819 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 2819 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 2820
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2819 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 2819 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 2821
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2803 is 32
9999 mem: location 2820 is 1069
9999 mem: storing 32 in location 1069
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2804 is 245
9999 mem: location 2821 is 1070
9999 mem: storing 245 in location 1070
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2810 is 5
9999 mem: storing 4 in location 2822
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2809 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2822 is 4
9999 mem: storing 0 in location 2823
 105 run: break-if at-right?:boolean, 
9999 mem: location 2823 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2809 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2809 is 1034
9999 mem: storing 2 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2802 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 2711 is 1
9999 mem: storing 2 in location 2711
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2711 is 2
9999 mem: location 2712 is 4
9999 mem: storing 1 in location 2719
 104 run: break-unless continue?:boolean, 
9999 mem: location 2719 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 2709 is 1031
9999 mem: location 2713 is 32
9999 mem: location 2715 is 245
9999 mem: location 2717 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2831
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2833
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2834
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2835
9999 mem: storing 1 in location 2836
 105 run: break-if color-found?:boolean, 
9999 mem: location 2836 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2837
9999 mem: storing 1 in location 2838
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2838 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2833 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2833 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2833 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2839
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2833 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2833 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2840
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2833 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2833 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2841
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2833 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2833 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2842
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2834 is 32
9999 mem: storing 0 in location 2843
 105 run: break-unless newline?:boolean, 
9999 mem: location 2843 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2839 is 1033
9999 mem: location 1033 is 3
9999 mem: location 2841 is 5
9999 mem: storing 15 in location 2846
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2846 is 15
9999 mem: location 2840 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 17 in location 2846
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2833 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2833 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2847
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2834 is 32
9999 mem: storing 0 in location 2848
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2848 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2847 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 101
9999 mem: location 1060 is 7
9999 mem: location 1061 is 102
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1067 is 32
9999 mem: location 1068 is 245
9999 mem: location 1069 is 32
9999 mem: location 1070 is 245
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2846 is 17
9999 mem: location 2847 is 1036
9999 mem: location 2846 is 17
9999 mem: storing 1071 in location 2850
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2850 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 2850 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 2851
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2850 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 2850 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 2852
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2834 is 32
9999 mem: location 2851 is 1071
9999 mem: storing 32 in location 1071
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2835 is 245
9999 mem: location 2852 is 1072
9999 mem: storing 245 in location 1072
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2841 is 5
9999 mem: storing 4 in location 2853
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2840 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2853 is 4
9999 mem: storing 0 in location 2854
 105 run: break-if at-right?:boolean, 
9999 mem: location 2854 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2840 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2840 is 1034
9999 mem: storing 3 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2833 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 2711 is 2
9999 mem: storing 3 in location 2711
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2711 is 3
9999 mem: location 2712 is 4
9999 mem: storing 1 in location 2719
 104 run: break-unless continue?:boolean, 
9999 mem: location 2719 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 2709 is 1031
9999 mem: location 2713 is 32
9999 mem: location 2715 is 245
9999 mem: location 2717 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2862
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2864
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2865
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2866
9999 mem: storing 1 in location 2867
 105 run: break-if color-found?:boolean, 
9999 mem: location 2867 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2868
9999 mem: storing 1 in location 2869
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2869 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2864 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2864 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2864 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2870
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2864 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2864 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2871
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2864 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2864 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2872
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2864 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2864 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2873
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2865 is 32
9999 mem: storing 0 in location 2874
 105 run: break-unless newline?:boolean, 
9999 mem: location 2874 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2870 is 1033
9999 mem: location 1033 is 3
9999 mem: location 2872 is 5
9999 mem: storing 15 in location 2877
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2877 is 15
9999 mem: location 2871 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 18 in location 2877
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2864 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2864 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2878
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2865 is 32
9999 mem: storing 0 in location 2879
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2879 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2878 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 101
9999 mem: location 1060 is 7
9999 mem: location 1061 is 102
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 32
9999 mem: location 1066 is 7
9999 mem: location 1067 is 32
9999 mem: location 1068 is 245
9999 mem: location 1069 is 32
9999 mem: location 1070 is 245
9999 mem: location 1071 is 32
9999 mem: location 1072 is 245
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2877 is 18
9999 mem: location 2878 is 1036
9999 mem: location 2877 is 18
9999 mem: storing 1073 in location 2881
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2881 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 2881 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 2882
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2881 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 2881 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 2883
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2865 is 32
9999 mem: location 2882 is 1073
9999 mem: storing 32 in location 1073
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2866 is 245
9999 mem: location 2883 is 1074
9999 mem: storing 245 in location 1074
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2872 is 5
9999 mem: storing 4 in location 2884
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2871 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2884 is 4
9999 mem: storing 0 in location 2885
 105 run: break-if at-right?:boolean, 
9999 mem: location 2885 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2871 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2871 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2864 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 2711 is 3
9999 mem: storing 4 in location 2711
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2711 is 4
9999 mem: location 2712 is 4
9999 mem: storing 0 in location 2719
 104 run: break-unless continue?:boolean, 
9999 mem: location 2719 is 0
9999 run: jumping to instruction 27
 103 run: cursor-inside-right-margin?:boolean <- lesser-or-equal cursor-column:address:number/deref, right:number
9999 mem: location 1666 is 1164
9999 mem: location 1164 is 0
9999 mem: location 1660 is 4
9999 mem: storing 1 in location 1684
 103 run: assert cursor-inside-right-margin?:boolean, [cursor outside right margin]
9999 mem: location 1684 is 1
 103 run: cursor-inside-left-margin?:boolean <- greater-or-equal cursor-column:address:number/deref, left:number
9999 mem: location 1666 is 1164
9999 mem: location 1164 is 0
9999 mem: location 1658 is 0
9999 mem: storing 1 in location 1685
 103 run: assert cursor-inside-left-margin?:boolean, [cursor outside left margin]
9999 mem: location 1685 is 1
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 1656 is 1031
9999 mem: location 1665 is 1163
9999 mem: location 1163 is 1
9999 mem: location 1666 is 1164
9999 mem: location 1164 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2893
schedule: move-cursor/render/new-editor/run1001/editor-initially-prints-multiple-lines
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2895
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 2896
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2897
 104 run: break-unless x:address:screen, 
9999 mem: location 2895 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2895 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 3
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2895 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2898
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2896 is 1
9999 mem: location 2898 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2895 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2895 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2899
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2897 is 0
9999 mem: location 2899 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2895 is 1031
 103 run: show-screen screen:address
9999 mem: location 1656 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2924
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2926
 104 run: break-unless x:address:screen, 
9999 mem: location 2926 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2926 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:1, screen:address/same-as-ingredient:0
9999 mem: location 1657 is 1157
9999 mem: location 1656 is 1031
9999 run: result 0 is 1157
9999 run: result 1 is 1031
9999 mem: storing 1157 in location 1132
9999 mem: storing 1031 in location 1129
 102 run: reply result:address:editor-data, screen:address/same-as-ingredient:0
9999 mem: location 1132 is 1157
9999 mem: location 1129 is 1031
 100 run: screen-should-contain [
    .     .
    .abc  .
    .def  .
    .     .
  ]
