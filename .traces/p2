c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1))) -- ((open 3))
c{0: 4 (((break-unless)) ((at-bottom? boolean))) -- ((open 3))
c{0: 5 (((screen-full? boolean)) <- ((greater-or-equal)) ((app-height integer) (space 1)) ((screen-height integer) (space 1))) -- ((open 5) (open 3))
c{0: 6 (((break-unless)) ((screen-full? boolean))) -- ((open 5) (open 3))
c{0: 7 (((cursor-to-next-line)) ((screen terminal-address))) -- ((open 5) (open 3))
c{0: 8 (((cursor-up)) ((screen terminal-address))) -- ((open 5) (open 3))
c{0: 9 (((reply))) -- ((open 5) (open 3))
c{0: 10 (((printed-height integer) (space 1)) <- ((add)) ((printed-height integer) (space 1)) ((1 literal))) -- ((close 10) (open 5) (open 3))
c{0: 11 (((grow-max? boolean)) <- ((greater-than)) ((printed-height integer) (space 1)) ((app-height integer) (space 1))) -- ((open 11) (close 10) (open 5) (open 3))
c{0: 12 (((break-unless)) ((grow-max? boolean))) -- ((open 11) (close 10) (open 5) (open 3))
c{0: 13 (((app-height integer) (space 1)) <- ((copy)) ((printed-height integer) (space 1))) -- ((open 11) (close 10) (open 5) (open 3))
c{0: 14 (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal))) -- ((close 14) (close 14) (open 11) (close 10) (open 5) (open 3))
c{0: 15 (((cursor-to-next-line)) ((screen terminal-address))) -- ((close 14) (close 14) (open 11) (close 10) (open 5) (open 3))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1)))
c{1: 4 X (((break-unless)) ((at-bottom? boolean))) => (((jump-unless)) ((at-bottom? boolean)) ((9 offset)))
c{1: 5 ✓ (((screen-full? boolean)) <- ((greater-or-equal)) ((app-height integer) (space 1)) ((screen-height integer) (space 1)))
c{1: 6 X (((break-unless)) ((screen-full? boolean))) => (((jump-unless)) ((screen-full? boolean)) ((3 offset)))
c{1: 7 ✓ (((cursor-to-next-line)) ((screen terminal-address)))
c{1: 8 ✓ (((cursor-up)) ((screen terminal-address)))
c{1: 9 ✓ (((reply)))
c{1: 10 ✓ (((printed-height integer) (space 1)) <- ((add)) ((printed-height integer) (space 1)) ((1 literal)))
c{1: 11 ✓ (((grow-max? boolean)) <- ((greater-than)) ((printed-height integer) (space 1)) ((app-height integer) (space 1)))
c{1: 12 X (((break-unless)) ((grow-max? boolean))) => (((jump-unless)) ((grow-max? boolean)) ((1 offset)))
c{1: 13 ✓ (((app-height integer) (space 1)) <- ((copy)) ((printed-height integer) (space 1)))
c{1: 14 ✓ (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal)))
c{1: 15 ✓ (((cursor-to-next-line)) ((screen terminal-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((target-row integer)) <- ((next-input))) -- nil
c{0: 4 (((below-target? boolean)) <- ((greater-than)) ((cursor-row integer) (space 1)) ((target-row integer))) -- ((open 4))
c{0: 5 (((break-unless)) ((below-target? boolean))) -- ((open 4))
c{0: 6 (((up)) ((0 space-address)) ((screen terminal-address))) -- ((open 4))
c{0: 7 (((loop))) -- ((open 4))
c{0: 8 (((above-target? boolean)) <- ((less-than)) ((cursor-row integer) (space 1)) ((target-row integer))) -- ((open 8) (close 8) (open 4))
c{0: 9 (((break-unless)) ((above-target? boolean))) -- ((open 8) (close 8) (open 4))
c{0: 10 (((down)) ((0 space-address)) ((screen terminal-address))) -- ((open 8) (close 8) (open 4))
c{0: 11 (((loop))) -- ((open 8) (close 8) (open 4))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((target-row integer)) <- ((next-input)))
c{1: 4 ✓ (((below-target? boolean)) <- ((greater-than)) ((cursor-row integer) (space 1)) ((target-row integer)))
c{1: 5 X (((break-unless)) ((below-target? boolean))) => (((jump-unless)) ((below-target? boolean)) ((2 offset)))
c{1: 6 ✓ (((up)) ((0 space-address)) ((screen terminal-address)))
c{1: 7 X (((loop))) => (((jump)) ((-4 offset)))
c{1: 8 ✓ (((above-target? boolean)) <- ((less-than)) ((cursor-row integer) (space 1)) ((target-row integer)))
c{1: 9 X (((break-unless)) ((above-target? boolean))) => (((jump-unless)) ((above-target? boolean)) ((2 offset)))
c{1: 10 ✓ (((down)) ((0 space-address)) ((screen terminal-address)))
c{1: 11 X (((loop))) => (((jump)) ((-4 offset)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((x string-address)) <- ((next-input))) -- nil
c{0: 2 (((screen-height integer)) <- ((next-input))) -- nil
c{0: 3 (((s stream-address)) <- ((init-stream)) ((x string-address))) -- nil
c{0: 4 (((traces instruction-trace-address-array-address)) <- ((parse-traces)) ((s stream-address))) -- nil
c{0: 5 (((0 space-address) (names screen-state)) <- ((screen-state)) ((traces instruction-trace-address-array-address)) ((screen-height integer))) -- nil
c{0: 6 (((cursor-mode))) -- nil
c{0: 7 (((print-traces-collapsed)) ((0 space-address) (screen-state)) ((nil literal) (terminal))) -- nil
c{0: 8 (((quit? boolean)) <- ((process-key)) ((0 space-address) (screen-state)) ((nil literal) (keyboard)) ((nil literal) (terminal))) -- ((open 8))
c{0: 9 (((break-if)) ((quit? boolean))) -- ((open 8))
c{0: 10 (((loop))) -- ((open 8))
c{0: 11 (((to-bottom)) ((0 space-address) (screen-state)) ((nil literal) (terminal))) -- ((close 11) (open 8))
c{0: 12 (((retro-mode))) -- ((close 11) (open 8))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((x string-address)) <- ((next-input)))
c{1: 2 ✓ (((screen-height integer)) <- ((next-input)))
c{1: 3 ✓ (((s stream-address)) <- ((init-stream)) ((x string-address)))
c{1: 4 ✓ (((traces instruction-trace-address-array-address)) <- ((parse-traces)) ((s stream-address)))
c{1: 5 ✓ (((0 space-address) (names screen-state)) <- ((screen-state)) ((traces instruction-trace-address-array-address)) ((screen-height integer)))
c{1: 6 ✓ (((cursor-mode)))
c{1: 7 ✓ (((print-traces-collapsed)) ((0 space-address) (screen-state)) ((nil literal) (terminal)))
c{1: 8 ✓ (((quit? boolean)) <- ((process-key)) ((0 space-address) (screen-state)) ((nil literal) (keyboard)) ((nil literal) (terminal)))
c{1: 9 X (((break-if)) ((quit? boolean))) => (((jump-if)) ((quit? boolean)) ((1 offset)))
c{1: 10 X (((loop))) => (((jump)) ((-3 offset)))
c{1: 11 ✓ (((to-bottom)) ((0 space-address) (screen-state)) ((nil literal) (terminal)))
c{1: 12 ✓ (((retro-mode)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((n integer) (screen)) <- ((next-input))) -- nil
c{0: 3 (((has-expanded? boolean)) <- ((greater-or-equal)) ((expanded-index integer) (space 1)) ((0 literal))) -- ((open 3))
c{0: 4 (((break-if)) ((has-expanded? boolean))) -- ((open 3))
c{0: 5 (((reply)) ((n integer) (index))) -- ((open 3))
c{0: 6 (((above-expanded? boolean)) <- ((lesser-or-equal)) ((cursor-row integer) (space 1) (screen)) ((expanded-index integer) (space 1))) -- ((open 6) (close 6) (open 3))
c{0: 7 (((break-unless)) ((above-expanded? boolean))) -- ((open 6) (close 6) (open 3))
c{0: 8 (((reply)) ((n integer) (index))) -- ((open 6) (close 6) (open 3))
c{0: 9 (((k integer) (index)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1))) -- ((close 9) (open 6) (close 6) (open 3))
c{0: 10 (((result integer) (index)) <- ((subtract)) ((n integer) (screen)) ((k integer) (index))) -- ((close 9) (open 6) (close 6) (open 3))
c{0: 11 (((reply)) ((result integer) (index))) -- ((close 9) (open 6) (close 6) (open 3))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((n integer) (screen)) <- ((next-input)))
c{1: 3 ✓ (((has-expanded? boolean)) <- ((greater-or-equal)) ((expanded-index integer) (space 1)) ((0 literal)))
c{1: 4 X (((break-if)) ((has-expanded? boolean))) => (((jump-if)) ((has-expanded? boolean)) ((1 offset)))
c{1: 5 ✓ (((reply)) ((n integer) (index)))
c{1: 6 ✓ (((above-expanded? boolean)) <- ((lesser-or-equal)) ((cursor-row integer) (space 1) (screen)) ((expanded-index integer) (space 1)))
c{1: 7 X (((break-unless)) ((above-expanded? boolean))) => (((jump-unless)) ((above-expanded? boolean)) ((1 offset)))
c{1: 8 ✓ (((reply)) ((n integer) (index)))
c{1: 9 ✓ (((k integer) (index)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1)))
c{1: 10 ✓ (((result integer) (index)) <- ((subtract)) ((n integer) (screen)) ((k integer) (index)))
c{1: 11 ✓ (((reply)) ((result integer) (index)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((no-expanded? boolean)) <- ((less-than)) ((expanded-index integer) (space 1)) ((0 literal))) -- ((open 3))
c{0: 4 (((break-if)) ((no-expanded? boolean))) -- ((open 3))
c{0: 5 (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) -- ((open 3))
c{0: 6 (((break-unless)) ((at-expanded? boolean))) -- ((open 3))
c{0: 7 (((n integer)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1))) -- ((open 3))
c{0: 8 (((n integer)) <- ((add)) ((n integer)) ((1 literal))) -- ((open 3))
c{0: 9 (((i integer)) <- ((copy)) ((0 literal))) -- ((open 3))
c{0: 10 (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((n integer))) -- ((open 10) (open 3))
c{0: 11 (((break-if)) ((done? boolean))) -- ((open 10) (open 3))
c{0: 12 (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal))) -- ((open 10) (open 3))
c{0: 13 (((cursor-down)) ((screen terminal-address))) -- ((open 10) (open 3))
c{0: 14 (((i integer)) <- ((add)) ((i integer)) ((1 literal))) -- ((open 10) (open 3))
c{0: 15 (((loop))) -- ((open 10) (open 3))
c{0: 16 (((reply))) -- ((close 16) (open 10) (open 3))
c{0: 17 (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1))) -- ((open 17) (close 17) (close 16) (open 10) (open 3))
c{0: 18 (((break-if)) ((at-bottom? boolean))) -- ((open 17) (close 17) (close 16) (open 10) (open 3))
c{0: 19 (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal))) -- ((open 17) (close 17) (close 16) (open 10) (open 3))
c{0: 20 (((cursor-down)) ((screen terminal-address))) -- ((open 17) (close 17) (close 16) (open 10) (open 3))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((no-expanded? boolean)) <- ((less-than)) ((expanded-index integer) (space 1)) ((0 literal)))
c{1: 4 X (((break-if)) ((no-expanded? boolean))) => (((jump-if)) ((no-expanded? boolean)) ((12 offset)))
c{1: 5 ✓ (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1)))
c{1: 6 X (((break-unless)) ((at-expanded? boolean))) => (((jump-unless)) ((at-expanded? boolean)) ((10 offset)))
c{1: 7 ✓ (((n integer)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1)))
c{1: 8 ✓ (((n integer)) <- ((add)) ((n integer)) ((1 literal)))
c{1: 9 ✓ (((i integer)) <- ((copy)) ((0 literal)))
c{1: 10 ✓ (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((n integer)))
c{1: 11 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((4 offset)))
c{1: 12 ✓ (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal)))
c{1: 13 ✓ (((cursor-down)) ((screen terminal-address)))
c{1: 14 ✓ (((i integer)) <- ((add)) ((i integer)) ((1 literal)))
c{1: 15 X (((loop))) => (((jump)) ((-6 offset)))
c{1: 16 ✓ (((reply)))
c{1: 17 ✓ (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1)))
c{1: 18 X (((break-if)) ((at-bottom? boolean))) => (((jump-if)) ((at-bottom? boolean)) ((2 offset)))
c{1: 19 ✓ (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal)))
c{1: 20 ✓ (((cursor-down)) ((screen terminal-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((traces instruction-trace-address-array-address)) <- ((next-input))) -- nil
c{0: 2 (((index integer)) <- ((next-input))) -- nil
c{0: 3 (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (deref)) ((index integer))) -- nil
c{0: 4 (((tr-children trace-address-array-address)) <- ((get)) ((tr instruction-trace-address) (deref)) ((children offset))) -- nil
c{0: 5 (((n integer)) <- ((length)) ((tr-children instruction-trace-address-array-address) (deref))) -- nil
c{0: 6 (((reply)) ((n integer))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((traces instruction-trace-address-array-address)) <- ((next-input)))
c{1: 2 ✓ (((index integer)) <- ((next-input)))
c{1: 3 ✓ (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (deref)) ((index integer)))
c{1: 4 ✓ (((tr-children trace-address-array-address)) <- ((get)) ((tr instruction-trace-address) (deref)) ((children offset)))
c{1: 5 ✓ (((n integer)) <- ((length)) ((tr-children instruction-trace-address-array-address) (deref)))
c{1: 6 ✓ (((reply)) ((n integer)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((x string-address)) <- ((new)) schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((1 literal)))
run: main 0: 1 => ((1 integer))
mem: ((1 integer)): 1 <= 1) -- nil
c{0: 2 (((n integer)) <- ((length)) ((x string-address) (deref))) -- nil
c{0: 3 ((($print)) ((p2  literal))) -- nil
c{0: 4 ((($print)) ((n integer))) -- nil
c{0: 5 ((($print)) ((
 literal))) -- nil
c{0: 6 (((s stream-address)) <- ((init-stream)) ((x string-address))) -- nil
c{0: 7 (((traces instruction-trace-address-array-address)) <- ((parse-traces)) ((s stream-address))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((x string-address)) <- ((new)) schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((1 literal)))
run: main 0: 1 => ((1 integer))
mem: ((1 integer)): 1 <= 1)
c{1: 2 ✓ (((n integer)) <- ((length)) ((x string-address) (deref)))
c{1: 3 ✓ ((($print)) ((p2  literal)))
c{1: 4 ✓ ((($print)) ((n integer)))
c{1: 5 ✓ ((($print)) ((
 literal)))
c{1: 6 ✓ (((s stream-address)) <- ((init-stream)) ((x string-address)))
c{1: 7 ✓ (((traces instruction-trace-address-array-address)) <- ((parse-traces)) ((s stream-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((in trace-address)) <- ((next-input))) -- nil
c{0: 2 (((buf string-address)) <- ((get)) ((in trace-address) (deref)) ((contents offset))) -- nil
c{0: 3 (((result instruction-trace-address)) <- ((new)) ((instruction-trace literal))) -- nil
c{0: 4 (((f1 string-address)) ((rest string-address)) <- ((split-first)) ((buf string-address)) ((  literal))) -- nil
c{0: 5 (((cs string-address-array-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((call-stack offset))) -- nil
c{0: 6 (((cs string-address-array-address-address) (deref)) <- ((split)) ((f1 string-address)) ((/ literal))) -- nil
c{0: 7 (((p string-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((pc offset))) -- nil
c{0: 8 (((delim string-address)) <- ((new)) : ) -- nil
c{0: 9 (((p string-address-address) (deref)) ((rest string-address)) <- ((split-first-at-substring)) ((rest string-address)) ((delim string-address))) -- nil
c{0: 10 (((inst string-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((instruction offset))) -- nil
c{0: 11 (((inst string-address-address) (deref)) <- ((copy)) ((rest string-address))) -- nil
c{0: 12 (((reply)) ((result instruction-trace-address))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((in trace-address)) <- ((next-input)))
c{1: 2 ✓ (((buf string-address)) <- ((get)) ((in trace-address) (deref)) ((contents offset)))
c{1: 3 ✓ (((result instruction-trace-address)) <- ((new)) ((instruction-trace literal)))
c{1: 4 ✓ (((f1 string-address)) ((rest string-address)) <- ((split-first)) ((buf string-address)) ((  literal)))
c{1: 5 ✓ (((cs string-address-array-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((call-stack offset)))
c{1: 6 ✓ (((cs string-address-array-address-address) (deref)) <- ((split)) ((f1 string-address)) ((/ literal)))
c{1: 7 ✓ (((p string-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((pc offset)))
c{1: 8 ✓ (((delim string-address)) <- ((new)) : )
c{1: 9 ✓ (((p string-address-address) (deref)) ((rest string-address)) <- ((split-first-at-substring)) ((rest string-address)) ((delim string-address)))
c{1: 10 ✓ (((inst string-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((instruction offset)))
c{1: 11 ✓ (((inst string-address-address) (deref)) <- ((copy)) ((rest string-address)))
c{1: 12 ✓ (((reply)) ((result instruction-trace-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((in string-address)) <- ((next-input))) -- nil
c{0: 2 (((result trace-address)) <- ((new)) ((trace literal))) -- nil
c{0: 3 (((delim string-address)) <- ((new)) : ) -- nil
c{0: 4 (((first string-address)) ((rest string-address)) <- ((split-first-at-substring)) ((in string-address)) ((delim string-address))) -- nil
c{0: 5 (((l string-address-address)) <- ((get-address)) ((result trace-address) (deref)) ((label offset))) -- nil
c{0: 6 (((l string-address-address) (deref)) <- ((copy)) ((first string-address))) -- nil
c{0: 7 (((c string-address-address)) <- ((get-address)) ((result trace-address) (deref)) ((contents offset))) -- nil
c{0: 8 (((c string-address-address) (deref)) <- ((copy)) ((rest string-address))) -- nil
c{0: 9 (((reply)) ((result trace-address))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((in string-address)) <- ((next-input)))
c{1: 2 ✓ (((result trace-address)) <- ((new)) ((trace literal)))
c{1: 3 ✓ (((delim string-address)) <- ((new)) : )
c{1: 4 ✓ (((first string-address)) ((rest string-address)) <- ((split-first-at-substring)) ((in string-address)) ((delim string-address)))
c{1: 5 ✓ (((l string-address-address)) <- ((get-address)) ((result trace-address) (deref)) ((label offset)))
c{1: 6 ✓ (((l string-address-address) (deref)) <- ((copy)) ((first string-address)))
c{1: 7 ✓ (((c string-address-address)) <- ((get-address)) ((result trace-address) (deref)) ((contents offset)))
c{1: 8 ✓ (((c string-address-address) (deref)) <- ((copy)) ((rest string-address)))
c{1: 9 ✓ (((reply)) ((result trace-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((in stream-address)) <- ((next-input))) -- nil
c{0: 2 (((result buffer-address)) <- ((init-buffer)) ((30 literal))) -- nil
c{0: 3 (((curr-tail instruction-trace-address)) <- ((copy)) ((nil literal))) -- nil
c{0: 4 (((ch buffer-address)) <- ((init-buffer)) ((5 literal))) -- nil
c{0: 5 (((run string-address) (const)) <- ((new)) run) -- nil
c{0: 6 next-line -- ((open 6))
c{0: 7 (((done? boolean)) <- ((end-of-stream?)) ((in stream-address))) -- ((open 6))
c{0: 8 (((break-if)) ((done? boolean))) -- ((open 6))
c{0: 9 (((line string-address)) <- ((read-line)) ((in stream-address))) -- ((open 6))
c{0: 10 (((f trace-address)) <- ((parse-trace)) ((line string-address))) -- ((open 6))
c{0: 11 (((l string-address)) <- ((get)) ((f trace-address) (deref)) ((label offset))) -- ((open 6))
c{0: 12 (((inst? boolean)) <- ((string-equal)) ((l string-address)) ((run string-address) (const))) -- ((open 12) (open 6))
c{0: 13 (((break-unless)) ((inst? boolean))) -- ((open 12) (open 6))
c{0: 14 (((break-unless)) ((curr-tail instruction-trace-address))) -- ((open 14) (open 12) (open 6))
c{0: 15 (((c trace-address-array-address-address)) <- ((get-address)) ((curr-tail instruction-trace-address) (deref)) ((children offset))) -- ((open 14) (open 12) (open 6))
c{0: 16 (((c trace-address-array-address-address) (deref)) <- ((to-array)) ((ch buffer-address))) -- ((open 14) (open 12) (open 6))
c{0: 17 (((ch buffer-address)) <- ((init-buffer)) ((5 literal))) -- ((open 14) (open 12) (open 6))
c{0: 18 (((curr-tail instruction-trace-address)) <- ((parse-instruction-trace)) ((f trace-address))) -- ((close 18) (open 14) (open 12) (open 6))
c{0: 19 (((result buffer-address)) <- ((append)) ((result buffer-address)) ((curr-tail instruction-trace-address))) -- ((close 18) (open 14) (open 12) (open 6))
c{0: 20 (((jump)) ((next-line offset))) -- ((close 18) (open 14) (open 12) (open 6))
c{0: 21 (((loop-unless)) ((curr-tail instruction-trace-address))) -- ((close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 22 (((ch buffer-address)) <- ((append)) ((ch buffer-address)) ((f trace-address))) -- ((close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 23 (((loop))) -- ((close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 24 (((break-unless)) ((curr-tail instruction-trace-address))) -- ((open 24) (close 24) (close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 25 (((c trace-address-array-address-address)) <- ((get-address)) ((curr-tail instruction-trace-address) (deref)) ((children offset))) -- ((open 24) (close 24) (close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 26 (((c trace-address-array-address-address) (deref)) <- ((to-array)) ((ch buffer-address))) -- ((open 24) (close 24) (close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 27 (((s instruction-trace-address-array-address)) <- ((to-array)) ((result buffer-address))) -- ((close 27) (open 24) (close 24) (close 21) (close 18) (open 14) (open 12) (open 6))
c{0: 28 (((reply)) ((s instruction-trace-address-array-address))) -- ((close 27) (open 24) (close 24) (close 21) (close 18) (open 14) (open 12) (open 6))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((in stream-address)) <- ((next-input)))
c{1: 2 ✓ (((result buffer-address)) <- ((init-buffer)) ((30 literal)))
c{1: 3 ✓ (((curr-tail instruction-trace-address)) <- ((copy)) ((nil literal)))
c{1: 4 ✓ (((ch buffer-address)) <- ((init-buffer)) ((5 literal)))
c{1: 5 ✓ (((run string-address) (const)) <- ((new)) run)
c{1: 7 ✓ (((done? boolean)) <- ((end-of-stream?)) ((in stream-address)))
c{1: 8 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((15 offset)))
c{1: 9 ✓ (((line string-address)) <- ((read-line)) ((in stream-address)))
c{1: 10 ✓ (((f trace-address)) <- ((parse-trace)) ((line string-address)))
c{1: 11 ✓ (((l string-address)) <- ((get)) ((f trace-address) (deref)) ((label offset)))
c{1: 12 ✓ (((inst? boolean)) <- ((string-equal)) ((l string-address)) ((run string-address) (const)))
c{1: 13 X (((break-unless)) ((inst? boolean))) => (((jump-unless)) ((inst? boolean)) ((7 offset)))
c{1: 14 X (((break-unless)) ((curr-tail instruction-trace-address))) => (((jump-unless)) ((curr-tail instruction-trace-address)) ((3 offset)))
c{1: 15 ✓ (((c trace-address-array-address-address)) <- ((get-address)) ((curr-tail instruction-trace-address) (deref)) ((children offset)))
c{1: 16 ✓ (((c trace-address-array-address-address) (deref)) <- ((to-array)) ((ch buffer-address)))
c{1: 17 ✓ (((ch buffer-address)) <- ((init-buffer)) ((5 literal)))
c{1: 18 ✓ (((curr-tail instruction-trace-address)) <- ((parse-instruction-trace)) ((f trace-address)))
c{1: 19 ✓ (((result buffer-address)) <- ((append)) ((result buffer-address)) ((curr-tail instruction-trace-address)))
c{1: 20 ✓ (((jump)) ((next-line offset)))
c{1: 21 X (((loop-unless)) ((curr-tail instruction-trace-address))) => (((jump-unless)) ((curr-tail instruction-trace-address)) ((-16 offset)))
c{1: 22 ✓ (((ch buffer-address)) <- ((append)) ((ch buffer-address)) ((f trace-address)))
c{1: 23 X (((loop))) => (((jump)) ((-18 offset)))
c{1: 24 X (((break-unless)) ((curr-tail instruction-trace-address))) => (((jump-unless)) ((curr-tail instruction-trace-address)) ((2 offset)))
c{1: 25 ✓ (((c trace-address-array-address-address)) <- ((get-address)) ((curr-tail instruction-trace-address) (deref)) ((children offset)))
c{1: 26 ✓ (((c trace-address-array-address-address) (deref)) <- ((to-array)) ((ch buffer-address)))
c{1: 27 ✓ (((s instruction-trace-address-array-address)) <- ((to-array)) ((result buffer-address)))
c{1: 28 ✓ (((reply)) ((s instruction-trace-address-array-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 2 (((x instruction-trace-address)) <- ((next-input))) -- nil
c{0: 3 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 4 (((clear-line)) ((screen terminal-address))) -- nil
c{0: 5 (((print-character)) ((screen terminal-address)) ((- literal))) -- nil
c{0: 6 (((print-character)) ((screen terminal-address)) ((  literal))) -- nil
c{0: 7 (((c string-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((call-stack offset))) -- nil
c{0: 8 (((i integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 9 (((len integer)) <- ((length)) ((c string-address-array-address) (deref))) -- nil
c{0: 10 (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer))) -- ((open 10))
c{0: 11 (((break-if)) ((done? boolean))) -- ((open 10))
c{0: 12 (((s string-address)) <- ((index)) ((c string-address-array-address) (deref)) ((i integer))) -- ((open 10))
c{0: 13 (((print-string)) ((screen terminal-address)) ((s string-address))) -- ((open 10))
c{0: 14 (((print-character)) ((screen terminal-address)) ((/ literal))) -- ((open 10))
c{0: 15 (((i integer)) <- ((add)) ((i integer)) ((1 literal))) -- ((open 10))
c{0: 16 (((loop))) -- ((open 10))
c{0: 17 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((close 17) (open 10))
c{0: 18 (((p string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((pc offset))) -- ((close 17) (open 10))
c{0: 19 (((print-string)) ((screen terminal-address)) ((p string-address))) -- ((close 17) (open 10))
c{0: 20 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((close 17) (open 10))
c{0: 21 (((print-character)) ((screen terminal-address)) ((: literal))) -- ((close 17) (open 10))
c{0: 22 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((close 17) (open 10))
c{0: 23 (((i string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((instruction offset))) -- ((close 17) (open 10))
c{0: 24 (((print-string)) ((screen terminal-address)) ((i string-address))) -- ((close 17) (open 10))
c{0: 25 (((add-line)) ((0 space-address) (screen-state)) ((screen terminal-address))) -- ((close 17) (open 10))
c{0: 26 (((ch trace-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((children offset))) -- ((close 17) (open 10))
c{0: 27 (((i integer)) <- ((copy)) ((0 literal))) -- ((close 17) (open 10))
c{0: 28 (((break-if)) ((ch trace-address-array-address))) -- ((open 28) (close 17) (open 10))
c{0: 29 (((reply))) -- ((open 28) (close 17) (open 10))
c{0: 30 (((len integer)) <- ((length)) ((ch trace-address-array-address) (deref))) -- ((close 30) (open 28) (close 17) (open 10))
c{0: 31 (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 32 (((break-if)) ((done? boolean))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 33 (((screen-done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((screen-height integer) (space 1))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 34 (((break-if)) ((screen-done? boolean))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 35 (((t trace-address)) <- ((index)) ((ch trace-address-array-address) (deref)) ((i integer))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 36 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 37 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 38 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 39 (((print-trace)) ((screen terminal-address)) ((t trace-address))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 40 (((add-line)) ((0 space-address) (screen-state)) ((screen terminal-address))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 41 (((i integer)) <- ((add)) ((i integer)) ((1 literal))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{0: 42 (((loop))) -- ((open 31) (close 30) (open 28) (close 17) (open 10))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 2 ✓ (((x instruction-trace-address)) <- ((next-input)))
c{1: 3 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 4 ✓ (((clear-line)) ((screen terminal-address)))
c{1: 5 ✓ (((print-character)) ((screen terminal-address)) ((- literal)))
c{1: 6 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 7 ✓ (((c string-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((call-stack offset)))
c{1: 8 ✓ (((i integer)) <- ((copy)) ((0 literal)))
c{1: 9 ✓ (((len integer)) <- ((length)) ((c string-address-array-address) (deref)))
c{1: 10 ✓ (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer)))
c{1: 11 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((5 offset)))
c{1: 12 ✓ (((s string-address)) <- ((index)) ((c string-address-array-address) (deref)) ((i integer)))
c{1: 13 ✓ (((print-string)) ((screen terminal-address)) ((s string-address)))
c{1: 14 ✓ (((print-character)) ((screen terminal-address)) ((/ literal)))
c{1: 15 ✓ (((i integer)) <- ((add)) ((i integer)) ((1 literal)))
c{1: 16 X (((loop))) => (((jump)) ((-7 offset)))
c{1: 17 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 18 ✓ (((p string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((pc offset)))
c{1: 19 ✓ (((print-string)) ((screen terminal-address)) ((p string-address)))
c{1: 20 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 21 ✓ (((print-character)) ((screen terminal-address)) ((: literal)))
c{1: 22 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 23 ✓ (((i string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((instruction offset)))
c{1: 24 ✓ (((print-string)) ((screen terminal-address)) ((i string-address)))
c{1: 25 ✓ (((add-line)) ((0 space-address) (screen-state)) ((screen terminal-address)))
c{1: 26 ✓ (((ch trace-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((children offset)))
c{1: 27 ✓ (((i integer)) <- ((copy)) ((0 literal)))
c{1: 28 X (((break-if)) ((ch trace-address-array-address))) => (((jump-if)) ((ch trace-address-array-address)) ((1 offset)))
c{1: 29 ✓ (((reply)))
c{1: 30 ✓ (((len integer)) <- ((length)) ((ch trace-address-array-address) (deref)))
c{1: 31 ✓ (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer)))
c{1: 32 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((10 offset)))
c{1: 33 ✓ (((screen-done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((screen-height integer) (space 1)))
c{1: 34 X (((break-if)) ((screen-done? boolean))) => (((jump-if)) ((screen-done? boolean)) ((8 offset)))
c{1: 35 ✓ (((t trace-address)) <- ((index)) ((ch trace-address-array-address) (deref)) ((i integer)))
c{1: 36 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 37 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 38 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 39 ✓ (((print-trace)) ((screen terminal-address)) ((t trace-address)))
c{1: 40 ✓ (((add-line)) ((0 space-address) (screen-state)) ((screen terminal-address)))
c{1: 41 ✓ (((i integer)) <- ((add)) ((i integer)) ((1 literal)))
c{1: 42 X (((loop))) => (((jump)) ((-12 offset)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((screen terminal)) <- ((next-input))) -- nil
c{0: 2 (((x instruction-trace-address)) <- ((next-input))) -- nil
c{0: 3 (((screen-state space-address)) <- ((next-input))) -- nil
c{0: 4 (((clear-line)) ((screen terminal-address))) -- nil
c{0: 5 (((print-character)) ((screen terminal-address)) ((+ literal))) -- nil
c{0: 6 (((print-character)) ((screen terminal-address)) ((  literal))) -- nil
c{0: 7 (((c string-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((call-stack offset))) -- nil
c{0: 8 (((i integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 9 (((len integer)) <- ((length)) ((c string-address-array-address) (deref))) -- nil
c{0: 10 (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer))) -- ((open 10))
c{0: 11 (((break-if)) ((done? boolean))) -- ((open 10))
c{0: 12 (((s string-address)) <- ((index)) ((c string-address-array-address) (deref)) ((i integer))) -- ((open 10))
c{0: 13 (((print-string)) ((screen terminal-address)) ((s string-address))) -- ((open 10))
c{0: 14 (((print-character)) ((screen terminal-address)) ((/ literal))) -- ((open 10))
c{0: 15 (((i integer)) <- ((add)) ((i integer)) ((1 literal))) -- ((open 10))
c{0: 16 (((loop))) -- ((open 10))
c{0: 17 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((close 17) (open 10))
c{0: 18 (((p string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((pc offset))) -- ((close 17) (open 10))
c{0: 19 (((print-string)) ((screen terminal-address)) ((p string-address))) -- ((close 17) (open 10))
c{0: 20 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((close 17) (open 10))
c{0: 21 (((print-character)) ((screen terminal-address)) ((: literal))) -- ((close 17) (open 10))
c{0: 22 (((print-character)) ((screen terminal-address)) ((  literal))) -- ((close 17) (open 10))
c{0: 23 (((i string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((instruction offset))) -- ((close 17) (open 10))
c{0: 24 (((print-string)) ((screen terminal-address)) ((i string-address))) -- ((close 17) (open 10))
c{0: 25 (((add-line)) ((screen-state space-address)) ((screen terminal-address))) -- ((close 17) (open 10))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((screen terminal)) <- ((next-input)))
c{1: 2 ✓ (((x instruction-trace-address)) <- ((next-input)))
c{1: 3 ✓ (((screen-state space-address)) <- ((next-input)))
c{1: 4 ✓ (((clear-line)) ((screen terminal-address)))
c{1: 5 ✓ (((print-character)) ((screen terminal-address)) ((+ literal)))
c{1: 6 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 7 ✓ (((c string-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((call-stack offset)))
c{1: 8 ✓ (((i integer)) <- ((copy)) ((0 literal)))
c{1: 9 ✓ (((len integer)) <- ((length)) ((c string-address-array-address) (deref)))
c{1: 10 ✓ (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer)))
c{1: 11 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((5 offset)))
c{1: 12 ✓ (((s string-address)) <- ((index)) ((c string-address-array-address) (deref)) ((i integer)))
c{1: 13 ✓ (((print-string)) ((screen terminal-address)) ((s string-address)))
c{1: 14 ✓ (((print-character)) ((screen terminal-address)) ((/ literal)))
c{1: 15 ✓ (((i integer)) <- ((add)) ((i integer)) ((1 literal)))
c{1: 16 X (((loop))) => (((jump)) ((-7 offset)))
c{1: 17 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 18 ✓ (((p string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((pc offset)))
c{1: 19 ✓ (((print-string)) ((screen terminal-address)) ((p string-address)))
c{1: 20 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 21 ✓ (((print-character)) ((screen terminal-address)) ((: literal)))
c{1: 22 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 23 ✓ (((i string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((instruction offset)))
c{1: 24 ✓ (((print-string)) ((screen terminal-address)) ((i string-address)))
c{1: 25 ✓ (((add-line)) ((screen-state space-address)) ((screen terminal-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) -- nil
c{0: 1 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 2 (((x trace-address)) <- ((next-input))) -- nil
c{0: 3 (((l string-address)) <- ((get)) ((x trace-address) (deref)) ((label offset))) -- nil
c{0: 4 (((clear-line)) ((screen terminal-address))) -- nil
c{0: 5 (((print-string)) ((screen terminal-address)) ((l string-address))) -- nil
c{0: 6 (((print-character)) ((screen terminal-address)) ((  literal))) -- nil
c{0: 7 (((print-character)) ((screen terminal-address)) ((: literal))) -- nil
c{0: 8 (((print-character)) ((screen terminal-address)) ((  literal))) -- nil
c{0: 9 (((c string-address)) <- ((get)) ((x trace-address) (deref)) ((contents offset))) -- nil
c{0: 10 (((print-string)) ((screen terminal-address)) ((c string-address))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
c{1: 1 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 2 ✓ (((x trace-address)) <- ((next-input)))
c{1: 3 ✓ (((l string-address)) <- ((get)) ((x trace-address) (deref)) ((label offset)))
c{1: 4 ✓ (((clear-line)) ((screen terminal-address)))
c{1: 5 ✓ (((print-string)) ((screen terminal-address)) ((l string-address)))
c{1: 6 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 7 ✓ (((print-character)) ((screen terminal-address)) ((: literal)))
c{1: 8 ✓ (((print-character)) ((screen terminal-address)) ((  literal)))
c{1: 9 ✓ (((c string-address)) <- ((get)) ((x trace-address) (deref)) ((contents offset)))
c{1: 10 ✓ (((print-string)) ((screen terminal-address)) ((c string-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((0 literal) (from))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((0 literal) (from)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((trace-index integer)) <- ((next-input))) -- nil
c{0: 4 (((len integer)) <- ((length)) ((traces instruction-trace-address-array-address) (space 1) (deref))) -- nil
c{0: 5 (((height integer)) <- ((min)) ((len integer)) ((screen-height integer) (space 1))) -- nil
c{0: 6 (((trace-done? boolean)) <- ((greater-or-equal)) ((trace-index integer)) ((len integer))) -- ((open 6))
c{0: 7 (((break-if)) ((trace-done? boolean))) -- ((open 6))
c{0: 8 (((screen-done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((screen-height integer) (space 1))) -- ((open 6))
c{0: 9 (((break-if)) ((screen-done? boolean))) -- ((open 6))
c{0: 10 (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((trace-index integer))) -- ((open 6))
c{0: 11 (((print-instruction-trace-collapsed)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state))) -- ((open 6))
c{0: 12 (((trace-index integer)) <- ((add)) ((trace-index integer)) ((1 literal))) -- ((open 6))
c{0: 13 (((loop))) -- ((open 6))
c{0: 14 (((done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((app-height integer) (space 1))) -- ((open 14) (close 14) (open 6))
c{0: 15 (((break-if)) ((done? boolean))) -- ((open 14) (close 14) (open 6))
c{0: 16 (((clear-line)) ((screen terminal-address))) -- ((open 14) (close 14) (open 6))
c{0: 17 (((down)) ((0 space-address) (screen-state)) ((screen terminal-address))) -- ((open 14) (close 14) (open 6))
c{0: 18 (((loop))) -- ((open 14) (close 14) (open 6))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((trace-index integer)) <- ((next-input)))
c{1: 4 ✓ (((len integer)) <- ((length)) ((traces instruction-trace-address-array-address) (space 1) (deref)))
c{1: 5 ✓ (((height integer)) <- ((min)) ((len integer)) ((screen-height integer) (space 1)))
c{1: 6 ✓ (((trace-done? boolean)) <- ((greater-or-equal)) ((trace-index integer)) ((len integer)))
c{1: 7 X (((break-if)) ((trace-done? boolean))) => (((jump-if)) ((trace-done? boolean)) ((6 offset)))
c{1: 8 ✓ (((screen-done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((screen-height integer) (space 1)))
c{1: 9 X (((break-if)) ((screen-done? boolean))) => (((jump-if)) ((screen-done? boolean)) ((4 offset)))
c{1: 10 ✓ (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((trace-index integer)))
c{1: 11 ✓ (((print-instruction-trace-collapsed)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state)))
c{1: 12 ✓ (((trace-index integer)) <- ((add)) ((trace-index integer)) ((1 literal)))
c{1: 13 X (((loop))) => (((jump)) ((-8 offset)))
c{1: 14 ✓ (((done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((app-height integer) (space 1)))
c{1: 15 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((3 offset)))
c{1: 16 ✓ (((clear-line)) ((screen terminal-address)))
c{1: 17 ✓ (((down)) ((0 space-address) (screen-state)) ((screen terminal-address)))
c{1: 18 X (((loop))) => (((jump)) ((-5 offset)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((k keyboard-address)) <- ((next-input))) -- nil
c{0: 3 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 4 (((c character)) <- ((read-key)) ((k keyboard-address)) ((silent literal) (terminal))) -- nil
c{0: 5 (((break-if)) ((c character))) -- ((open 5))
c{0: 6 (((reply)) ((nil literal))) -- ((open 5))
c{0: 7 (((q-pressed? boolean)) <- ((equal)) ((c character)) ((q literal))) -- ((open 7) (close 7) (open 5))
c{0: 8 (((end-of-fake-keyboard-input? boolean)) <- ((equal)) ((c character)) ((  literal))) -- ((open 7) (close 7) (open 5))
c{0: 9 (((quit? boolean)) <- ((or)) ((q-pressed? boolean)) ((end-of-fake-keyboard-input? boolean))) -- ((open 7) (close 7) (open 5))
c{0: 10 (((break-unless)) ((quit? boolean))) -- ((open 7) (close 7) (open 5))
c{0: 11 (((reply)) ((t literal))) -- ((open 7) (close 7) (open 5))
c{0: 12 (((up? boolean)) <- ((equal)) ((c character)) ((up literal))) -- ((open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 13 (((k? boolean)) <- ((equal)) ((c character)) ((k literal))) -- ((open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 14 (((up? boolean)) <- ((or)) ((up? boolean)) ((k? boolean))) -- ((open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 15 (((break-unless)) ((up? boolean))) -- ((open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 16 (((up)) ((0 space-address) (screen-state)) ((screen terminal-address))) -- ((open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 17 (((reply)) ((nil literal))) -- ((open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 18 (((down? boolean)) <- ((equal)) ((c character)) ((down literal))) -- ((open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 19 (((j? boolean)) <- ((equal)) ((c character)) ((j literal))) -- ((open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 20 (((down? boolean)) <- ((or)) ((down? boolean)) ((j? boolean))) -- ((open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 21 (((break-unless)) ((down? boolean))) -- ((open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 22 (((down)) ((0 space-address) (screen-state)) ((screen terminal-address))) -- ((open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 23 (((reply)) ((nil literal))) -- ((open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 24 (((toggle? boolean)) <- ((equal)) ((c character)) ((
 literal))) -- ((open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 25 (((break-unless)) ((toggle? boolean))) -- ((open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 26 (((original-cursor-row integer)) <- ((copy)) ((cursor-row integer) (space 1))) -- ((open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 27 (((original-trace-index integer)) <- ((cursor-row-to-trace-index)) ((0 space-address) (screen-state)) ((original-cursor-row integer))) -- ((open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 28 (((expanded? boolean)) <- ((greater-or-equal)) ((expanded-index integer) (space 1)) ((0 literal))) -- ((open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 29 (((break-unless)) ((expanded? boolean))) -- ((open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 30 (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) -- ((open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 31 (((break-unless)) ((at-expanded? boolean))) -- ((open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 32 (((expanded-index integer) (space 1)) <- ((copy)) ((-1 literal))) -- ((open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 33 (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((cursor-row integer) (space 1))) -- ((open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 34 (((back-to)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((original-cursor-row integer))) -- ((open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 35 (((reply))) -- ((open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 36 (((below-expanded? boolean)) <- ((greater-than)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) -- ((open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 37 (((break-unless)) ((below-expanded? boolean))) -- ((open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 38 (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) -- ((open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 39 (((break-if)) ((at-expanded? boolean))) -- ((open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 40 (((up)) ((0 space-address)) ((screen terminal-address))) -- ((open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 41 (((loop))) -- ((open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 42 (((done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((original-trace-index integer))) -- ((open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 43 (((break-if)) ((done? boolean))) -- ((open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 44 (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((cursor-row integer) (space 1))) -- ((open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 45 (((print-instruction-trace-collapsed)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state))) -- ((open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 46 (((loop))) -- ((open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 47 (((expanded-index integer) (space 1)) <- ((copy)) ((original-trace-index integer))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 48 (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((original-trace-index integer))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 49 (((print-instruction-trace)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 50 (((next-index integer)) <- ((add)) ((original-trace-index integer)) ((1 literal))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 51 (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((next-index integer))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 52 (((back-to)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((original-trace-index integer))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 53 (((reply)) ((nil literal))) -- ((close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{0: 54 (((reply)) ((nil literal))) -- ((close 54) (close 47) (close 47) (close 47) (open 42) (close 42) (open 38) (open 36) (close 36) (open 30) (open 28) (open 24) (close 24) (open 18) (close 18) (open 12) (close 12) (open 7) (close 7) (open 5))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((k keyboard-address)) <- ((next-input)))
c{1: 3 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 4 ✓ (((c character)) <- ((read-key)) ((k keyboard-address)) ((silent literal) (terminal)))
c{1: 5 X (((break-if)) ((c character))) => (((jump-if)) ((c character)) ((1 offset)))
c{1: 6 ✓ (((reply)) ((nil literal)))
c{1: 7 ✓ (((q-pressed? boolean)) <- ((equal)) ((c character)) ((q literal)))
c{1: 8 ✓ (((end-of-fake-keyboard-input? boolean)) <- ((equal)) ((c character)) ((  literal)))
c{1: 9 ✓ (((quit? boolean)) <- ((or)) ((q-pressed? boolean)) ((end-of-fake-keyboard-input? boolean)))
c{1: 10 X (((break-unless)) ((quit? boolean))) => (((jump-unless)) ((quit? boolean)) ((1 offset)))
c{1: 11 ✓ (((reply)) ((t literal)))
c{1: 12 ✓ (((up? boolean)) <- ((equal)) ((c character)) ((up literal)))
c{1: 13 ✓ (((k? boolean)) <- ((equal)) ((c character)) ((k literal)))
c{1: 14 ✓ (((up? boolean)) <- ((or)) ((up? boolean)) ((k? boolean)))
c{1: 15 X (((break-unless)) ((up? boolean))) => (((jump-unless)) ((up? boolean)) ((2 offset)))
c{1: 16 ✓ (((up)) ((0 space-address) (screen-state)) ((screen terminal-address)))
c{1: 17 ✓ (((reply)) ((nil literal)))
c{1: 18 ✓ (((down? boolean)) <- ((equal)) ((c character)) ((down literal)))
c{1: 19 ✓ (((j? boolean)) <- ((equal)) ((c character)) ((j literal)))
c{1: 20 ✓ (((down? boolean)) <- ((or)) ((down? boolean)) ((j? boolean)))
c{1: 21 X (((break-unless)) ((down? boolean))) => (((jump-unless)) ((down? boolean)) ((2 offset)))
c{1: 22 ✓ (((down)) ((0 space-address) (screen-state)) ((screen terminal-address)))
c{1: 23 ✓ (((reply)) ((nil literal)))
c{1: 24 ✓ (((toggle? boolean)) <- ((equal)) ((c character)) ((
 literal)))
c{1: 25 X (((break-unless)) ((toggle? boolean))) => (((jump-unless)) ((toggle? boolean)) ((28 offset)))
c{1: 26 ✓ (((original-cursor-row integer)) <- ((copy)) ((cursor-row integer) (space 1)))
c{1: 27 ✓ (((original-trace-index integer)) <- ((cursor-row-to-trace-index)) ((0 space-address) (screen-state)) ((original-cursor-row integer)))
c{1: 28 ✓ (((expanded? boolean)) <- ((greater-or-equal)) ((expanded-index integer) (space 1)) ((0 literal)))
c{1: 29 X (((break-unless)) ((expanded? boolean))) => (((jump-unless)) ((expanded? boolean)) ((17 offset)))
c{1: 30 ✓ (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1)))
c{1: 31 X (((break-unless)) ((at-expanded? boolean))) => (((jump-unless)) ((at-expanded? boolean)) ((4 offset)))
c{1: 32 ✓ (((expanded-index integer) (space 1)) <- ((copy)) ((-1 literal)))
c{1: 33 ✓ (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((cursor-row integer) (space 1)))
c{1: 34 ✓ (((back-to)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((original-cursor-row integer)))
c{1: 35 ✓ (((reply)))
c{1: 36 ✓ (((below-expanded? boolean)) <- ((greater-than)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1)))
c{1: 37 X (((break-unless)) ((below-expanded? boolean))) => (((jump-unless)) ((below-expanded? boolean)) ((9 offset)))
c{1: 38 ✓ (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1)))
c{1: 39 X (((break-if)) ((at-expanded? boolean))) => (((jump-if)) ((at-expanded? boolean)) ((2 offset)))
c{1: 40 ✓ (((up)) ((0 space-address)) ((screen terminal-address)))
c{1: 41 X (((loop))) => (((jump)) ((-4 offset)))
c{1: 42 ✓ (((done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((original-trace-index integer)))
c{1: 43 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((3 offset)))
c{1: 44 ✓ (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((cursor-row integer) (space 1)))
c{1: 45 ✓ (((print-instruction-trace-collapsed)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state)))
c{1: 46 X (((loop))) => (((jump)) ((-5 offset)))
c{1: 47 ✓ (((expanded-index integer) (space 1)) <- ((copy)) ((original-trace-index integer)))
c{1: 48 ✓ (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((original-trace-index integer)))
c{1: 49 ✓ (((print-instruction-trace)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state)))
c{1: 50 ✓ (((next-index integer)) <- ((add)) ((original-trace-index integer)) ((1 literal)))
c{1: 51 ✓ (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((next-index integer)))
c{1: 52 ✓ (((back-to)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((original-trace-index integer)))
c{1: 53 ✓ (((reply)) ((nil literal)))
c{1: 54 ✓ (((reply)) ((nil literal)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((traces instruction-trace-address-array-address)) <- ((next-input))) -- nil
c{0: 2 (((screen-height integer)) <- ((next-input))) -- nil
c{0: 3 (((app-height integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 4 (((printed-height integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 5 (((cursor-row integer)) <- ((copy)) ((0 literal))) -- nil
c{0: 6 (((expanded-index integer)) <- ((copy)) ((-1 literal))) -- nil
c{0: 7 (((reply)) ((default-space space-address))) -- nil
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((traces instruction-trace-address-array-address)) <- ((next-input)))
c{1: 2 ✓ (((screen-height integer)) <- ((next-input)))
c{1: 3 ✓ (((app-height integer)) <- ((copy)) ((0 literal)))
c{1: 4 ✓ (((printed-height integer)) <- ((copy)) ((0 literal)))
c{1: 5 ✓ (((cursor-row integer)) <- ((copy)) ((0 literal)))
c{1: 6 ✓ (((expanded-index integer)) <- ((copy)) ((-1 literal)))
c{1: 7 ✓ (((reply)) ((default-space space-address)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1))) -- ((open 3))
c{0: 4 (((break-if)) ((at-bottom? boolean))) -- ((open 3))
c{0: 5 (((down)) ((0 space-address)) ((screen terminal-address))) -- ((open 3))
c{0: 6 (((loop))) -- ((open 3))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1)))
c{1: 4 X (((break-if)) ((at-bottom? boolean))) => (((jump-if)) ((at-bottom? boolean)) ((2 offset)))
c{1: 5 ✓ (((down)) ((0 space-address)) ((screen terminal-address)))
c{1: 6 X (((loop))) => (((jump)) ((-4 offset)))
c{0: 0 (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) -- nil
c{0: 1 (((0 space-address) (names screen-state)) <- ((next-input))) -- nil
c{0: 2 (((screen terminal-address)) <- ((next-input))) -- nil
c{0: 3 (((no-expanded? boolean)) <- ((less-than)) ((expanded-index integer) (space 1)) ((0 literal))) -- ((open 3))
c{0: 4 (((break-if)) ((no-expanded? boolean))) -- ((open 3))
c{0: 5 (((n integer)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1))) -- ((open 3))
c{0: 6 (((n integer)) <- ((add)) ((n integer)) ((1 literal))) -- ((open 3))
c{0: 7 (((cursor-row-below-expanded integer)) <- ((add)) ((expanded-index integer) (space 1)) ((n integer))) -- ((open 3))
c{0: 8 (((just-below-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((cursor-row-below-expanded integer))) -- ((open 3))
c{0: 9 (((break-unless)) ((just-below-expanded? boolean))) -- ((open 3))
c{0: 10 (((i integer)) <- ((copy)) ((0 literal))) -- ((open 3))
c{0: 11 (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((n integer))) -- ((open 11) (open 3))
c{0: 12 (((break-if)) ((done? boolean))) -- ((open 11) (open 3))
c{0: 13 (((cursor-row integer) (space 1)) <- ((subtract)) ((cursor-row integer) (space 1)) ((1 literal))) -- ((open 11) (open 3))
c{0: 14 (((cursor-up)) ((screen terminal-address))) -- ((open 11) (open 3))
c{0: 15 (((i integer)) <- ((add)) ((i integer)) ((1 literal))) -- ((open 11) (open 3))
c{0: 16 (((loop))) -- ((open 11) (open 3))
c{0: 17 (((reply))) -- ((close 17) (open 11) (open 3))
c{0: 18 (((at-top? boolean)) <- ((lesser-or-equal)) ((cursor-row integer) (space 1)) ((0 literal))) -- ((open 18) (close 18) (close 17) (open 11) (open 3))
c{0: 19 (((break-if)) ((at-top? boolean))) -- ((open 18) (close 18) (close 17) (open 11) (open 3))
c{0: 20 (((cursor-row integer) (space 1)) <- ((subtract)) ((cursor-row integer) (space 1)) ((1 literal))) -- ((open 18) (close 18) (close 17) (open 11) (open 3))
c{0: 21 (((cursor-up)) ((screen terminal-address))) -- ((open 18) (close 18) (close 17) (open 11) (open 3))
c{1: 0 ✓ (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
c{1: 1 ✓ (((0 space-address) (names screen-state)) <- ((next-input)))
c{1: 2 ✓ (((screen terminal-address)) <- ((next-input)))
c{1: 3 ✓ (((no-expanded? boolean)) <- ((less-than)) ((expanded-index integer) (space 1)) ((0 literal)))
c{1: 4 X (((break-if)) ((no-expanded? boolean))) => (((jump-if)) ((no-expanded? boolean)) ((13 offset)))
c{1: 5 ✓ (((n integer)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1)))
c{1: 6 ✓ (((n integer)) <- ((add)) ((n integer)) ((1 literal)))
c{1: 7 ✓ (((cursor-row-below-expanded integer)) <- ((add)) ((expanded-index integer) (space 1)) ((n integer)))
c{1: 8 ✓ (((just-below-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((cursor-row-below-expanded integer)))
c{1: 9 X (((break-unless)) ((just-below-expanded? boolean))) => (((jump-unless)) ((just-below-expanded? boolean)) ((8 offset)))
c{1: 10 ✓ (((i integer)) <- ((copy)) ((0 literal)))
c{1: 11 ✓ (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((n integer)))
c{1: 12 X (((break-if)) ((done? boolean))) => (((jump-if)) ((done? boolean)) ((4 offset)))
c{1: 13 ✓ (((cursor-row integer) (space 1)) <- ((subtract)) ((cursor-row integer) (space 1)) ((1 literal)))
c{1: 14 ✓ (((cursor-up)) ((screen terminal-address)))
c{1: 15 ✓ (((i integer)) <- ((add)) ((i integer)) ((1 literal)))
c{1: 16 X (((loop))) => (((jump)) ((-6 offset)))
c{1: 17 ✓ (((reply)))
c{1: 18 ✓ (((at-top? boolean)) <- ((lesser-or-equal)) ((cursor-row integer) (space 1)) ((0 literal)))
c{1: 19 X (((break-if)) ((at-top? boolean))) => (((jump-if)) ((at-top? boolean)) ((2 offset)))
c{1: 20 ✓ (((cursor-row integer) (space 1)) <- ((subtract)) ((cursor-row integer) (space 1)) ((1 literal)))
c{1: 21 ✓ (((cursor-up)) ((screen terminal-address)))
-: next-space-generator of add-line is screen-state
-: next-space-generator of back-to is screen-state
-: next-space-generator of browse-trace is screen-state
-: next-space-generator of cursor-row-to-trace-index is screen-state
-: next-space-generator of down is screen-state
-: next-space-generator of print-instruction-trace is screen-state
-: next-space-generator of print-traces-collapsed is screen-state
-: next-space-generator of print-traces-collapsed-from is screen-state
-: next-space-generator of process-key is screen-state
-: next-space-generator of to-bottom is screen-state
-: next-space-generator of up is screen-state
cn0: convert-names in add-line
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1))) ((screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: checking oarg ((at-bottom? boolean))
maybe-add: ((at-bottom? boolean))
cn0: location for oarg ((at-bottom? boolean)): 2
cn0: (((jump-unless)) ((at-bottom? boolean)) ((9 offset))) ((at-bottom? 2) (screen 1)) nil
cn0: checking arg ((at-bottom? boolean))
maybe-add: ((at-bottom? boolean))
cn0: checking arg ((9 offset))
cn0: (((screen-full? boolean)) <- ((greater-or-equal)) ((app-height integer) (space 1)) ((screen-height integer) (space 1))) ((at-bottom? 2) (screen 1)) nil
cn0: checking arg ((app-height integer) (space 1))
maybe-add: ((app-height integer) (space 1))
cn0: checking arg ((screen-height integer) (space 1))
maybe-add: ((screen-height integer) (space 1))
cn0: checking oarg ((screen-full? boolean))
maybe-add: ((screen-full? boolean))
cn0: location for oarg ((screen-full? boolean)): 3
cn0: (((jump-unless)) ((screen-full? boolean)) ((3 offset))) ((at-bottom? 2) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((screen-full? boolean))
maybe-add: ((screen-full? boolean))
cn0: checking arg ((3 offset))
cn0: (((cursor-to-next-line)) ((screen terminal-address))) ((at-bottom? 2) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((cursor-up)) ((screen terminal-address))) ((at-bottom? 2) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((reply))) ((at-bottom? 2) (screen 1) (screen-full? 3)) nil
cn0: (((printed-height integer) (space 1)) <- ((add)) ((printed-height integer) (space 1)) ((1 literal))) ((at-bottom? 2) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: checking arg ((1 literal))
cn0: checking oarg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: (((grow-max? boolean)) <- ((greater-than)) ((printed-height integer) (space 1)) ((app-height integer) (space 1))) ((at-bottom? 2) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: checking arg ((app-height integer) (space 1))
maybe-add: ((app-height integer) (space 1))
cn0: checking oarg ((grow-max? boolean))
maybe-add: ((grow-max? boolean))
cn0: location for oarg ((grow-max? boolean)): 4
cn0: (((jump-unless)) ((grow-max? boolean)) ((1 offset))) ((at-bottom? 2) (grow-max? 4) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((grow-max? boolean))
maybe-add: ((grow-max? boolean))
cn0: checking arg ((1 offset))
cn0: (((app-height integer) (space 1)) <- ((copy)) ((printed-height integer) (space 1))) ((at-bottom? 2) (grow-max? 4) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: checking oarg ((app-height integer) (space 1))
maybe-add: ((app-height integer) (space 1))
cn0: (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal))) ((at-bottom? 2) (grow-max? 4) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((1 literal))
cn0: checking oarg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: (((cursor-to-next-line)) ((screen terminal-address))) ((at-bottom? 2) (grow-max? 4) (screen 1) (screen-full? 3)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: convert-names in back-to
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((target-row integer)) <- ((next-input))) ((screen 1)) nil
cn0: checking oarg ((target-row integer))
maybe-add: ((target-row integer))
cn0: location for oarg ((target-row integer)): 2
cn0: (((below-target? boolean)) <- ((greater-than)) ((cursor-row integer) (space 1)) ((target-row integer))) ((screen 1) (target-row 2)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((target-row integer))
maybe-add: ((target-row integer))
cn0: checking oarg ((below-target? boolean))
maybe-add: ((below-target? boolean))
cn0: location for oarg ((below-target? boolean)): 3
cn0: (((jump-unless)) ((below-target? boolean)) ((2 offset))) ((below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((below-target? boolean))
maybe-add: ((below-target? boolean))
cn0: checking arg ((2 offset))
cn0: (((up)) ((0 space-address)) ((screen terminal-address))) ((below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((0 space-address))
maybe-add: ((0 space-address))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((jump)) ((-4 offset))) ((below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((-4 offset))
cn0: (((above-target? boolean)) <- ((less-than)) ((cursor-row integer) (space 1)) ((target-row integer))) ((below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((target-row integer))
maybe-add: ((target-row integer))
cn0: checking oarg ((above-target? boolean))
maybe-add: ((above-target? boolean))
cn0: location for oarg ((above-target? boolean)): 4
cn0: (((jump-unless)) ((above-target? boolean)) ((2 offset))) ((above-target? 4) (below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((above-target? boolean))
maybe-add: ((above-target? boolean))
cn0: checking arg ((2 offset))
cn0: (((down)) ((0 space-address)) ((screen terminal-address))) ((above-target? 4) (below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((0 space-address))
maybe-add: ((0 space-address))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((jump)) ((-4 offset))) ((above-target? 4) (below-target? 3) (screen 1) (target-row 2)) nil
cn0: checking arg ((-4 offset))
cn0: convert-names in browse-trace
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((x string-address)) <- ((next-input))) nil nil
cn0: checking oarg ((x string-address))
maybe-add: ((x string-address))
cn0: location for oarg ((x string-address)): 1
cn0: (((screen-height integer)) <- ((next-input))) ((x 1)) nil
cn0: checking oarg ((screen-height integer))
maybe-add: ((screen-height integer))
cn0: location for oarg ((screen-height integer)): 2
cn0: (((s stream-address)) <- ((init-stream)) ((x string-address))) ((screen-height 2) (x 1)) nil
cn0: checking arg ((x string-address))
maybe-add: ((x string-address))
cn0: checking oarg ((s stream-address))
maybe-add: ((s stream-address))
cn0: location for oarg ((s stream-address)): 3
cn0: (((traces instruction-trace-address-array-address)) <- ((parse-traces)) ((s stream-address))) ((s 3) (screen-height 2) (x 1)) nil
cn0: checking arg ((s stream-address))
maybe-add: ((s stream-address))
cn0: checking oarg ((traces instruction-trace-address-array-address))
maybe-add: ((traces instruction-trace-address-array-address))
cn0: location for oarg ((traces instruction-trace-address-array-address)): 4
cn0: (((0 space-address) (names screen-state)) <- ((screen-state)) ((traces instruction-trace-address-array-address)) ((screen-height integer))) ((s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: checking arg ((traces instruction-trace-address-array-address))
maybe-add: ((traces instruction-trace-address-array-address))
cn0: checking arg ((screen-height integer))
maybe-add: ((screen-height integer))
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((cursor-mode))) ((s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: (((print-traces-collapsed)) ((0 space-address) (screen-state)) ((nil literal) (terminal))) ((s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((nil literal) (terminal))
cn0: (((quit? boolean)) <- ((process-key)) ((0 space-address) (screen-state)) ((nil literal) (keyboard)) ((nil literal) (terminal))) ((s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((nil literal) (keyboard))
cn0: checking arg ((nil literal) (terminal))
cn0: checking oarg ((quit? boolean))
maybe-add: ((quit? boolean))
cn0: location for oarg ((quit? boolean)): 5
cn0: (((jump-if)) ((quit? boolean)) ((1 offset))) ((quit? 5) (s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: checking arg ((quit? boolean))
maybe-add: ((quit? boolean))
cn0: checking arg ((1 offset))
cn0: (((jump)) ((-3 offset))) ((quit? 5) (s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: checking arg ((-3 offset))
cn0: (((to-bottom)) ((0 space-address) (screen-state)) ((nil literal) (terminal))) ((quit? 5) (s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((nil literal) (terminal))
cn0: (((retro-mode))) ((quit? 5) (s 3) (screen-height 2) (traces 4) (x 1)) nil
cn0: convert-names in cursor-row-to-trace-index
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((n integer) (screen)) <- ((next-input))) nil nil
cn0: checking oarg ((n integer) (screen))
maybe-add: ((n integer) (screen))
cn0: location for oarg ((n integer) (screen)): 1
cn0: (((has-expanded? boolean)) <- ((greater-or-equal)) ((expanded-index integer) (space 1)) ((0 literal))) ((n 1)) nil
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking arg ((0 literal))
cn0: checking oarg ((has-expanded? boolean))
maybe-add: ((has-expanded? boolean))
cn0: location for oarg ((has-expanded? boolean)): 2
cn0: (((jump-if)) ((has-expanded? boolean)) ((1 offset))) ((has-expanded? 2) (n 1)) nil
cn0: checking arg ((has-expanded? boolean))
maybe-add: ((has-expanded? boolean))
cn0: checking arg ((1 offset))
cn0: (((reply)) ((n integer) (index))) ((has-expanded? 2) (n 1)) nil
cn0: checking arg ((n integer) (index))
maybe-add: ((n integer) (index))
cn0: (((above-expanded? boolean)) <- ((lesser-or-equal)) ((cursor-row integer) (space 1) (screen)) ((expanded-index integer) (space 1))) ((has-expanded? 2) (n 1)) nil
cn0: checking arg ((cursor-row integer) (space 1) (screen))
maybe-add: ((cursor-row integer) (space 1) (screen))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((above-expanded? boolean))
maybe-add: ((above-expanded? boolean))
cn0: location for oarg ((above-expanded? boolean)): 3
cn0: (((jump-unless)) ((above-expanded? boolean)) ((1 offset))) ((above-expanded? 3) (has-expanded? 2) (n 1)) nil
cn0: checking arg ((above-expanded? boolean))
maybe-add: ((above-expanded? boolean))
cn0: checking arg ((1 offset))
cn0: (((reply)) ((n integer) (index))) ((above-expanded? 3) (has-expanded? 2) (n 1)) nil
cn0: checking arg ((n integer) (index))
maybe-add: ((n integer) (index))
cn0: (((k integer) (index)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1))) ((above-expanded? 3) (has-expanded? 2) (n 1)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1))
maybe-add: ((traces instruction-trace-address-array-address) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((k integer) (index))
maybe-add: ((k integer) (index))
cn0: location for oarg ((k integer) (index)): 4
cn0: (((result integer) (index)) <- ((subtract)) ((n integer) (screen)) ((k integer) (index))) ((above-expanded? 3) (has-expanded? 2) (k 4) (n 1)) nil
cn0: checking arg ((n integer) (screen))
maybe-add: ((n integer) (screen))
cn0: checking arg ((k integer) (index))
maybe-add: ((k integer) (index))
cn0: checking oarg ((result integer) (index))
maybe-add: ((result integer) (index))
cn0: location for oarg ((result integer) (index)): 5
cn0: (((reply)) ((result integer) (index))) ((above-expanded? 3) (has-expanded? 2) (k 4) (n 1) (result 5)) nil
cn0: checking arg ((result integer) (index))
maybe-add: ((result integer) (index))
cn0: convert-names in down
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((no-expanded? boolean)) <- ((less-than)) ((expanded-index integer) (space 1)) ((0 literal))) ((screen 1)) nil
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking arg ((0 literal))
cn0: checking oarg ((no-expanded? boolean))
maybe-add: ((no-expanded? boolean))
cn0: location for oarg ((no-expanded? boolean)): 2
cn0: (((jump-if)) ((no-expanded? boolean)) ((12 offset))) ((no-expanded? 2) (screen 1)) nil
cn0: checking arg ((no-expanded? boolean))
maybe-add: ((no-expanded? boolean))
cn0: checking arg ((12 offset))
cn0: (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) ((no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((at-expanded? boolean))
maybe-add: ((at-expanded? boolean))
cn0: location for oarg ((at-expanded? boolean)): 3
cn0: (((jump-unless)) ((at-expanded? boolean)) ((10 offset))) ((at-expanded? 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((at-expanded? boolean))
maybe-add: ((at-expanded? boolean))
cn0: checking arg ((10 offset))
cn0: (((n integer)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1))) ((at-expanded? 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1))
maybe-add: ((traces instruction-trace-address-array-address) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((n integer))
maybe-add: ((n integer))
cn0: location for oarg ((n integer)): 4
cn0: (((n integer)) <- ((add)) ((n integer)) ((1 literal))) ((at-expanded? 3) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((n integer))
maybe-add: ((n integer))
cn0: (((i integer)) <- ((copy)) ((0 literal))) ((at-expanded? 3) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: location for oarg ((i integer)): 5
cn0: (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((n integer))) ((at-expanded? 3) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 6
cn0: (((jump-if)) ((done? boolean)) ((4 offset))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((4 offset))
cn0: (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((1 literal))
cn0: checking oarg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: (((cursor-down)) ((screen terminal-address))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((i integer)) <- ((add)) ((i integer)) ((1 literal))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((jump)) ((-6 offset))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((-6 offset))
cn0: (((reply))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1))) ((at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: checking oarg ((at-bottom? boolean))
maybe-add: ((at-bottom? boolean))
cn0: location for oarg ((at-bottom? boolean)): 7
cn0: (((jump-if)) ((at-bottom? boolean)) ((2 offset))) ((at-bottom? 7) (at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((at-bottom? boolean))
maybe-add: ((at-bottom? boolean))
cn0: checking arg ((2 offset))
cn0: (((cursor-row integer) (space 1)) <- ((add)) ((cursor-row integer) (space 1)) ((1 literal))) ((at-bottom? 7) (at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((1 literal))
cn0: checking oarg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: (((cursor-down)) ((screen terminal-address))) ((at-bottom? 7) (at-expanded? 3) (done? 6) (i 5) (n 4) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: convert-names in instruction-trace-num-children
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((traces instruction-trace-address-array-address)) <- ((next-input))) nil nil
cn0: checking oarg ((traces instruction-trace-address-array-address))
maybe-add: ((traces instruction-trace-address-array-address))
cn0: location for oarg ((traces instruction-trace-address-array-address)): 1
cn0: (((index integer)) <- ((next-input))) ((traces 1)) nil
cn0: checking oarg ((index integer))
maybe-add: ((index integer))
cn0: location for oarg ((index integer)): 2
cn0: (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (deref)) ((index integer))) ((index 2) (traces 1)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (deref))
maybe-add: ((traces instruction-trace-address-array-address) (deref))
cn0: checking arg ((index integer))
maybe-add: ((index integer))
cn0: checking oarg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: location for oarg ((tr instruction-trace-address)): 3
cn0: (((tr-children trace-address-array-address)) <- ((get)) ((tr instruction-trace-address) (deref)) ((children offset))) ((index 2) (tr 3) (traces 1)) nil
cn0: field-access children in trinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 3
cn0: checking arg ((tr instruction-trace-address) (deref))
maybe-add: ((tr instruction-trace-address) (deref))
cn0: checking arg ((children offset))
cn0: checking oarg ((tr-children trace-address-array-address))
maybe-add: ((tr-children trace-address-array-address))
cn0: location for oarg ((tr-children trace-address-array-address)): 4
cn0: (((n integer)) <- ((length)) ((tr-children instruction-trace-address-array-address) (deref))) ((children 3) (index 2) (tr 3) (tr-children 4) (traces 1)) ((children t))
cn0: checking arg ((tr-children instruction-trace-address-array-address) (deref))
maybe-add: ((tr-children instruction-trace-address-array-address) (deref))
cn0: checking oarg ((n integer))
maybe-add: ((n integer))
cn0: location for oarg ((n integer)): 5
cn0: (((reply)) ((n integer))) ((children 3) (index 2) (n 5) (tr 3) (tr-children 4) (traces 1)) ((children t))
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: convert-names in main
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((x string-address)) <- ((new)) schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((1 literal)))
run: main 0: 1 => ((1 integer))
mem: ((1 integer)): 1 <= 1) nil nil
cn0: checking arg schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((1 literal)))
run: main 0: 1 => ((1 integer))
mem: ((1 integer)): 1 <= 1
cn0: checking oarg ((x string-address))
maybe-add: ((x string-address))
cn0: location for oarg ((x string-address)): 1
cn0: (((n integer)) <- ((length)) ((x string-address) (deref))) ((x 1)) nil
cn0: checking arg ((x string-address) (deref))
maybe-add: ((x string-address) (deref))
cn0: checking oarg ((n integer))
maybe-add: ((n integer))
cn0: location for oarg ((n integer)): 2
cn0: ((($print)) ((p2  literal))) ((n 2) (x 1)) nil
cn0: checking arg ((p2  literal))
cn0: ((($print)) ((n integer))) ((n 2) (x 1)) nil
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: ((($print)) ((
 literal))) ((n 2) (x 1)) nil
cn0: checking arg ((
 literal))
cn0: (((s stream-address)) <- ((init-stream)) ((x string-address))) ((n 2) (x 1)) nil
cn0: checking arg ((x string-address))
maybe-add: ((x string-address))
cn0: checking oarg ((s stream-address))
maybe-add: ((s stream-address))
cn0: location for oarg ((s stream-address)): 3
cn0: (((traces instruction-trace-address-array-address)) <- ((parse-traces)) ((s stream-address))) ((n 2) (s 3) (x 1)) nil
cn0: checking arg ((s stream-address))
maybe-add: ((s stream-address))
cn0: checking oarg ((traces instruction-trace-address-array-address))
maybe-add: ((traces instruction-trace-address-array-address))
cn0: location for oarg ((traces instruction-trace-address-array-address)): 4
cn0: convert-names in parse-instruction-trace
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((in trace-address)) <- ((next-input))) nil nil
cn0: checking oarg ((in trace-address))
maybe-add: ((in trace-address))
cn0: location for oarg ((in trace-address)): 1
cn0: (((buf string-address)) <- ((get)) ((in trace-address) (deref)) ((contents offset))) ((in 1)) nil
cn0: field-access contents in intrace-addressderef of type trace
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((in trace-address) (deref))
maybe-add: ((in trace-address) (deref))
cn0: checking arg ((contents offset))
cn0: checking oarg ((buf string-address))
maybe-add: ((buf string-address))
cn0: location for oarg ((buf string-address)): 2
cn0: (((result instruction-trace-address)) <- ((new)) ((instruction-trace literal))) ((buf 2) (contents 1) (in 1)) ((contents t))
cn0: checking arg ((instruction-trace literal))
cn0: checking oarg ((result instruction-trace-address))
maybe-add: ((result instruction-trace-address))
cn0: location for oarg ((result instruction-trace-address)): 3
cn0: (((f1 string-address)) ((rest string-address)) <- ((split-first)) ((buf string-address)) ((  literal))) ((buf 2) (contents 1) (in 1) (result 3)) ((contents t))
cn0: checking arg ((buf string-address))
maybe-add: ((buf string-address))
cn0: checking arg ((  literal))
cn0: checking oarg ((f1 string-address))
maybe-add: ((f1 string-address))
cn0: location for oarg ((f1 string-address)): 4
cn0: checking oarg ((rest string-address))
maybe-add: ((rest string-address))
cn0: location for oarg ((rest string-address)): 5
cn0: (((cs string-address-array-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((call-stack offset))) ((buf 2) (contents 1) (f1 4) (in 1) (rest 5) (result 3)) ((contents t))
cn0: field-access call-stack in resultinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((result instruction-trace-address) (deref))
maybe-add: ((result instruction-trace-address) (deref))
cn0: checking arg ((call-stack offset))
cn0: checking oarg ((cs string-address-array-address-address))
maybe-add: ((cs string-address-array-address-address))
cn0: location for oarg ((cs string-address-array-address-address)): 6
cn0: (((cs string-address-array-address-address) (deref)) <- ((split)) ((f1 string-address)) ((/ literal))) ((buf 2) (call-stack 0) (contents 1) (cs 6) (f1 4) (in 1) (rest 5) (result 3)) ((call-stack t) (contents t))
cn0: checking arg ((f1 string-address))
maybe-add: ((f1 string-address))
cn0: checking arg ((/ literal))
cn0: checking oarg ((cs string-address-array-address-address) (deref))
maybe-add: ((cs string-address-array-address-address) (deref))
cn0: (((p string-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((pc offset))) ((buf 2) (call-stack 0) (contents 1) (cs 6) (f1 4) (in 1) (rest 5) (result 3)) ((call-stack t) (contents t))
cn0: field-access pc in resultinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((result instruction-trace-address) (deref))
maybe-add: ((result instruction-trace-address) (deref))
cn0: checking arg ((pc offset))
cn0: checking oarg ((p string-address-address))
maybe-add: ((p string-address-address))
cn0: location for oarg ((p string-address-address)): 7
cn0: (((delim string-address)) <- ((new)) : ) ((buf 2) (call-stack 0) (contents 1) (cs 6) (f1 4) (in 1) (p 7) (pc 1) (rest 5) (result 3)) ((call-stack t) (contents t) (pc t))
cn0: checking arg : 
cn0: checking oarg ((delim string-address))
maybe-add: ((delim string-address))
cn0: location for oarg ((delim string-address)): 8
cn0: (((p string-address-address) (deref)) ((rest string-address)) <- ((split-first-at-substring)) ((rest string-address)) ((delim string-address))) ((buf 2) (call-stack 0) (contents 1) (cs 6) (delim 8) (f1 4) (in 1) (p 7) (pc 1) (rest 5) (result 3)) ((call-stack t) (contents t) (pc t))
cn0: checking arg ((rest string-address))
maybe-add: ((rest string-address))
cn0: checking arg ((delim string-address))
maybe-add: ((delim string-address))
cn0: checking oarg ((p string-address-address) (deref))
maybe-add: ((p string-address-address) (deref))
cn0: checking oarg ((rest string-address))
maybe-add: ((rest string-address))
cn0: (((inst string-address-address)) <- ((get-address)) ((result instruction-trace-address) (deref)) ((instruction offset))) ((buf 2) (call-stack 0) (contents 1) (cs 6) (delim 8) (f1 4) (in 1) (p 7) (pc 1) (rest 5) (result 3)) ((call-stack t) (contents t) (pc t))
cn0: field-access instruction in resultinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 2
cn0: checking arg ((result instruction-trace-address) (deref))
maybe-add: ((result instruction-trace-address) (deref))
cn0: checking arg ((instruction offset))
cn0: checking oarg ((inst string-address-address))
maybe-add: ((inst string-address-address))
cn0: location for oarg ((inst string-address-address)): 9
cn0: (((inst string-address-address) (deref)) <- ((copy)) ((rest string-address))) ((buf 2) (call-stack 0) (contents 1) (cs 6) (delim 8) (f1 4) (in 1) (inst 9) (instruction 2) (p 7) (pc 1) (rest 5) (result 3)) ((call-stack t) (contents t) (instruction t) (pc t))
cn0: checking arg ((rest string-address))
maybe-add: ((rest string-address))
cn0: checking oarg ((inst string-address-address) (deref))
maybe-add: ((inst string-address-address) (deref))
cn0: (((reply)) ((result instruction-trace-address))) ((buf 2) (call-stack 0) (contents 1) (cs 6) (delim 8) (f1 4) (in 1) (inst 9) (instruction 2) (p 7) (pc 1) (rest 5) (result 3)) ((call-stack t) (contents t) (instruction t) (pc t))
cn0: checking arg ((result instruction-trace-address))
maybe-add: ((result instruction-trace-address))
cn0: convert-names in parse-trace
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((in string-address)) <- ((next-input))) nil nil
cn0: checking oarg ((in string-address))
maybe-add: ((in string-address))
cn0: location for oarg ((in string-address)): 1
cn0: (((result trace-address)) <- ((new)) ((trace literal))) ((in 1)) nil
cn0: checking arg ((trace literal))
cn0: checking oarg ((result trace-address))
maybe-add: ((result trace-address))
cn0: location for oarg ((result trace-address)): 2
cn0: (((delim string-address)) <- ((new)) : ) ((in 1) (result 2)) nil
cn0: checking arg : 
cn0: checking oarg ((delim string-address))
maybe-add: ((delim string-address))
cn0: location for oarg ((delim string-address)): 3
cn0: (((first string-address)) ((rest string-address)) <- ((split-first-at-substring)) ((in string-address)) ((delim string-address))) ((delim 3) (in 1) (result 2)) nil
cn0: checking arg ((in string-address))
maybe-add: ((in string-address))
cn0: checking arg ((delim string-address))
maybe-add: ((delim string-address))
cn0: checking oarg ((first string-address))
maybe-add: ((first string-address))
cn0: location for oarg ((first string-address)): 4
cn0: checking oarg ((rest string-address))
maybe-add: ((rest string-address))
cn0: location for oarg ((rest string-address)): 5
cn0: (((l string-address-address)) <- ((get-address)) ((result trace-address) (deref)) ((label offset))) ((delim 3) (first 4) (in 1) (rest 5) (result 2)) nil
cn0: field-access label in resulttrace-addressderef of type trace
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((result trace-address) (deref))
maybe-add: ((result trace-address) (deref))
cn0: checking arg ((label offset))
cn0: checking oarg ((l string-address-address))
maybe-add: ((l string-address-address))
cn0: location for oarg ((l string-address-address)): 6
cn0: (((l string-address-address) (deref)) <- ((copy)) ((first string-address))) ((delim 3) (first 4) (in 1) (l 6) (label 0) (rest 5) (result 2)) ((label t))
cn0: checking arg ((first string-address))
maybe-add: ((first string-address))
cn0: checking oarg ((l string-address-address) (deref))
maybe-add: ((l string-address-address) (deref))
cn0: (((c string-address-address)) <- ((get-address)) ((result trace-address) (deref)) ((contents offset))) ((delim 3) (first 4) (in 1) (l 6) (label 0) (rest 5) (result 2)) ((label t))
cn0: field-access contents in resulttrace-addressderef of type trace
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((result trace-address) (deref))
maybe-add: ((result trace-address) (deref))
cn0: checking arg ((contents offset))
cn0: checking oarg ((c string-address-address))
maybe-add: ((c string-address-address))
cn0: location for oarg ((c string-address-address)): 7
cn0: (((c string-address-address) (deref)) <- ((copy)) ((rest string-address))) ((c 7) (contents 1) (delim 3) (first 4) (in 1) (l 6) (label 0) (rest 5) (result 2)) ((contents t) (label t))
cn0: checking arg ((rest string-address))
maybe-add: ((rest string-address))
cn0: checking oarg ((c string-address-address) (deref))
maybe-add: ((c string-address-address) (deref))
cn0: (((reply)) ((result trace-address))) ((c 7) (contents 1) (delim 3) (first 4) (in 1) (l 6) (label 0) (rest 5) (result 2)) ((contents t) (label t))
cn0: checking arg ((result trace-address))
maybe-add: ((result trace-address))
cn0: convert-names in parse-traces
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((in stream-address)) <- ((next-input))) nil nil
cn0: checking oarg ((in stream-address))
maybe-add: ((in stream-address))
cn0: location for oarg ((in stream-address)): 1
cn0: (((result buffer-address)) <- ((init-buffer)) ((30 literal))) ((in 1)) nil
cn0: checking arg ((30 literal))
cn0: checking oarg ((result buffer-address))
maybe-add: ((result buffer-address))
cn0: location for oarg ((result buffer-address)): 2
cn0: (((curr-tail instruction-trace-address)) <- ((copy)) ((nil literal))) ((in 1) (result 2)) nil
cn0: checking arg ((nil literal))
cn0: checking oarg ((curr-tail instruction-trace-address))
maybe-add: ((curr-tail instruction-trace-address))
cn0: location for oarg ((curr-tail instruction-trace-address)): 3
cn0: (((ch buffer-address)) <- ((init-buffer)) ((5 literal))) ((curr-tail 3) (in 1) (result 2)) nil
cn0: checking arg ((5 literal))
cn0: checking oarg ((ch buffer-address))
maybe-add: ((ch buffer-address))
cn0: location for oarg ((ch buffer-address)): 4
cn0: (((run string-address) (const)) <- ((new)) run) ((ch 4) (curr-tail 3) (in 1) (result 2)) nil
cn0: checking arg run
cn0: checking oarg ((run string-address) (const))
maybe-add: ((run string-address) (const))
cn0: location for oarg ((run string-address) (const)): 5
cn0: (((done? boolean)) <- ((end-of-stream?)) ((in stream-address))) ((ch 4) (curr-tail 3) (in 1) (result 2) (run 5)) nil
cn0: checking arg ((in stream-address))
maybe-add: ((in stream-address))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 6
cn0: (((jump-if)) ((done? boolean)) ((15 offset))) ((ch 4) (curr-tail 3) (done? 6) (in 1) (result 2) (run 5)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((15 offset))
cn0: (((line string-address)) <- ((read-line)) ((in stream-address))) ((ch 4) (curr-tail 3) (done? 6) (in 1) (result 2) (run 5)) nil
cn0: checking arg ((in stream-address))
maybe-add: ((in stream-address))
cn0: checking oarg ((line string-address))
maybe-add: ((line string-address))
cn0: location for oarg ((line string-address)): 7
cn0: (((f trace-address)) <- ((parse-trace)) ((line string-address))) ((ch 4) (curr-tail 3) (done? 6) (in 1) (line 7) (result 2) (run 5)) nil
cn0: checking arg ((line string-address))
maybe-add: ((line string-address))
cn0: checking oarg ((f trace-address))
maybe-add: ((f trace-address))
cn0: location for oarg ((f trace-address)): 8
cn0: (((l string-address)) <- ((get)) ((f trace-address) (deref)) ((label offset))) ((ch 4) (curr-tail 3) (done? 6) (f 8) (in 1) (line 7) (result 2) (run 5)) nil
cn0: field-access label in ftrace-addressderef of type trace
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((f trace-address) (deref))
maybe-add: ((f trace-address) (deref))
cn0: checking arg ((label offset))
cn0: checking oarg ((l string-address))
maybe-add: ((l string-address))
cn0: location for oarg ((l string-address)): 9
cn0: (((inst? boolean)) <- ((string-equal)) ((l string-address)) ((run string-address) (const))) ((ch 4) (curr-tail 3) (done? 6) (f 8) (in 1) (l 9) (label 0) (line 7) (result 2) (run 5)) ((label t))
cn0: checking arg ((l string-address))
maybe-add: ((l string-address))
cn0: checking arg ((run string-address) (const))
maybe-add: ((run string-address) (const))
cn0: checking oarg ((inst? boolean))
maybe-add: ((inst? boolean))
cn0: location for oarg ((inst? boolean)): 10
cn0: (((jump-unless)) ((inst? boolean)) ((7 offset))) ((ch 4) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((label t))
cn0: checking arg ((inst? boolean))
maybe-add: ((inst? boolean))
cn0: checking arg ((7 offset))
cn0: (((jump-unless)) ((curr-tail instruction-trace-address)) ((3 offset))) ((ch 4) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((label t))
cn0: checking arg ((curr-tail instruction-trace-address))
maybe-add: ((curr-tail instruction-trace-address))
cn0: checking arg ((3 offset))
cn0: (((c trace-address-array-address-address)) <- ((get-address)) ((curr-tail instruction-trace-address) (deref)) ((children offset))) ((ch 4) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((label t))
cn0: field-access children in curr-tailinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 3
cn0: checking arg ((curr-tail instruction-trace-address) (deref))
maybe-add: ((curr-tail instruction-trace-address) (deref))
cn0: checking arg ((children offset))
cn0: checking oarg ((c trace-address-array-address-address))
maybe-add: ((c trace-address-array-address-address))
cn0: location for oarg ((c trace-address-array-address-address)): 11
cn0: (((c trace-address-array-address-address) (deref)) <- ((to-array)) ((ch buffer-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((ch buffer-address))
maybe-add: ((ch buffer-address))
cn0: checking oarg ((c trace-address-array-address-address) (deref))
maybe-add: ((c trace-address-array-address-address) (deref))
cn0: (((ch buffer-address)) <- ((init-buffer)) ((5 literal))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((5 literal))
cn0: checking oarg ((ch buffer-address))
maybe-add: ((ch buffer-address))
cn0: (((curr-tail instruction-trace-address)) <- ((parse-instruction-trace)) ((f trace-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((f trace-address))
maybe-add: ((f trace-address))
cn0: checking oarg ((curr-tail instruction-trace-address))
maybe-add: ((curr-tail instruction-trace-address))
cn0: (((result buffer-address)) <- ((append)) ((result buffer-address)) ((curr-tail instruction-trace-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((result buffer-address))
maybe-add: ((result buffer-address))
cn0: checking arg ((curr-tail instruction-trace-address))
maybe-add: ((curr-tail instruction-trace-address))
cn0: checking oarg ((result buffer-address))
maybe-add: ((result buffer-address))
cn0: (((jump)) ((-15 offset))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((-15 offset))
cn0: (((jump-unless)) ((curr-tail instruction-trace-address)) ((-16 offset))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((curr-tail instruction-trace-address))
maybe-add: ((curr-tail instruction-trace-address))
cn0: checking arg ((-16 offset))
cn0: (((ch buffer-address)) <- ((append)) ((ch buffer-address)) ((f trace-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((ch buffer-address))
maybe-add: ((ch buffer-address))
cn0: checking arg ((f trace-address))
maybe-add: ((f trace-address))
cn0: checking oarg ((ch buffer-address))
maybe-add: ((ch buffer-address))
cn0: (((jump)) ((-18 offset))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((-18 offset))
cn0: (((jump-unless)) ((curr-tail instruction-trace-address)) ((2 offset))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((curr-tail instruction-trace-address))
maybe-add: ((curr-tail instruction-trace-address))
cn0: checking arg ((2 offset))
cn0: (((c trace-address-array-address-address)) <- ((get-address)) ((curr-tail instruction-trace-address) (deref)) ((children offset))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: field-access children in curr-tailinstruction-trace-addressderef of type instruction-trace
cn0: checking arg ((curr-tail instruction-trace-address) (deref))
maybe-add: ((curr-tail instruction-trace-address) (deref))
cn0: checking arg ((children offset))
cn0: checking oarg ((c trace-address-array-address-address))
maybe-add: ((c trace-address-array-address-address))
cn0: (((c trace-address-array-address-address) (deref)) <- ((to-array)) ((ch buffer-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((ch buffer-address))
maybe-add: ((ch buffer-address))
cn0: checking oarg ((c trace-address-array-address-address) (deref))
maybe-add: ((c trace-address-array-address-address) (deref))
cn0: (((s instruction-trace-address-array-address)) <- ((to-array)) ((result buffer-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5)) ((children t) (label t))
cn0: checking arg ((result buffer-address))
maybe-add: ((result buffer-address))
cn0: checking oarg ((s instruction-trace-address-array-address))
maybe-add: ((s instruction-trace-address-array-address))
cn0: location for oarg ((s instruction-trace-address-array-address)): 12
cn0: (((reply)) ((s instruction-trace-address-array-address))) ((c 11) (ch 4) (children 3) (curr-tail 3) (done? 6) (f 8) (in 1) (inst? 10) (l 9) (label 0) (line 7) (result 2) (run 5) (s 12)) ((children t) (label t))
cn0: checking arg ((s instruction-trace-address-array-address))
maybe-add: ((s instruction-trace-address-array-address))
cn0: convert-names in print-instruction-trace
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((x instruction-trace-address)) <- ((next-input))) ((screen 1)) nil
cn0: checking oarg ((x instruction-trace-address))
maybe-add: ((x instruction-trace-address))
cn0: location for oarg ((x instruction-trace-address)): 2
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) ((screen 1) (x 2)) nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((clear-line)) ((screen terminal-address))) ((screen 1) (x 2)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((print-character)) ((screen terminal-address)) ((- literal))) ((screen 1) (x 2)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((- literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((screen 1) (x 2)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((c string-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((call-stack offset))) ((screen 1) (x 2)) nil
cn0: field-access call-stack in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((call-stack offset))
cn0: checking oarg ((c string-address-array-address))
maybe-add: ((c string-address-array-address))
cn0: location for oarg ((c string-address-array-address)): 3
cn0: (((i integer)) <- ((copy)) ((0 literal))) ((c 3) (call-stack 0) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: location for oarg ((i integer)): 4
cn0: (((len integer)) <- ((length)) ((c string-address-array-address) (deref))) ((c 3) (call-stack 0) (i 4) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((c string-address-array-address) (deref))
maybe-add: ((c string-address-array-address) (deref))
cn0: checking oarg ((len integer))
maybe-add: ((len integer))
cn0: location for oarg ((len integer)): 5
cn0: (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer))) ((c 3) (call-stack 0) (i 4) (len 5) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((len integer))
maybe-add: ((len integer))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 6
cn0: (((jump-if)) ((done? boolean)) ((5 offset))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((5 offset))
cn0: (((s string-address)) <- ((index)) ((c string-address-array-address) (deref)) ((i integer))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((c string-address-array-address) (deref))
maybe-add: ((c string-address-array-address) (deref))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking oarg ((s string-address))
maybe-add: ((s string-address))
cn0: location for oarg ((s string-address)): 7
cn0: (((print-string)) ((screen terminal-address)) ((s string-address))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (s 7) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((s string-address))
maybe-add: ((s string-address))
cn0: (((print-character)) ((screen terminal-address)) ((/ literal))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (s 7) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((/ literal))
cn0: (((i integer)) <- ((add)) ((i integer)) ((1 literal))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (s 7) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((jump)) ((-7 offset))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (s 7) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((-7 offset))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (s 7) (screen 1) (x 2)) ((call-stack t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((p string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((pc offset))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (s 7) (screen 1) (x 2)) ((call-stack t))
cn0: field-access pc in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((pc offset))
cn0: checking oarg ((p string-address))
maybe-add: ((p string-address))
cn0: location for oarg ((p string-address)): 8
cn0: (((print-string)) ((screen terminal-address)) ((p string-address))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((p string-address))
maybe-add: ((p string-address))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((print-character)) ((screen terminal-address)) ((: literal))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((: literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((i string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((instruction offset))) ((c 3) (call-stack 0) (done? 6) (i 4) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (pc t))
cn0: field-access instruction in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 2
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((instruction offset))
cn0: checking oarg ((i string-address))
maybe-add: ((i string-address))
cn0: (((print-string)) ((screen terminal-address)) ((i string-address))) ((c 3) (call-stack 0) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (instruction t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((i string-address))
maybe-add: ((i string-address))
cn0: (((add-line)) ((0 space-address) (screen-state)) ((screen terminal-address))) ((c 3) (call-stack 0) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (instruction t) (pc t))
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((ch trace-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((children offset))) ((c 3) (call-stack 0) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (instruction t) (pc t))
cn0: field-access children in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 3
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((children offset))
cn0: checking oarg ((ch trace-address-array-address))
maybe-add: ((ch trace-address-array-address))
cn0: location for oarg ((ch trace-address-array-address)): 9
cn0: (((i integer)) <- ((copy)) ((0 literal))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((jump-if)) ((ch trace-address-array-address)) ((1 offset))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((ch trace-address-array-address))
maybe-add: ((ch trace-address-array-address))
cn0: checking arg ((1 offset))
cn0: (((reply))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: (((len integer)) <- ((length)) ((ch trace-address-array-address) (deref))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((ch trace-address-array-address) (deref))
maybe-add: ((ch trace-address-array-address) (deref))
cn0: checking oarg ((len integer))
maybe-add: ((len integer))
cn0: (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((len integer))
maybe-add: ((len integer))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: (((jump-if)) ((done? boolean)) ((10 offset))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((10 offset))
cn0: (((screen-done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((screen-height integer) (space 1))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((screen-height integer) (space 1))
maybe-add: ((screen-height integer) (space 1))
cn0: checking oarg ((screen-done? boolean))
maybe-add: ((screen-done? boolean))
cn0: location for oarg ((screen-done? boolean)): 10
cn0: (((jump-if)) ((screen-done? boolean)) ((8 offset))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((screen-done? boolean))
maybe-add: ((screen-done? boolean))
cn0: checking arg ((8 offset))
cn0: (((t trace-address)) <- ((index)) ((ch trace-address-array-address) (deref)) ((i integer))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((ch trace-address-array-address) (deref))
maybe-add: ((ch trace-address-array-address) (deref))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking oarg ((t trace-address))
maybe-add: ((t trace-address))
cn0: location for oarg ((t trace-address)): 11
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((print-trace)) ((screen terminal-address)) ((t trace-address))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((t trace-address))
maybe-add: ((t trace-address))
cn0: (((add-line)) ((0 space-address) (screen-state)) ((screen terminal-address))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((i integer)) <- ((add)) ((i integer)) ((1 literal))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((jump)) ((-12 offset))) ((c 3) (call-stack 0) (ch 9) (children 3) (done? 6) (i 4) (instruction 2) (len 5) (p 8) (pc 1) (s 7) (screen 1) (screen-done? 10) (t 11) (x 2)) ((call-stack t) (children t) (instruction t) (pc t))
cn0: checking arg ((-12 offset))
cn0: convert-names in print-instruction-trace-collapsed
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((screen terminal)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal))
maybe-add: ((screen terminal))
cn0: location for oarg ((screen terminal)): 1
cn0: (((x instruction-trace-address)) <- ((next-input))) ((screen 1)) nil
cn0: checking oarg ((x instruction-trace-address))
maybe-add: ((x instruction-trace-address))
cn0: location for oarg ((x instruction-trace-address)): 6
cn0: (((screen-state space-address)) <- ((next-input))) ((screen 1) (x 6)) nil
cn0: checking oarg ((screen-state space-address))
maybe-add: ((screen-state space-address))
cn0: location for oarg ((screen-state space-address)): 7
cn0: (((clear-line)) ((screen terminal-address))) ((screen 1) (screen-state 7) (x 6)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((print-character)) ((screen terminal-address)) ((+ literal))) ((screen 1) (screen-state 7) (x 6)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((+ literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((screen 1) (screen-state 7) (x 6)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((c string-address-array-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((call-stack offset))) ((screen 1) (screen-state 7) (x 6)) nil
cn0: field-access call-stack in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((call-stack offset))
cn0: checking oarg ((c string-address-array-address))
maybe-add: ((c string-address-array-address))
cn0: location for oarg ((c string-address-array-address)): 8
cn0: (((i integer)) <- ((copy)) ((0 literal))) ((c 8) (call-stack 0) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: location for oarg ((i integer)): 9
cn0: (((len integer)) <- ((length)) ((c string-address-array-address) (deref))) ((c 8) (call-stack 0) (i 9) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((c string-address-array-address) (deref))
maybe-add: ((c string-address-array-address) (deref))
cn0: checking oarg ((len integer))
maybe-add: ((len integer))
cn0: location for oarg ((len integer)): 10
cn0: (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((len integer))) ((c 8) (call-stack 0) (i 9) (len 10) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((len integer))
maybe-add: ((len integer))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 11
cn0: (((jump-if)) ((done? boolean)) ((5 offset))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((5 offset))
cn0: (((s string-address)) <- ((index)) ((c string-address-array-address) (deref)) ((i integer))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((c string-address-array-address) (deref))
maybe-add: ((c string-address-array-address) (deref))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking oarg ((s string-address))
maybe-add: ((s string-address))
cn0: location for oarg ((s string-address)): 12
cn0: (((print-string)) ((screen terminal-address)) ((s string-address))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((s string-address))
maybe-add: ((s string-address))
cn0: (((print-character)) ((screen terminal-address)) ((/ literal))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((/ literal))
cn0: (((i integer)) <- ((add)) ((i integer)) ((1 literal))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((jump)) ((-7 offset))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((-7 offset))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((p string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((pc offset))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t))
cn0: field-access pc in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((pc offset))
cn0: checking oarg ((p string-address))
maybe-add: ((p string-address))
cn0: location for oarg ((p string-address)): 13
cn0: (((print-string)) ((screen terminal-address)) ((p string-address))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((p string-address))
maybe-add: ((p string-address))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((print-character)) ((screen terminal-address)) ((: literal))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((: literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((i string-address)) <- ((get)) ((x instruction-trace-address) (deref)) ((instruction offset))) ((c 8) (call-stack 0) (done? 11) (i 9) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (pc t))
cn0: field-access instruction in xinstruction-trace-addressderef of type instruction-trace
cn0: new field; computing location
cn0: field location 2
cn0: checking arg ((x instruction-trace-address) (deref))
maybe-add: ((x instruction-trace-address) (deref))
cn0: checking arg ((instruction offset))
cn0: checking oarg ((i string-address))
maybe-add: ((i string-address))
cn0: (((print-string)) ((screen terminal-address)) ((i string-address))) ((c 8) (call-stack 0) (done? 11) (i 9) (instruction 2) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (instruction t) (pc t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((i string-address))
maybe-add: ((i string-address))
cn0: (((add-line)) ((screen-state space-address)) ((screen terminal-address))) ((c 8) (call-stack 0) (done? 11) (i 9) (instruction 2) (len 10) (p 13) (pc 1) (s 12) (screen 1) (screen-state 7) (x 6)) ((call-stack t) (instruction t) (pc t))
cn0: checking arg ((screen-state space-address))
maybe-add: ((screen-state space-address))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: convert-names in print-trace
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((x trace-address)) <- ((next-input))) ((screen 1)) nil
cn0: checking oarg ((x trace-address))
maybe-add: ((x trace-address))
cn0: location for oarg ((x trace-address)): 2
cn0: (((l string-address)) <- ((get)) ((x trace-address) (deref)) ((label offset))) ((screen 1) (x 2)) nil
cn0: field-access label in xtrace-addressderef of type trace
cn0: new field; computing location
cn0: field location 0
cn0: checking arg ((x trace-address) (deref))
maybe-add: ((x trace-address) (deref))
cn0: checking arg ((label offset))
cn0: checking oarg ((l string-address))
maybe-add: ((l string-address))
cn0: location for oarg ((l string-address)): 3
cn0: (((clear-line)) ((screen terminal-address))) ((l 3) (label 0) (screen 1) (x 2)) ((label t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((print-string)) ((screen terminal-address)) ((l string-address))) ((l 3) (label 0) (screen 1) (x 2)) ((label t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((l string-address))
maybe-add: ((l string-address))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((l 3) (label 0) (screen 1) (x 2)) ((label t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((print-character)) ((screen terminal-address)) ((: literal))) ((l 3) (label 0) (screen 1) (x 2)) ((label t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((: literal))
cn0: (((print-character)) ((screen terminal-address)) ((  literal))) ((l 3) (label 0) (screen 1) (x 2)) ((label t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((  literal))
cn0: (((c string-address)) <- ((get)) ((x trace-address) (deref)) ((contents offset))) ((l 3) (label 0) (screen 1) (x 2)) ((label t))
cn0: field-access contents in xtrace-addressderef of type trace
cn0: new field; computing location
cn0: field location 1
cn0: checking arg ((x trace-address) (deref))
maybe-add: ((x trace-address) (deref))
cn0: checking arg ((contents offset))
cn0: checking oarg ((c string-address))
maybe-add: ((c string-address))
cn0: location for oarg ((c string-address)): 4
cn0: (((print-string)) ((screen terminal-address)) ((c string-address))) ((c 4) (contents 1) (l 3) (label 0) (screen 1) (x 2)) ((contents t) (label t))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((c string-address))
maybe-add: ((c string-address))
cn0: convert-names in print-traces-collapsed
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((0 literal) (from))) ((screen 1)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((0 literal) (from))
cn0: convert-names in print-traces-collapsed-from
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((trace-index integer)) <- ((next-input))) ((screen 1)) nil
cn0: checking oarg ((trace-index integer))
maybe-add: ((trace-index integer))
cn0: location for oarg ((trace-index integer)): 2
cn0: (((len integer)) <- ((length)) ((traces instruction-trace-address-array-address) (space 1) (deref))) ((screen 1) (trace-index 2)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1) (deref))
maybe-add: ((traces instruction-trace-address-array-address) (space 1) (deref))
cn0: checking oarg ((len integer))
maybe-add: ((len integer))
cn0: location for oarg ((len integer)): 3
cn0: (((height integer)) <- ((min)) ((len integer)) ((screen-height integer) (space 1))) ((len 3) (screen 1) (trace-index 2)) nil
cn0: checking arg ((len integer))
maybe-add: ((len integer))
cn0: checking arg ((screen-height integer) (space 1))
maybe-add: ((screen-height integer) (space 1))
cn0: checking oarg ((height integer))
maybe-add: ((height integer))
cn0: location for oarg ((height integer)): 4
cn0: (((trace-done? boolean)) <- ((greater-or-equal)) ((trace-index integer)) ((len integer))) ((height 4) (len 3) (screen 1) (trace-index 2)) nil
cn0: checking arg ((trace-index integer))
maybe-add: ((trace-index integer))
cn0: checking arg ((len integer))
maybe-add: ((len integer))
cn0: checking oarg ((trace-done? boolean))
maybe-add: ((trace-done? boolean))
cn0: location for oarg ((trace-done? boolean)): 5
cn0: (((jump-if)) ((trace-done? boolean)) ((6 offset))) ((height 4) (len 3) (screen 1) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((trace-done? boolean))
maybe-add: ((trace-done? boolean))
cn0: checking arg ((6 offset))
cn0: (((screen-done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((screen-height integer) (space 1))) ((height 4) (len 3) (screen 1) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((screen-height integer) (space 1))
maybe-add: ((screen-height integer) (space 1))
cn0: checking oarg ((screen-done? boolean))
maybe-add: ((screen-done? boolean))
cn0: location for oarg ((screen-done? boolean)): 6
cn0: (((jump-if)) ((screen-done? boolean)) ((4 offset))) ((height 4) (len 3) (screen 1) (screen-done? 6) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((screen-done? boolean))
maybe-add: ((screen-done? boolean))
cn0: checking arg ((4 offset))
cn0: (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((trace-index integer))) ((height 4) (len 3) (screen 1) (screen-done? 6) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1) (deref))
maybe-add: ((traces instruction-trace-address-array-address) (space 1) (deref))
cn0: checking arg ((trace-index integer))
maybe-add: ((trace-index integer))
cn0: checking oarg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: location for oarg ((tr instruction-trace-address)): 7
cn0: (((print-instruction-trace-collapsed)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state))) ((height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: (((trace-index integer)) <- ((add)) ((trace-index integer)) ((1 literal))) ((height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((trace-index integer))
maybe-add: ((trace-index integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((trace-index integer))
maybe-add: ((trace-index integer))
cn0: (((jump)) ((-8 offset))) ((height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((-8 offset))
cn0: (((done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((app-height integer) (space 1))) ((height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((app-height integer) (space 1))
maybe-add: ((app-height integer) (space 1))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 8
cn0: (((jump-if)) ((done? boolean)) ((3 offset))) ((done? 8) (height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((3 offset))
cn0: (((clear-line)) ((screen terminal-address))) ((done? 8) (height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((down)) ((0 space-address) (screen-state)) ((screen terminal-address))) ((done? 8) (height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((jump)) ((-5 offset))) ((done? 8) (height 4) (len 3) (screen 1) (screen-done? 6) (tr 7) (trace-done? 5) (trace-index 2)) nil
cn0: checking arg ((-5 offset))
cn0: convert-names in process-key
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((k keyboard-address)) <- ((next-input))) nil nil
cn0: checking oarg ((k keyboard-address))
maybe-add: ((k keyboard-address))
cn0: location for oarg ((k keyboard-address)): 1
cn0: (((screen terminal-address)) <- ((next-input))) ((k 1)) nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 2
cn0: (((c character)) <- ((read-key)) ((k keyboard-address)) ((silent literal) (terminal))) ((k 1) (screen 2)) nil
cn0: checking arg ((k keyboard-address))
maybe-add: ((k keyboard-address))
cn0: checking arg ((silent literal) (terminal))
cn0: checking oarg ((c character))
maybe-add: ((c character))
cn0: location for oarg ((c character)): 3
cn0: (((jump-if)) ((c character)) ((1 offset))) ((c 3) (k 1) (screen 2)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((1 offset))
cn0: (((reply)) ((nil literal))) ((c 3) (k 1) (screen 2)) nil
cn0: checking arg ((nil literal))
cn0: (((q-pressed? boolean)) <- ((equal)) ((c character)) ((q literal))) ((c 3) (k 1) (screen 2)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((q literal))
cn0: checking oarg ((q-pressed? boolean))
maybe-add: ((q-pressed? boolean))
cn0: location for oarg ((q-pressed? boolean)): 4
cn0: (((end-of-fake-keyboard-input? boolean)) <- ((equal)) ((c character)) ((  literal))) ((c 3) (k 1) (q-pressed? 4) (screen 2)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((  literal))
cn0: checking oarg ((end-of-fake-keyboard-input? boolean))
maybe-add: ((end-of-fake-keyboard-input? boolean))
cn0: location for oarg ((end-of-fake-keyboard-input? boolean)): 5
cn0: (((quit? boolean)) <- ((or)) ((q-pressed? boolean)) ((end-of-fake-keyboard-input? boolean))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (q-pressed? 4) (screen 2)) nil
cn0: checking arg ((q-pressed? boolean))
maybe-add: ((q-pressed? boolean))
cn0: checking arg ((end-of-fake-keyboard-input? boolean))
maybe-add: ((end-of-fake-keyboard-input? boolean))
cn0: checking oarg ((quit? boolean))
maybe-add: ((quit? boolean))
cn0: location for oarg ((quit? boolean)): 6
cn0: (((jump-unless)) ((quit? boolean)) ((1 offset))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (q-pressed? 4) (quit? 6) (screen 2)) nil
cn0: checking arg ((quit? boolean))
maybe-add: ((quit? boolean))
cn0: checking arg ((1 offset))
cn0: (((reply)) ((t literal))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (q-pressed? 4) (quit? 6) (screen 2)) nil
cn0: checking arg ((t literal))
cn0: (((up? boolean)) <- ((equal)) ((c character)) ((up literal))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (q-pressed? 4) (quit? 6) (screen 2)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((up literal))
cn0: checking oarg ((up? boolean))
maybe-add: ((up? boolean))
cn0: location for oarg ((up? boolean)): 7
cn0: (((k? boolean)) <- ((equal)) ((c character)) ((k literal))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((k literal))
cn0: checking oarg ((k? boolean))
maybe-add: ((k? boolean))
cn0: location for oarg ((k? boolean)): 8
cn0: (((up? boolean)) <- ((or)) ((up? boolean)) ((k? boolean))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((up? boolean))
maybe-add: ((up? boolean))
cn0: checking arg ((k? boolean))
maybe-add: ((k? boolean))
cn0: checking oarg ((up? boolean))
maybe-add: ((up? boolean))
cn0: (((jump-unless)) ((up? boolean)) ((2 offset))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((up? boolean))
maybe-add: ((up? boolean))
cn0: checking arg ((2 offset))
cn0: (((up)) ((0 space-address) (screen-state)) ((screen terminal-address))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((reply)) ((nil literal))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((nil literal))
cn0: (((down? boolean)) <- ((equal)) ((c character)) ((down literal))) ((c 3) (end-of-fake-keyboard-input? 5) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((down literal))
cn0: checking oarg ((down? boolean))
maybe-add: ((down? boolean))
cn0: location for oarg ((down? boolean)): 9
cn0: (((j? boolean)) <- ((equal)) ((c character)) ((j literal))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((j literal))
cn0: checking oarg ((j? boolean))
maybe-add: ((j? boolean))
cn0: location for oarg ((j? boolean)): 10
cn0: (((down? boolean)) <- ((or)) ((down? boolean)) ((j? boolean))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((down? boolean))
maybe-add: ((down? boolean))
cn0: checking arg ((j? boolean))
maybe-add: ((j? boolean))
cn0: checking oarg ((down? boolean))
maybe-add: ((down? boolean))
cn0: (((jump-unless)) ((down? boolean)) ((2 offset))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((down? boolean))
maybe-add: ((down? boolean))
cn0: checking arg ((2 offset))
cn0: (((down)) ((0 space-address) (screen-state)) ((screen terminal-address))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((reply)) ((nil literal))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((nil literal))
cn0: (((toggle? boolean)) <- ((equal)) ((c character)) ((
 literal))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (up? 7)) nil
cn0: checking arg ((c character))
maybe-add: ((c character))
cn0: checking arg ((
 literal))
cn0: checking oarg ((toggle? boolean))
maybe-add: ((toggle? boolean))
cn0: location for oarg ((toggle? boolean)): 11
cn0: (((jump-unless)) ((toggle? boolean)) ((28 offset))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((toggle? boolean))
maybe-add: ((toggle? boolean))
cn0: checking arg ((28 offset))
cn0: (((original-cursor-row integer)) <- ((copy)) ((cursor-row integer) (space 1))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking oarg ((original-cursor-row integer))
maybe-add: ((original-cursor-row integer))
cn0: location for oarg ((original-cursor-row integer)): 12
cn0: (((original-trace-index integer)) <- ((cursor-row-to-trace-index)) ((0 space-address) (screen-state)) ((original-cursor-row integer))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((original-cursor-row integer))
maybe-add: ((original-cursor-row integer))
cn0: checking oarg ((original-trace-index integer))
maybe-add: ((original-trace-index integer))
cn0: location for oarg ((original-trace-index integer)): 13
cn0: (((expanded? boolean)) <- ((greater-or-equal)) ((expanded-index integer) (space 1)) ((0 literal))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking arg ((0 literal))
cn0: checking oarg ((expanded? boolean))
maybe-add: ((expanded? boolean))
cn0: location for oarg ((expanded? boolean)): 14
cn0: (((jump-unless)) ((expanded? boolean)) ((17 offset))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((expanded? boolean))
maybe-add: ((expanded? boolean))
cn0: checking arg ((17 offset))
cn0: (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) ((c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((at-expanded? boolean))
maybe-add: ((at-expanded? boolean))
cn0: location for oarg ((at-expanded? boolean)): 15
cn0: (((jump-unless)) ((at-expanded? boolean)) ((4 offset))) ((at-expanded? 15) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((at-expanded? boolean))
maybe-add: ((at-expanded? boolean))
cn0: checking arg ((4 offset))
cn0: (((expanded-index integer) (space 1)) <- ((copy)) ((-1 literal))) ((at-expanded? 15) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((-1 literal))
cn0: checking oarg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((cursor-row integer) (space 1))) ((at-expanded? 15) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: (((back-to)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((original-cursor-row integer))) ((at-expanded? 15) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((original-cursor-row integer))
maybe-add: ((original-cursor-row integer))
cn0: (((reply))) ((at-expanded? 15) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: (((below-expanded? boolean)) <- ((greater-than)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) ((at-expanded? 15) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((below-expanded? boolean))
maybe-add: ((below-expanded? boolean))
cn0: location for oarg ((below-expanded? boolean)): 16
cn0: (((jump-unless)) ((below-expanded? boolean)) ((9 offset))) ((at-expanded? 15) (below-expanded? 16) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((below-expanded? boolean))
maybe-add: ((below-expanded? boolean))
cn0: checking arg ((9 offset))
cn0: (((at-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((expanded-index integer) (space 1))) ((at-expanded? 15) (below-expanded? 16) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((at-expanded? boolean))
maybe-add: ((at-expanded? boolean))
cn0: (((jump-if)) ((at-expanded? boolean)) ((2 offset))) ((at-expanded? 15) (below-expanded? 16) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((at-expanded? boolean))
maybe-add: ((at-expanded? boolean))
cn0: checking arg ((2 offset))
cn0: (((up)) ((0 space-address)) ((screen terminal-address))) ((at-expanded? 15) (below-expanded? 16) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((0 space-address))
maybe-add: ((0 space-address))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((jump)) ((-4 offset))) ((at-expanded? 15) (below-expanded? 16) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((-4 offset))
cn0: (((done? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((original-trace-index integer))) ((at-expanded? 15) (below-expanded? 16) (c 3) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((original-trace-index integer))
maybe-add: ((original-trace-index integer))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 17
cn0: (((jump-if)) ((done? boolean)) ((3 offset))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((3 offset))
cn0: (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((cursor-row integer) (space 1))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (up? 7)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1) (deref))
maybe-add: ((traces instruction-trace-address-array-address) (space 1) (deref))
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking oarg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: location for oarg ((tr instruction-trace-address)): 18
cn0: (((print-instruction-trace-collapsed)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: (((jump)) ((-5 offset))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((-5 offset))
cn0: (((expanded-index integer) (space 1)) <- ((copy)) ((original-trace-index integer))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((original-trace-index integer))
maybe-add: ((original-trace-index integer))
cn0: checking oarg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: (((tr instruction-trace-address)) <- ((index)) ((traces instruction-trace-address-array-address) (space 1) (deref)) ((original-trace-index integer))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1) (deref))
maybe-add: ((traces instruction-trace-address-array-address) (space 1) (deref))
cn0: checking arg ((original-trace-index integer))
maybe-add: ((original-trace-index integer))
cn0: checking oarg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: (((print-instruction-trace)) ((screen terminal-address)) ((tr instruction-trace-address)) ((0 space-address) (screen-state))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((tr instruction-trace-address))
maybe-add: ((tr instruction-trace-address))
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: (((next-index integer)) <- ((add)) ((original-trace-index integer)) ((1 literal))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((original-trace-index integer))
maybe-add: ((original-trace-index integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((next-index integer))
maybe-add: ((next-index integer))
cn0: location for oarg ((next-index integer)): 19
cn0: (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((next-index integer))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (next-index 19) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((next-index integer))
maybe-add: ((next-index integer))
cn0: (((back-to)) ((0 space-address) (screen-state)) ((screen terminal-address)) ((original-trace-index integer))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (next-index 19) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((0 space-address) (screen-state))
maybe-add: ((0 space-address) (screen-state))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: checking arg ((original-trace-index integer))
maybe-add: ((original-trace-index integer))
cn0: (((reply)) ((nil literal))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (next-index 19) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((nil literal))
cn0: (((reply)) ((nil literal))) ((at-expanded? 15) (below-expanded? 16) (c 3) (done? 17) (down? 9) (end-of-fake-keyboard-input? 5) (expanded? 14) (j? 10) (k 1) (k? 8) (next-index 19) (original-cursor-row 12) (original-trace-index 13) (q-pressed? 4) (quit? 6) (screen 2) (toggle? 11) (tr 18) (up? 7)) nil
cn0: checking arg ((nil literal))
cn0: convert-names in screen-state
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((traces instruction-trace-address-array-address)) <- ((next-input))) nil nil
cn0: checking oarg ((traces instruction-trace-address-array-address))
maybe-add: ((traces instruction-trace-address-array-address))
cn0: location for oarg ((traces instruction-trace-address-array-address)): 1
cn0: (((screen-height integer)) <- ((next-input))) ((traces 1)) nil
cn0: checking oarg ((screen-height integer))
maybe-add: ((screen-height integer))
cn0: location for oarg ((screen-height integer)): 2
cn0: (((app-height integer)) <- ((copy)) ((0 literal))) ((screen-height 2) (traces 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((app-height integer))
maybe-add: ((app-height integer))
cn0: location for oarg ((app-height integer)): 3
cn0: (((printed-height integer)) <- ((copy)) ((0 literal))) ((app-height 3) (screen-height 2) (traces 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((printed-height integer))
maybe-add: ((printed-height integer))
cn0: location for oarg ((printed-height integer)): 4
cn0: (((cursor-row integer)) <- ((copy)) ((0 literal))) ((app-height 3) (printed-height 4) (screen-height 2) (traces 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((cursor-row integer))
maybe-add: ((cursor-row integer))
cn0: location for oarg ((cursor-row integer)): 5
cn0: (((expanded-index integer)) <- ((copy)) ((-1 literal))) ((app-height 3) (cursor-row 5) (printed-height 4) (screen-height 2) (traces 1)) nil
cn0: checking arg ((-1 literal))
cn0: checking oarg ((expanded-index integer))
maybe-add: ((expanded-index integer))
cn0: location for oarg ((expanded-index integer)): 6
cn0: (((reply)) ((default-space space-address))) ((app-height 3) (cursor-row 5) (expanded-index 6) (printed-height 4) (screen-height 2) (traces 1)) nil
cn0: checking arg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: convert-names in to-bottom
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((at-bottom? boolean)) <- ((greater-or-equal)) ((cursor-row integer) (space 1)) ((printed-height integer) (space 1))) ((screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((printed-height integer) (space 1))
maybe-add: ((printed-height integer) (space 1))
cn0: checking oarg ((at-bottom? boolean))
maybe-add: ((at-bottom? boolean))
cn0: location for oarg ((at-bottom? boolean)): 2
cn0: (((jump-if)) ((at-bottom? boolean)) ((2 offset))) ((at-bottom? 2) (screen 1)) nil
cn0: checking arg ((at-bottom? boolean))
maybe-add: ((at-bottom? boolean))
cn0: checking arg ((2 offset))
cn0: (((down)) ((0 space-address)) ((screen terminal-address))) ((at-bottom? 2) (screen 1)) nil
cn0: checking arg ((0 space-address))
maybe-add: ((0 space-address))
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((jump)) ((-4 offset))) ((at-bottom? 2) (screen 1)) nil
cn0: checking arg ((-4 offset))
cn0: convert-names in up
cn0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity))) nil nil
cn0: checking arg ((space literal))
cn0: checking arg ((30 literal) (capacity))
cn0: checking oarg ((default-space space-address))
maybe-add: ((default-space space-address))
cn0: (((0 space-address) (names screen-state)) <- ((next-input))) nil nil
cn0: checking oarg ((0 space-address) (names screen-state))
maybe-add: ((0 space-address) (names screen-state))
cn0: (((screen terminal-address)) <- ((next-input))) nil nil
cn0: checking oarg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: location for oarg ((screen terminal-address)): 1
cn0: (((no-expanded? boolean)) <- ((less-than)) ((expanded-index integer) (space 1)) ((0 literal))) ((screen 1)) nil
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking arg ((0 literal))
cn0: checking oarg ((no-expanded? boolean))
maybe-add: ((no-expanded? boolean))
cn0: location for oarg ((no-expanded? boolean)): 2
cn0: (((jump-if)) ((no-expanded? boolean)) ((13 offset))) ((no-expanded? 2) (screen 1)) nil
cn0: checking arg ((no-expanded? boolean))
maybe-add: ((no-expanded? boolean))
cn0: checking arg ((13 offset))
cn0: (((n integer)) <- ((instruction-trace-num-children)) ((traces instruction-trace-address-array-address) (space 1)) ((expanded-index integer) (space 1))) ((no-expanded? 2) (screen 1)) nil
cn0: checking arg ((traces instruction-trace-address-array-address) (space 1))
maybe-add: ((traces instruction-trace-address-array-address) (space 1))
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking oarg ((n integer))
maybe-add: ((n integer))
cn0: location for oarg ((n integer)): 3
cn0: (((n integer)) <- ((add)) ((n integer)) ((1 literal))) ((n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((n integer))
maybe-add: ((n integer))
cn0: (((cursor-row-below-expanded integer)) <- ((add)) ((expanded-index integer) (space 1)) ((n integer))) ((n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((expanded-index integer) (space 1))
maybe-add: ((expanded-index integer) (space 1))
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: checking oarg ((cursor-row-below-expanded integer))
maybe-add: ((cursor-row-below-expanded integer))
cn0: location for oarg ((cursor-row-below-expanded integer)): 4
cn0: (((just-below-expanded? boolean)) <- ((equal)) ((cursor-row integer) (space 1)) ((cursor-row-below-expanded integer))) ((cursor-row-below-expanded 4) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((cursor-row-below-expanded integer))
maybe-add: ((cursor-row-below-expanded integer))
cn0: checking oarg ((just-below-expanded? boolean))
maybe-add: ((just-below-expanded? boolean))
cn0: location for oarg ((just-below-expanded? boolean)): 5
cn0: (((jump-unless)) ((just-below-expanded? boolean)) ((8 offset))) ((cursor-row-below-expanded 4) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((just-below-expanded? boolean))
maybe-add: ((just-below-expanded? boolean))
cn0: checking arg ((8 offset))
cn0: (((i integer)) <- ((copy)) ((0 literal))) ((cursor-row-below-expanded 4) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((0 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: location for oarg ((i integer)): 6
cn0: (((done? boolean)) <- ((greater-or-equal)) ((i integer)) ((n integer))) ((cursor-row-below-expanded 4) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((n integer))
maybe-add: ((n integer))
cn0: checking oarg ((done? boolean))
maybe-add: ((done? boolean))
cn0: location for oarg ((done? boolean)): 7
cn0: (((jump-if)) ((done? boolean)) ((4 offset))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((done? boolean))
maybe-add: ((done? boolean))
cn0: checking arg ((4 offset))
cn0: (((cursor-row integer) (space 1)) <- ((subtract)) ((cursor-row integer) (space 1)) ((1 literal))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((1 literal))
cn0: checking oarg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: (((cursor-up)) ((screen terminal-address))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn0: (((i integer)) <- ((add)) ((i integer)) ((1 literal))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((i integer))
maybe-add: ((i integer))
cn0: checking arg ((1 literal))
cn0: checking oarg ((i integer))
maybe-add: ((i integer))
cn0: (((jump)) ((-6 offset))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((-6 offset))
cn0: (((reply))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: (((at-top? boolean)) <- ((lesser-or-equal)) ((cursor-row integer) (space 1)) ((0 literal))) ((cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((0 literal))
cn0: checking oarg ((at-top? boolean))
maybe-add: ((at-top? boolean))
cn0: location for oarg ((at-top? boolean)): 8
cn0: (((jump-if)) ((at-top? boolean)) ((2 offset))) ((at-top? 8) (cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((at-top? boolean))
maybe-add: ((at-top? boolean))
cn0: checking arg ((2 offset))
cn0: (((cursor-row integer) (space 1)) <- ((subtract)) ((cursor-row integer) (space 1)) ((1 literal))) ((at-top? 8) (cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: checking arg ((1 literal))
cn0: checking oarg ((cursor-row integer) (space 1))
maybe-add: ((cursor-row integer) (space 1))
cn0: (((cursor-up)) ((screen terminal-address))) ((at-top? 8) (cursor-row-below-expanded 4) (done? 7) (i 6) (just-below-expanded? 5) (n 3) (no-expanded? 2) (screen 1)) nil
cn0: checking arg ((screen terminal-address))
maybe-add: ((screen terminal-address))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((4 integer) (space 1)))
cn1: (((jump-unless)) ((2 boolean)) ((9 offset)))
cn1: (((3 boolean)) <- ((greater-or-equal)) ((3 integer) (space 1)) ((2 integer) (space 1)))
cn1: (((jump-unless)) ((3 boolean)) ((3 offset)))
cn1: (((cursor-to-next-line)) ((1 terminal-address)))
cn1: (((cursor-up)) ((1 terminal-address)))
cn1: (((reply)))
cn1: (((4 integer) (space 1)) <- ((add)) ((4 integer) (space 1)) ((1 literal)))
cn1: (((4 boolean)) <- ((greater-than)) ((4 integer) (space 1)) ((3 integer) (space 1)))
cn1: (((jump-unless)) ((4 boolean)) ((1 offset)))
cn1: (((3 integer) (space 1)) <- ((copy)) ((4 integer) (space 1)))
cn1: (((5 integer) (space 1)) <- ((add)) ((5 integer) (space 1)) ((1 literal)))
cn1: (((cursor-to-next-line)) ((1 terminal-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 integer)) <- ((next-input)))
cn1: (((3 boolean)) <- ((greater-than)) ((5 integer) (space 1)) ((2 integer)))
cn1: (((jump-unless)) ((3 boolean)) ((2 offset)))
cn1: (((up)) ((0 space-address)) ((1 terminal-address)))
cn1: (((jump)) ((-4 offset)))
cn1: (((4 boolean)) <- ((less-than)) ((5 integer) (space 1)) ((2 integer)))
cn1: (((jump-unless)) ((4 boolean)) ((2 offset)))
cn1: (((down)) ((0 space-address)) ((1 terminal-address)))
cn1: (((jump)) ((-4 offset)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((1 string-address)) <- ((next-input)))
cn1: (((2 integer)) <- ((next-input)))
cn1: (((3 stream-address)) <- ((init-stream)) ((1 string-address)))
cn1: (((4 instruction-trace-address-array-address)) <- ((parse-traces)) ((3 stream-address)))
cn1: (((0 space-address) (names screen-state)) <- ((screen-state)) ((4 instruction-trace-address-array-address)) ((2 integer)))
cn1: (((cursor-mode)))
cn1: (((print-traces-collapsed)) ((0 space-address) (screen-state)) ((nil literal) (terminal)))
cn1: (((5 boolean)) <- ((process-key)) ((0 space-address) (screen-state)) ((nil literal) (keyboard)) ((nil literal) (terminal)))
cn1: (((jump-if)) ((5 boolean)) ((1 offset)))
cn1: (((jump)) ((-3 offset)))
cn1: (((to-bottom)) ((0 space-address) (screen-state)) ((nil literal) (terminal)))
cn1: (((retro-mode)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 integer) (screen)) <- ((next-input)))
cn1: (((2 boolean)) <- ((greater-or-equal)) ((6 integer) (space 1)) ((0 literal)))
cn1: (((jump-if)) ((2 boolean)) ((1 offset)))
cn1: (((reply)) ((1 integer) (index)))
cn1: (((3 boolean)) <- ((lesser-or-equal)) ((5 integer) (space 1) (screen)) ((6 integer) (space 1)))
cn1: (((jump-unless)) ((3 boolean)) ((1 offset)))
cn1: (((reply)) ((1 integer) (index)))
cn1: (((4 integer) (index)) <- ((instruction-trace-num-children)) ((1 instruction-trace-address-array-address) (space 1)) ((6 integer) (space 1)))
cn1: (((5 integer) (index)) <- ((subtract)) ((1 integer) (screen)) ((4 integer) (index)))
cn1: (((reply)) ((5 integer) (index)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 boolean)) <- ((less-than)) ((6 integer) (space 1)) ((0 literal)))
cn1: (((jump-if)) ((2 boolean)) ((12 offset)))
cn1: (((3 boolean)) <- ((equal)) ((5 integer) (space 1)) ((6 integer) (space 1)))
cn1: (((jump-unless)) ((3 boolean)) ((10 offset)))
cn1: (((4 integer)) <- ((instruction-trace-num-children)) ((1 instruction-trace-address-array-address) (space 1)) ((6 integer) (space 1)))
cn1: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
cn1: (((5 integer)) <- ((copy)) ((0 literal)))
cn1: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((4 integer)))
cn1: (((jump-if)) ((6 boolean)) ((4 offset)))
cn1: (((5 integer) (space 1)) <- ((add)) ((5 integer) (space 1)) ((1 literal)))
cn1: (((cursor-down)) ((1 terminal-address)))
cn1: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
cn1: (((jump)) ((-6 offset)))
cn1: (((reply)))
cn1: (((7 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((4 integer) (space 1)))
cn1: (((jump-if)) ((7 boolean)) ((2 offset)))
cn1: (((5 integer) (space 1)) <- ((add)) ((5 integer) (space 1)) ((1 literal)))
cn1: (((cursor-down)) ((1 terminal-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 instruction-trace-address-array-address)) <- ((next-input)))
cn1: (((2 integer)) <- ((next-input)))
cn1: (((3 instruction-trace-address)) <- ((index)) ((1 instruction-trace-address-array-address) (deref)) ((2 integer)))
cn1: (((4 trace-address-array-address)) <- ((get)) ((3 instruction-trace-address) (deref)) ((3 offset)))
cn1: (((5 integer)) <- ((length)) ((4 instruction-trace-address-array-address) (deref)))
cn1: (((reply)) ((5 integer)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((1 string-address)) <- ((new)) schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((1 literal)))
run: main 0: 1 => ((1 integer))
mem: ((1 integer)): 1 <= 1)
cn1: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
cn1: ((($print)) ((p2  literal)))
cn1: ((($print)) ((2 integer)))
cn1: ((($print)) ((
 literal)))
cn1: (((3 stream-address)) <- ((init-stream)) ((1 string-address)))
cn1: (((4 instruction-trace-address-array-address)) <- ((parse-traces)) ((3 stream-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 trace-address)) <- ((next-input)))
cn1: (((2 string-address)) <- ((get)) ((1 trace-address) (deref)) ((1 offset)))
cn1: (((3 instruction-trace-address)) <- ((new)) ((instruction-trace literal)))
cn1: (((4 string-address)) ((5 string-address)) <- ((split-first)) ((2 string-address)) ((  literal)))
cn1: (((6 string-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((0 offset)))
cn1: (((6 string-address-array-address-address) (deref)) <- ((split)) ((4 string-address)) ((/ literal)))
cn1: (((7 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((1 offset)))
cn1: (((8 string-address)) <- ((new)) : )
cn1: (((7 string-address-address) (deref)) ((5 string-address)) <- ((split-first-at-substring)) ((5 string-address)) ((8 string-address)))
cn1: (((9 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((2 offset)))
cn1: (((9 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
cn1: (((reply)) ((3 instruction-trace-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 string-address)) <- ((next-input)))
cn1: (((2 trace-address)) <- ((new)) ((trace literal)))
cn1: (((3 string-address)) <- ((new)) : )
cn1: (((4 string-address)) ((5 string-address)) <- ((split-first-at-substring)) ((1 string-address)) ((3 string-address)))
cn1: (((6 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((0 offset)))
cn1: (((6 string-address-address) (deref)) <- ((copy)) ((4 string-address)))
cn1: (((7 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((1 offset)))
cn1: (((7 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
cn1: (((reply)) ((2 trace-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 stream-address)) <- ((next-input)))
cn1: (((2 buffer-address)) <- ((init-buffer)) ((30 literal)))
cn1: (((3 instruction-trace-address)) <- ((copy)) ((nil literal)))
cn1: (((4 buffer-address)) <- ((init-buffer)) ((5 literal)))
cn1: (((5 string-address) (const)) <- ((new)) run)
cn1: next-line
cn1: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
cn1: (((jump-if)) ((6 boolean)) ((15 offset)))
cn1: (((7 string-address)) <- ((read-line)) ((1 stream-address)))
cn1: (((8 trace-address)) <- ((parse-trace)) ((7 string-address)))
cn1: (((9 string-address)) <- ((get)) ((8 trace-address) (deref)) ((0 offset)))
cn1: (((10 boolean)) <- ((string-equal)) ((9 string-address)) ((5 string-address) (const)))
cn1: (((jump-unless)) ((10 boolean)) ((7 offset)))
cn1: (((jump-unless)) ((3 instruction-trace-address)) ((3 offset)))
cn1: (((11 trace-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((3 offset)))
cn1: (((11 trace-address-array-address-address) (deref)) <- ((to-array)) ((4 buffer-address)))
cn1: (((4 buffer-address)) <- ((init-buffer)) ((5 literal)))
cn1: (((3 instruction-trace-address)) <- ((parse-instruction-trace)) ((8 trace-address)))
cn1: (((2 buffer-address)) <- ((append)) ((2 buffer-address)) ((3 instruction-trace-address)))
cn1: (((jump)) ((-15 offset)))
cn1: (((jump-unless)) ((3 instruction-trace-address)) ((-16 offset)))
cn1: (((4 buffer-address)) <- ((append)) ((4 buffer-address)) ((8 trace-address)))
cn1: (((jump)) ((-18 offset)))
cn1: (((jump-unless)) ((3 instruction-trace-address)) ((2 offset)))
cn1: (((11 trace-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((3 offset)))
cn1: (((11 trace-address-array-address-address) (deref)) <- ((to-array)) ((4 buffer-address)))
cn1: (((12 instruction-trace-address-array-address)) <- ((to-array)) ((2 buffer-address)))
cn1: (((reply)) ((12 instruction-trace-address-array-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 instruction-trace-address)) <- ((next-input)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((clear-line)) ((1 terminal-address)))
cn1: (((print-character)) ((1 terminal-address)) ((- literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((3 string-address-array-address)) <- ((get)) ((2 instruction-trace-address) (deref)) ((0 offset)))
cn1: (((4 integer)) <- ((copy)) ((0 literal)))
cn1: (((5 integer)) <- ((length)) ((3 string-address-array-address) (deref)))
cn1: (((6 boolean)) <- ((greater-or-equal)) ((4 integer)) ((5 integer)))
cn1: (((jump-if)) ((6 boolean)) ((5 offset)))
cn1: (((7 string-address)) <- ((index)) ((3 string-address-array-address) (deref)) ((4 integer)))
cn1: (((print-string)) ((1 terminal-address)) ((7 string-address)))
cn1: (((print-character)) ((1 terminal-address)) ((/ literal)))
cn1: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
cn1: (((jump)) ((-7 offset)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((8 string-address)) <- ((get)) ((2 instruction-trace-address) (deref)) ((1 offset)))
cn1: (((print-string)) ((1 terminal-address)) ((8 string-address)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((print-character)) ((1 terminal-address)) ((: literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((4 string-address)) <- ((get)) ((2 instruction-trace-address) (deref)) ((2 offset)))
cn1: (((print-string)) ((1 terminal-address)) ((4 string-address)))
cn1: (((add-line)) ((0 space-address) (screen-state)) ((1 terminal-address)))
cn1: (((9 trace-address-array-address)) <- ((get)) ((2 instruction-trace-address) (deref)) ((3 offset)))
cn1: (((4 integer)) <- ((copy)) ((0 literal)))
cn1: (((jump-if)) ((9 trace-address-array-address)) ((1 offset)))
cn1: (((reply)))
cn1: (((5 integer)) <- ((length)) ((9 trace-address-array-address) (deref)))
cn1: (((6 boolean)) <- ((greater-or-equal)) ((4 integer)) ((5 integer)))
cn1: (((jump-if)) ((6 boolean)) ((10 offset)))
cn1: (((10 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((2 integer) (space 1)))
cn1: (((jump-if)) ((10 boolean)) ((8 offset)))
cn1: (((11 trace-address)) <- ((index)) ((9 trace-address-array-address) (deref)) ((4 integer)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((print-trace)) ((1 terminal-address)) ((11 trace-address)))
cn1: (((add-line)) ((0 space-address) (screen-state)) ((1 terminal-address)))
cn1: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
cn1: (((jump)) ((-12 offset)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 terminal)) <- ((next-input)))
cn1: (((6 instruction-trace-address)) <- ((next-input)))
cn1: (((7 space-address)) <- ((next-input)))
cn1: (((clear-line)) ((1 terminal-address)))
cn1: (((print-character)) ((1 terminal-address)) ((+ literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((8 string-address-array-address)) <- ((get)) ((6 instruction-trace-address) (deref)) ((0 offset)))
cn1: (((9 integer)) <- ((copy)) ((0 literal)))
cn1: (((10 integer)) <- ((length)) ((8 string-address-array-address) (deref)))
cn1: (((11 boolean)) <- ((greater-or-equal)) ((9 integer)) ((10 integer)))
cn1: (((jump-if)) ((11 boolean)) ((5 offset)))
cn1: (((12 string-address)) <- ((index)) ((8 string-address-array-address) (deref)) ((9 integer)))
cn1: (((print-string)) ((1 terminal-address)) ((12 string-address)))
cn1: (((print-character)) ((1 terminal-address)) ((/ literal)))
cn1: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
cn1: (((jump)) ((-7 offset)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((13 string-address)) <- ((get)) ((6 instruction-trace-address) (deref)) ((1 offset)))
cn1: (((print-string)) ((1 terminal-address)) ((13 string-address)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((print-character)) ((1 terminal-address)) ((: literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((9 string-address)) <- ((get)) ((6 instruction-trace-address) (deref)) ((2 offset)))
cn1: (((print-string)) ((1 terminal-address)) ((9 string-address)))
cn1: (((add-line)) ((7 space-address)) ((1 terminal-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 trace-address)) <- ((next-input)))
cn1: (((3 string-address)) <- ((get)) ((2 trace-address) (deref)) ((0 offset)))
cn1: (((clear-line)) ((1 terminal-address)))
cn1: (((print-string)) ((1 terminal-address)) ((3 string-address)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((print-character)) ((1 terminal-address)) ((: literal)))
cn1: (((print-character)) ((1 terminal-address)) ((  literal)))
cn1: (((4 string-address)) <- ((get)) ((2 trace-address) (deref)) ((1 offset)))
cn1: (((print-string)) ((1 terminal-address)) ((4 string-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((1 terminal-address)) ((0 literal) (from)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 integer)) <- ((next-input)))
cn1: (((3 integer)) <- ((length)) ((1 instruction-trace-address-array-address) (space 1) (deref)))
cn1: (((4 integer)) <- ((min)) ((3 integer)) ((2 integer) (space 1)))
cn1: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((3 integer)))
cn1: (((jump-if)) ((5 boolean)) ((6 offset)))
cn1: (((6 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((2 integer) (space 1)))
cn1: (((jump-if)) ((6 boolean)) ((4 offset)))
cn1: (((7 instruction-trace-address)) <- ((index)) ((1 instruction-trace-address-array-address) (space 1) (deref)) ((2 integer)))
cn1: (((print-instruction-trace-collapsed)) ((1 terminal-address)) ((7 instruction-trace-address)) ((0 space-address) (screen-state)))
cn1: (((2 integer)) <- ((add)) ((2 integer)) ((1 literal)))
cn1: (((jump)) ((-8 offset)))
cn1: (((8 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((3 integer) (space 1)))
cn1: (((jump-if)) ((8 boolean)) ((3 offset)))
cn1: (((clear-line)) ((1 terminal-address)))
cn1: (((down)) ((0 space-address) (screen-state)) ((1 terminal-address)))
cn1: (((jump)) ((-5 offset)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 keyboard-address)) <- ((next-input)))
cn1: (((2 terminal-address)) <- ((next-input)))
cn1: (((3 character)) <- ((read-key)) ((1 keyboard-address)) ((silent literal) (terminal)))
cn1: (((jump-if)) ((3 character)) ((1 offset)))
cn1: (((reply)) ((nil literal)))
cn1: (((4 boolean)) <- ((equal)) ((3 character)) ((q literal)))
cn1: (((5 boolean)) <- ((equal)) ((3 character)) ((  literal)))
cn1: (((6 boolean)) <- ((or)) ((4 boolean)) ((5 boolean)))
cn1: (((jump-unless)) ((6 boolean)) ((1 offset)))
cn1: (((reply)) ((t literal)))
cn1: (((7 boolean)) <- ((equal)) ((3 character)) ((up literal)))
cn1: (((8 boolean)) <- ((equal)) ((3 character)) ((k literal)))
cn1: (((7 boolean)) <- ((or)) ((7 boolean)) ((8 boolean)))
cn1: (((jump-unless)) ((7 boolean)) ((2 offset)))
cn1: (((up)) ((0 space-address) (screen-state)) ((2 terminal-address)))
cn1: (((reply)) ((nil literal)))
cn1: (((9 boolean)) <- ((equal)) ((3 character)) ((down literal)))
cn1: (((10 boolean)) <- ((equal)) ((3 character)) ((j literal)))
cn1: (((9 boolean)) <- ((or)) ((9 boolean)) ((10 boolean)))
cn1: (((jump-unless)) ((9 boolean)) ((2 offset)))
cn1: (((down)) ((0 space-address) (screen-state)) ((2 terminal-address)))
cn1: (((reply)) ((nil literal)))
cn1: (((11 boolean)) <- ((equal)) ((3 character)) ((
 literal)))
cn1: (((jump-unless)) ((11 boolean)) ((28 offset)))
cn1: (((12 integer)) <- ((copy)) ((5 integer) (space 1)))
cn1: (((13 integer)) <- ((cursor-row-to-trace-index)) ((0 space-address) (screen-state)) ((12 integer)))
cn1: (((14 boolean)) <- ((greater-or-equal)) ((6 integer) (space 1)) ((0 literal)))
cn1: (((jump-unless)) ((14 boolean)) ((17 offset)))
cn1: (((15 boolean)) <- ((equal)) ((5 integer) (space 1)) ((6 integer) (space 1)))
cn1: (((jump-unless)) ((15 boolean)) ((4 offset)))
cn1: (((6 integer) (space 1)) <- ((copy)) ((-1 literal)))
cn1: (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((2 terminal-address)) ((5 integer) (space 1)))
cn1: (((back-to)) ((0 space-address) (screen-state)) ((2 terminal-address)) ((12 integer)))
cn1: (((reply)))
cn1: (((16 boolean)) <- ((greater-than)) ((5 integer) (space 1)) ((6 integer) (space 1)))
cn1: (((jump-unless)) ((16 boolean)) ((9 offset)))
cn1: (((15 boolean)) <- ((equal)) ((5 integer) (space 1)) ((6 integer) (space 1)))
cn1: (((jump-if)) ((15 boolean)) ((2 offset)))
cn1: (((up)) ((0 space-address)) ((2 terminal-address)))
cn1: (((jump)) ((-4 offset)))
cn1: (((17 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((13 integer)))
cn1: (((jump-if)) ((17 boolean)) ((3 offset)))
cn1: (((18 instruction-trace-address)) <- ((index)) ((1 instruction-trace-address-array-address) (space 1) (deref)) ((5 integer) (space 1)))
cn1: (((print-instruction-trace-collapsed)) ((2 terminal-address)) ((18 instruction-trace-address)) ((0 space-address) (screen-state)))
cn1: (((jump)) ((-5 offset)))
cn1: (((6 integer) (space 1)) <- ((copy)) ((13 integer)))
cn1: (((18 instruction-trace-address)) <- ((index)) ((1 instruction-trace-address-array-address) (space 1) (deref)) ((13 integer)))
cn1: (((print-instruction-trace)) ((2 terminal-address)) ((18 instruction-trace-address)) ((0 space-address) (screen-state)))
cn1: (((19 integer)) <- ((add)) ((13 integer)) ((1 literal)))
cn1: (((print-traces-collapsed-from)) ((0 space-address) (screen-state)) ((2 terminal-address)) ((19 integer)))
cn1: (((back-to)) ((0 space-address) (screen-state)) ((2 terminal-address)) ((13 integer)))
cn1: (((reply)) ((nil literal)))
cn1: (((reply)) ((nil literal)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((1 instruction-trace-address-array-address)) <- ((next-input)))
cn1: (((2 integer)) <- ((next-input)))
cn1: (((3 integer)) <- ((copy)) ((0 literal)))
cn1: (((4 integer)) <- ((copy)) ((0 literal)))
cn1: (((5 integer)) <- ((copy)) ((0 literal)))
cn1: (((6 integer)) <- ((copy)) ((-1 literal)))
cn1: (((reply)) ((default-space space-address)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 boolean)) <- ((greater-or-equal)) ((5 integer) (space 1)) ((4 integer) (space 1)))
cn1: (((jump-if)) ((2 boolean)) ((2 offset)))
cn1: (((down)) ((0 space-address)) ((1 terminal-address)))
cn1: (((jump)) ((-4 offset)))
cn1: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
cn1: (((0 space-address) (names screen-state)) <- ((next-input)))
cn1: (((1 terminal-address)) <- ((next-input)))
cn1: (((2 boolean)) <- ((less-than)) ((6 integer) (space 1)) ((0 literal)))
cn1: (((jump-if)) ((2 boolean)) ((13 offset)))
cn1: (((3 integer)) <- ((instruction-trace-num-children)) ((1 instruction-trace-address-array-address) (space 1)) ((6 integer) (space 1)))
cn1: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
cn1: (((4 integer)) <- ((add)) ((6 integer) (space 1)) ((3 integer)))
cn1: (((5 boolean)) <- ((equal)) ((5 integer) (space 1)) ((4 integer)))
cn1: (((jump-unless)) ((5 boolean)) ((8 offset)))
cn1: (((6 integer)) <- ((copy)) ((0 literal)))
cn1: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
cn1: (((jump-if)) ((7 boolean)) ((4 offset)))
cn1: (((5 integer) (space 1)) <- ((subtract)) ((5 integer) (space 1)) ((1 literal)))
cn1: (((cursor-up)) ((1 terminal-address)))
cn1: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
cn1: (((jump)) ((-6 offset)))
cn1: (((reply)))
cn1: (((8 boolean)) <- ((lesser-or-equal)) ((5 integer) (space 1)) ((0 literal)))
cn1: (((jump-if)) ((8 boolean)) ((2 offset)))
cn1: (((5 integer) (space 1)) <- ((subtract)) ((5 integer) (space 1)) ((1 literal)))
cn1: (((cursor-up)) ((1 terminal-address)))
schedule: main
run: main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
run: main 0: 1000 => ((default-space space-address))
run: main 1: (((1 string-address)) <- ((new)) schedule: main
run: main 0: (((1 integer)) <- ((copy)) ((1 literal)))
run: main 0: 1 => ((1 integer))
mem: ((1 integer)): 1 <= 1)
run: main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 1002 <= 1031
run: main 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: main 2: 128 => ((2 integer))
mem: ((2 integer)): 1003 <= 128
run: main 3: ((($print)) ((p2  literal)))
run: main 4: ((($print)) ((2 integer)))
mem: ((2 integer)) => 128
run: main 5: ((($print)) ((
 literal)))
run: main 6: (((3 stream-address)) <- ((init-stream)) ((1 string-address)))
mem: ((1 string-address)) => 1031
run: init-stream/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-stream/main 0: 1160 => ((default-space space-address))
run: init-stream/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031)
run: init-stream/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 1162 <= 1031
run: init-stream/main 2: (((2 stream-address)) <- ((new)) ((stream literal)))
run: init-stream/main 2: 1191 => ((2 stream-address))
mem: ((2 stream-address)): 1163 <= 1191
run: init-stream/main 3: (((3 integer-address)) <- ((get-address)) ((2 stream-address) (deref)) ((0 offset)))
run: init-stream/main 3: 1191 => ((3 integer-address))
mem: ((3 integer-address)): 1164 <= 1191
run: init-stream/main 4: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-stream/main 4: 0 => ((3 integer-address) (deref))
mem: ((3 integer-address) (deref)): 1191 <= 0
run: init-stream/main 5: (((4 string-address-address)) <- ((get-address)) ((2 stream-address) (deref)) ((1 offset)))
run: init-stream/main 5: 1192 => ((4 string-address-address))
mem: ((4 string-address-address)): 1165 <= 1192
run: init-stream/main 6: (((4 string-address-address) (deref)) <- ((copy)) ((1 string-address)))
mem: ((1 string-address)) => 1031
run: init-stream/main 6: 1031 => ((4 string-address-address) (deref))
mem: ((4 string-address-address) (deref)): 1192 <= 1031
run: init-stream/main 7: (((reply)) ((2 stream-address)))
mem: ((2 stream-address)) => 1191
run: main 6: 1191 => ((3 stream-address))
mem: ((3 stream-address)): 1004 <= 1191
run: main 7: (((4 instruction-trace-address-array-address)) <- ((parse-traces)) ((3 stream-address)))
mem: ((3 stream-address)) => 1191
run: parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-traces/main 0: 1193 => ((default-space space-address))
run: parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1191)
run: parse-traces/main 1: 1191 => ((1 stream-address))
mem: ((1 stream-address)): 1195 <= 1191
run: parse-traces/main 2: (((2 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: init-buffer/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/parse-traces/main 0: 1224 => ((default-space space-address))
run: init-buffer/parse-traces/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/parse-traces/main 1: 1255 => ((1 buffer-address))
mem: ((1 buffer-address)): 1226 <= 1255
run: init-buffer/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/parse-traces/main 2: 1255 => ((2 integer-address))
mem: ((2 integer-address)): 1227 <= 1255
run: init-buffer/parse-traces/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/parse-traces/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1255 <= 0
run: init-buffer/parse-traces/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/parse-traces/main 4: 1256 => ((3 string-address-address))
mem: ((3 string-address-address)): 1228 <= 1256
run: init-buffer/parse-traces/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: init-buffer/parse-traces/main 5: 30 => ((4 integer))
mem: ((4 integer)): 1229 <= 30
run: init-buffer/parse-traces/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 30
run: init-buffer/parse-traces/main 6: 1257 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 1256 <= 1257
run: init-buffer/parse-traces/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1255
run: parse-traces/main 2: 1255 => ((2 buffer-address))
mem: ((2 buffer-address)): 1196 <= 1255
run: parse-traces/main 3: (((3 instruction-trace-address)) <- ((copy)) ((nil literal)))
run: parse-traces/main 3: nil => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 1197 <= nil
run: parse-traces/main 4: (((4 buffer-address)) <- ((init-buffer)) ((5 literal)))
run: init-buffer/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/parse-traces/main 0: 1288 => ((default-space space-address))
run: init-buffer/parse-traces/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/parse-traces/main 1: 1319 => ((1 buffer-address))
mem: ((1 buffer-address)): 1290 <= 1319
run: init-buffer/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/parse-traces/main 2: 1319 => ((2 integer-address))
mem: ((2 integer-address)): 1291 <= 1319
run: init-buffer/parse-traces/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/parse-traces/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1319 <= 0
run: init-buffer/parse-traces/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/parse-traces/main 4: 1320 => ((3 string-address-address))
mem: ((3 string-address-address)): 1292 <= 1320
run: init-buffer/parse-traces/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (5)
run: init-buffer/parse-traces/main 5: 5 => ((4 integer))
mem: ((4 integer)): 1293 <= 5
run: init-buffer/parse-traces/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 5
run: init-buffer/parse-traces/main 6: 1321 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 1320 <= 1321
run: init-buffer/parse-traces/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1319
run: parse-traces/main 4: 1319 => ((4 buffer-address))
mem: ((4 buffer-address)): 1198 <= 1319
run: parse-traces/main 5: (((5 string-address) (const)) <- ((new)) run)
run: parse-traces/main 5: 1327 => ((5 string-address) (const))
mem: ((5 string-address) (const)): 1199 <= 1327
run: parse-traces/main 6: next-line
run: parse-traces/main 7: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
mem: ((1 stream-address)) => 1191
run: end-of-stream?/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: end-of-stream?/parse-traces/main 0: 1331 => ((default-space space-address))
run: end-of-stream?/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1191)
run: end-of-stream?/parse-traces/main 1: 1191 => ((1 stream-address))
mem: ((1 stream-address)): 1333 <= 1191
run: end-of-stream?/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 stream-address) (deref)) ((0 offset)))
mem: ((1191 integer) (raw)) => 0
run: end-of-stream?/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 1334 <= 0
run: end-of-stream?/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1192 string-address) (raw)) => 1031
run: end-of-stream?/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 1335 <= 1031
run: end-of-stream?/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: end-of-stream?/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 1336 <= 128
run: end-of-stream?/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 128
run: end-of-stream?/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1337 <= nil
run: end-of-stream?/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: parse-traces/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1200 <= nil
run: parse-traces/main 8: (((jump-if)) ((6 boolean)) ((15 offset)))
mem: ((6 boolean)) => nil
run: parse-traces/main 9: (((7 string-address)) <- ((read-line)) ((1 stream-address)))
mem: ((1 stream-address)) => 1191
run: read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-line/parse-traces/main 0: 1362 => ((default-space space-address))
run: read-line/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1191)
run: read-line/parse-traces/main 1: 1191 => ((1 stream-address))
mem: ((1 stream-address)): 1364 <= 1191
run: read-line/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 stream-address) (deref)) ((0 offset)))
run: read-line/parse-traces/main 2: 1191 => ((2 integer-address))
mem: ((2 integer-address)): 1365 <= 1191
run: read-line/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1192 string-address) (raw)) => 1031
run: read-line/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 1366 <= 1031
run: read-line/parse-traces/main 4: (((4 integer)) <- ((find-next)) ((3 string-address)) ((
 literal)) ((2 integer-address) (deref)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 0
run: find-next/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/read-line/parse-traces/main 0: 1393 => ((default-space space-address))
run: find-next/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 #\newline 0)
run: find-next/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 1395 <= 1031
run: find-next/read-line/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1031 #\newline 0)
run: find-next/read-line/parse-traces/main 2: #\newline => ((2 character))
mem: ((2 character)): 1396 <= #\newline
run: find-next/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 #\newline 0)
run: find-next/read-line/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 1397 <= 0
run: find-next/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: find-next/read-line/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 1398 <= 128
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1032 byte) (raw)) => s
run: find-next/read-line/parse-traces/main 7: #\s => ((6 byte))
mem: ((6 byte)): 1400 <= #\s
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => s
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/read-line/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 1397 <= 1
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1033 byte) (raw)) => c
run: find-next/read-line/parse-traces/main 7: #\c => ((6 byte))
mem: ((6 byte)): 1400 <= #\c
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => c
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/read-line/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 1397 <= 2
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1034 byte) (raw)) => h
run: find-next/read-line/parse-traces/main 7: #\h => ((6 byte))
mem: ((6 byte)): 1400 <= #\h
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => h
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/read-line/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 1397 <= 3
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1035 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 1400 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/read-line/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 1397 <= 4
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1036 byte) (raw)) => d
run: find-next/read-line/parse-traces/main 7: #\d => ((6 byte))
mem: ((6 byte)): 1400 <= #\d
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => d
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: find-next/read-line/parse-traces/main 10: 5 => ((3 integer))
mem: ((3 integer)): 1397 <= 5
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 5
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1037 byte) (raw)) => u
run: find-next/read-line/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 1400 <= #\u
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: find-next/read-line/parse-traces/main 10: 6 => ((3 integer))
mem: ((3 integer)): 1397 <= 6
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 6
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1038 byte) (raw)) => l
run: find-next/read-line/parse-traces/main 7: #\l => ((6 byte))
mem: ((6 byte)): 1400 <= #\l
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => l
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: find-next/read-line/parse-traces/main 10: 7 => ((3 integer))
mem: ((3 integer)): 1397 <= 7
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 7
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1039 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 1400 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: find-next/read-line/parse-traces/main 10: 8 => ((3 integer))
mem: ((3 integer)): 1397 <= 8
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 8
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 8
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1040 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 1400 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 8
run: find-next/read-line/parse-traces/main 10: 9 => ((3 integer))
mem: ((3 integer)): 1397 <= 9
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 9
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 9
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1041 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 1400 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 9
run: find-next/read-line/parse-traces/main 10: 10 => ((3 integer))
mem: ((3 integer)): 1397 <= 10
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 10
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 10
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1042 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 1400 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 10
run: find-next/read-line/parse-traces/main 10: 11 => ((3 integer))
mem: ((3 integer)): 1397 <= 11
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 11
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 11
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1043 byte) (raw)) => a
run: find-next/read-line/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 1400 <= #\a
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 11
run: find-next/read-line/parse-traces/main 10: 12 => ((3 integer))
mem: ((3 integer)): 1397 <= 12
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 12
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 12
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1044 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 1400 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 12
run: find-next/read-line/parse-traces/main 10: 13 => ((3 integer))
mem: ((3 integer)): 1397 <= 13
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 13
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 13
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1045 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 1400 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1401 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 13
run: find-next/read-line/parse-traces/main 10: 14 => ((3 integer))
mem: ((3 integer)): 1397 <= 14
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 14
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1399 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 14
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1046 byte) (raw)) => 

run: find-next/read-line/parse-traces/main 7: #\newline => ((6 byte))
mem: ((6 byte)): 1400 <= #\newline
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 

mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 1401 <= t
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/read-line/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 14
run: read-line/parse-traces/main 4: 14 => ((4 integer))
mem: ((4 integer)): 1367 <= 14
run: read-line/parse-traces/main 5: (((5 string-address)) <- ((string-copy)) ((3 string-address)) ((2 integer-address) (deref)) ((4 integer)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 0
mem: ((4 integer)) => 14
run: string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/read-line/parse-traces/main 0: 1424 => ((default-space space-address))
run: string-copy/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 0 14)
run: string-copy/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 1426 <= 1031
run: string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1031 0 14)
run: string-copy/read-line/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 1427 <= 0
run: string-copy/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 0 14)
run: string-copy/read-line/parse-traces/main 3: 14 => ((3 integer))
mem: ((3 integer)): 1428 <= 14
run: string-copy/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: string-copy/read-line/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 1429 <= 128
run: string-copy/read-line/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 128
mem: ((3 integer)) => 14
run: min/string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/read-line/parse-traces/main 0: 1455 => ((default-space space-address))
run: min/string-copy/read-line/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (128 14)
run: min/string-copy/read-line/parse-traces/main 1: 128 => ((1 integer))
mem: ((1 integer)): 1457 <= 128
run: min/string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (128 14)
run: min/string-copy/read-line/parse-traces/main 2: 14 => ((2 integer))
mem: ((2 integer)): 1458 <= 14
run: min/string-copy/read-line/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 128
mem: ((2 integer)) => 14
run: min/string-copy/read-line/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 1459 <= nil
run: min/string-copy/read-line/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/read-line/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 14
run: string-copy/read-line/parse-traces/main 5: 14 => ((3 integer))
mem: ((3 integer)): 1428 <= 14
run: string-copy/read-line/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 14
mem: ((2 integer)) => 0
run: string-copy/read-line/parse-traces/main 6: 14 => ((4 integer))
mem: ((4 integer)): 1429 <= 14
run: string-copy/read-line/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 14
run: string-copy/read-line/parse-traces/main 7: 1486 => ((5 string-address))
mem: ((5 string-address)): 1430 <= 1486
run: string-copy/read-line/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/read-line/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 1431 <= 0
run: string-copy/read-line/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/read-line/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 1432 <= 0
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1032 byte) (raw)) => s
run: string-copy/read-line/parse-traces/main 12: #\s => ((9 character))
mem: ((9 character)): 1434 <= #\s
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1487 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1487
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => s
run: string-copy/read-line/parse-traces/main 14: #\s => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1487 <= #\s
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/read-line/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 1431 <= 1
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/read-line/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 1432 <= 1
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1033 byte) (raw)) => c
run: string-copy/read-line/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 1434 <= #\c
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1488 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1488
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/read-line/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1488 <= #\c
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/read-line/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 1431 <= 2
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/read-line/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 1432 <= 2
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1034 byte) (raw)) => h
run: string-copy/read-line/parse-traces/main 12: #\h => ((9 character))
mem: ((9 character)): 1434 <= #\h
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1489 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1489
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => h
run: string-copy/read-line/parse-traces/main 14: #\h => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1489 <= #\h
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/read-line/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 1431 <= 3
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/read-line/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 1432 <= 3
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1035 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 1434 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1490 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1490
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1490 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/read-line/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 1431 <= 4
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/read-line/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 1432 <= 4
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 4
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1036 byte) (raw)) => d
run: string-copy/read-line/parse-traces/main 12: #\d => ((9 character))
mem: ((9 character)): 1434 <= #\d
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1491 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1491
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => d
run: string-copy/read-line/parse-traces/main 14: #\d => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1491 <= #\d
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 4
run: string-copy/read-line/parse-traces/main 15: 5 => ((6 integer))
mem: ((6 integer)): 1431 <= 5
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/read-line/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 1432 <= 5
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1037 byte) (raw)) => u
run: string-copy/read-line/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 1434 <= #\u
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1492 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1492
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/read-line/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1492 <= #\u
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/read-line/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 1431 <= 6
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/read-line/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 1432 <= 6
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1038 byte) (raw)) => l
run: string-copy/read-line/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 1434 <= #\l
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1493 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1493
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/read-line/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1493 <= #\l
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/read-line/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 1431 <= 7
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/read-line/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 1432 <= 7
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1039 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 1434 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1494 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1494
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1494 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/read-line/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 1431 <= 8
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/read-line/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 1432 <= 8
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1040 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 1434 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1495 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1495
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1495 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/read-line/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 1431 <= 9
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/read-line/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 1432 <= 9
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1041 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 1434 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1496 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1496
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1496 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/read-line/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 1431 <= 10
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/read-line/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 1432 <= 10
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1042 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 1434 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1497 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1497
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1497 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/read-line/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 1431 <= 11
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/read-line/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 1432 <= 11
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1043 byte) (raw)) => a
run: string-copy/read-line/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 1434 <= #\a
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1498 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1498
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/read-line/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1498 <= #\a
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/read-line/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 1431 <= 12
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/read-line/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 1432 <= 12
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1044 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 1434 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1499 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1499
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1499 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/read-line/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 1431 <= 13
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/read-line/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 1432 <= 13
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1433 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1045 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 1434 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
run: string-copy/read-line/parse-traces/main 13: 1500 => ((10 character-address))
mem: ((10 character-address)): 1435 <= 1500
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1500 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/read-line/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 1431 <= 14
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/read-line/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 1432 <= 14
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 14
run: string-copy/read-line/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 1433 <= t
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/read-line/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 1486
run: read-line/parse-traces/main 5: 1486 => ((5 string-address))
mem: ((5 string-address)): 1368 <= 1486
run: read-line/parse-traces/main 6: (((2 integer-address) (deref)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 14
run: read-line/parse-traces/main 6: 15 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1191 <= 15
run: read-line/parse-traces/main 7: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 1486
run: parse-traces/main 9: 1486 => ((7 string-address))
mem: ((7 string-address)): 1201 <= 1486
run: parse-traces/main 10: (((8 trace-address)) <- ((parse-trace)) ((7 string-address)))
mem: ((7 string-address)) => 1486
run: parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-trace/parse-traces/main 0: 1501 => ((default-space space-address))
run: parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1486)
run: parse-trace/parse-traces/main 1: 1486 => ((1 string-address))
mem: ((1 string-address)): 1503 <= 1486
run: parse-trace/parse-traces/main 2: (((2 trace-address)) <- ((new)) ((trace literal)))
run: parse-trace/parse-traces/main 2: 1532 => ((2 trace-address))
mem: ((2 trace-address)): 1504 <= 1532
run: parse-trace/parse-traces/main 3: (((3 string-address)) <- ((new)) : )
run: parse-trace/parse-traces/main 3: 1534 => ((3 string-address))
mem: ((3 string-address)): 1505 <= 1534
run: parse-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first-at-substring)) ((1 string-address)) ((3 string-address)))
mem: ((1 string-address)) => 1486
mem: ((3 string-address)) => 1534
run: split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-trace/parse-traces/main 0: 1537 => ((default-space space-address))
run: split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1486 1534)
run: split-first-at-substring/parse-trace/parse-traces/main 1: 1486 => ((1 string-address))
mem: ((1 string-address)): 1539 <= 1486
run: split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1486 1534)
run: split-first-at-substring/parse-trace/parse-traces/main 2: 1534 => ((2 string-address))
mem: ((2 string-address)): 1540 <= 1534
run: split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1486 integer) (raw)) => 14
run: split-first-at-substring/parse-trace/parse-traces/main 3: 14 => ((3 integer))
mem: ((3 integer)): 1541 <= 14
run: split-first-at-substring/parse-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 14
run: split-first-at-substring/parse-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 1542 <= nil
run: split-first-at-substring/parse-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 1486
mem: ((2 string-address)) => 1534
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 1568 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1486 1534 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 1486 => ((1 string-address))
mem: ((1 string-address)): 1570 <= 1486
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1486 1534 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 1534 => ((2 string-address))
mem: ((2 string-address)): 1571 <= 1534
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1486 1534 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 1572 <= 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((1534 string) (raw))
mem: ((1534 integer) (raw)) => 2
mem: ((1535 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 1573 <= #\:
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1486 integer) (raw)) => 14
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 14 => ((5 integer))
mem: ((5 integer)): 1574 <= 14
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 14
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 1575 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 1486
mem: ((2 string-address)) => 1534
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 1599 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1486 1534 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 1486 => ((1 string-address))
mem: ((1 string-address)): 1601 <= 1486
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1486 1534 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 1534 => ((2 string-address))
mem: ((2 string-address)): 1602 <= 1534
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1486 1534 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 1603 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((1534 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 1604 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1486 integer) (raw)) => 14
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 14 => ((5 integer))
mem: ((5 integer)): 1605 <= 14
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 14
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 12 => ((5 integer))
mem: ((5 integer)): 1605 <= 12
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 12
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 1606 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1607 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 1608 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1487 byte) (raw)) => s
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\s => ((9 character))
mem: ((9 character)): 1609 <= #\s
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1534 string) (raw))
mem: ((1534 integer) (raw)) => 2
mem: ((1535 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 1610 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => s
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 1611 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1576 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 1572 <= 1
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 1486
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 1630 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1486 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 1486 => ((1 string-address))
mem: ((1 string-address)): 1632 <= 1486
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1486 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 1633 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1486 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 1634 <= 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1486 integer) (raw)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 14 => ((4 integer))
mem: ((4 integer)): 1635 <= 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1636 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1488 byte) (raw)) => c
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\c => ((6 byte))
mem: ((6 byte)): 1637 <= #\c
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => c
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1638 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 1634 <= 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1636 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1489 byte) (raw)) => h
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\h => ((6 byte))
mem: ((6 byte)): 1637 <= #\h
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => h
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1638 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 1634 <= 3
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1636 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1490 byte) (raw)) => e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 1637 <= #\e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1638 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 1634 <= 4
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1636 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1491 byte) (raw)) => d
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\d => ((6 byte))
mem: ((6 byte)): 1637 <= #\d
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => d
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1638 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 5 => ((3 integer))
mem: ((3 integer)): 1634 <= 5
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 5
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1636 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 5
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1492 byte) (raw)) => u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 1637 <= #\u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1638 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 5
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 6 => ((3 integer))
mem: ((3 integer)): 1634 <= 6
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 6
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1636 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 6
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1493 byte) (raw)) => l
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\l => ((6 byte))
mem: ((6 byte)): 1637 <= #\l
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => l
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1638 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 6
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 7 => ((3 integer))
mem: ((3 integer)): 1634 <= 7
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 7
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1636 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 7
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1494 byte) (raw)) => e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 1637 <= #\e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1638 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 7
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 8 => ((3 integer))
mem: ((3 integer)): 1634 <= 8
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 8
mem: ((4 integer)) => 14
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1636 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 8
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1495 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 1637 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 1638 <= t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 8
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: 8 => ((3 integer))
mem: ((3 integer)): 1572 <= 8
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 8
mem: ((5 integer)) => 14
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 1575 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 1486
mem: ((2 string-address)) => 1534
mem: ((3 integer)) => 8
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 1661 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1486 1534 8)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 1486 => ((1 string-address))
mem: ((1 string-address)): 1663 <= 1486
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (1486 1534 8)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 1534 => ((2 string-address))
mem: ((2 string-address)): 1664 <= 1534
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1486 1534 8)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 8 => ((3 integer))
mem: ((3 integer)): 1665 <= 8
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((1534 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 1666 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1486 integer) (raw)) => 14
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 14 => ((5 integer))
mem: ((5 integer)): 1667 <= 14
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 14
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 12 => ((5 integer))
mem: ((5 integer)): 1667 <= 12
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 8
mem: ((5 integer)) => 12
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 1668 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 1669 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 1670 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 8
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1495 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 1671 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1534 string) (raw))
mem: ((1534 integer) (raw)) => 2
mem: ((1535 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 1672 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 1673 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 8
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 9 => ((3 integer))
mem: ((3 integer)): 1665 <= 9
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 1669 <= 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 1670 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 9
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1496 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 1671 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1534 string) (raw))
mem: ((1534 integer) (raw)) => 2
mem: ((1536 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 1672 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 1673 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 9
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 10 => ((3 integer))
mem: ((3 integer)): 1665 <= 10
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 1669 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 1670 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 1576 <= t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 8
run: split-first-at-substring/parse-trace/parse-traces/main 9: 8 => ((7 integer))
mem: ((7 integer)): 1545 <= 8
run: split-first-at-substring/parse-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 1486
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 1692 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1486 0 8)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 1486 => ((1 string-address))
mem: ((1 string-address)): 1694 <= 1486
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1486 0 8)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 1695 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1486 0 8)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 8 => ((3 integer))
mem: ((3 integer)): 1696 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1486 integer) (raw)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 14 => ((4 integer))
mem: ((4 integer)): 1697 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 8
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 1723 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (14 8)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 14 => ((1 integer))
mem: ((1 integer)): 1725 <= 14
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (14 8)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 8 => ((2 integer))
mem: ((2 integer)): 1726 <= 8
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 14
mem: ((2 integer)) => 8
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 1727 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 8 => ((3 integer))
mem: ((3 integer)): 1696 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 8
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 8 => ((4 integer))
mem: ((4 integer)): 1697 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 1754 => ((5 string-address))
mem: ((5 string-address)): 1698 <= 1754
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 1699 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 1700 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1701 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1487 byte) (raw)) => s
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\s => ((9 character))
mem: ((9 character)): 1702 <= #\s
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1754 string) (raw))
mem: ((1754 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1755 => ((10 character-address))
mem: ((10 character-address)): 1703 <= 1755
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => s
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\s => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1755 <= #\s
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 1699 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 1700 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1701 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1488 byte) (raw)) => c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 1702 <= #\c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1754 string) (raw))
mem: ((1754 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1756 => ((10 character-address))
mem: ((10 character-address)): 1703 <= 1756
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1756 <= #\c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 1699 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 1700 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1701 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1489 byte) (raw)) => h
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\h => ((9 character))
mem: ((9 character)): 1702 <= #\h
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1754 string) (raw))
mem: ((1754 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1757 => ((10 character-address))
mem: ((10 character-address)): 1703 <= 1757
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => h
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\h => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1757 <= #\h
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 1699 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 1700 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1701 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1490 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 1702 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1754 string) (raw))
mem: ((1754 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1758 => ((10 character-address))
mem: ((10 character-address)): 1703 <= 1758
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1758 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 1699 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 1700 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1701 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 4
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1491 byte) (raw)) => d
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\d => ((9 character))
mem: ((9 character)): 1702 <= #\d
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((1754 string) (raw))
mem: ((1754 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1759 => ((10 character-address))
mem: ((10 character-address)): 1703 <= 1759
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => d
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\d => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1759 <= #\d
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 5 => ((6 integer))
mem: ((6 integer)): 1699 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 1700 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1701 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1492 byte) (raw)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 1702 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((1754 string) (raw))
mem: ((1754 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1760 => ((10 character-address))
mem: ((10 character-address)): 1703 <= 1760
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1760 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 1699 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 1700 <= 6
schedule: scheduling string-copy/split-first-at-substring/parse-trace/parse-traces/main for further processing
schedule: string-copy/split-first-at-substring/parse-trace/parse-traces/main
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1701 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1493 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 1702 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((1754 string) (raw))
mem: ((1754 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1761 => ((10 character-address))
mem: ((10 character-address)): 1703 <= 1761
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1761 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 1699 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 1700 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1701 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1494 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 1702 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((1754 string) (raw))
mem: ((1754 integer) (raw)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1762 => ((10 character-address))
mem: ((10 character-address)): 1703 <= 1762
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1762 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 1699 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 1700 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 1701 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 1754
run: split-first-at-substring/parse-trace/parse-traces/main 10: 1754 => ((5 string-address))
mem: ((5 string-address)): 1543 <= 1754
run: split-first-at-substring/parse-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((1534 integer) (raw)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 1546 <= 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 8
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: 10 => ((7 integer))
mem: ((7 integer)): 1545 <= 10
run: split-first-at-substring/parse-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 1486
mem: ((7 integer)) => 10
mem: ((3 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 1763 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1486 10 14)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 1486 => ((1 string-address))
mem: ((1 string-address)): 1765 <= 1486
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1486 10 14)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 10 => ((2 integer))
mem: ((2 integer)): 1766 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1486 10 14)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 14 => ((3 integer))
mem: ((3 integer)): 1767 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1486 integer) (raw)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 14 => ((4 integer))
mem: ((4 integer)): 1768 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 14
mem: ((3 integer)) => 14
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 1794 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (14 14)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 14 => ((1 integer))
mem: ((1 integer)): 1796 <= 14
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (14 14)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 14 => ((2 integer))
mem: ((2 integer)): 1797 <= 14
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 14
mem: ((2 integer)) => 14
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 1798 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 14 => ((3 integer))
mem: ((3 integer)): 1767 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 14
mem: ((2 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 1768 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 1825 => ((5 string-address))
mem: ((5 string-address)): 1769 <= 1825
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 10 => ((6 integer))
mem: ((6 integer)): 1770 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 1771 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1772 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1497 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 1773 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((1825 string) (raw))
mem: ((1825 integer) (raw)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1826 => ((10 character-address))
mem: ((10 character-address)): 1774 <= 1826
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1826 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 1770 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 1771 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1772 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1498 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 1773 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((1825 string) (raw))
mem: ((1825 integer) (raw)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1827 => ((10 character-address))
mem: ((10 character-address)): 1774 <= 1827
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1827 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 1770 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 1771 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1772 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1499 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 1773 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((1825 string) (raw))
mem: ((1825 integer) (raw)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1828 => ((10 character-address))
mem: ((10 character-address)): 1774 <= 1828
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1828 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 1770 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 1771 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1772 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((1486 string) (raw))
mem: ((1486 integer) (raw)) => 14
mem: ((1500 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 1773 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((1825 string) (raw))
mem: ((1825 integer) (raw)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 1829 => ((10 character-address))
mem: ((10 character-address)): 1774 <= 1829
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 1829 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 1770 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 1771 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 1772 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 1825
run: split-first-at-substring/parse-trace/parse-traces/main 13: 1825 => ((6 string-address))
mem: ((6 string-address)): 1544 <= 1825
run: split-first-at-substring/parse-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 1754
mem: ((6 string-address)) => 1825
run: parse-trace/parse-traces/main 4: 1754 => ((4 string-address))
mem: ((4 string-address)): 1506 <= 1754
run: parse-trace/parse-traces/main 4: 1825 => ((5 string-address))
mem: ((5 string-address)): 1507 <= 1825
run: parse-trace/parse-traces/main 5: (((6 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((0 offset)))
run: parse-trace/parse-traces/main 5: 1532 => ((6 string-address-address))
mem: ((6 string-address-address)): 1508 <= 1532
run: parse-trace/parse-traces/main 6: (((6 string-address-address) (deref)) <- ((copy)) ((4 string-address)))
mem: ((4 string-address)) => 1754
run: parse-trace/parse-traces/main 6: 1754 => ((6 string-address-address) (deref))
mem: ((6 string-address-address) (deref)): 1532 <= 1754
run: parse-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((1 offset)))
run: parse-trace/parse-traces/main 7: 1533 => ((7 string-address-address))
mem: ((7 string-address-address)): 1509 <= 1533
run: parse-trace/parse-traces/main 8: (((7 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 1825
run: parse-trace/parse-traces/main 8: 1825 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 1533 <= 1825
run: parse-trace/parse-traces/main 9: (((reply)) ((2 trace-address)))
mem: ((2 trace-address)) => 1532
run: parse-traces/main 10: 1532 => ((8 trace-address))
mem: ((8 trace-address)): 1202 <= 1532
run: parse-traces/main 11: (((9 string-address)) <- ((get)) ((8 trace-address) (deref)) ((0 offset)))
mem: ((1532 string-address) (raw)) => 1754
run: parse-traces/main 11: 1754 => ((9 string-address))
mem: ((9 string-address)): 1203 <= 1754
run: parse-traces/main 12: (((10 boolean)) <- ((string-equal)) ((9 string-address)) ((5 string-address) (const)))
mem: ((9 string-address)) => 1754
mem: ((5 string-address) (const)) => 1327
run: string-equal/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-equal/parse-traces/main 0: 1830 => ((default-space space-address))
run: string-equal/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1754 1327)
run: string-equal/parse-traces/main 1: 1754 => ((1 string-address))
mem: ((1 string-address)): 1832 <= 1754
run: string-equal/parse-traces/main 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1754 integer) (raw)) => 8
run: string-equal/parse-traces/main 2: 8 => ((2 integer))
mem: ((2 integer)): 1833 <= 8
run: string-equal/parse-traces/main 3: (((3 string-address)) <- ((next-input)))
arg: nil 1 (1754 1327)
run: string-equal/parse-traces/main 3: 1327 => ((3 string-address))
mem: ((3 string-address)): 1834 <= 1327
run: string-equal/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1327 integer) (raw)) => 3
run: string-equal/parse-traces/main 4: 3 => ((4 integer))
mem: ((4 integer)): 1835 <= 3
run: string-equal/parse-traces/main 5: (((5 boolean)) <- ((equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 8
mem: ((4 integer)) => 3
run: string-equal/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1836 <= nil
run: string-equal/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((1 offset)))
mem: ((5 boolean)) => nil
run: string-equal/parse-traces/main 7: (((reply)) ((nil literal)))
run: parse-traces/main 12: nil => ((10 boolean))
mem: ((10 boolean)): 1204 <= nil
run: parse-traces/main 13: (((jump-unless)) ((10 boolean)) ((7 offset)))
mem: ((10 boolean)) => nil
run: parse-traces/main 21: (((jump-unless)) ((3 instruction-trace-address)) ((-16 offset)))
mem: ((3 instruction-trace-address)) => nil
run: parse-traces/main 6: next-line
run: parse-traces/main 7: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
mem: ((1 stream-address)) => 1191
run: end-of-stream?/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: end-of-stream?/parse-traces/main 0: 1861 => ((default-space space-address))
run: end-of-stream?/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1191)
run: end-of-stream?/parse-traces/main 1: 1191 => ((1 stream-address))
mem: ((1 stream-address)): 1863 <= 1191
run: end-of-stream?/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 stream-address) (deref)) ((0 offset)))
mem: ((1191 integer) (raw)) => 15
run: end-of-stream?/parse-traces/main 2: 15 => ((2 integer))
mem: ((2 integer)): 1864 <= 15
run: end-of-stream?/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1192 string-address) (raw)) => 1031
run: end-of-stream?/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 1865 <= 1031
run: end-of-stream?/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: end-of-stream?/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 1866 <= 128
run: end-of-stream?/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 15
mem: ((4 integer)) => 128
run: end-of-stream?/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1867 <= nil
run: end-of-stream?/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: parse-traces/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1200 <= nil
run: parse-traces/main 8: (((jump-if)) ((6 boolean)) ((15 offset)))
mem: ((6 boolean)) => nil
run: parse-traces/main 9: (((7 string-address)) <- ((read-line)) ((1 stream-address)))
mem: ((1 stream-address)) => 1191
run: read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-line/parse-traces/main 0: 1892 => ((default-space space-address))
run: read-line/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1191)
run: read-line/parse-traces/main 1: 1191 => ((1 stream-address))
mem: ((1 stream-address)): 1894 <= 1191
run: read-line/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 stream-address) (deref)) ((0 offset)))
run: read-line/parse-traces/main 2: 1191 => ((2 integer-address))
mem: ((2 integer-address)): 1895 <= 1191
run: read-line/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1192 string-address) (raw)) => 1031
run: read-line/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 1896 <= 1031
run: read-line/parse-traces/main 4: (((4 integer)) <- ((find-next)) ((3 string-address)) ((
 literal)) ((2 integer-address) (deref)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 15
run: find-next/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/read-line/parse-traces/main 0: 1923 => ((default-space space-address))
run: find-next/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 #\newline 15)
run: find-next/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 1925 <= 1031
run: find-next/read-line/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1031 #\newline 15)
run: find-next/read-line/parse-traces/main 2: #\newline => ((2 character))
mem: ((2 character)): 1926 <= #\newline
run: find-next/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 #\newline 15)
run: find-next/read-line/parse-traces/main 3: 15 => ((3 integer))
mem: ((3 integer)): 1927 <= 15
run: find-next/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: find-next/read-line/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 1928 <= 128
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 15
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 15
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1047 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 1930 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 15
run: find-next/read-line/parse-traces/main 10: 16 => ((3 integer))
mem: ((3 integer)): 1927 <= 16
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 16
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 16
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1048 byte) (raw)) => u
run: find-next/read-line/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 1930 <= #\u
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 16
run: find-next/read-line/parse-traces/main 10: 17 => ((3 integer))
mem: ((3 integer)): 1927 <= 17
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 17
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 17
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1049 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 1930 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 17
run: find-next/read-line/parse-traces/main 10: 18 => ((3 integer))
mem: ((3 integer)): 1927 <= 18
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 18
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 18
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1050 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 1930 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 18
run: find-next/read-line/parse-traces/main 10: 19 => ((3 integer))
mem: ((3 integer)): 1927 <= 19
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 19
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 19
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1051 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 1930 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 19
run: find-next/read-line/parse-traces/main 10: 20 => ((3 integer))
mem: ((3 integer)): 1927 <= 20
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 20
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 20
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1052 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 1930 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 20
run: find-next/read-line/parse-traces/main 10: 21 => ((3 integer))
mem: ((3 integer)): 1927 <= 21
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 21
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 21
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1053 byte) (raw)) => a
run: find-next/read-line/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 1930 <= #\a
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 21
run: find-next/read-line/parse-traces/main 10: 22 => ((3 integer))
mem: ((3 integer)): 1927 <= 22
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 22
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 22
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1054 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 1930 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 22
run: find-next/read-line/parse-traces/main 10: 23 => ((3 integer))
mem: ((3 integer)): 1927 <= 23
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 23
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 23
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1055 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 1930 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 23
run: find-next/read-line/parse-traces/main 10: 24 => ((3 integer))
mem: ((3 integer)): 1927 <= 24
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 24
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 24
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1056 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 1930 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 24
run: find-next/read-line/parse-traces/main 10: 25 => ((3 integer))
mem: ((3 integer)): 1927 <= 25
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 25
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 25
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1057 byte) (raw)) => 0
run: find-next/read-line/parse-traces/main 7: #\0 => ((6 byte))
mem: ((6 byte)): 1930 <= #\0
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 0
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 25
run: find-next/read-line/parse-traces/main 10: 26 => ((3 integer))
mem: ((3 integer)): 1927 <= 26
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 26
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 26
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1058 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 1930 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 26
run: find-next/read-line/parse-traces/main 10: 27 => ((3 integer))
mem: ((3 integer)): 1927 <= 27
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 27
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 27
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1059 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 1930 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 27
run: find-next/read-line/parse-traces/main 10: 28 => ((3 integer))
mem: ((3 integer)): 1927 <= 28
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 28
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 28
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1060 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 1930 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 28
run: find-next/read-line/parse-traces/main 10: 29 => ((3 integer))
mem: ((3 integer)): 1927 <= 29
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 29
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 29
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1061 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 1930 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 29
run: find-next/read-line/parse-traces/main 10: 30 => ((3 integer))
mem: ((3 integer)): 1927 <= 30
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 30
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 30
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1062 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 1930 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 30
run: find-next/read-line/parse-traces/main 10: 31 => ((3 integer))
mem: ((3 integer)): 1927 <= 31
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 31
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 31
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1063 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 1930 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 31
run: find-next/read-line/parse-traces/main 10: 32 => ((3 integer))
mem: ((3 integer)): 1927 <= 32
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 32
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 32
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1064 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 1930 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 32
run: find-next/read-line/parse-traces/main 10: 33 => ((3 integer))
mem: ((3 integer)): 1927 <= 33
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 33
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 33
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1065 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 1930 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 33
run: find-next/read-line/parse-traces/main 10: 34 => ((3 integer))
mem: ((3 integer)): 1927 <= 34
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 34
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 34
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1066 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 1930 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 34
run: find-next/read-line/parse-traces/main 10: 35 => ((3 integer))
mem: ((3 integer)): 1927 <= 35
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 35
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 35
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1067 byte) (raw)) => t
run: find-next/read-line/parse-traces/main 7: #\t => ((6 byte))
mem: ((6 byte)): 1930 <= #\t
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => t
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 35
run: find-next/read-line/parse-traces/main 10: 36 => ((3 integer))
mem: ((3 integer)): 1927 <= 36
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 36
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 36
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1068 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 1930 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 36
run: find-next/read-line/parse-traces/main 10: 37 => ((3 integer))
mem: ((3 integer)): 1927 <= 37
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 37
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 37
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1069 byte) (raw)) => g
run: find-next/read-line/parse-traces/main 7: #\g => ((6 byte))
mem: ((6 byte)): 1930 <= #\g
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => g
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 37
run: find-next/read-line/parse-traces/main 10: 38 => ((3 integer))
mem: ((3 integer)): 1927 <= 38
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 38
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 38
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1070 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 1930 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 38
run: find-next/read-line/parse-traces/main 10: 39 => ((3 integer))
mem: ((3 integer)): 1927 <= 39
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 39
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 39
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1071 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 1930 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 39
run: find-next/read-line/parse-traces/main 10: 40 => ((3 integer))
mem: ((3 integer)): 1927 <= 40
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 40
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 40
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1072 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 1930 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 40
run: find-next/read-line/parse-traces/main 10: 41 => ((3 integer))
mem: ((3 integer)): 1927 <= 41
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 41
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 41
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1073 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 1930 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 41
run: find-next/read-line/parse-traces/main 10: 42 => ((3 integer))
mem: ((3 integer)): 1927 <= 42
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 42
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 42
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1074 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 1930 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 42
run: find-next/read-line/parse-traces/main 10: 43 => ((3 integer))
mem: ((3 integer)): 1927 <= 43
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 43
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 43
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1075 byte) (raw)) => <
run: find-next/read-line/parse-traces/main 7: #\< => ((6 byte))
mem: ((6 byte)): 1930 <= #\<
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => <
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 43
run: find-next/read-line/parse-traces/main 10: 44 => ((3 integer))
mem: ((3 integer)): 1927 <= 44
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 44
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 44
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1076 byte) (raw)) => -
run: find-next/read-line/parse-traces/main 7: #\- => ((6 byte))
mem: ((6 byte)): 1930 <= #\-
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => -
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 44
run: find-next/read-line/parse-traces/main 10: 45 => ((3 integer))
mem: ((3 integer)): 1927 <= 45
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 45
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 45
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1077 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 1930 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 45
run: find-next/read-line/parse-traces/main 10: 46 => ((3 integer))
mem: ((3 integer)): 1927 <= 46
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 46
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 46
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1078 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 1930 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 46
run: find-next/read-line/parse-traces/main 10: 47 => ((3 integer))
mem: ((3 integer)): 1927 <= 47
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 47
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 47
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1079 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 1930 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 47
run: find-next/read-line/parse-traces/main 10: 48 => ((3 integer))
mem: ((3 integer)): 1927 <= 48
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 48
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 48
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1080 byte) (raw)) => c
run: find-next/read-line/parse-traces/main 7: #\c => ((6 byte))
mem: ((6 byte)): 1930 <= #\c
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => c
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 48
run: find-next/read-line/parse-traces/main 10: 49 => ((3 integer))
mem: ((3 integer)): 1927 <= 49
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 49
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 49
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1081 byte) (raw)) => o
run: find-next/read-line/parse-traces/main 7: #\o => ((6 byte))
mem: ((6 byte)): 1930 <= #\o
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => o
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 49
run: find-next/read-line/parse-traces/main 10: 50 => ((3 integer))
mem: ((3 integer)): 1927 <= 50
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 50
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 50
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1082 byte) (raw)) => p
run: find-next/read-line/parse-traces/main 7: #\p => ((6 byte))
mem: ((6 byte)): 1930 <= #\p
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => p
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 50
run: find-next/read-line/parse-traces/main 10: 51 => ((3 integer))
mem: ((3 integer)): 1927 <= 51
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 51
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 51
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1083 byte) (raw)) => y
run: find-next/read-line/parse-traces/main 7: #\y => ((6 byte))
mem: ((6 byte)): 1930 <= #\y
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => y
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 51
run: find-next/read-line/parse-traces/main 10: 52 => ((3 integer))
mem: ((3 integer)): 1927 <= 52
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 52
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 52
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1084 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 1930 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 52
run: find-next/read-line/parse-traces/main 10: 53 => ((3 integer))
mem: ((3 integer)): 1927 <= 53
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 53
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 53
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1085 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 1930 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 53
run: find-next/read-line/parse-traces/main 10: 54 => ((3 integer))
mem: ((3 integer)): 1927 <= 54
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 54
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 54
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1086 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 1930 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 54
run: find-next/read-line/parse-traces/main 10: 55 => ((3 integer))
mem: ((3 integer)): 1927 <= 55
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 55
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 55
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1087 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 1930 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 55
run: find-next/read-line/parse-traces/main 10: 56 => ((3 integer))
mem: ((3 integer)): 1927 <= 56
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 56
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 56
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1088 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 1930 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 56
run: find-next/read-line/parse-traces/main 10: 57 => ((3 integer))
mem: ((3 integer)): 1927 <= 57
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 57
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 57
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1089 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 1930 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 57
run: find-next/read-line/parse-traces/main 10: 58 => ((3 integer))
mem: ((3 integer)): 1927 <= 58
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 58
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 58
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1090 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 1930 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 58
run: find-next/read-line/parse-traces/main 10: 59 => ((3 integer))
mem: ((3 integer)): 1927 <= 59
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 59
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 59
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1091 byte) (raw)) => l
run: find-next/read-line/parse-traces/main 7: #\l => ((6 byte))
mem: ((6 byte)): 1930 <= #\l
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => l
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 59
run: find-next/read-line/parse-traces/main 10: 60 => ((3 integer))
mem: ((3 integer)): 1927 <= 60
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 60
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 60
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1092 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 1930 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 60
run: find-next/read-line/parse-traces/main 10: 61 => ((3 integer))
mem: ((3 integer)): 1927 <= 61
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 61
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 61
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1093 byte) (raw)) => t
run: find-next/read-line/parse-traces/main 7: #\t => ((6 byte))
mem: ((6 byte)): 1930 <= #\t
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => t
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 61
run: find-next/read-line/parse-traces/main 10: 62 => ((3 integer))
mem: ((3 integer)): 1927 <= 62
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 62
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 62
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1094 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 1930 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 62
run: find-next/read-line/parse-traces/main 10: 63 => ((3 integer))
mem: ((3 integer)): 1927 <= 63
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 63
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 63
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1095 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 1930 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 63
run: find-next/read-line/parse-traces/main 10: 64 => ((3 integer))
mem: ((3 integer)): 1927 <= 64
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 64
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 64
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1096 byte) (raw)) => a
run: find-next/read-line/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 1930 <= #\a
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 64
run: find-next/read-line/parse-traces/main 10: 65 => ((3 integer))
mem: ((3 integer)): 1927 <= 65
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 65
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 65
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1097 byte) (raw)) => l
run: find-next/read-line/parse-traces/main 7: #\l => ((6 byte))
mem: ((6 byte)): 1930 <= #\l
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => l
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 65
run: find-next/read-line/parse-traces/main 10: 66 => ((3 integer))
mem: ((3 integer)): 1927 <= 66
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 66
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 66
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1098 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 1930 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 66
run: find-next/read-line/parse-traces/main 10: 67 => ((3 integer))
mem: ((3 integer)): 1927 <= 67
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 67
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 67
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1099 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 1930 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 67
run: find-next/read-line/parse-traces/main 10: 68 => ((3 integer))
mem: ((3 integer)): 1927 <= 68
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 68
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 68
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1100 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 1930 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 1931 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 68
run: find-next/read-line/parse-traces/main 10: 69 => ((3 integer))
mem: ((3 integer)): 1927 <= 69
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 69
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 1929 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 69
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1101 byte) (raw)) => 

run: find-next/read-line/parse-traces/main 7: #\newline => ((6 byte))
mem: ((6 byte)): 1930 <= #\newline
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 

mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 1931 <= t
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/read-line/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 69
run: read-line/parse-traces/main 4: 69 => ((4 integer))
mem: ((4 integer)): 1897 <= 69
run: read-line/parse-traces/main 5: (((5 string-address)) <- ((string-copy)) ((3 string-address)) ((2 integer-address) (deref)) ((4 integer)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 15
mem: ((4 integer)) => 69
run: string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/read-line/parse-traces/main 0: 1954 => ((default-space space-address))
run: string-copy/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 15 69)
run: string-copy/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 1956 <= 1031
schedule: scheduling string-copy/read-line/parse-traces/main for further processing
schedule: string-copy/read-line/parse-traces/main
run: string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1031 15 69)
run: string-copy/read-line/parse-traces/main 2: 15 => ((2 integer))
mem: ((2 integer)): 1957 <= 15
run: string-copy/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 15 69)
run: string-copy/read-line/parse-traces/main 3: 69 => ((3 integer))
mem: ((3 integer)): 1958 <= 69
run: string-copy/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: string-copy/read-line/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 1959 <= 128
run: string-copy/read-line/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 128
mem: ((3 integer)) => 69
run: min/string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/read-line/parse-traces/main 0: 1985 => ((default-space space-address))
run: min/string-copy/read-line/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (128 69)
run: min/string-copy/read-line/parse-traces/main 1: 128 => ((1 integer))
mem: ((1 integer)): 1987 <= 128
run: min/string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (128 69)
run: min/string-copy/read-line/parse-traces/main 2: 69 => ((2 integer))
mem: ((2 integer)): 1988 <= 69
run: min/string-copy/read-line/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 128
mem: ((2 integer)) => 69
run: min/string-copy/read-line/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 1989 <= nil
run: min/string-copy/read-line/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/read-line/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 69
run: string-copy/read-line/parse-traces/main 5: 69 => ((3 integer))
mem: ((3 integer)): 1958 <= 69
run: string-copy/read-line/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 69
mem: ((2 integer)) => 15
run: string-copy/read-line/parse-traces/main 6: 54 => ((4 integer))
mem: ((4 integer)): 1959 <= 54
run: string-copy/read-line/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 54
run: string-copy/read-line/parse-traces/main 7: 2016 => ((5 string-address))
mem: ((5 string-address)): 1960 <= 2016
run: string-copy/read-line/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 15
run: string-copy/read-line/parse-traces/main 8: 15 => ((6 integer))
mem: ((6 integer)): 1961 <= 15
run: string-copy/read-line/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/read-line/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 1962 <= 0
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1047 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 1964 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2017 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2017
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2017 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/read-line/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 1961 <= 16
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/read-line/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 1962 <= 1
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1048 byte) (raw)) => u
run: string-copy/read-line/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 1964 <= #\u
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2018 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2018
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/read-line/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2018 <= #\u
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/read-line/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 1961 <= 17
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/read-line/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 1962 <= 2
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1049 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 1964 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2019 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2019
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2019 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/read-line/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 1961 <= 18
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/read-line/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 1962 <= 3
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1050 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 1964 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2020 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2020
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2020 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/read-line/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 1961 <= 19
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/read-line/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 1962 <= 4
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1051 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 1964 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2021 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2021
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2021 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/read-line/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 1961 <= 20
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/read-line/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 1962 <= 5
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1052 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 1964 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2022 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2022
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2022 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/read-line/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 1961 <= 21
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/read-line/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 1962 <= 6
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1053 byte) (raw)) => a
run: string-copy/read-line/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 1964 <= #\a
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2023 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2023
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/read-line/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2023 <= #\a
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/read-line/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 1961 <= 22
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/read-line/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 1962 <= 7
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1054 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 1964 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2024 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2024
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2024 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/read-line/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 1961 <= 23
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/read-line/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 1962 <= 8
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1055 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 1964 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2025 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2025
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2025 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/read-line/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 1961 <= 24
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/read-line/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 1962 <= 9
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1056 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 1964 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2026 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2026
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2026 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/read-line/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 1961 <= 25
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/read-line/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 1962 <= 10
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1057 byte) (raw)) => 0
run: string-copy/read-line/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 1964 <= #\0
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2027 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2027
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/read-line/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2027 <= #\0
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/read-line/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 1961 <= 26
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/read-line/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 1962 <= 11
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1058 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 1964 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2028 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2028
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2028 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/read-line/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 1961 <= 27
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/read-line/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 1962 <= 12
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1059 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 1964 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2029 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2029
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2029 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/read-line/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 1961 <= 28
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/read-line/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 1962 <= 13
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1060 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 1964 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2030 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2030
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2030 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/read-line/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 1961 <= 29
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/read-line/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 1962 <= 14
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1061 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 1964 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2031 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2031
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2031 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/read-line/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 1961 <= 30
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/read-line/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 1962 <= 15
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1062 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 1964 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2032 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2032
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2032 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/read-line/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 1961 <= 31
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/read-line/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 1962 <= 16
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 31
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1063 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 1964 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2033 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2033
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2033 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 31
run: string-copy/read-line/parse-traces/main 15: 32 => ((6 integer))
mem: ((6 integer)): 1961 <= 32
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/read-line/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 1962 <= 17
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 32
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 32
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1064 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 1964 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2034 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2034
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2034 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 32
run: string-copy/read-line/parse-traces/main 15: 33 => ((6 integer))
mem: ((6 integer)): 1961 <= 33
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/read-line/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 1962 <= 18
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 33
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 33
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1065 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 1964 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2035 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2035
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2035 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 33
run: string-copy/read-line/parse-traces/main 15: 34 => ((6 integer))
mem: ((6 integer)): 1961 <= 34
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/read-line/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 1962 <= 19
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 34
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 34
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1066 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 1964 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2036 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2036
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2036 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 34
run: string-copy/read-line/parse-traces/main 15: 35 => ((6 integer))
mem: ((6 integer)): 1961 <= 35
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/read-line/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 1962 <= 20
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 35
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 35
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1067 byte) (raw)) => t
run: string-copy/read-line/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 1964 <= #\t
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2037 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2037
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/read-line/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2037 <= #\t
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 35
run: string-copy/read-line/parse-traces/main 15: 36 => ((6 integer))
mem: ((6 integer)): 1961 <= 36
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/read-line/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 1962 <= 21
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 36
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 36
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1068 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 1964 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2038 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2038
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2038 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 36
run: string-copy/read-line/parse-traces/main 15: 37 => ((6 integer))
mem: ((6 integer)): 1961 <= 37
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/read-line/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 1962 <= 22
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 37
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 37
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1069 byte) (raw)) => g
run: string-copy/read-line/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 1964 <= #\g
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2039 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2039
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/read-line/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2039 <= #\g
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 37
run: string-copy/read-line/parse-traces/main 15: 38 => ((6 integer))
mem: ((6 integer)): 1961 <= 38
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/read-line/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 1962 <= 23
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 38
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 38
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1070 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 1964 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2040 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2040
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2040 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 38
run: string-copy/read-line/parse-traces/main 15: 39 => ((6 integer))
mem: ((6 integer)): 1961 <= 39
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/read-line/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 1962 <= 24
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 39
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 39
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1071 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 1964 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2041 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2041
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2041 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 39
run: string-copy/read-line/parse-traces/main 15: 40 => ((6 integer))
mem: ((6 integer)): 1961 <= 40
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/read-line/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 1962 <= 25
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 40
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 40
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1072 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 1964 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2042 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2042
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2042 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 40
run: string-copy/read-line/parse-traces/main 15: 41 => ((6 integer))
mem: ((6 integer)): 1961 <= 41
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/read-line/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 1962 <= 26
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 41
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 41
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1073 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 1964 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2043 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2043
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2043 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 41
run: string-copy/read-line/parse-traces/main 15: 42 => ((6 integer))
mem: ((6 integer)): 1961 <= 42
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/read-line/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 1962 <= 27
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 42
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 42
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1074 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 1964 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2044 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2044
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2044 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 42
run: string-copy/read-line/parse-traces/main 15: 43 => ((6 integer))
mem: ((6 integer)): 1961 <= 43
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/read-line/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 1962 <= 28
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 43
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 43
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1075 byte) (raw)) => <
run: string-copy/read-line/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 1964 <= #\<
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2045 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2045
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/read-line/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2045 <= #\<
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 43
run: string-copy/read-line/parse-traces/main 15: 44 => ((6 integer))
mem: ((6 integer)): 1961 <= 44
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/read-line/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 1962 <= 29
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 44
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 44
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1076 byte) (raw)) => -
run: string-copy/read-line/parse-traces/main 12: #\- => ((9 character))
mem: ((9 character)): 1964 <= #\-
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2046 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2046
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => -
run: string-copy/read-line/parse-traces/main 14: #\- => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2046 <= #\-
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 44
run: string-copy/read-line/parse-traces/main 15: 45 => ((6 integer))
mem: ((6 integer)): 1961 <= 45
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/read-line/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 1962 <= 30
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 45
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 45
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1077 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 1964 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2047 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2047
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2047 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 45
run: string-copy/read-line/parse-traces/main 15: 46 => ((6 integer))
mem: ((6 integer)): 1961 <= 46
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/read-line/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 1962 <= 31
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 46
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 46
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1078 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 1964 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 31
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2048 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2048
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2048 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 46
run: string-copy/read-line/parse-traces/main 15: 47 => ((6 integer))
mem: ((6 integer)): 1961 <= 47
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 31
run: string-copy/read-line/parse-traces/main 16: 32 => ((7 integer))
mem: ((7 integer)): 1962 <= 32
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 47
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 47
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1079 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 1964 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 32
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2049 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2049
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2049 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 47
run: string-copy/read-line/parse-traces/main 15: 48 => ((6 integer))
mem: ((6 integer)): 1961 <= 48
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 32
run: string-copy/read-line/parse-traces/main 16: 33 => ((7 integer))
mem: ((7 integer)): 1962 <= 33
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 48
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 48
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1080 byte) (raw)) => c
run: string-copy/read-line/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 1964 <= #\c
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 33
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2050 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2050
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/read-line/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2050 <= #\c
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 48
run: string-copy/read-line/parse-traces/main 15: 49 => ((6 integer))
mem: ((6 integer)): 1961 <= 49
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 33
run: string-copy/read-line/parse-traces/main 16: 34 => ((7 integer))
mem: ((7 integer)): 1962 <= 34
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 49
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 49
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1081 byte) (raw)) => o
run: string-copy/read-line/parse-traces/main 12: #\o => ((9 character))
mem: ((9 character)): 1964 <= #\o
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 34
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2051 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2051
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => o
run: string-copy/read-line/parse-traces/main 14: #\o => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2051 <= #\o
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 49
run: string-copy/read-line/parse-traces/main 15: 50 => ((6 integer))
mem: ((6 integer)): 1961 <= 50
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 34
run: string-copy/read-line/parse-traces/main 16: 35 => ((7 integer))
mem: ((7 integer)): 1962 <= 35
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 50
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 50
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1082 byte) (raw)) => p
run: string-copy/read-line/parse-traces/main 12: #\p => ((9 character))
mem: ((9 character)): 1964 <= #\p
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 35
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2052 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2052
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => p
run: string-copy/read-line/parse-traces/main 14: #\p => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2052 <= #\p
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 50
run: string-copy/read-line/parse-traces/main 15: 51 => ((6 integer))
mem: ((6 integer)): 1961 <= 51
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 35
run: string-copy/read-line/parse-traces/main 16: 36 => ((7 integer))
mem: ((7 integer)): 1962 <= 36
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 51
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 51
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1083 byte) (raw)) => y
run: string-copy/read-line/parse-traces/main 12: #\y => ((9 character))
mem: ((9 character)): 1964 <= #\y
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 36
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2053 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2053
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => y
run: string-copy/read-line/parse-traces/main 14: #\y => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2053 <= #\y
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 51
run: string-copy/read-line/parse-traces/main 15: 52 => ((6 integer))
mem: ((6 integer)): 1961 <= 52
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 36
run: string-copy/read-line/parse-traces/main 16: 37 => ((7 integer))
mem: ((7 integer)): 1962 <= 37
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 52
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 52
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1084 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 1964 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 37
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2054 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2054
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2054 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 52
run: string-copy/read-line/parse-traces/main 15: 53 => ((6 integer))
mem: ((6 integer)): 1961 <= 53
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 37
run: string-copy/read-line/parse-traces/main 16: 38 => ((7 integer))
mem: ((7 integer)): 1962 <= 38
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 53
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 53
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1085 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 1964 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 38
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2055 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2055
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2055 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 53
run: string-copy/read-line/parse-traces/main 15: 54 => ((6 integer))
mem: ((6 integer)): 1961 <= 54
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 38
run: string-copy/read-line/parse-traces/main 16: 39 => ((7 integer))
mem: ((7 integer)): 1962 <= 39
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 54
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 54
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1086 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 1964 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 39
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2056 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2056
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2056 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 54
run: string-copy/read-line/parse-traces/main 15: 55 => ((6 integer))
mem: ((6 integer)): 1961 <= 55
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 39
run: string-copy/read-line/parse-traces/main 16: 40 => ((7 integer))
mem: ((7 integer)): 1962 <= 40
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 55
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 55
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1087 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 1964 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 40
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2057 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2057
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2057 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 55
run: string-copy/read-line/parse-traces/main 15: 56 => ((6 integer))
mem: ((6 integer)): 1961 <= 56
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 40
run: string-copy/read-line/parse-traces/main 16: 41 => ((7 integer))
mem: ((7 integer)): 1962 <= 41
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 56
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 56
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1088 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 1964 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 41
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2058 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2058
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2058 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 56
run: string-copy/read-line/parse-traces/main 15: 57 => ((6 integer))
mem: ((6 integer)): 1961 <= 57
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 41
run: string-copy/read-line/parse-traces/main 16: 42 => ((7 integer))
mem: ((7 integer)): 1962 <= 42
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 57
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 57
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1089 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 1964 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 42
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2059 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2059
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2059 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 57
run: string-copy/read-line/parse-traces/main 15: 58 => ((6 integer))
mem: ((6 integer)): 1961 <= 58
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 42
run: string-copy/read-line/parse-traces/main 16: 43 => ((7 integer))
mem: ((7 integer)): 1962 <= 43
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 58
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 58
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1090 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 1964 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 43
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2060 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2060
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2060 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 58
run: string-copy/read-line/parse-traces/main 15: 59 => ((6 integer))
mem: ((6 integer)): 1961 <= 59
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 43
run: string-copy/read-line/parse-traces/main 16: 44 => ((7 integer))
mem: ((7 integer)): 1962 <= 44
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 59
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 59
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1091 byte) (raw)) => l
run: string-copy/read-line/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 1964 <= #\l
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 44
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2061 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2061
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/read-line/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2061 <= #\l
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 59
run: string-copy/read-line/parse-traces/main 15: 60 => ((6 integer))
mem: ((6 integer)): 1961 <= 60
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 44
run: string-copy/read-line/parse-traces/main 16: 45 => ((7 integer))
mem: ((7 integer)): 1962 <= 45
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 60
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 60
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1092 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 1964 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 45
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2062 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2062
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2062 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 60
run: string-copy/read-line/parse-traces/main 15: 61 => ((6 integer))
mem: ((6 integer)): 1961 <= 61
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 45
run: string-copy/read-line/parse-traces/main 16: 46 => ((7 integer))
mem: ((7 integer)): 1962 <= 46
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 61
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 61
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1093 byte) (raw)) => t
run: string-copy/read-line/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 1964 <= #\t
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 46
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2063 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2063
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/read-line/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2063 <= #\t
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 61
run: string-copy/read-line/parse-traces/main 15: 62 => ((6 integer))
mem: ((6 integer)): 1961 <= 62
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 46
run: string-copy/read-line/parse-traces/main 16: 47 => ((7 integer))
mem: ((7 integer)): 1962 <= 47
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 62
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 62
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1094 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 1964 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 47
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2064 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2064
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2064 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 62
run: string-copy/read-line/parse-traces/main 15: 63 => ((6 integer))
mem: ((6 integer)): 1961 <= 63
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 47
run: string-copy/read-line/parse-traces/main 16: 48 => ((7 integer))
mem: ((7 integer)): 1962 <= 48
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 63
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 63
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1095 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 1964 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 48
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2065 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2065
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2065 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 63
run: string-copy/read-line/parse-traces/main 15: 64 => ((6 integer))
mem: ((6 integer)): 1961 <= 64
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 48
run: string-copy/read-line/parse-traces/main 16: 49 => ((7 integer))
mem: ((7 integer)): 1962 <= 49
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 64
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 64
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1096 byte) (raw)) => a
run: string-copy/read-line/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 1964 <= #\a
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 49
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2066 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2066
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/read-line/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2066 <= #\a
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 64
run: string-copy/read-line/parse-traces/main 15: 65 => ((6 integer))
mem: ((6 integer)): 1961 <= 65
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 49
run: string-copy/read-line/parse-traces/main 16: 50 => ((7 integer))
mem: ((7 integer)): 1962 <= 50
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 65
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 65
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1097 byte) (raw)) => l
run: string-copy/read-line/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 1964 <= #\l
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 50
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2067 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2067
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/read-line/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2067 <= #\l
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 65
run: string-copy/read-line/parse-traces/main 15: 66 => ((6 integer))
mem: ((6 integer)): 1961 <= 66
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 50
run: string-copy/read-line/parse-traces/main 16: 51 => ((7 integer))
mem: ((7 integer)): 1962 <= 51
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 66
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 66
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1098 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 1964 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 51
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2068 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2068
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2068 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 66
run: string-copy/read-line/parse-traces/main 15: 67 => ((6 integer))
mem: ((6 integer)): 1961 <= 67
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 51
run: string-copy/read-line/parse-traces/main 16: 52 => ((7 integer))
mem: ((7 integer)): 1962 <= 52
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 67
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 67
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1099 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 1964 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 52
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2069 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2069
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2069 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 67
run: string-copy/read-line/parse-traces/main 15: 68 => ((6 integer))
mem: ((6 integer)): 1961 <= 68
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 52
run: string-copy/read-line/parse-traces/main 16: 53 => ((7 integer))
mem: ((7 integer)): 1962 <= 53
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 68
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 1963 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 68
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1100 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 1964 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 53
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
run: string-copy/read-line/parse-traces/main 13: 2070 => ((10 character-address))
mem: ((10 character-address)): 1965 <= 2070
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2070 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 68
run: string-copy/read-line/parse-traces/main 15: 69 => ((6 integer))
mem: ((6 integer)): 1961 <= 69
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 53
run: string-copy/read-line/parse-traces/main 16: 54 => ((7 integer))
mem: ((7 integer)): 1962 <= 54
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 69
mem: ((3 integer)) => 69
run: string-copy/read-line/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 1963 <= t
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/read-line/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 2016
run: read-line/parse-traces/main 5: 2016 => ((5 string-address))
mem: ((5 string-address)): 1898 <= 2016
run: read-line/parse-traces/main 6: (((2 integer-address) (deref)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 69
run: read-line/parse-traces/main 6: 70 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1191 <= 70
run: read-line/parse-traces/main 7: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 2016
run: parse-traces/main 9: 2016 => ((7 string-address))
mem: ((7 string-address)): 1201 <= 2016
run: parse-traces/main 10: (((8 trace-address)) <- ((parse-trace)) ((7 string-address)))
mem: ((7 string-address)) => 2016
run: parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-trace/parse-traces/main 0: 2071 => ((default-space space-address))
run: parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2016)
run: parse-trace/parse-traces/main 1: 2016 => ((1 string-address))
mem: ((1 string-address)): 2073 <= 2016
run: parse-trace/parse-traces/main 2: (((2 trace-address)) <- ((new)) ((trace literal)))
run: parse-trace/parse-traces/main 2: 2102 => ((2 trace-address))
mem: ((2 trace-address)): 2074 <= 2102
run: parse-trace/parse-traces/main 3: (((3 string-address)) <- ((new)) : )
run: parse-trace/parse-traces/main 3: 2104 => ((3 string-address))
mem: ((3 string-address)): 2075 <= 2104
run: parse-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first-at-substring)) ((1 string-address)) ((3 string-address)))
mem: ((1 string-address)) => 2016
mem: ((3 string-address)) => 2104
run: split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-trace/parse-traces/main 0: 2107 => ((default-space space-address))
run: split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2016 2104)
run: split-first-at-substring/parse-trace/parse-traces/main 1: 2016 => ((1 string-address))
mem: ((1 string-address)): 2109 <= 2016
run: split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2016 2104)
run: split-first-at-substring/parse-trace/parse-traces/main 2: 2104 => ((2 string-address))
mem: ((2 string-address)): 2110 <= 2104
run: split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2016 integer) (raw)) => 54
run: split-first-at-substring/parse-trace/parse-traces/main 3: 54 => ((3 integer))
mem: ((3 integer)): 2111 <= 54
run: split-first-at-substring/parse-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 54
run: split-first-at-substring/parse-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 2112 <= nil
run: split-first-at-substring/parse-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 2016
mem: ((2 string-address)) => 2104
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 2138 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2016 2104 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 2016 => ((1 string-address))
mem: ((1 string-address)): 2140 <= 2016
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2016 2104 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 2104 => ((2 string-address))
mem: ((2 string-address)): 2141 <= 2104
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2016 2104 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 2142 <= 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((2104 string) (raw))
mem: ((2104 integer) (raw)) => 2
mem: ((2105 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 2143 <= #\:
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2016 integer) (raw)) => 54
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 54 => ((5 integer))
mem: ((5 integer)): 2144 <= 54
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 54
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 2145 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 2016
mem: ((2 string-address)) => 2104
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 2169 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2016 2104 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 2016 => ((1 string-address))
mem: ((1 string-address)): 2171 <= 2016
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2016 2104 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 2104 => ((2 string-address))
mem: ((2 string-address)): 2172 <= 2104
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2016 2104 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 2173 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2104 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 2174 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2016 integer) (raw)) => 54
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 54 => ((5 integer))
mem: ((5 integer)): 2175 <= 54
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 54
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 52 => ((5 integer))
mem: ((5 integer)): 2175 <= 52
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 52
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 2176 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 2177 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 2178 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2017 byte) (raw)) => r
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\r => ((9 character))
mem: ((9 character)): 2179 <= #\r
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2104 string) (raw))
mem: ((2104 integer) (raw)) => 2
mem: ((2105 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 2180 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => r
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 2181 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2146 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 2142 <= 1
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 2016
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 2200 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2016 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 2016 => ((1 string-address))
mem: ((1 string-address)): 2202 <= 2016
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2016 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 2203 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2016 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 2204 <= 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2016 integer) (raw)) => 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 54 => ((4 integer))
mem: ((4 integer)): 2205 <= 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2206 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
schedule: scheduling find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main for further processing
schedule: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2018 byte) (raw)) => u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 2207 <= #\u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2208 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 2204 <= 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2206 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2019 byte) (raw)) => n
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 2207 <= #\n
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2208 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 2204 <= 3
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 54
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2206 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2020 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 2207 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 2208 <= t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: 3 => ((3 integer))
mem: ((3 integer)): 2142 <= 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 54
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 2145 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 2016
mem: ((2 string-address)) => 2104
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 2231 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2016 2104 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 2016 => ((1 string-address))
mem: ((1 string-address)): 2233 <= 2016
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2016 2104 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 2104 => ((2 string-address))
mem: ((2 string-address)): 2234 <= 2104
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2016 2104 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 2235 <= 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2104 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 2236 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2016 integer) (raw)) => 54
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 54 => ((5 integer))
mem: ((5 integer)): 2237 <= 54
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 54
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 52 => ((5 integer))
mem: ((5 integer)): 2237 <= 52
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 52
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 2238 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 2239 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 2240 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2020 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 2241 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2104 string) (raw))
mem: ((2104 integer) (raw)) => 2
mem: ((2105 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 2242 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 2243 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 4 => ((3 integer))
mem: ((3 integer)): 2235 <= 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 2239 <= 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 2240 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2021 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 2241 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2104 string) (raw))
mem: ((2104 integer) (raw)) => 2
mem: ((2106 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 2242 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 2243 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 5 => ((3 integer))
mem: ((3 integer)): 2235 <= 5
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 2239 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 2240 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 2146 <= t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: split-first-at-substring/parse-trace/parse-traces/main 9: 3 => ((7 integer))
mem: ((7 integer)): 2115 <= 3
run: split-first-at-substring/parse-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 2016
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 2262 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2016 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 2016 => ((1 string-address))
mem: ((1 string-address)): 2264 <= 2016
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2016 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 2265 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2016 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 2266 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2016 integer) (raw)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 54 => ((4 integer))
mem: ((4 integer)): 2267 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 54
mem: ((3 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 2293 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (54 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 54 => ((1 integer))
mem: ((1 integer)): 2295 <= 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (54 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 2296 <= 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 54
mem: ((2 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 2297 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 3 => ((3 integer))
mem: ((3 integer)): 2266 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 3
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 3 => ((4 integer))
mem: ((4 integer)): 2267 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 2324 => ((5 string-address))
mem: ((5 string-address)): 2268 <= 2324
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 2269 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 2270 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2271 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2017 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 2272 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2324 string) (raw))
mem: ((2324 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2325 => ((10 character-address))
mem: ((10 character-address)): 2273 <= 2325
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2325 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 2269 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 2270 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2271 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2018 byte) (raw)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 2272 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2324 string) (raw))
mem: ((2324 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2326 => ((10 character-address))
mem: ((10 character-address)): 2273 <= 2326
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2326 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 2269 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 2270 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2271 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2019 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2272 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((2324 string) (raw))
mem: ((2324 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2327 => ((10 character-address))
mem: ((10 character-address)): 2273 <= 2327
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2327 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 2269 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 2270 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 2271 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 2324
run: split-first-at-substring/parse-trace/parse-traces/main 10: 2324 => ((5 string-address))
mem: ((5 string-address)): 2113 <= 2324
run: split-first-at-substring/parse-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2104 integer) (raw)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 2116 <= 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 3
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: 5 => ((7 integer))
mem: ((7 integer)): 2115 <= 5
run: split-first-at-substring/parse-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 2016
mem: ((7 integer)) => 5
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 2328 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2016 5 54)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 2016 => ((1 string-address))
mem: ((1 string-address)): 2330 <= 2016
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2016 5 54)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 2331 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2016 5 54)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 54 => ((3 integer))
mem: ((3 integer)): 2332 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2016 integer) (raw)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 54 => ((4 integer))
mem: ((4 integer)): 2333 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 54
mem: ((3 integer)) => 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 2359 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (54 54)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 54 => ((1 integer))
mem: ((1 integer)): 2361 <= 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (54 54)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 54 => ((2 integer))
mem: ((2 integer)): 2362 <= 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 54
mem: ((2 integer)) => 54
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 2363 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 54 => ((3 integer))
mem: ((3 integer)): 2332 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 54
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 49 => ((4 integer))
mem: ((4 integer)): 2333 <= 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 2390 => ((5 string-address))
mem: ((5 string-address)): 2334 <= 2390
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 2335 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 2336 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2022 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 2338 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2391 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2391
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2391 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 2335 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 2336 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2023 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 2338 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2392 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2392
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2392 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 2335 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 2336 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2024 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2338 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2393 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2393
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2393 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 2335 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 2336 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2025 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2338 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2394 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2394
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2394 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 2335 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 2336 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2026 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2338 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2395 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2395
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2395 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 2335 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 2336 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2027 byte) (raw)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 2338 <= #\0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2396 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2396
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2396 <= #\0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 2335 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 2336 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2028 byte) (raw)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 2338 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2397 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2397
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2397 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 2335 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 2336 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2029 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2338 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2398 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2398
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2398 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 2335 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 2336 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2030 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2338 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2399 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2399
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2399 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 2335 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 2336 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2031 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2338 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2400 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2400
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2400 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 2335 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 2336 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2032 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2338 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2401 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2401
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2401 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 2335 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 2336 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2033 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 2338 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2402 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2402
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2402 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 2335 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 2336 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2034 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2338 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2403 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2403
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2403 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 2335 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 2336 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2035 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2338 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2404 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2404
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2404 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 2335 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 2336 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2036 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2338 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2405 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2405
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2405 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 2335 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 2336 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2037 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 2338 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2406 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2406
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2406 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 2335 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 2336 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2038 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2338 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2407 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2407
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2407 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 2335 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 2336 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2039 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 2338 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2408 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2408
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2408 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 2335 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 2336 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2040 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2338 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2409 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2409
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2409 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 2335 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 2336 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2041 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 2338 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2410 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2410
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2410 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 2335 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 2336 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2042 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2338 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2411 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2411
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2411 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 2335 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 2336 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2043 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2338 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2412 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2412
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2412 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 2335 <= 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 2336 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2044 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2338 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2413 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2413
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2413 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 2335 <= 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 2336 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2045 byte) (raw)) => <
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 2338 <= #\<
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2414 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2414
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2414 <= #\<
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 2335 <= 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 2336 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2046 byte) (raw)) => -
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\- => ((9 character))
mem: ((9 character)): 2338 <= #\-
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2415 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2415
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => -
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\- => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2415 <= #\-
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 2335 <= 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 2336 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2047 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2338 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2416 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2416
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2416 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 2335 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 2336 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 31
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2048 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2338 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2417 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2417
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2417 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 32 => ((6 integer))
mem: ((6 integer)): 2335 <= 32
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 2336 <= 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 32
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 32
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2049 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2338 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2418 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2418
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2418 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 32
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 33 => ((6 integer))
mem: ((6 integer)): 2335 <= 33
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 2336 <= 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 33
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 33
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2050 byte) (raw)) => c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 2338 <= #\c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2419 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2419
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2419 <= #\c
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 33
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 34 => ((6 integer))
mem: ((6 integer)): 2335 <= 34
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 2336 <= 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 34
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 34
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2051 byte) (raw)) => o
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\o => ((9 character))
mem: ((9 character)): 2338 <= #\o
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2420 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2420
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => o
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\o => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2420 <= #\o
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 34
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 35 => ((6 integer))
mem: ((6 integer)): 2335 <= 35
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 2336 <= 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 35
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 35
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2052 byte) (raw)) => p
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\p => ((9 character))
mem: ((9 character)): 2338 <= #\p
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2421 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2421
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => p
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\p => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2421 <= #\p
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 35
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 36 => ((6 integer))
mem: ((6 integer)): 2335 <= 36
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 2336 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 36
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 36
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2053 byte) (raw)) => y
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\y => ((9 character))
mem: ((9 character)): 2338 <= #\y
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 31
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2422 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2422
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => y
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\y => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2422 <= #\y
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 36
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 37 => ((6 integer))
mem: ((6 integer)): 2335 <= 37
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 32 => ((7 integer))
mem: ((7 integer)): 2336 <= 32
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 37
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 37
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2054 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2338 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 32
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2423 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2423
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2423 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 37
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 38 => ((6 integer))
mem: ((6 integer)): 2335 <= 38
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 32
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 33 => ((7 integer))
mem: ((7 integer)): 2336 <= 33
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 38
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 38
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2055 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2338 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 33
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2424 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2424
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2424 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 38
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 39 => ((6 integer))
mem: ((6 integer)): 2335 <= 39
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 33
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 34 => ((7 integer))
mem: ((7 integer)): 2336 <= 34
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 39
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 39
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2056 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2338 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 34
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2425 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2425
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2425 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 39
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 40 => ((6 integer))
mem: ((6 integer)): 2335 <= 40
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 34
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 35 => ((7 integer))
mem: ((7 integer)): 2336 <= 35
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 40
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 40
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2057 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2338 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 35
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2426 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2426
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2426 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 40
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 41 => ((6 integer))
mem: ((6 integer)): 2335 <= 41
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 35
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 36 => ((7 integer))
mem: ((7 integer)): 2336 <= 36
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 41
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 41
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2058 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2338 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 36
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2427 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2427
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2427 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 41
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 42 => ((6 integer))
mem: ((6 integer)): 2335 <= 42
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 36
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 37 => ((7 integer))
mem: ((7 integer)): 2336 <= 37
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 42
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 42
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2059 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 2338 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 37
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2428 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2428
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2428 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 42
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 43 => ((6 integer))
mem: ((6 integer)): 2335 <= 43
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 37
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 38 => ((7 integer))
mem: ((7 integer)): 2336 <= 38
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 43
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 43
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2060 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2338 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 38
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2429 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2429
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2429 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 43
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 44 => ((6 integer))
mem: ((6 integer)): 2335 <= 44
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 38
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 39 => ((7 integer))
mem: ((7 integer)): 2336 <= 39
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 44
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 44
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2061 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 2338 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 39
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2430 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2430
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2430 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 44
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 45 => ((6 integer))
mem: ((6 integer)): 2335 <= 45
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 39
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 40 => ((7 integer))
mem: ((7 integer)): 2336 <= 40
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 45
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 45
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2062 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2338 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 40
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2431 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2431
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2431 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 45
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 46 => ((6 integer))
mem: ((6 integer)): 2335 <= 46
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 40
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 41 => ((7 integer))
mem: ((7 integer)): 2336 <= 41
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 46
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 46
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2063 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 2338 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 41
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2432 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2432
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2432 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 46
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 47 => ((6 integer))
mem: ((6 integer)): 2335 <= 47
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 41
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 42 => ((7 integer))
mem: ((7 integer)): 2336 <= 42
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 47
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 47
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2064 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2338 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 42
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2433 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2433
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2433 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 47
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 48 => ((6 integer))
mem: ((6 integer)): 2335 <= 48
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 42
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 43 => ((7 integer))
mem: ((7 integer)): 2336 <= 43
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 48
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 48
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2065 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 2338 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 43
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2434 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2434
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2434 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 48
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 49 => ((6 integer))
mem: ((6 integer)): 2335 <= 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 43
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 44 => ((7 integer))
mem: ((7 integer)): 2336 <= 44
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 49
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 49
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2066 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 2338 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 44
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2435 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2435
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2435 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 50 => ((6 integer))
mem: ((6 integer)): 2335 <= 50
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 44
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 45 => ((7 integer))
mem: ((7 integer)): 2336 <= 45
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 50
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 50
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2067 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 2338 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 45
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2436 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2436
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2436 <= #\l
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 50
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 51 => ((6 integer))
mem: ((6 integer)): 2335 <= 51
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 45
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 46 => ((7 integer))
mem: ((7 integer)): 2336 <= 46
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 51
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 51
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2068 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2338 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 46
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2437 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2437
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2437 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 51
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 52 => ((6 integer))
mem: ((6 integer)): 2335 <= 52
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 46
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 47 => ((7 integer))
mem: ((7 integer)): 2336 <= 47
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 52
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 52
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2069 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2338 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 47
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2438 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2438
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2438 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 52
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 53 => ((6 integer))
mem: ((6 integer)): 2335 <= 53
schedule: scheduling string-copy/split-first-at-substring/parse-trace/parse-traces/main for further processing
schedule: string-copy/split-first-at-substring/parse-trace/parse-traces/main
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 47
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 48 => ((7 integer))
mem: ((7 integer)): 2336 <= 48
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 53
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2337 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 53
array-len: ((2016 string) (raw))
mem: ((2016 integer) (raw)) => 54
mem: ((2070 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2338 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 48
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 2439 => ((10 character-address))
mem: ((10 character-address)): 2339 <= 2439
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2439 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 53
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 54 => ((6 integer))
mem: ((6 integer)): 2335 <= 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 48
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 49 => ((7 integer))
mem: ((7 integer)): 2336 <= 49
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 54
mem: ((3 integer)) => 54
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 2337 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 2390
run: split-first-at-substring/parse-trace/parse-traces/main 13: 2390 => ((6 string-address))
mem: ((6 string-address)): 2114 <= 2390
run: split-first-at-substring/parse-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 2324
mem: ((6 string-address)) => 2390
run: parse-trace/parse-traces/main 4: 2324 => ((4 string-address))
mem: ((4 string-address)): 2076 <= 2324
run: parse-trace/parse-traces/main 4: 2390 => ((5 string-address))
mem: ((5 string-address)): 2077 <= 2390
run: parse-trace/parse-traces/main 5: (((6 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((0 offset)))
run: parse-trace/parse-traces/main 5: 2102 => ((6 string-address-address))
mem: ((6 string-address-address)): 2078 <= 2102
run: parse-trace/parse-traces/main 6: (((6 string-address-address) (deref)) <- ((copy)) ((4 string-address)))
mem: ((4 string-address)) => 2324
run: parse-trace/parse-traces/main 6: 2324 => ((6 string-address-address) (deref))
mem: ((6 string-address-address) (deref)): 2102 <= 2324
run: parse-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((1 offset)))
run: parse-trace/parse-traces/main 7: 2103 => ((7 string-address-address))
mem: ((7 string-address-address)): 2079 <= 2103
run: parse-trace/parse-traces/main 8: (((7 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 2390
run: parse-trace/parse-traces/main 8: 2390 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 2103 <= 2390
run: parse-trace/parse-traces/main 9: (((reply)) ((2 trace-address)))
mem: ((2 trace-address)) => 2102
run: parse-traces/main 10: 2102 => ((8 trace-address))
mem: ((8 trace-address)): 1202 <= 2102
run: parse-traces/main 11: (((9 string-address)) <- ((get)) ((8 trace-address) (deref)) ((0 offset)))
mem: ((2102 string-address) (raw)) => 2324
run: parse-traces/main 11: 2324 => ((9 string-address))
mem: ((9 string-address)): 1203 <= 2324
run: parse-traces/main 12: (((10 boolean)) <- ((string-equal)) ((9 string-address)) ((5 string-address) (const)))
mem: ((9 string-address)) => 2324
mem: ((5 string-address) (const)) => 1327
run: string-equal/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-equal/parse-traces/main 0: 2440 => ((default-space space-address))
run: string-equal/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2324 1327)
run: string-equal/parse-traces/main 1: 2324 => ((1 string-address))
mem: ((1 string-address)): 2442 <= 2324
run: string-equal/parse-traces/main 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2324 integer) (raw)) => 3
run: string-equal/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 2443 <= 3
run: string-equal/parse-traces/main 3: (((3 string-address)) <- ((next-input)))
arg: nil 1 (2324 1327)
run: string-equal/parse-traces/main 3: 1327 => ((3 string-address))
mem: ((3 string-address)): 2444 <= 1327
run: string-equal/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1327 integer) (raw)) => 3
run: string-equal/parse-traces/main 4: 3 => ((4 integer))
mem: ((4 integer)): 2445 <= 3
run: string-equal/parse-traces/main 5: (((5 boolean)) <- ((equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 3
run: string-equal/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 2446 <= t
run: string-equal/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((1 offset)))
mem: ((5 boolean)) => t
run: string-equal/parse-traces/main 8: (((6 integer)) <- ((copy)) ((0 literal)))
run: string-equal/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 2447 <= 0
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 0
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 2448 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((2324 string) (raw))
mem: ((2324 integer) (raw)) => 3
mem: ((2325 byte) (raw)) => r
run: string-equal/parse-traces/main 11: #\r => ((8 byte))
mem: ((8 byte)): 2449 <= #\r
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((1327 string) (raw))
mem: ((1327 integer) (raw)) => 3
mem: ((1328 byte) (raw)) => r
run: string-equal/parse-traces/main 12: #\r => ((9 byte))
mem: ((9 byte)): 2450 <= #\r
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => r
mem: ((9 byte)) => r
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 2451 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-equal/parse-traces/main 16: 1 => ((6 integer))
mem: ((6 integer)): 2447 <= 1
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 1
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 2448 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((2324 string) (raw))
mem: ((2324 integer) (raw)) => 3
mem: ((2326 byte) (raw)) => u
run: string-equal/parse-traces/main 11: #\u => ((8 byte))
mem: ((8 byte)): 2449 <= #\u
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((1327 string) (raw))
mem: ((1327 integer) (raw)) => 3
mem: ((1329 byte) (raw)) => u
run: string-equal/parse-traces/main 12: #\u => ((9 byte))
mem: ((9 byte)): 2450 <= #\u
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => u
mem: ((9 byte)) => u
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 2451 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-equal/parse-traces/main 16: 2 => ((6 integer))
mem: ((6 integer)): 2447 <= 2
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 2
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 2448 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((2324 string) (raw))
mem: ((2324 integer) (raw)) => 3
mem: ((2327 byte) (raw)) => n
run: string-equal/parse-traces/main 11: #\n => ((8 byte))
mem: ((8 byte)): 2449 <= #\n
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((1327 string) (raw))
mem: ((1327 integer) (raw)) => 3
mem: ((1330 byte) (raw)) => n
run: string-equal/parse-traces/main 12: #\n => ((9 byte))
mem: ((9 byte)): 2450 <= #\n
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => n
mem: ((9 byte)) => n
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 2451 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-equal/parse-traces/main 16: 3 => ((6 integer))
mem: ((6 integer)): 2447 <= 3
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 3
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: t => ((7 boolean))
mem: ((7 boolean)): 2448 <= t
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => t
run: string-equal/parse-traces/main 18: (((reply)) ((t literal)))
run: parse-traces/main 12: t => ((10 boolean))
mem: ((10 boolean)): 1204 <= t
run: parse-traces/main 13: (((jump-unless)) ((10 boolean)) ((7 offset)))
mem: ((10 boolean)) => t
run: parse-traces/main 14: (((jump-unless)) ((3 instruction-trace-address)) ((3 offset)))
mem: ((3 instruction-trace-address)) => nil
run: parse-traces/main 18: (((3 instruction-trace-address)) <- ((parse-instruction-trace)) ((8 trace-address)))
mem: ((8 trace-address)) => 2102
run: parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-instruction-trace/parse-traces/main 0: 2471 => ((default-space space-address))
run: parse-instruction-trace/parse-traces/main 1: (((1 trace-address)) <- ((next-input)))
arg: nil 0 (2102)
run: parse-instruction-trace/parse-traces/main 1: 2102 => ((1 trace-address))
mem: ((1 trace-address)): 2473 <= 2102
run: parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((get)) ((1 trace-address) (deref)) ((1 offset)))
mem: ((2103 string-address) (raw)) => 2390
run: parse-instruction-trace/parse-traces/main 2: 2390 => ((2 string-address))
mem: ((2 string-address)): 2474 <= 2390
run: parse-instruction-trace/parse-traces/main 3: (((3 instruction-trace-address)) <- ((new)) ((instruction-trace literal)))
run: parse-instruction-trace/parse-traces/main 3: 2502 => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 2475 <= 2502
run: parse-instruction-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first)) ((2 string-address)) ((  literal)))
mem: ((2 string-address)) => 2390
run: split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first/parse-instruction-trace/parse-traces/main 0: 2506 => ((default-space space-address))
run: split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2390 #\space)
run: split-first/parse-instruction-trace/parse-traces/main 1: 2390 => ((1 string-address))
mem: ((1 string-address)): 2508 <= 2390
run: split-first/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2390 #\space)
run: split-first/parse-instruction-trace/parse-traces/main 2: #\space => ((2 character))
mem: ((2 character)): 2509 <= #\space
run: split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2390 integer) (raw)) => 49
run: split-first/parse-instruction-trace/parse-traces/main 3: 49 => ((3 integer))
mem: ((3 integer)): 2510 <= 49
run: split-first/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 49
run: split-first/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 2511 <= nil
run: split-first/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((0 literal)))
mem: ((1 string-address)) => 2390
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 0: 2537 => ((default-space space-address))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2390 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 1: 2390 => ((1 string-address))
mem: ((1 string-address)): 2539 <= 2390
run: find-next/split-first/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2390 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 2: #\space => ((2 character))
mem: ((2 character)): 2540 <= #\space
run: find-next/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2390 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 2541 <= 0
run: find-next/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2390 integer) (raw)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 4: 49 => ((4 integer))
mem: ((4 integer)): 2542 <= 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2543 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2391 byte) (raw)) => m
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 2544 <= #\m
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2545 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 2541 <= 1
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2543 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2392 byte) (raw)) => a
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 2544 <= #\a
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2545 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 2541 <= 2
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2543 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2393 byte) (raw)) => i
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 2544 <= #\i
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2545 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 2541 <= 3
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2543 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2394 byte) (raw)) => n
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 2544 <= #\n
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2545 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 2541 <= 4
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 49
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2543 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2395 byte) (raw)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 2544 <= #\space
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 2545 <= t
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/split-first/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split-first/parse-instruction-trace/parse-traces/main 9: 4 => ((7 integer))
mem: ((7 integer)): 2514 <= 4
run: split-first/parse-instruction-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 2390
mem: ((7 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 2568 => ((default-space space-address))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2390 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 2390 => ((1 string-address))
mem: ((1 string-address)): 2570 <= 2390
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2390 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 2571 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2390 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 2572 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: 49 => ((4 integer))
mem: ((4 integer)): 2573 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 49
mem: ((3 integer)) => 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 2599 => ((default-space space-address))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (49 4)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 49 => ((1 integer))
mem: ((1 integer)): 2601 <= 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (49 4)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 4 => ((2 integer))
mem: ((2 integer)): 2602 <= 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 49
mem: ((2 integer)) => 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 2603 <= nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: 4 => ((3 integer))
mem: ((3 integer)): 2572 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 4
mem: ((2 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 2573 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: 2630 => ((5 string-address))
mem: ((5 string-address)): 2574 <= 2630
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 2575 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 2576 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2577 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2391 byte) (raw)) => m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 2578 <= #\m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2631 => ((10 character-address))
mem: ((10 character-address)): 2579 <= 2631
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2631 <= #\m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 2575 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 2576 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2577 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2392 byte) (raw)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 2578 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2632 => ((10 character-address))
mem: ((10 character-address)): 2579 <= 2632
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2632 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 2575 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 2576 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2577 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2393 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2578 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2633 => ((10 character-address))
mem: ((10 character-address)): 2579 <= 2633
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2633 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 2575 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 2576 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2577 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2394 byte) (raw)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2578 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2634 => ((10 character-address))
mem: ((10 character-address)): 2579 <= 2634
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2634 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 2575 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 2576 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 2577 <= t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 2630
run: split-first/parse-instruction-trace/parse-traces/main 10: 2630 => ((5 string-address))
mem: ((5 string-address)): 2512 <= 2630
run: split-first/parse-instruction-trace/parse-traces/main 11: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: split-first/parse-instruction-trace/parse-traces/main 11: 5 => ((7 integer))
mem: ((7 integer)): 2514 <= 5
run: split-first/parse-instruction-trace/parse-traces/main 12: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 2390
mem: ((7 integer)) => 5
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 2635 => ((default-space space-address))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2390 5 49)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 2390 => ((1 string-address))
mem: ((1 string-address)): 2637 <= 2390
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2390 5 49)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 2638 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2390 5 49)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: 49 => ((3 integer))
mem: ((3 integer)): 2639 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2390 integer) (raw)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: 49 => ((4 integer))
mem: ((4 integer)): 2640 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 49
mem: ((3 integer)) => 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 2666 => ((default-space space-address))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (49 49)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 49 => ((1 integer))
mem: ((1 integer)): 2668 <= 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (49 49)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 49 => ((2 integer))
mem: ((2 integer)): 2669 <= 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 49
mem: ((2 integer)) => 49
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 2670 <= nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: 49 => ((3 integer))
mem: ((3 integer)): 2639 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 49
mem: ((2 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: 44 => ((4 integer))
mem: ((4 integer)): 2640 <= 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: 2697 => ((5 string-address))
mem: ((5 string-address)): 2641 <= 2697
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 2642 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 2643 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2396 byte) (raw)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 2645 <= #\0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2698 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2698
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2698 <= #\0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 2642 <= 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 2643 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2397 byte) (raw)) => :
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 2645 <= #\:
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2699 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2699
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2699 <= #\:
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 2642 <= 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 2643 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2398 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2645 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2700 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2700
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2700 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 2642 <= 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 2643 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2399 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2645 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2701 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2701
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2701 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 2642 <= 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 2643 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2400 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2645 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2702 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2702
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2702 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 2642 <= 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 2643 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2401 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2645 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2703 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2703
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2703 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 2642 <= 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 2643 <= 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2402 byte) (raw)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 2645 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2704 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2704
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2704 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 2642 <= 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 2643 <= 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2403 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2645 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2705 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2705
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2705 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 2642 <= 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 2643 <= 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2404 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2645 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2706 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2706
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2706 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 2642 <= 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 2643 <= 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2405 byte) (raw)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2645 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2707 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2707
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2707 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 2642 <= 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 2643 <= 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2406 byte) (raw)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 2645 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2708 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2708
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2708 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 2642 <= 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 2643 <= 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2407 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2645 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2709 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2709
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2709 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 2642 <= 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 2643 <= 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2408 byte) (raw)) => g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 2645 <= #\g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2710 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2710
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2710 <= #\g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 2642 <= 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 2643 <= 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2409 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2645 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2711 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2711
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2711 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 2642 <= 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 2643 <= 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2410 byte) (raw)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 2645 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2712 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2712
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2712 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 2642 <= 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 2643 <= 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2411 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2645 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2713 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2713
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2713 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 2642 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 2643 <= 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2412 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2645 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2714 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2714
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2714 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 2642 <= 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 2643 <= 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2413 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2645 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2715 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2715
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2715 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 2642 <= 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 2643 <= 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2414 byte) (raw)) => <
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 2645 <= #\<
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2716 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2716
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2716 <= #\<
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 2642 <= 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 2643 <= 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2415 byte) (raw)) => -
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\- => ((9 character))
mem: ((9 character)): 2645 <= #\-
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2717 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2717
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => -
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\- => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2717 <= #\-
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 2642 <= 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 2643 <= 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2416 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2645 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2718 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2718
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2718 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 2642 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 2643 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2417 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2645 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2719 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2719
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2719 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 2642 <= 27
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 2643 <= 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2418 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2645 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2720 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2720
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2720 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 2642 <= 28
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 2643 <= 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2419 byte) (raw)) => c
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 2645 <= #\c
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2721 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2721
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2721 <= #\c
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 2642 <= 29
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 2643 <= 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2420 byte) (raw)) => o
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\o => ((9 character))
mem: ((9 character)): 2645 <= #\o
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2722 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2722
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => o
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\o => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2722 <= #\o
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 2642 <= 30
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 2643 <= 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2421 byte) (raw)) => p
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\p => ((9 character))
mem: ((9 character)): 2645 <= #\p
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2723 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2723
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => p
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\p => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2723 <= #\p
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 2642 <= 31
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 2643 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 31
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2422 byte) (raw)) => y
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\y => ((9 character))
mem: ((9 character)): 2645 <= #\y
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2724 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2724
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => y
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\y => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2724 <= #\y
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 31
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 32 => ((6 integer))
mem: ((6 integer)): 2642 <= 32
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 2643 <= 27
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 32
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 32
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2423 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2645 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2725 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2725
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2725 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 32
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 33 => ((6 integer))
mem: ((6 integer)): 2642 <= 33
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 2643 <= 28
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 33
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 33
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2424 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2645 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2726 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2726
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2726 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 33
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 34 => ((6 integer))
mem: ((6 integer)): 2642 <= 34
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 2643 <= 29
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 34
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 34
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2425 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2645 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2727 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2727
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2727 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 34
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 35 => ((6 integer))
mem: ((6 integer)): 2642 <= 35
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 2643 <= 30
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 35
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 35
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2426 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2645 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2728 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2728
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2728 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 35
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 36 => ((6 integer))
mem: ((6 integer)): 2642 <= 36
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 2643 <= 31
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 36
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 36
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2427 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 2645 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 31
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2729 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2729
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2729 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 36
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 37 => ((6 integer))
mem: ((6 integer)): 2642 <= 37
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 31
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 32 => ((7 integer))
mem: ((7 integer)): 2643 <= 32
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 37
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 37
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2428 byte) (raw)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 2645 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 32
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2730 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2730
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2730 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 37
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 38 => ((6 integer))
mem: ((6 integer)): 2642 <= 38
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 32
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 33 => ((7 integer))
mem: ((7 integer)): 2643 <= 33
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 38
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 38
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2429 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 2645 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 33
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2731 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2731
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2731 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 38
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 39 => ((6 integer))
mem: ((6 integer)): 2642 <= 39
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 33
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 34 => ((7 integer))
mem: ((7 integer)): 2643 <= 34
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 39
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 39
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2430 byte) (raw)) => l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 2645 <= #\l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 34
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2732 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2732
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2732 <= #\l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 39
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 40 => ((6 integer))
mem: ((6 integer)): 2642 <= 40
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 34
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 35 => ((7 integer))
mem: ((7 integer)): 2643 <= 35
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 40
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 40
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2431 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2645 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 35
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2733 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2733
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2733 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 40
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 41 => ((6 integer))
mem: ((6 integer)): 2642 <= 41
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 35
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 36 => ((7 integer))
mem: ((7 integer)): 2643 <= 36
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 41
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 41
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2432 byte) (raw)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 2645 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 36
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2734 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2734
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2734 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 41
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 42 => ((6 integer))
mem: ((6 integer)): 2642 <= 42
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 36
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 37 => ((7 integer))
mem: ((7 integer)): 2643 <= 37
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 42
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 42
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2433 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 2645 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 37
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2735 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2735
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2735 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 42
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 43 => ((6 integer))
mem: ((6 integer)): 2642 <= 43
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 37
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 38 => ((7 integer))
mem: ((7 integer)): 2643 <= 38
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 43
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 43
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2434 byte) (raw)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 2645 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 38
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2736 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2736
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2736 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 43
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 44 => ((6 integer))
mem: ((6 integer)): 2642 <= 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 38
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 39 => ((7 integer))
mem: ((7 integer)): 2643 <= 39
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 44
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 44
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2435 byte) (raw)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 2645 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 39
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2737 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2737
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2737 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 45 => ((6 integer))
mem: ((6 integer)): 2642 <= 45
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 39
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 40 => ((7 integer))
mem: ((7 integer)): 2643 <= 40
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
schedule: scheduling string-copy/split-first/parse-instruction-trace/parse-traces/main for further processing
schedule: string-copy/split-first/parse-instruction-trace/parse-traces/main
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 45
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 45
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2436 byte) (raw)) => l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 2645 <= #\l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 40
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2738 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2738
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2738 <= #\l
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 45
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 46 => ((6 integer))
mem: ((6 integer)): 2642 <= 46
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 40
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 41 => ((7 integer))
mem: ((7 integer)): 2643 <= 41
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 46
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 46
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2437 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2645 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 41
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2739 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2739
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2739 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 46
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 47 => ((6 integer))
mem: ((6 integer)): 2642 <= 47
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 41
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 42 => ((7 integer))
mem: ((7 integer)): 2643 <= 42
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 47
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 47
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2438 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2645 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 42
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2740 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2740
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2740 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 47
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 48 => ((6 integer))
mem: ((6 integer)): 2642 <= 48
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 42
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 43 => ((7 integer))
mem: ((7 integer)): 2643 <= 43
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 48
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2644 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 48
array-len: ((2390 string) (raw))
mem: ((2390 integer) (raw)) => 49
mem: ((2439 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 2645 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 43
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 2741 => ((10 character-address))
mem: ((10 character-address)): 2646 <= 2741
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2741 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 48
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 49 => ((6 integer))
mem: ((6 integer)): 2642 <= 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 43
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 44 => ((7 integer))
mem: ((7 integer)): 2643 <= 44
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 49
mem: ((3 integer)) => 49
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 2644 <= t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 2697
run: split-first/parse-instruction-trace/parse-traces/main 12: 2697 => ((6 string-address))
mem: ((6 string-address)): 2513 <= 2697
run: split-first/parse-instruction-trace/parse-traces/main 13: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 2630
mem: ((6 string-address)) => 2697
run: parse-instruction-trace/parse-traces/main 4: 2630 => ((4 string-address))
mem: ((4 string-address)): 2476 <= 2630
run: parse-instruction-trace/parse-traces/main 4: 2697 => ((5 string-address))
mem: ((5 string-address)): 2477 <= 2697
run: parse-instruction-trace/parse-traces/main 5: (((6 string-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((0 offset)))
run: parse-instruction-trace/parse-traces/main 5: 2502 => ((6 string-address-array-address-address))
mem: ((6 string-address-array-address-address)): 2478 <= 2502
run: parse-instruction-trace/parse-traces/main 6: (((6 string-address-array-address-address) (deref)) <- ((split)) ((4 string-address)) ((/ literal)))
mem: ((4 string-address)) => 2630
run: split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split/parse-instruction-trace/parse-traces/main 0: 2742 => ((default-space space-address))
run: split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2630 #\/)
run: split/parse-instruction-trace/parse-traces/main 1: 2630 => ((1 string-address))
mem: ((1 string-address)): 2744 <= 2630
run: split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2630 #\/)
run: split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 2745 <= #\/
run: split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2630 integer) (raw)) => 4
run: split/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 2746 <= 4
run: split/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 2747 <= nil
run: split/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => nil
run: split/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((1 literal)))
run: split/parse-instruction-trace/parse-traces/main 8: 1 => ((6 integer))
mem: ((6 integer)): 2749 <= 1
run: split/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 2750 <= 0
run: split/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((7 integer)))
mem: ((1 string-address)) => 2630
mem: ((2 character)) => /
mem: ((7 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split/parse-instruction-trace/parse-traces/main 0: 2773 => ((default-space space-address))
run: find-next/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2630 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 1: 2630 => ((1 string-address))
mem: ((1 string-address)): 2775 <= 2630
run: find-next/split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2630 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 2776 <= #\/
run: find-next/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2630 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 2777 <= 0
run: find-next/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2630 integer) (raw)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 2778 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2779 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
mem: ((2631 byte) (raw)) => m
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 2780 <= #\m
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2781 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 2777 <= 1
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2779 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
mem: ((2632 byte) (raw)) => a
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 2780 <= #\a
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2781 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 2777 <= 2
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2779 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
mem: ((2633 byte) (raw)) => i
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 2780 <= #\i
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2781 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 2777 <= 3
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2779 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
mem: ((2634 byte) (raw)) => n
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 2780 <= #\n
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2781 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 2777 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 2779 <= t
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/split/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 10: 4 => ((7 integer))
mem: ((7 integer)): 2750 <= 4
run: split/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((3 integer)))
mem: ((7 integer)) => 4
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 2751 <= t
run: split/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((3 offset)))
mem: ((8 boolean)) => t
run: split/parse-instruction-trace/parse-traces/main 16: (((5 string-address-array-address)) <- ((new)) ((string-address-array literal)) ((6 integer)))
mem: ((6 integer)) => 1
run: split/parse-instruction-trace/parse-traces/main 16: 2804 => ((5 string-address-array-address))
mem: ((5 string-address-array-address)): 2748 <= 2804
run: split/parse-instruction-trace/parse-traces/main 17: (((9 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 17: 0 => ((9 integer))
mem: ((9 integer)): 2752 <= 0
run: split/parse-instruction-trace/parse-traces/main 18: (((10 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 18: 0 => ((10 integer))
mem: ((10 integer)): 2753 <= 0
run: split/parse-instruction-trace/parse-traces/main 19: (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer)))
mem: ((10 integer)) => 0
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 19: nil => ((8 boolean))
mem: ((8 boolean)): 2751 <= nil
run: split/parse-instruction-trace/parse-traces/main 20: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: split/parse-instruction-trace/parse-traces/main 21: (((11 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((10 integer)))
mem: ((1 string-address)) => 2630
mem: ((2 character)) => /
mem: ((10 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split/parse-instruction-trace/parse-traces/main 0: 2806 => ((default-space space-address))
run: find-next/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2630 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 1: 2630 => ((1 string-address))
mem: ((1 string-address)): 2808 <= 2630
run: find-next/split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2630 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 2809 <= #\/
run: find-next/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2630 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 2810 <= 0
run: find-next/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2630 integer) (raw)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 2811 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2812 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
mem: ((2631 byte) (raw)) => m
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 2813 <= #\m
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2814 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 2810 <= 1
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2812 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
mem: ((2632 byte) (raw)) => a
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 2813 <= #\a
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2814 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 2810 <= 2
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2812 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
mem: ((2633 byte) (raw)) => i
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 2813 <= #\i
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2814 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 2810 <= 3
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 2812 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
mem: ((2634 byte) (raw)) => n
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 2813 <= #\n
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2814 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 2810 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 2812 <= t
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/split/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 21: 4 => ((11 integer))
mem: ((11 integer)): 2754 <= 4
run: split/parse-instruction-trace/parse-traces/main 22: (((12 string-address-address)) <- ((index-address)) ((5 string-address-array-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 0
array-len: ((2804 string-address-array) (raw))
mem: ((2804 integer) (raw)) => 1
run: split/parse-instruction-trace/parse-traces/main 22: 2805 => ((12 string-address-address))
mem: ((12 string-address-address)): 2755 <= 2805
run: split/parse-instruction-trace/parse-traces/main 23: (((12 string-address-address) (deref)) <- ((string-copy)) ((1 string-address)) ((10 integer)) ((11 integer)))
mem: ((1 string-address)) => 2630
mem: ((10 integer)) => 0
mem: ((11 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 0: 2837 => ((default-space space-address))
run: string-copy/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2630 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 1: 2630 => ((1 string-address))
mem: ((1 string-address)): 2839 <= 2630
run: string-copy/split/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2630 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 2840 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2630 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 2841 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2630 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 2842 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 0: 2868 => ((default-space space-address))
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (4 4)
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 1: 4 => ((1 integer))
mem: ((1 integer)): 2870 <= 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4 4)
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 2: 4 => ((2 integer))
mem: ((2 integer)): 2871 <= 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 4
mem: ((2 integer)) => 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 2872 <= nil
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 5: 4 => ((3 integer))
mem: ((3 integer)): 2841 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 4
mem: ((2 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 2842 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 7: 2899 => ((5 string-address))
mem: ((5 string-address)): 2843 <= 2899
run: string-copy/split/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 2844 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 2845 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2846 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
mem: ((2631 byte) (raw)) => m
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 2847 <= #\m
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2899 string) (raw))
mem: ((2899 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 2900 => ((10 character-address))
mem: ((10 character-address)): 2848 <= 2900
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2900 <= #\m
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 2844 <= 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 2845 <= 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2846 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
mem: ((2632 byte) (raw)) => a
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 2847 <= #\a
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2899 string) (raw))
mem: ((2899 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 2901 => ((10 character-address))
mem: ((10 character-address)): 2848 <= 2901
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2901 <= #\a
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 2844 <= 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 2845 <= 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2846 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
mem: ((2633 byte) (raw)) => i
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 2847 <= #\i
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((2899 string) (raw))
mem: ((2899 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 2902 => ((10 character-address))
mem: ((10 character-address)): 2848 <= 2902
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2902 <= #\i
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 2844 <= 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 2845 <= 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 2846 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((2630 string) (raw))
mem: ((2630 integer) (raw)) => 4
mem: ((2634 byte) (raw)) => n
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 2847 <= #\n
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((2899 string) (raw))
mem: ((2899 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 2903 => ((10 character-address))
mem: ((10 character-address)): 2848 <= 2903
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 2903 <= #\n
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 2844 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 2845 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 2846 <= t
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 2899
run: split/parse-instruction-trace/parse-traces/main 23: 2899 => ((12 string-address-address) (deref))
mem: ((12 string-address-address) (deref)): 2805 <= 2899
run: split/parse-instruction-trace/parse-traces/main 24: (((10 integer)) <- ((add)) ((11 integer)) ((1 literal)))
mem: ((11 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 24: 5 => ((10 integer))
mem: ((10 integer)): 2753 <= 5
run: split/parse-instruction-trace/parse-traces/main 25: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
mem: ((9 integer)) => 0
run: split/parse-instruction-trace/parse-traces/main 25: 1 => ((9 integer))
mem: ((9 integer)): 2752 <= 1
run: split/parse-instruction-trace/parse-traces/main 26: (((jump)) ((-8 offset)))
run: split/parse-instruction-trace/parse-traces/main 19: (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer)))
mem: ((10 integer)) => 5
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 19: t => ((8 boolean))
mem: ((8 boolean)): 2751 <= t
run: split/parse-instruction-trace/parse-traces/main 20: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: split/parse-instruction-trace/parse-traces/main 27: (((reply)) ((5 string-address-array-address)))
mem: ((5 string-address-array-address)) => 2804
run: parse-instruction-trace/parse-traces/main 6: 2804 => ((6 string-address-array-address-address) (deref))
mem: ((6 string-address-array-address-address) (deref)): 2502 <= 2804
run: parse-instruction-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((1 offset)))
run: parse-instruction-trace/parse-traces/main 7: 2503 => ((7 string-address-address))
mem: ((7 string-address-address)): 2479 <= 2503
run: parse-instruction-trace/parse-traces/main 8: (((8 string-address)) <- ((new)) : )
run: parse-instruction-trace/parse-traces/main 8: 2904 => ((8 string-address))
mem: ((8 string-address)): 2480 <= 2904
run: parse-instruction-trace/parse-traces/main 9: (((7 string-address-address) (deref)) ((5 string-address)) <- ((split-first-at-substring)) ((5 string-address)) ((8 string-address)))
mem: ((5 string-address)) => 2697
mem: ((8 string-address)) => 2904
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 2907 => ((default-space space-address))
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2697 2904)
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2697 => ((1 string-address))
mem: ((1 string-address)): 2909 <= 2697
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2697 2904)
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 2904 => ((2 string-address))
mem: ((2 string-address)): 2910 <= 2904
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2697 integer) (raw)) => 44
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 44 => ((3 integer))
mem: ((3 integer)): 2911 <= 44
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 44
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 2912 <= nil
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 2697
mem: ((2 string-address)) => 2904
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 2938 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2697 2904 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2697 => ((1 string-address))
mem: ((1 string-address)): 2940 <= 2697
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2697 2904 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 2904 => ((2 string-address))
mem: ((2 string-address)): 2941 <= 2904
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2697 2904 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 2942 <= 0
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((2904 string) (raw))
mem: ((2904 integer) (raw)) => 2
mem: ((2905 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 2943 <= #\:
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2697 integer) (raw)) => 44
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 44 => ((5 integer))
mem: ((5 integer)): 2944 <= 44
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 44
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 2945 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 2697
mem: ((2 string-address)) => 2904
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 2969 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2697 2904 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2697 => ((1 string-address))
mem: ((1 string-address)): 2971 <= 2697
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2697 2904 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 2904 => ((2 string-address))
mem: ((2 string-address)): 2972 <= 2904
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2697 2904 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 2973 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2904 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 2974 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2697 integer) (raw)) => 44
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 44 => ((5 integer))
mem: ((5 integer)): 2975 <= 44
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 44
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 42 => ((5 integer))
mem: ((5 integer)): 2975 <= 42
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 42
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 2976 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 2977 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 2978 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2698 byte) (raw)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\0 => ((9 character))
mem: ((9 character)): 2979 <= #\0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2904 string) (raw))
mem: ((2904 integer) (raw)) => 2
mem: ((2905 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 2980 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => 0
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 2981 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 2946 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 2942 <= 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 2697
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3000 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2697 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2697 => ((1 string-address))
mem: ((1 string-address)): 3002 <= 2697
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (2697 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 3003 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2697 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 3004 <= 1
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2697 integer) (raw)) => 44
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 44 => ((4 integer))
mem: ((4 integer)): 3005 <= 44
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 44
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3006 <= nil
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2699 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 3007 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 3008 <= t
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: 1 => ((3 integer))
mem: ((3 integer)): 2942 <= 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 1
mem: ((5 integer)) => 44
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 2945 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 2697
mem: ((2 string-address)) => 2904
mem: ((3 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3031 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2697 2904 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2697 => ((1 string-address))
mem: ((1 string-address)): 3033 <= 2697
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (2697 2904 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 2904 => ((2 string-address))
mem: ((2 string-address)): 3034 <= 2904
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2697 2904 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 3035 <= 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2904 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 3036 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2697 integer) (raw)) => 44
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 44 => ((5 integer))
mem: ((5 integer)): 3037 <= 44
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 44
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 42 => ((5 integer))
mem: ((5 integer)): 3037 <= 42
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 1
mem: ((5 integer)) => 42
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 3038 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 3039 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 3040 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2699 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 3041 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((2904 string) (raw))
mem: ((2904 integer) (raw)) => 2
mem: ((2905 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 3042 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 3043 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: 2 => ((3 integer))
mem: ((3 integer)): 3035 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 3039 <= 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 3040 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2700 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 3041 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((2904 string) (raw))
mem: ((2904 integer) (raw)) => 2
mem: ((2906 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 3042 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 3043 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: 3 => ((3 integer))
mem: ((3 integer)): 3035 <= 3
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 3039 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 3040 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 2946 <= t
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 1
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 1 => ((7 integer))
mem: ((7 integer)): 2915 <= 1
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 2697
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3062 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2697 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2697 => ((1 string-address))
mem: ((1 string-address)): 3064 <= 2697
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2697 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 3065 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2697 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 3066 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 44 => ((4 integer))
mem: ((4 integer)): 3067 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 44
mem: ((3 integer)) => 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3093 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (44 1)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 44 => ((1 integer))
mem: ((1 integer)): 3095 <= 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (44 1)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 1 => ((2 integer))
mem: ((2 integer)): 3096 <= 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 44
mem: ((2 integer)) => 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3097 <= nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 1 => ((3 integer))
mem: ((3 integer)): 3066 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 1
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 1 => ((4 integer))
mem: ((4 integer)): 3067 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: 3124 => ((5 string-address))
mem: ((5 string-address)): 3068 <= 3124
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 3069 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 3070 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3071 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2698 byte) (raw)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 3072 <= #\0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3124 string) (raw))
mem: ((3124 integer) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3125 => ((10 character-address))
mem: ((10 character-address)): 3073 <= 3125
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3125 <= #\0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 3069 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 3070 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 3071 <= t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 3124
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 3124 => ((5 string-address))
mem: ((5 string-address)): 2913 <= 3124
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((2904 integer) (raw)) => 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 2916 <= 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 1
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 12: 3 => ((7 integer))
mem: ((7 integer)): 2915 <= 3
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 2697
mem: ((7 integer)) => 3
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3126 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (2697 3 44)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 2697 => ((1 string-address))
mem: ((1 string-address)): 3128 <= 2697
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (2697 3 44)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 3129 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (2697 3 44)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 44 => ((3 integer))
mem: ((3 integer)): 3130 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((2697 integer) (raw)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 44 => ((4 integer))
mem: ((4 integer)): 3131 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 44
mem: ((3 integer)) => 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 3157 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (44 44)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 44 => ((1 integer))
mem: ((1 integer)): 3159 <= 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (44 44)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 44 => ((2 integer))
mem: ((2 integer)): 3160 <= 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 44
mem: ((2 integer)) => 44
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3161 <= nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 44 => ((3 integer))
mem: ((3 integer)): 3130 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 44
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 41 => ((4 integer))
mem: ((4 integer)): 3131 <= 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: 3188 => ((5 string-address))
mem: ((5 string-address)): 3132 <= 3188
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: 3 => ((6 integer))
mem: ((6 integer)): 3133 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 3134 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2701 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3136 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3189 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3189
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3189 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 3133 <= 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 3134 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 4
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2702 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3136 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3190 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3190
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3190 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 5 => ((6 integer))
mem: ((6 integer)): 3133 <= 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 3134 <= 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2703 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3136 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3191 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3191
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3191 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 3133 <= 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 3134 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2704 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 3136 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3192 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3192
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3192 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 3133 <= 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 3134 <= 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2705 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3136 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3193 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3193
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3193 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 3133 <= 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 3134 <= 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2706 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 3136 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3194 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3194
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3194 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 3133 <= 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 3134 <= 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2707 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3136 <= #\n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3195 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3195
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3195 <= #\n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 3133 <= 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 3134 <= 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2708 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 3136 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3196 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3196
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3196 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 3133 <= 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 3134 <= 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2709 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3136 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3197 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3197
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3197 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 3133 <= 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 3134 <= 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2710 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 3136 <= #\g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3198 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3198
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3198 <= #\g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 3133 <= 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 3134 <= 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2711 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3136 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3199 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3199
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3199 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 3133 <= 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 3134 <= 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2712 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 3136 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3200 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3200
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3200 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 3133 <= 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 3134 <= 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2713 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3136 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3201 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3201
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3201 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 3133 <= 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 3134 <= 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2714 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3136 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3202 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3202
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3202 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 3133 <= 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 3134 <= 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2715 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3136 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3203 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3203
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3203 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 3133 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 3134 <= 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2716 byte) (raw)) => <
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 3136 <= #\<
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3204 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3204
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3204 <= #\<
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 3133 <= 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 3134 <= 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2717 byte) (raw)) => -
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\- => ((9 character))
mem: ((9 character)): 3136 <= #\-
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3205 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3205
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => -
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\- => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3205 <= #\-
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 3133 <= 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 3134 <= 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2718 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3136 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3206 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3206
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3206 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 3133 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 3134 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2719 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3136 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3207 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3207
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3207 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 3133 <= 22
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 3134 <= 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2720 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3136 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3208 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3208
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3208 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 3133 <= 23
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 3134 <= 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2721 byte) (raw)) => c
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\c => ((9 character))
mem: ((9 character)): 3136 <= #\c
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3209 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3209
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => c
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\c => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3209 <= #\c
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 3133 <= 24
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 3134 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2722 byte) (raw)) => o
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\o => ((9 character))
mem: ((9 character)): 3136 <= #\o
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3210 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3210
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => o
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\o => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3210 <= #\o
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 3133 <= 25
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 3134 <= 22
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2723 byte) (raw)) => p
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\p => ((9 character))
mem: ((9 character)): 3136 <= #\p
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3211 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3211
schedule: scheduling string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main for further processing
schedule: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => p
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\p => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3211 <= #\p
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 3133 <= 26
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 3134 <= 23
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2724 byte) (raw)) => y
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\y => ((9 character))
mem: ((9 character)): 3136 <= #\y
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3212 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3212
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => y
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\y => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3212 <= #\y
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 3133 <= 27
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 3134 <= 24
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2725 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3136 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3213 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3213
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3213 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 3133 <= 28
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 3134 <= 25
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2726 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3136 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3214 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3214
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3214 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 3133 <= 29
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 3134 <= 26
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2727 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3136 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3215 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3215
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3215 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 3133 <= 30
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 3134 <= 27
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2728 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3136 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3216 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3216
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3216 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 3133 <= 31
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 3134 <= 28
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 31
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2729 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3136 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3217 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3217
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3217 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 31
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 32 => ((6 integer))
mem: ((6 integer)): 3133 <= 32
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 3134 <= 29
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 32
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 32
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2730 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 3136 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3218 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3218
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3218 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 32
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 33 => ((6 integer))
mem: ((6 integer)): 3133 <= 33
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 3134 <= 30
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 33
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 33
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2731 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3136 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3219 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3219
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3219 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 33
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 34 => ((6 integer))
mem: ((6 integer)): 3133 <= 34
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 3134 <= 31
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 34
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 34
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2732 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 3136 <= #\l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 31
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3220 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3220
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3220 <= #\l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 34
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 35 => ((6 integer))
mem: ((6 integer)): 3133 <= 35
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 31
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 32 => ((7 integer))
mem: ((7 integer)): 3134 <= 32
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 35
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 35
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2733 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 3136 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 32
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3221 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3221
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3221 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 35
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 36 => ((6 integer))
mem: ((6 integer)): 3133 <= 36
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 32
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 33 => ((7 integer))
mem: ((7 integer)): 3134 <= 33
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 36
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 36
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2734 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 3136 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 33
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3222 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3222
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3222 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 36
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 37 => ((6 integer))
mem: ((6 integer)): 3133 <= 37
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 33
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 34 => ((7 integer))
mem: ((7 integer)): 3134 <= 34
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 37
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 37
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2735 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3136 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 34
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3223 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3223
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3223 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 37
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 38 => ((6 integer))
mem: ((6 integer)): 3133 <= 38
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 34
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 35 => ((7 integer))
mem: ((7 integer)): 3134 <= 35
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 38
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 38
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2736 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 3136 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 35
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3224 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3224
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3224 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 38
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 39 => ((6 integer))
mem: ((6 integer)): 3133 <= 39
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 35
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 36 => ((7 integer))
mem: ((7 integer)): 3134 <= 36
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 39
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 39
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2737 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 3136 <= #\a
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 36
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3225 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3225
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3225 <= #\a
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 39
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 40 => ((6 integer))
mem: ((6 integer)): 3133 <= 40
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 36
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 37 => ((7 integer))
mem: ((7 integer)): 3134 <= 37
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 40
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 40
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2738 byte) (raw)) => l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\l => ((9 character))
mem: ((9 character)): 3136 <= #\l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 37
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3226 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3226
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\l => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3226 <= #\l
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 40
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 41 => ((6 integer))
mem: ((6 integer)): 3133 <= 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 37
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 38 => ((7 integer))
mem: ((7 integer)): 3134 <= 38
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 41
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 41
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2739 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3136 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 38
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3227 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3227
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3227 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 42 => ((6 integer))
mem: ((6 integer)): 3133 <= 42
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 38
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 39 => ((7 integer))
mem: ((7 integer)): 3134 <= 39
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 42
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 42
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2740 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3136 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 39
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3228 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3228
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3228 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 42
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 43 => ((6 integer))
mem: ((6 integer)): 3133 <= 43
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 39
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 40 => ((7 integer))
mem: ((7 integer)): 3134 <= 40
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 43
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3135 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 43
array-len: ((2697 string) (raw))
mem: ((2697 integer) (raw)) => 44
mem: ((2741 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3136 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 40
array-len: ((3188 string) (raw))
mem: ((3188 integer) (raw)) => 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3229 => ((10 character-address))
mem: ((10 character-address)): 3137 <= 3229
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3229 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 43
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 44 => ((6 integer))
mem: ((6 integer)): 3133 <= 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 40
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 41 => ((7 integer))
mem: ((7 integer)): 3134 <= 41
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 44
mem: ((3 integer)) => 44
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 3135 <= t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 3188
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 3188 => ((6 string-address))
mem: ((6 string-address)): 2914 <= 3188
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 3124
mem: ((6 string-address)) => 3188
run: parse-instruction-trace/parse-traces/main 9: 3124 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 2503 <= 3124
run: parse-instruction-trace/parse-traces/main 9: 3188 => ((5 string-address))
mem: ((5 string-address)): 2477 <= 3188
run: parse-instruction-trace/parse-traces/main 10: (((9 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((2 offset)))
run: parse-instruction-trace/parse-traces/main 10: 2504 => ((9 string-address-address))
mem: ((9 string-address-address)): 2481 <= 2504
run: parse-instruction-trace/parse-traces/main 11: (((9 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 3188
run: parse-instruction-trace/parse-traces/main 11: 3188 => ((9 string-address-address) (deref))
mem: ((9 string-address-address) (deref)): 2504 <= 3188
run: parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 instruction-trace-address)))
mem: ((3 instruction-trace-address)) => 2502
run: parse-traces/main 18: 2502 => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 1197 <= 2502
run: parse-traces/main 19: (((2 buffer-address)) <- ((append)) ((2 buffer-address)) ((3 instruction-trace-address)))
mem: ((2 buffer-address)) => 1255
mem: ((3 instruction-trace-address)) => 2502
run: append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/parse-traces/main 0: 3230 => ((default-space space-address))
run: append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1255 2502)
run: append/parse-traces/main 1: 1255 => ((1 buffer-address))
mem: ((1 buffer-address)): 3232 <= 1255
run: append/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1255 2502)
run: append/parse-traces/main 2: 2502 => ((2 character))
mem: ((2 character)): 3233 <= 2502
run: append/parse-traces/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1255
run: buffer-full?/append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/parse-traces/main 0: 3261 => ((default-space space-address))
run: buffer-full?/append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1255)
run: buffer-full?/append/parse-traces/main 1: 1255 => ((1 buffer-address))
mem: ((1 buffer-address)): 3263 <= 1255
run: buffer-full?/append/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1255 integer) (raw)) => 0
run: buffer-full?/append/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 3264 <= 0
run: buffer-full?/append/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1256 string-address) (raw)) => 1257
run: buffer-full?/append/parse-traces/main 3: 1257 => ((3 string-address))
mem: ((3 string-address)): 3265 <= 1257
run: buffer-full?/append/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1257 integer) (raw)) => 30
run: buffer-full?/append/parse-traces/main 4: 30 => ((4 integer))
mem: ((4 integer)): 3266 <= 30
run: buffer-full?/append/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 30
run: buffer-full?/append/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3267 <= nil
run: buffer-full?/append/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3234 <= nil
run: append/parse-traces/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/parse-traces/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/parse-traces/main 6: 1255 => ((4 integer-address))
mem: ((4 integer-address)): 3235 <= 1255
run: append/parse-traces/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1256 string-address) (raw)) => 1257
run: append/parse-traces/main 7: 1257 => ((5 string-address))
mem: ((5 string-address)): 3236 <= 1257
run: append/parse-traces/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((1257 string) (raw))
mem: ((1257 integer) (raw)) => 30
run: append/parse-traces/main 8: 1258 => ((6 byte-address))
mem: ((6 byte-address)): 3237 <= 1258
run: append/parse-traces/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 2502
run: append/parse-traces/main 9: 2502 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 1258 <= 2502
run: append/parse-traces/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/parse-traces/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1255 <= 1
run: append/parse-traces/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 1255
run: parse-traces/main 19: 1255 => ((2 buffer-address))
mem: ((2 buffer-address)): 1196 <= 1255
run: parse-traces/main 20: (((jump)) ((-15 offset)))
run: parse-traces/main 6: next-line
run: parse-traces/main 7: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
mem: ((1 stream-address)) => 1191
run: end-of-stream?/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: end-of-stream?/parse-traces/main 0: 3292 => ((default-space space-address))
run: end-of-stream?/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1191)
run: end-of-stream?/parse-traces/main 1: 1191 => ((1 stream-address))
mem: ((1 stream-address)): 3294 <= 1191
run: end-of-stream?/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 stream-address) (deref)) ((0 offset)))
mem: ((1191 integer) (raw)) => 70
run: end-of-stream?/parse-traces/main 2: 70 => ((2 integer))
mem: ((2 integer)): 3295 <= 70
run: end-of-stream?/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1192 string-address) (raw)) => 1031
run: end-of-stream?/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 3296 <= 1031
run: end-of-stream?/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: end-of-stream?/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 3297 <= 128
run: end-of-stream?/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 70
mem: ((4 integer)) => 128
run: end-of-stream?/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3298 <= nil
run: end-of-stream?/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: parse-traces/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1200 <= nil
run: parse-traces/main 8: (((jump-if)) ((6 boolean)) ((15 offset)))
mem: ((6 boolean)) => nil
run: parse-traces/main 9: (((7 string-address)) <- ((read-line)) ((1 stream-address)))
mem: ((1 stream-address)) => 1191
run: read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-line/parse-traces/main 0: 3323 => ((default-space space-address))
run: read-line/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1191)
run: read-line/parse-traces/main 1: 1191 => ((1 stream-address))
mem: ((1 stream-address)): 3325 <= 1191
run: read-line/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 stream-address) (deref)) ((0 offset)))
run: read-line/parse-traces/main 2: 1191 => ((2 integer-address))
mem: ((2 integer-address)): 3326 <= 1191
run: read-line/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1192 string-address) (raw)) => 1031
run: read-line/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 3327 <= 1031
run: read-line/parse-traces/main 4: (((4 integer)) <- ((find-next)) ((3 string-address)) ((
 literal)) ((2 integer-address) (deref)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 70
run: find-next/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/read-line/parse-traces/main 0: 3354 => ((default-space space-address))
run: find-next/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 #\newline 70)
run: find-next/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 3356 <= 1031
run: find-next/read-line/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1031 #\newline 70)
run: find-next/read-line/parse-traces/main 2: #\newline => ((2 character))
mem: ((2 character)): 3357 <= #\newline
run: find-next/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 #\newline 70)
run: find-next/read-line/parse-traces/main 3: 70 => ((3 integer))
mem: ((3 integer)): 3358 <= 70
run: find-next/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: find-next/read-line/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 3359 <= 128
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 70
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 70
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1102 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 3361 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 70
run: find-next/read-line/parse-traces/main 10: 71 => ((3 integer))
mem: ((3 integer)): 3358 <= 71
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 71
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 71
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1103 byte) (raw)) => u
run: find-next/read-line/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 3361 <= #\u
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 71
run: find-next/read-line/parse-traces/main 10: 72 => ((3 integer))
mem: ((3 integer)): 3358 <= 72
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 72
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 72
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1104 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 3361 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 72
run: find-next/read-line/parse-traces/main 10: 73 => ((3 integer))
mem: ((3 integer)): 3358 <= 73
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 73
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 73
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1105 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 3361 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 73
run: find-next/read-line/parse-traces/main 10: 74 => ((3 integer))
mem: ((3 integer)): 3358 <= 74
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 74
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 74
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1106 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 3361 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 74
run: find-next/read-line/parse-traces/main 10: 75 => ((3 integer))
mem: ((3 integer)): 3358 <= 75
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 75
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 75
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1107 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 3361 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 75
run: find-next/read-line/parse-traces/main 10: 76 => ((3 integer))
mem: ((3 integer)): 3358 <= 76
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 76
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 76
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1108 byte) (raw)) => a
run: find-next/read-line/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 3361 <= #\a
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 76
run: find-next/read-line/parse-traces/main 10: 77 => ((3 integer))
mem: ((3 integer)): 3358 <= 77
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 77
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 77
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1109 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 3361 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 77
run: find-next/read-line/parse-traces/main 10: 78 => ((3 integer))
mem: ((3 integer)): 3358 <= 78
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 78
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 78
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1110 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 3361 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 78
run: find-next/read-line/parse-traces/main 10: 79 => ((3 integer))
mem: ((3 integer)): 3358 <= 79
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 79
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 79
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1111 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 3361 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 79
run: find-next/read-line/parse-traces/main 10: 80 => ((3 integer))
mem: ((3 integer)): 3358 <= 80
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 80
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 80
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1112 byte) (raw)) => 0
run: find-next/read-line/parse-traces/main 7: #\0 => ((6 byte))
mem: ((6 byte)): 3361 <= #\0
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 0
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 80
run: find-next/read-line/parse-traces/main 10: 81 => ((3 integer))
mem: ((3 integer)): 3358 <= 81
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 81
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 81
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1113 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 3361 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 81
run: find-next/read-line/parse-traces/main 10: 82 => ((3 integer))
mem: ((3 integer)): 3358 <= 82
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 82
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 82
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1114 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 3361 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 82
run: find-next/read-line/parse-traces/main 10: 83 => ((3 integer))
mem: ((3 integer)): 3358 <= 83
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 83
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 83
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1115 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 3361 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 83
run: find-next/read-line/parse-traces/main 10: 84 => ((3 integer))
mem: ((3 integer)): 3358 <= 84
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 84
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 84
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1116 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 3361 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 84
run: find-next/read-line/parse-traces/main 10: 85 => ((3 integer))
mem: ((3 integer)): 3358 <= 85
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 85
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 85
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1117 byte) (raw)) => =
run: find-next/read-line/parse-traces/main 7: #\= => ((6 byte))
mem: ((6 byte)): 3361 <= #\=
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => =
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 85
run: find-next/read-line/parse-traces/main 10: 86 => ((3 integer))
mem: ((3 integer)): 3358 <= 86
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 86
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 86
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1118 byte) (raw)) => >
run: find-next/read-line/parse-traces/main 7: #\> => ((6 byte))
mem: ((6 byte)): 3361 <= #\>
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => >
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 86
run: find-next/read-line/parse-traces/main 10: 87 => ((3 integer))
mem: ((3 integer)): 3358 <= 87
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 87
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 87
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1119 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 3361 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 87
run: find-next/read-line/parse-traces/main 10: 88 => ((3 integer))
mem: ((3 integer)): 3358 <= 88
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 88
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 88
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1120 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 3361 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 88
run: find-next/read-line/parse-traces/main 10: 89 => ((3 integer))
mem: ((3 integer)): 3358 <= 89
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 89
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 89
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1121 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 3361 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 89
run: find-next/read-line/parse-traces/main 10: 90 => ((3 integer))
mem: ((3 integer)): 3358 <= 90
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 90
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 90
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1122 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 3361 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 90
run: find-next/read-line/parse-traces/main 10: 91 => ((3 integer))
mem: ((3 integer)): 3358 <= 91
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 91
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 91
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1123 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 3361 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 91
run: find-next/read-line/parse-traces/main 10: 92 => ((3 integer))
mem: ((3 integer)): 3358 <= 92
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 92
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 92
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1124 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 3361 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 92
run: find-next/read-line/parse-traces/main 10: 93 => ((3 integer))
mem: ((3 integer)): 3358 <= 93
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 93
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 93
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1125 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 3361 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 93
run: find-next/read-line/parse-traces/main 10: 94 => ((3 integer))
mem: ((3 integer)): 3358 <= 94
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 94
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 94
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1126 byte) (raw)) => t
run: find-next/read-line/parse-traces/main 7: #\t => ((6 byte))
mem: ((6 byte)): 3361 <= #\t
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => t
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 94
run: find-next/read-line/parse-traces/main 10: 95 => ((3 integer))
mem: ((3 integer)): 3358 <= 95
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 95
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 95
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1127 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 3361 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 95
run: find-next/read-line/parse-traces/main 10: 96 => ((3 integer))
mem: ((3 integer)): 3358 <= 96
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 96
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 96
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1128 byte) (raw)) => g
run: find-next/read-line/parse-traces/main 7: #\g => ((6 byte))
mem: ((6 byte)): 3361 <= #\g
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => g
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 96
run: find-next/read-line/parse-traces/main 10: 97 => ((3 integer))
mem: ((3 integer)): 3358 <= 97
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 97
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 97
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1129 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 3361 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 97
run: find-next/read-line/parse-traces/main 10: 98 => ((3 integer))
mem: ((3 integer)): 3358 <= 98
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 98
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 98
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1130 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 3361 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 98
run: find-next/read-line/parse-traces/main 10: 99 => ((3 integer))
mem: ((3 integer)): 3358 <= 99
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 99
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 99
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1131 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 3361 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 99
run: find-next/read-line/parse-traces/main 10: 100 => ((3 integer))
mem: ((3 integer)): 3358 <= 100
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 100
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 100
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1132 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 3361 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3362 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 100
run: find-next/read-line/parse-traces/main 10: 101 => ((3 integer))
mem: ((3 integer)): 3358 <= 101
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 101
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3360 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 101
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1133 byte) (raw)) => 

run: find-next/read-line/parse-traces/main 7: #\newline => ((6 byte))
mem: ((6 byte)): 3361 <= #\newline
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 

mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 3362 <= t
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/read-line/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 101
run: read-line/parse-traces/main 4: 101 => ((4 integer))
mem: ((4 integer)): 3328 <= 101
run: read-line/parse-traces/main 5: (((5 string-address)) <- ((string-copy)) ((3 string-address)) ((2 integer-address) (deref)) ((4 integer)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 70
mem: ((4 integer)) => 101
run: string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/read-line/parse-traces/main 0: 3385 => ((default-space space-address))
run: string-copy/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 70 101)
run: string-copy/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 3387 <= 1031
run: string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1031 70 101)
run: string-copy/read-line/parse-traces/main 2: 70 => ((2 integer))
mem: ((2 integer)): 3388 <= 70
run: string-copy/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 70 101)
run: string-copy/read-line/parse-traces/main 3: 101 => ((3 integer))
mem: ((3 integer)): 3389 <= 101
run: string-copy/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: string-copy/read-line/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 3390 <= 128
run: string-copy/read-line/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 128
mem: ((3 integer)) => 101
run: min/string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/read-line/parse-traces/main 0: 3416 => ((default-space space-address))
run: min/string-copy/read-line/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (128 101)
run: min/string-copy/read-line/parse-traces/main 1: 128 => ((1 integer))
mem: ((1 integer)): 3418 <= 128
run: min/string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (128 101)
run: min/string-copy/read-line/parse-traces/main 2: 101 => ((2 integer))
mem: ((2 integer)): 3419 <= 101
run: min/string-copy/read-line/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 128
mem: ((2 integer)) => 101
run: min/string-copy/read-line/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3420 <= nil
run: min/string-copy/read-line/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/read-line/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 101
run: string-copy/read-line/parse-traces/main 5: 101 => ((3 integer))
mem: ((3 integer)): 3389 <= 101
run: string-copy/read-line/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 101
mem: ((2 integer)) => 70
run: string-copy/read-line/parse-traces/main 6: 31 => ((4 integer))
mem: ((4 integer)): 3390 <= 31
run: string-copy/read-line/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 31
run: string-copy/read-line/parse-traces/main 7: 3447 => ((5 string-address))
mem: ((5 string-address)): 3391 <= 3447
run: string-copy/read-line/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 70
run: string-copy/read-line/parse-traces/main 8: 70 => ((6 integer))
mem: ((6 integer)): 3392 <= 70
run: string-copy/read-line/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/read-line/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 3393 <= 0
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 70
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 70
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1102 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 3395 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3448 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3448
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3448 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 70
run: string-copy/read-line/parse-traces/main 15: 71 => ((6 integer))
mem: ((6 integer)): 3392 <= 71
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/read-line/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 3393 <= 1
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 71
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 71
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1103 byte) (raw)) => u
run: string-copy/read-line/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 3395 <= #\u
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3449 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3449
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/read-line/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3449 <= #\u
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 71
run: string-copy/read-line/parse-traces/main 15: 72 => ((6 integer))
mem: ((6 integer)): 3392 <= 72
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/read-line/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 3393 <= 2
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 72
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 72
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1104 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3395 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3450 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3450
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3450 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 72
run: string-copy/read-line/parse-traces/main 15: 73 => ((6 integer))
mem: ((6 integer)): 3392 <= 73
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/read-line/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 3393 <= 3
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 73
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 73
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1105 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 3395 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3451 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3451
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3451 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 73
run: string-copy/read-line/parse-traces/main 15: 74 => ((6 integer))
mem: ((6 integer)): 3392 <= 74
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/read-line/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 3393 <= 4
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 74
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 74
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1106 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3395 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3452 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3452
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3452 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 74
run: string-copy/read-line/parse-traces/main 15: 75 => ((6 integer))
mem: ((6 integer)): 3392 <= 75
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/read-line/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 3393 <= 5
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 75
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 75
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1107 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 3395 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3453 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3453
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3453 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 75
run: string-copy/read-line/parse-traces/main 15: 76 => ((6 integer))
mem: ((6 integer)): 3392 <= 76
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/read-line/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 3393 <= 6
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 76
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 76
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1108 byte) (raw)) => a
run: string-copy/read-line/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 3395 <= #\a
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3454 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3454
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/read-line/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3454 <= #\a
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 76
run: string-copy/read-line/parse-traces/main 15: 77 => ((6 integer))
mem: ((6 integer)): 3392 <= 77
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/read-line/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 3393 <= 7
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 77
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 77
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1109 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 3395 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3455 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3455
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3455 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 77
run: string-copy/read-line/parse-traces/main 15: 78 => ((6 integer))
mem: ((6 integer)): 3392 <= 78
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/read-line/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 3393 <= 8
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
schedule: scheduling string-copy/read-line/parse-traces/main for further processing
schedule: string-copy/read-line/parse-traces/main
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 78
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 78
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1110 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3395 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3456 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3456
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3456 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 78
run: string-copy/read-line/parse-traces/main 15: 79 => ((6 integer))
mem: ((6 integer)): 3392 <= 79
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/read-line/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 3393 <= 9
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 79
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 79
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1111 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3395 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3457 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3457
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3457 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 79
run: string-copy/read-line/parse-traces/main 15: 80 => ((6 integer))
mem: ((6 integer)): 3392 <= 80
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/read-line/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 3393 <= 10
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 80
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 80
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1112 byte) (raw)) => 0
run: string-copy/read-line/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 3395 <= #\0
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3458 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3458
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/read-line/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3458 <= #\0
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 80
run: string-copy/read-line/parse-traces/main 15: 81 => ((6 integer))
mem: ((6 integer)): 3392 <= 81
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/read-line/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 3393 <= 11
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 81
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 81
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1113 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 3395 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3459 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3459
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3459 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 81
run: string-copy/read-line/parse-traces/main 15: 82 => ((6 integer))
mem: ((6 integer)): 3392 <= 82
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/read-line/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 3393 <= 12
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 82
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 82
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1114 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3395 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3460 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3460
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3460 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 82
run: string-copy/read-line/parse-traces/main 15: 83 => ((6 integer))
mem: ((6 integer)): 3392 <= 83
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/read-line/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 3393 <= 13
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 83
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 83
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1115 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 3395 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3461 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3461
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3461 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 83
run: string-copy/read-line/parse-traces/main 15: 84 => ((6 integer))
mem: ((6 integer)): 3392 <= 84
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/read-line/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 3393 <= 14
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 84
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 84
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1116 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3395 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3462 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3462
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3462 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 84
run: string-copy/read-line/parse-traces/main 15: 85 => ((6 integer))
mem: ((6 integer)): 3392 <= 85
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/read-line/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 3393 <= 15
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 85
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 85
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1117 byte) (raw)) => =
run: string-copy/read-line/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 3395 <= #\=
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3463 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3463
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/read-line/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3463 <= #\=
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 85
run: string-copy/read-line/parse-traces/main 15: 86 => ((6 integer))
mem: ((6 integer)): 3392 <= 86
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/read-line/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 3393 <= 16
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 86
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 86
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1118 byte) (raw)) => >
run: string-copy/read-line/parse-traces/main 12: #\> => ((9 character))
mem: ((9 character)): 3395 <= #\>
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3464 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3464
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => >
run: string-copy/read-line/parse-traces/main 14: #\> => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3464 <= #\>
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 86
run: string-copy/read-line/parse-traces/main 15: 87 => ((6 integer))
mem: ((6 integer)): 3392 <= 87
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/read-line/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 3393 <= 17
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 87
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 87
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1119 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3395 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3465 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3465
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3465 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 87
run: string-copy/read-line/parse-traces/main 15: 88 => ((6 integer))
mem: ((6 integer)): 3392 <= 88
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/read-line/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 3393 <= 18
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 88
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 88
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1120 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3395 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3466 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3466
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3466 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 88
run: string-copy/read-line/parse-traces/main 15: 89 => ((6 integer))
mem: ((6 integer)): 3392 <= 89
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/read-line/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 3393 <= 19
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 89
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 89
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1121 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3395 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3467 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3467
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3467 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 89
run: string-copy/read-line/parse-traces/main 15: 90 => ((6 integer))
mem: ((6 integer)): 3392 <= 90
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/read-line/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 3393 <= 20
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 90
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 90
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1122 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 3395 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3468 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3468
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3468 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 90
run: string-copy/read-line/parse-traces/main 15: 91 => ((6 integer))
mem: ((6 integer)): 3392 <= 91
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/read-line/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 3393 <= 21
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 91
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 91
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1123 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3395 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3469 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3469
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3469 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 91
run: string-copy/read-line/parse-traces/main 15: 92 => ((6 integer))
mem: ((6 integer)): 3392 <= 92
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/read-line/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 3393 <= 22
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 92
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 92
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1124 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 3395 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3470 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3470
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3470 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 92
run: string-copy/read-line/parse-traces/main 15: 93 => ((6 integer))
mem: ((6 integer)): 3392 <= 93
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/read-line/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 3393 <= 23
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 93
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 93
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1125 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3395 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3471 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3471
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3471 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 93
run: string-copy/read-line/parse-traces/main 15: 94 => ((6 integer))
mem: ((6 integer)): 3392 <= 94
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/read-line/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 3393 <= 24
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 94
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 94
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1126 byte) (raw)) => t
run: string-copy/read-line/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 3395 <= #\t
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3472 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3472
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/read-line/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3472 <= #\t
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 94
run: string-copy/read-line/parse-traces/main 15: 95 => ((6 integer))
mem: ((6 integer)): 3392 <= 95
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/read-line/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 3393 <= 25
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 95
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 95
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1127 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3395 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3473 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3473
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3473 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 95
run: string-copy/read-line/parse-traces/main 15: 96 => ((6 integer))
mem: ((6 integer)): 3392 <= 96
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/read-line/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 3393 <= 26
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 96
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 96
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1128 byte) (raw)) => g
run: string-copy/read-line/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 3395 <= #\g
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 26
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3474 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3474
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/read-line/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3474 <= #\g
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 96
run: string-copy/read-line/parse-traces/main 15: 97 => ((6 integer))
mem: ((6 integer)): 3392 <= 97
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 26
run: string-copy/read-line/parse-traces/main 16: 27 => ((7 integer))
mem: ((7 integer)): 3393 <= 27
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 97
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 97
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1129 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3395 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 27
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3475 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3475
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3475 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 97
run: string-copy/read-line/parse-traces/main 15: 98 => ((6 integer))
mem: ((6 integer)): 3392 <= 98
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 27
run: string-copy/read-line/parse-traces/main 16: 28 => ((7 integer))
mem: ((7 integer)): 3393 <= 28
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 98
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 98
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1130 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 3395 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 28
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3476 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3476
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3476 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 98
run: string-copy/read-line/parse-traces/main 15: 99 => ((6 integer))
mem: ((6 integer)): 3392 <= 99
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 28
run: string-copy/read-line/parse-traces/main 16: 29 => ((7 integer))
mem: ((7 integer)): 3393 <= 29
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 99
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 99
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1131 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3395 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 29
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3477 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3477
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3477 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 99
run: string-copy/read-line/parse-traces/main 15: 100 => ((6 integer))
mem: ((6 integer)): 3392 <= 100
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 29
run: string-copy/read-line/parse-traces/main 16: 30 => ((7 integer))
mem: ((7 integer)): 3393 <= 30
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 100
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3394 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 100
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1132 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3395 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 30
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
run: string-copy/read-line/parse-traces/main 13: 3478 => ((10 character-address))
mem: ((10 character-address)): 3396 <= 3478
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3478 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 100
run: string-copy/read-line/parse-traces/main 15: 101 => ((6 integer))
mem: ((6 integer)): 3392 <= 101
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 30
run: string-copy/read-line/parse-traces/main 16: 31 => ((7 integer))
mem: ((7 integer)): 3393 <= 31
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 101
mem: ((3 integer)) => 101
run: string-copy/read-line/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 3394 <= t
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/read-line/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 3447
run: read-line/parse-traces/main 5: 3447 => ((5 string-address))
mem: ((5 string-address)): 3329 <= 3447
run: read-line/parse-traces/main 6: (((2 integer-address) (deref)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 101
run: read-line/parse-traces/main 6: 102 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1191 <= 102
run: read-line/parse-traces/main 7: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 3447
run: parse-traces/main 9: 3447 => ((7 string-address))
mem: ((7 string-address)): 1201 <= 3447
run: parse-traces/main 10: (((8 trace-address)) <- ((parse-trace)) ((7 string-address)))
mem: ((7 string-address)) => 3447
run: parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-trace/parse-traces/main 0: 3479 => ((default-space space-address))
run: parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3447)
run: parse-trace/parse-traces/main 1: 3447 => ((1 string-address))
mem: ((1 string-address)): 3481 <= 3447
run: parse-trace/parse-traces/main 2: (((2 trace-address)) <- ((new)) ((trace literal)))
run: parse-trace/parse-traces/main 2: 3510 => ((2 trace-address))
mem: ((2 trace-address)): 3482 <= 3510
run: parse-trace/parse-traces/main 3: (((3 string-address)) <- ((new)) : )
run: parse-trace/parse-traces/main 3: 3512 => ((3 string-address))
mem: ((3 string-address)): 3483 <= 3512
run: parse-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first-at-substring)) ((1 string-address)) ((3 string-address)))
mem: ((1 string-address)) => 3447
mem: ((3 string-address)) => 3512
run: split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-trace/parse-traces/main 0: 3515 => ((default-space space-address))
run: split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3447 3512)
run: split-first-at-substring/parse-trace/parse-traces/main 1: 3447 => ((1 string-address))
mem: ((1 string-address)): 3517 <= 3447
run: split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (3447 3512)
run: split-first-at-substring/parse-trace/parse-traces/main 2: 3512 => ((2 string-address))
mem: ((2 string-address)): 3518 <= 3512
run: split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3447 integer) (raw)) => 31
run: split-first-at-substring/parse-trace/parse-traces/main 3: 31 => ((3 integer))
mem: ((3 integer)): 3519 <= 31
run: split-first-at-substring/parse-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 31
run: split-first-at-substring/parse-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 3520 <= nil
run: split-first-at-substring/parse-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 3447
mem: ((2 string-address)) => 3512
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 3546 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3447 3512 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 3447 => ((1 string-address))
mem: ((1 string-address)): 3548 <= 3447
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (3447 3512 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 3512 => ((2 string-address))
mem: ((2 string-address)): 3549 <= 3512
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3447 3512 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 3550 <= 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((3512 string) (raw))
mem: ((3512 integer) (raw)) => 2
mem: ((3513 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 3551 <= #\:
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3447 integer) (raw)) => 31
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 31 => ((5 integer))
mem: ((5 integer)): 3552 <= 31
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 31
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 3553 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 3447
mem: ((2 string-address)) => 3512
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 3577 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3447 3512 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 3447 => ((1 string-address))
mem: ((1 string-address)): 3579 <= 3447
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (3447 3512 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 3512 => ((2 string-address))
mem: ((2 string-address)): 3580 <= 3512
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3447 3512 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 3581 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3512 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 3582 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3447 integer) (raw)) => 31
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 31 => ((5 integer))
mem: ((5 integer)): 3583 <= 31
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 31
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 29 => ((5 integer))
mem: ((5 integer)): 3583 <= 29
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 29
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 3584 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 3585 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 3586 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3448 byte) (raw)) => r
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\r => ((9 character))
mem: ((9 character)): 3587 <= #\r
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3512 string) (raw))
mem: ((3512 integer) (raw)) => 2
mem: ((3513 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 3588 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => r
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 3589 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3554 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 3550 <= 1
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 3447
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 3608 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3447 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 3447 => ((1 string-address))
mem: ((1 string-address)): 3610 <= 3447
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (3447 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 3611 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3447 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 3612 <= 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3447 integer) (raw)) => 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 31 => ((4 integer))
mem: ((4 integer)): 3613 <= 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3614 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3449 byte) (raw)) => u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\u => ((6 byte))
mem: ((6 byte)): 3615 <= #\u
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => u
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3616 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 3612 <= 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3614 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3450 byte) (raw)) => n
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 3615 <= #\n
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 3616 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 3612 <= 3
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 31
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3614 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3451 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 3615 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 3616 <= t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: 3 => ((3 integer))
mem: ((3 integer)): 3550 <= 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 31
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 3553 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 3447
mem: ((2 string-address)) => 3512
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 3639 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3447 3512 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 3447 => ((1 string-address))
mem: ((1 string-address)): 3641 <= 3447
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (3447 3512 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 3512 => ((2 string-address))
mem: ((2 string-address)): 3642 <= 3512
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3447 3512 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 3643 <= 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3512 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 3644 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3447 integer) (raw)) => 31
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 31 => ((5 integer))
mem: ((5 integer)): 3645 <= 31
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 31
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 29 => ((5 integer))
mem: ((5 integer)): 3645 <= 29
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 29
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 3646 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 3647 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 3648 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3451 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 3649 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3512 string) (raw))
mem: ((3512 integer) (raw)) => 2
mem: ((3513 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 3650 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 3651 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 4 => ((3 integer))
mem: ((3 integer)): 3643 <= 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 3647 <= 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 3648 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3452 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 3649 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((3512 string) (raw))
mem: ((3512 integer) (raw)) => 2
mem: ((3514 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 3650 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 3651 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 5 => ((3 integer))
mem: ((3 integer)): 3643 <= 5
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 3647 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 3648 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 3554 <= t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: split-first-at-substring/parse-trace/parse-traces/main 9: 3 => ((7 integer))
mem: ((7 integer)): 3523 <= 3
run: split-first-at-substring/parse-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 3447
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 3670 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3447 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 3447 => ((1 string-address))
mem: ((1 string-address)): 3672 <= 3447
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (3447 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 3673 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3447 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 3674 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3447 integer) (raw)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 31 => ((4 integer))
mem: ((4 integer)): 3675 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 31
mem: ((3 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 3701 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (31 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 31 => ((1 integer))
mem: ((1 integer)): 3703 <= 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (31 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 3704 <= 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 31
mem: ((2 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3705 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 3 => ((3 integer))
mem: ((3 integer)): 3674 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 3
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 3 => ((4 integer))
mem: ((4 integer)): 3675 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 3732 => ((5 string-address))
mem: ((5 string-address)): 3676 <= 3732
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 3677 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 3678 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3679 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3448 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 3680 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3732 string) (raw))
mem: ((3732 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3733 => ((10 character-address))
mem: ((10 character-address)): 3681 <= 3733
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3733 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 3677 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 3678 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3679 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3449 byte) (raw)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\u => ((9 character))
mem: ((9 character)): 3680 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((3732 string) (raw))
mem: ((3732 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3734 => ((10 character-address))
mem: ((10 character-address)): 3681 <= 3734
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\u => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3734 <= #\u
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 3677 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 3678 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3679 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3450 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3680 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((3732 string) (raw))
mem: ((3732 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3735 => ((10 character-address))
mem: ((10 character-address)): 3681 <= 3735
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3735 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 3677 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 3678 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 3679 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 3732
run: split-first-at-substring/parse-trace/parse-traces/main 10: 3732 => ((5 string-address))
mem: ((5 string-address)): 3521 <= 3732
run: split-first-at-substring/parse-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((3512 integer) (raw)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 3524 <= 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 3
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: 5 => ((7 integer))
mem: ((7 integer)): 3523 <= 5
run: split-first-at-substring/parse-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 3447
mem: ((7 integer)) => 5
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 3736 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3447 5 31)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 3447 => ((1 string-address))
mem: ((1 string-address)): 3738 <= 3447
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (3447 5 31)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 3739 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3447 5 31)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 31 => ((3 integer))
mem: ((3 integer)): 3740 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3447 integer) (raw)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 31 => ((4 integer))
mem: ((4 integer)): 3741 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 31
mem: ((3 integer)) => 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 3767 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (31 31)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 31 => ((1 integer))
mem: ((1 integer)): 3769 <= 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (31 31)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 31 => ((2 integer))
mem: ((2 integer)): 3770 <= 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 31
mem: ((2 integer)) => 31
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 3771 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 31 => ((3 integer))
mem: ((3 integer)): 3740 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 31
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 26 => ((4 integer))
mem: ((4 integer)): 3741 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 3798 => ((5 string-address))
mem: ((5 string-address)): 3742 <= 3798
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 3743 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 3744 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3453 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 3746 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3799 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3799
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3799 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 3743 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 3744 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3454 byte) (raw)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 3746 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3800 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3800
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3800 <= #\a
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 3743 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 3744 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3455 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 3746 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3801 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3801
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3801 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 3743 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 3744 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3456 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3746 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3802 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3802
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3802 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 3743 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 3744 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3457 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3746 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3803 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3803
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3803 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 3743 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 3744 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3458 byte) (raw)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 3746 <= #\0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3804 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3804
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3804 <= #\0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 3743 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 3744 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3459 byte) (raw)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 3746 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3805 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3805
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3805 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 3743 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 3744 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3460 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3746 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3806 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3806
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3806 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 3743 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 3744 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3461 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 3746 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3807 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3807
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3807 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 3743 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 3744 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3462 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3746 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3808 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3808
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3808 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 3743 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 3744 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3463 byte) (raw)) => =
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 3746 <= #\=
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3809 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3809
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3809 <= #\=
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 3743 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 3744 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3464 byte) (raw)) => >
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\> => ((9 character))
mem: ((9 character)): 3746 <= #\>
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3810 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3810
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => >
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\> => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3810 <= #\>
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 3743 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 3744 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3465 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3746 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3811 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3811
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3811 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 3743 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 3744 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3466 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3746 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3812 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3812
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3812 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 3743 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 3744 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3467 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 3746 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3813 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3813
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3813 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 3743 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 3744 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3468 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 3746 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3814 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3814
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3814 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 3743 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 3744 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3469 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 3746 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3815 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3815
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3815 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 3743 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 3744 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3470 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 3746 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3816 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3816
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3816 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 3743 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 3744 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
schedule: scheduling string-copy/split-first-at-substring/parse-trace/parse-traces/main for further processing
schedule: string-copy/split-first-at-substring/parse-trace/parse-traces/main
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3471 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 3746 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3817 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3817
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3817 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 3743 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 3744 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3472 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 3746 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3818 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3818
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3818 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 3743 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 3744 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3473 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3746 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3819 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3819
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3819 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 3743 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 3744 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 26
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3474 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 3746 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3820 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3820
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3820 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 27 => ((6 integer))
mem: ((6 integer)): 3743 <= 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 3744 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 27
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 27
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3475 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 3746 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3821 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3821
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3821 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 27
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 28 => ((6 integer))
mem: ((6 integer)): 3743 <= 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 3744 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 28
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 28
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3476 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 3746 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3822 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3822
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3822 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 28
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 29 => ((6 integer))
mem: ((6 integer)): 3743 <= 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 3744 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 29
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 29
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3477 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3746 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3823 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3823
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3823 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 29
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 30 => ((6 integer))
mem: ((6 integer)): 3743 <= 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 3744 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 30
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 3745 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 30
array-len: ((3447 string) (raw))
mem: ((3447 integer) (raw)) => 31
mem: ((3478 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 3746 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 3824 => ((10 character-address))
mem: ((10 character-address)): 3747 <= 3824
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 3824 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 30
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 31 => ((6 integer))
mem: ((6 integer)): 3743 <= 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 3744 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 31
mem: ((3 integer)) => 31
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 3745 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 3798
run: split-first-at-substring/parse-trace/parse-traces/main 13: 3798 => ((6 string-address))
mem: ((6 string-address)): 3522 <= 3798
run: split-first-at-substring/parse-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 3732
mem: ((6 string-address)) => 3798
run: parse-trace/parse-traces/main 4: 3732 => ((4 string-address))
mem: ((4 string-address)): 3484 <= 3732
run: parse-trace/parse-traces/main 4: 3798 => ((5 string-address))
mem: ((5 string-address)): 3485 <= 3798
run: parse-trace/parse-traces/main 5: (((6 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((0 offset)))
run: parse-trace/parse-traces/main 5: 3510 => ((6 string-address-address))
mem: ((6 string-address-address)): 3486 <= 3510
run: parse-trace/parse-traces/main 6: (((6 string-address-address) (deref)) <- ((copy)) ((4 string-address)))
mem: ((4 string-address)) => 3732
run: parse-trace/parse-traces/main 6: 3732 => ((6 string-address-address) (deref))
mem: ((6 string-address-address) (deref)): 3510 <= 3732
run: parse-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((1 offset)))
run: parse-trace/parse-traces/main 7: 3511 => ((7 string-address-address))
mem: ((7 string-address-address)): 3487 <= 3511
run: parse-trace/parse-traces/main 8: (((7 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 3798
run: parse-trace/parse-traces/main 8: 3798 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 3511 <= 3798
run: parse-trace/parse-traces/main 9: (((reply)) ((2 trace-address)))
mem: ((2 trace-address)) => 3510
run: parse-traces/main 10: 3510 => ((8 trace-address))
mem: ((8 trace-address)): 1202 <= 3510
run: parse-traces/main 11: (((9 string-address)) <- ((get)) ((8 trace-address) (deref)) ((0 offset)))
mem: ((3510 string-address) (raw)) => 3732
run: parse-traces/main 11: 3732 => ((9 string-address))
mem: ((9 string-address)): 1203 <= 3732
run: parse-traces/main 12: (((10 boolean)) <- ((string-equal)) ((9 string-address)) ((5 string-address) (const)))
mem: ((9 string-address)) => 3732
mem: ((5 string-address) (const)) => 1327
run: string-equal/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-equal/parse-traces/main 0: 3825 => ((default-space space-address))
run: string-equal/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3732 1327)
run: string-equal/parse-traces/main 1: 3732 => ((1 string-address))
mem: ((1 string-address)): 3827 <= 3732
run: string-equal/parse-traces/main 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3732 integer) (raw)) => 3
run: string-equal/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 3828 <= 3
run: string-equal/parse-traces/main 3: (((3 string-address)) <- ((next-input)))
arg: nil 1 (3732 1327)
run: string-equal/parse-traces/main 3: 1327 => ((3 string-address))
mem: ((3 string-address)): 3829 <= 1327
run: string-equal/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1327 integer) (raw)) => 3
run: string-equal/parse-traces/main 4: 3 => ((4 integer))
mem: ((4 integer)): 3830 <= 3
run: string-equal/parse-traces/main 5: (((5 boolean)) <- ((equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 3
run: string-equal/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 3831 <= t
run: string-equal/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((1 offset)))
mem: ((5 boolean)) => t
run: string-equal/parse-traces/main 8: (((6 integer)) <- ((copy)) ((0 literal)))
run: string-equal/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 3832 <= 0
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 0
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 3833 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((3732 string) (raw))
mem: ((3732 integer) (raw)) => 3
mem: ((3733 byte) (raw)) => r
run: string-equal/parse-traces/main 11: #\r => ((8 byte))
mem: ((8 byte)): 3834 <= #\r
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((1327 string) (raw))
mem: ((1327 integer) (raw)) => 3
mem: ((1328 byte) (raw)) => r
run: string-equal/parse-traces/main 12: #\r => ((9 byte))
mem: ((9 byte)): 3835 <= #\r
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => r
mem: ((9 byte)) => r
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 3836 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-equal/parse-traces/main 16: 1 => ((6 integer))
mem: ((6 integer)): 3832 <= 1
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 1
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 3833 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((3732 string) (raw))
mem: ((3732 integer) (raw)) => 3
mem: ((3734 byte) (raw)) => u
run: string-equal/parse-traces/main 11: #\u => ((8 byte))
mem: ((8 byte)): 3834 <= #\u
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((1327 string) (raw))
mem: ((1327 integer) (raw)) => 3
mem: ((1329 byte) (raw)) => u
run: string-equal/parse-traces/main 12: #\u => ((9 byte))
mem: ((9 byte)): 3835 <= #\u
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => u
mem: ((9 byte)) => u
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 3836 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-equal/parse-traces/main 16: 2 => ((6 integer))
mem: ((6 integer)): 3832 <= 2
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 2
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 3833 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((3732 string) (raw))
mem: ((3732 integer) (raw)) => 3
mem: ((3735 byte) (raw)) => n
run: string-equal/parse-traces/main 11: #\n => ((8 byte))
mem: ((8 byte)): 3834 <= #\n
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((1327 string) (raw))
mem: ((1327 integer) (raw)) => 3
mem: ((1330 byte) (raw)) => n
run: string-equal/parse-traces/main 12: #\n => ((9 byte))
mem: ((9 byte)): 3835 <= #\n
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => n
mem: ((9 byte)) => n
run: string-equal/parse-traces/main 13: t => ((10 boolean))
mem: ((10 boolean)): 3836 <= t
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => t
run: string-equal/parse-traces/main 16: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-equal/parse-traces/main 16: 3 => ((6 integer))
mem: ((6 integer)): 3832 <= 3
run: string-equal/parse-traces/main 17: (((jump)) ((-9 offset)))
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 3
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: t => ((7 boolean))
mem: ((7 boolean)): 3833 <= t
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => t
run: string-equal/parse-traces/main 18: (((reply)) ((t literal)))
run: parse-traces/main 12: t => ((10 boolean))
mem: ((10 boolean)): 1204 <= t
run: parse-traces/main 13: (((jump-unless)) ((10 boolean)) ((7 offset)))
mem: ((10 boolean)) => t
run: parse-traces/main 14: (((jump-unless)) ((3 instruction-trace-address)) ((3 offset)))
mem: ((3 instruction-trace-address)) => 2502
run: parse-traces/main 15: (((11 trace-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((3 offset)))
run: parse-traces/main 15: 2505 => ((11 trace-address-array-address-address))
mem: ((11 trace-address-array-address-address)): 1205 <= 2505
run: parse-traces/main 16: (((11 trace-address-array-address-address) (deref)) <- ((to-array)) ((4 buffer-address)))
mem: ((4 buffer-address)) => 1319
run: to-array/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: to-array/parse-traces/main 0: 3856 => ((default-space space-address))
run: to-array/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1319)
run: to-array/parse-traces/main 1: 1319 => ((1 buffer-address))
mem: ((1 buffer-address)): 3858 <= 1319
run: to-array/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1319 integer) (raw)) => 0
run: to-array/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 3859 <= 0
run: to-array/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1320 string-address) (raw)) => 1321
run: to-array/parse-traces/main 3: 1321 => ((3 string-address))
mem: ((3 string-address)): 3860 <= 1321
run: to-array/parse-traces/main 4: (((jump-if)) ((3 string-address)) ((1 offset)))
mem: ((3 string-address)) => 1321
run: to-array/parse-traces/main 6: (((4 string-address)) <- ((new)) ((string literal)) ((2 integer)))
mem: ((2 integer)) => 0
run: to-array/parse-traces/main 6: 3887 => ((4 string-address))
mem: ((4 string-address)): 3861 <= 3887
run: to-array/parse-traces/main 7: (((5 integer)) <- ((copy)) ((0 literal)))
run: to-array/parse-traces/main 7: 0 => ((5 integer))
mem: ((5 integer)): 3862 <= 0
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 0
mem: ((2 integer)) => 0
run: to-array/parse-traces/main 8: t => ((6 boolean))
mem: ((6 boolean)): 3863 <= t
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => t
run: to-array/parse-traces/main 15: (((reply)) ((4 string-address)))
mem: ((4 string-address)) => 3887
run: parse-traces/main 16: 3887 => ((11 trace-address-array-address-address) (deref))
mem: ((11 trace-address-array-address-address) (deref)): 2505 <= 3887
run: parse-traces/main 17: (((4 buffer-address)) <- ((init-buffer)) ((5 literal)))
run: init-buffer/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: init-buffer/parse-traces/main 0: 3888 => ((default-space space-address))
run: init-buffer/parse-traces/main 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
run: init-buffer/parse-traces/main 1: 3919 => ((1 buffer-address))
mem: ((1 buffer-address)): 3890 <= 3919
run: init-buffer/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: init-buffer/parse-traces/main 2: 3919 => ((2 integer-address))
mem: ((2 integer-address)): 3891 <= 3919
run: init-buffer/parse-traces/main 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: init-buffer/parse-traces/main 3: 0 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 3919 <= 0
run: init-buffer/parse-traces/main 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
run: init-buffer/parse-traces/main 4: 3920 => ((3 string-address-address))
mem: ((3 string-address-address)): 3892 <= 3920
run: init-buffer/parse-traces/main 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (5)
run: init-buffer/parse-traces/main 5: 5 => ((4 integer))
mem: ((4 integer)): 3893 <= 5
run: init-buffer/parse-traces/main 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 5
run: init-buffer/parse-traces/main 6: 3921 => ((3 string-address-address) (deref))
mem: ((3 string-address-address) (deref)): 3920 <= 3921
run: init-buffer/parse-traces/main 7: (((reply)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 3919
run: parse-traces/main 17: 3919 => ((4 buffer-address))
mem: ((4 buffer-address)): 1198 <= 3919
run: parse-traces/main 18: (((3 instruction-trace-address)) <- ((parse-instruction-trace)) ((8 trace-address)))
mem: ((8 trace-address)) => 3510
run: parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-instruction-trace/parse-traces/main 0: 3927 => ((default-space space-address))
run: parse-instruction-trace/parse-traces/main 1: (((1 trace-address)) <- ((next-input)))
arg: nil 0 (3510)
run: parse-instruction-trace/parse-traces/main 1: 3510 => ((1 trace-address))
mem: ((1 trace-address)): 3929 <= 3510
run: parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((get)) ((1 trace-address) (deref)) ((1 offset)))
mem: ((3511 string-address) (raw)) => 3798
run: parse-instruction-trace/parse-traces/main 2: 3798 => ((2 string-address))
mem: ((2 string-address)): 3930 <= 3798
run: parse-instruction-trace/parse-traces/main 3: (((3 instruction-trace-address)) <- ((new)) ((instruction-trace literal)))
run: parse-instruction-trace/parse-traces/main 3: 3958 => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 3931 <= 3958
run: parse-instruction-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first)) ((2 string-address)) ((  literal)))
mem: ((2 string-address)) => 3798
run: split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first/parse-instruction-trace/parse-traces/main 0: 3962 => ((default-space space-address))
run: split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3798 #\space)
run: split-first/parse-instruction-trace/parse-traces/main 1: 3798 => ((1 string-address))
mem: ((1 string-address)): 3964 <= 3798
run: split-first/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (3798 #\space)
run: split-first/parse-instruction-trace/parse-traces/main 2: #\space => ((2 character))
mem: ((2 character)): 3965 <= #\space
run: split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3798 integer) (raw)) => 26
run: split-first/parse-instruction-trace/parse-traces/main 3: 26 => ((3 integer))
mem: ((3 integer)): 3966 <= 26
run: split-first/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 26
run: split-first/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 3967 <= nil
run: split-first/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((0 literal)))
mem: ((1 string-address)) => 3798
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 0: 3993 => ((default-space space-address))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3798 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 1: 3798 => ((1 string-address))
mem: ((1 string-address)): 3995 <= 3798
run: find-next/split-first/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (3798 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 2: #\space => ((2 character))
mem: ((2 character)): 3996 <= #\space
run: find-next/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3798 #\space 0)
run: find-next/split-first/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 3997 <= 0
run: find-next/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3798 integer) (raw)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 3998 <= 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3999 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3799 byte) (raw)) => m
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 4000 <= #\m
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4001 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 3997 <= 1
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3999 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3800 byte) (raw)) => a
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 4000 <= #\a
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4001 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 3997 <= 2
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3999 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3801 byte) (raw)) => i
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 4000 <= #\i
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4001 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 3997 <= 3
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3999 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3802 byte) (raw)) => n
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 4000 <= #\n
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4001 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split-first/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 3997 <= 4
run: find-next/split-first/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 26
run: find-next/split-first/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 3999 <= nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3803 byte) (raw)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 4000 <= #\space
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) =>  
run: find-next/split-first/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 4001 <= t
run: find-next/split-first/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/split-first/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split-first/parse-instruction-trace/parse-traces/main 9: 4 => ((7 integer))
mem: ((7 integer)): 3970 <= 4
run: split-first/parse-instruction-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 3798
mem: ((7 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 4024 => ((default-space space-address))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3798 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 3798 => ((1 string-address))
mem: ((1 string-address)): 4026 <= 3798
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (3798 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 4027 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3798 0 4)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 4028 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 4029 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 4055 => ((default-space space-address))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (26 4)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 26 => ((1 integer))
mem: ((1 integer)): 4057 <= 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (26 4)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 4 => ((2 integer))
mem: ((2 integer)): 4058 <= 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 26
mem: ((2 integer)) => 4
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4059 <= nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: 4 => ((3 integer))
mem: ((3 integer)): 4028 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 4
mem: ((2 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 4029 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: 4086 => ((5 string-address))
mem: ((5 string-address)): 4030 <= 4086
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 4031 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4032 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4033 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3799 byte) (raw)) => m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 4034 <= #\m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4087 => ((10 character-address))
mem: ((10 character-address)): 4035 <= 4087
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4087 <= #\m
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 4031 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 4032 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4033 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3800 byte) (raw)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 4034 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4088 => ((10 character-address))
mem: ((10 character-address)): 4035 <= 4088
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4088 <= #\a
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 4031 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 4032 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4033 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3801 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 4034 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4089 => ((10 character-address))
mem: ((10 character-address)): 4035 <= 4089
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4089 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 4031 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 4032 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4033 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3802 byte) (raw)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 4034 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4090 => ((10 character-address))
mem: ((10 character-address)): 4035 <= 4090
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4090 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 4031 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 4032 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 4033 <= t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4086
run: split-first/parse-instruction-trace/parse-traces/main 10: 4086 => ((5 string-address))
mem: ((5 string-address)): 3968 <= 4086
run: split-first/parse-instruction-trace/parse-traces/main 11: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: split-first/parse-instruction-trace/parse-traces/main 11: 5 => ((7 integer))
mem: ((7 integer)): 3970 <= 5
run: split-first/parse-instruction-trace/parse-traces/main 12: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 3798
mem: ((7 integer)) => 5
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 4091 => ((default-space space-address))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (3798 5 26)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 3798 => ((1 string-address))
mem: ((1 string-address)): 4093 <= 3798
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (3798 5 26)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 4094 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (3798 5 26)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 3: 26 => ((3 integer))
mem: ((3 integer)): 4095 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((3798 integer) (raw)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 4096 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 0: 4122 => ((default-space space-address))
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (26 26)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 1: 26 => ((1 integer))
mem: ((1 integer)): 4124 <= 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (26 26)
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 2: 26 => ((2 integer))
mem: ((2 integer)): 4125 <= 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 26
mem: ((2 integer)) => 26
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4126 <= nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 5: 26 => ((3 integer))
mem: ((3 integer)): 4095 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 26
mem: ((2 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 6: 21 => ((4 integer))
mem: ((4 integer)): 4096 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 7: 4153 => ((5 string-address))
mem: ((5 string-address)): 4097 <= 4153
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 4098 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4099 <= 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3804 byte) (raw)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 4101 <= #\0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4154 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4154
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4154 <= #\0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 4098 <= 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 4099 <= 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3805 byte) (raw)) => :
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 4101 <= #\:
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4155 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4155
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4155 <= #\:
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 4098 <= 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 4099 <= 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3806 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4101 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4156 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4156
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4156 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 4098 <= 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 4099 <= 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3807 byte) (raw)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4101 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4157 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4157
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4157 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 4098 <= 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 4099 <= 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3808 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4101 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4158 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4158
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4158 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 4098 <= 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 4099 <= 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3809 byte) (raw)) => =
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 4101 <= #\=
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4159 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4159
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4159 <= #\=
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 4098 <= 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 4099 <= 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3810 byte) (raw)) => >
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\> => ((9 character))
mem: ((9 character)): 4101 <= #\>
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4160 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4160
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => >
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\> => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4160 <= #\>
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 4098 <= 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 4099 <= 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3811 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4101 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4161 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4161
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4161 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 4098 <= 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 4099 <= 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3812 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 4101 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4162 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4162
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4162 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 4098 <= 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 4099 <= 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3813 byte) (raw)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 4101 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4163 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4163
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4163 <= #\(
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 4098 <= 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 4099 <= 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3814 byte) (raw)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4101 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4164 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4164
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4164 <= #\1
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 4098 <= 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 4099 <= 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3815 byte) (raw)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4101 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4165 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4165
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4165 <= #\space
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 4098 <= 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 4099 <= 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3816 byte) (raw)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 4101 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4166 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4166
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4166 <= #\i
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 4098 <= 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 4099 <= 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3817 byte) (raw)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 4101 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4167 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4167
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4167 <= #\n
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 4098 <= 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 4099 <= 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3818 byte) (raw)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 4101 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4168 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4168
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4168 <= #\t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 4098 <= 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 4099 <= 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3819 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4101 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4169 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4169
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4169 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 4098 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 4099 <= 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3820 byte) (raw)) => g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 4101 <= #\g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4170 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4170
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4170 <= #\g
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 4098 <= 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 4099 <= 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3821 byte) (raw)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4101 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4171 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4171
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4171 <= #\e
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 4098 <= 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 4099 <= 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3822 byte) (raw)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 4101 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4172 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4172
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4172 <= #\r
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 4098 <= 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 4099 <= 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3823 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 4101 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4173 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4173
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4173 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 4098 <= 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 4099 <= 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4100 <= nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((3798 string) (raw))
mem: ((3798 integer) (raw)) => 26
mem: ((3824 byte) (raw)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 4101 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 13: 4174 => ((10 character-address))
mem: ((10 character-address)): 4102 <= 4174
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4174 <= #\)
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 4098 <= 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 4099 <= 21
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 26
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 4100 <= t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4153
run: split-first/parse-instruction-trace/parse-traces/main 12: 4153 => ((6 string-address))
mem: ((6 string-address)): 3969 <= 4153
run: split-first/parse-instruction-trace/parse-traces/main 13: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 4086
mem: ((6 string-address)) => 4153
run: parse-instruction-trace/parse-traces/main 4: 4086 => ((4 string-address))
mem: ((4 string-address)): 3932 <= 4086
run: parse-instruction-trace/parse-traces/main 4: 4153 => ((5 string-address))
mem: ((5 string-address)): 3933 <= 4153
run: parse-instruction-trace/parse-traces/main 5: (((6 string-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((0 offset)))
run: parse-instruction-trace/parse-traces/main 5: 3958 => ((6 string-address-array-address-address))
mem: ((6 string-address-array-address-address)): 3934 <= 3958
run: parse-instruction-trace/parse-traces/main 6: (((6 string-address-array-address-address) (deref)) <- ((split)) ((4 string-address)) ((/ literal)))
mem: ((4 string-address)) => 4086
run: split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split/parse-instruction-trace/parse-traces/main 0: 4175 => ((default-space space-address))
run: split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4086 #\/)
run: split/parse-instruction-trace/parse-traces/main 1: 4086 => ((1 string-address))
mem: ((1 string-address)): 4177 <= 4086
run: split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (4086 #\/)
run: split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 4178 <= #\/
run: split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4086 integer) (raw)) => 4
run: split/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 4179 <= 4
run: split/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 4180 <= nil
run: split/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((2 offset)))
mem: ((4 boolean)) => nil
run: split/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((1 literal)))
run: split/parse-instruction-trace/parse-traces/main 8: 1 => ((6 integer))
mem: ((6 integer)): 4182 <= 1
run: split/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4183 <= 0
run: split/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((7 integer)))
mem: ((1 string-address)) => 4086
mem: ((2 character)) => /
mem: ((7 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split/parse-instruction-trace/parse-traces/main 0: 4206 => ((default-space space-address))
run: find-next/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4086 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 1: 4086 => ((1 string-address))
mem: ((1 string-address)): 4208 <= 4086
run: find-next/split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (4086 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 4209 <= #\/
run: find-next/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4086 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 4210 <= 0
run: find-next/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4086 integer) (raw)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 4211 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4212 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
mem: ((4087 byte) (raw)) => m
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 4213 <= #\m
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4214 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 4210 <= 1
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4212 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
mem: ((4088 byte) (raw)) => a
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 4213 <= #\a
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4214 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 4210 <= 2
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4212 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
mem: ((4089 byte) (raw)) => i
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 4213 <= #\i
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4214 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 4210 <= 3
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4212 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
mem: ((4090 byte) (raw)) => n
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 4213 <= #\n
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4214 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 4210 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 4212 <= t
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/split/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 10: 4 => ((7 integer))
mem: ((7 integer)): 4183 <= 4
run: split/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((3 integer)))
mem: ((7 integer)) => 4
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 4184 <= t
run: split/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((3 offset)))
mem: ((8 boolean)) => t
run: split/parse-instruction-trace/parse-traces/main 16: (((5 string-address-array-address)) <- ((new)) ((string-address-array literal)) ((6 integer)))
mem: ((6 integer)) => 1
run: split/parse-instruction-trace/parse-traces/main 16: 4237 => ((5 string-address-array-address))
mem: ((5 string-address-array-address)): 4181 <= 4237
run: split/parse-instruction-trace/parse-traces/main 17: (((9 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 17: 0 => ((9 integer))
mem: ((9 integer)): 4185 <= 0
run: split/parse-instruction-trace/parse-traces/main 18: (((10 integer)) <- ((copy)) ((0 literal)))
run: split/parse-instruction-trace/parse-traces/main 18: 0 => ((10 integer))
mem: ((10 integer)): 4186 <= 0
run: split/parse-instruction-trace/parse-traces/main 19: (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer)))
mem: ((10 integer)) => 0
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 19: nil => ((8 boolean))
mem: ((8 boolean)): 4184 <= nil
run: split/parse-instruction-trace/parse-traces/main 20: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: split/parse-instruction-trace/parse-traces/main 21: (((11 integer)) <- ((find-next)) ((1 string-address)) ((2 character)) ((10 integer)))
mem: ((1 string-address)) => 4086
mem: ((2 character)) => /
mem: ((10 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/split/parse-instruction-trace/parse-traces/main 0: 4239 => ((default-space space-address))
run: find-next/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4086 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 1: 4086 => ((1 string-address))
mem: ((1 string-address)): 4241 <= 4086
run: find-next/split/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (4086 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 2: #\/ => ((2 character))
mem: ((2 character)): 4242 <= #\/
run: find-next/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4086 #\/ 0)
run: find-next/split/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 4243 <= 0
run: find-next/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4086 integer) (raw)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 4244 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 0
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4245 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
mem: ((4087 byte) (raw)) => m
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 4246 <= #\m
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4247 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 4243 <= 1
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4245 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
mem: ((4088 byte) (raw)) => a
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\a => ((6 byte))
mem: ((6 byte)): 4246 <= #\a
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => a
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4247 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 4243 <= 2
schedule: scheduling find-next/split/parse-instruction-trace/parse-traces/main for further processing
schedule: find-next/split/parse-instruction-trace/parse-traces/main
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4245 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
mem: ((4089 byte) (raw)) => i
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 4246 <= #\i
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4247 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 4243 <= 3
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4245 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
mem: ((4090 byte) (raw)) => n
run: find-next/split/parse-instruction-trace/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 4246 <= #\n
run: find-next/split/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => /
run: find-next/split/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4247 <= nil
run: find-next/split/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/split/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: find-next/split/parse-instruction-trace/parse-traces/main 10: 4 => ((3 integer))
mem: ((3 integer)): 4243 <= 4
run: find-next/split/parse-instruction-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/split/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 4
mem: ((4 integer)) => 4
run: find-next/split/parse-instruction-trace/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 4245 <= t
run: find-next/split/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/split/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 21: 4 => ((11 integer))
mem: ((11 integer)): 4187 <= 4
run: split/parse-instruction-trace/parse-traces/main 22: (((12 string-address-address)) <- ((index-address)) ((5 string-address-array-address) (deref)) ((9 integer)))
mem: ((9 integer)) => 0
array-len: ((4237 string-address-array) (raw))
mem: ((4237 integer) (raw)) => 1
run: split/parse-instruction-trace/parse-traces/main 22: 4238 => ((12 string-address-address))
mem: ((12 string-address-address)): 4188 <= 4238
run: split/parse-instruction-trace/parse-traces/main 23: (((12 string-address-address) (deref)) <- ((string-copy)) ((1 string-address)) ((10 integer)) ((11 integer)))
mem: ((1 string-address)) => 4086
mem: ((10 integer)) => 0
mem: ((11 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 0: 4270 => ((default-space space-address))
run: string-copy/split/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4086 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 1: 4086 => ((1 string-address))
mem: ((1 string-address)): 4272 <= 4086
run: string-copy/split/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4086 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 4273 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4086 0 4)
run: string-copy/split/parse-instruction-trace/parse-traces/main 3: 4 => ((3 integer))
mem: ((3 integer)): 4274 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4086 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 4: 4 => ((4 integer))
mem: ((4 integer)): 4275 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 4
mem: ((3 integer)) => 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 0: 4301 => ((default-space space-address))
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (4 4)
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 1: 4 => ((1 integer))
mem: ((1 integer)): 4303 <= 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4 4)
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 2: 4 => ((2 integer))
mem: ((2 integer)): 4304 <= 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 4
mem: ((2 integer)) => 4
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4305 <= nil
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 5: 4 => ((3 integer))
mem: ((3 integer)): 4274 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 4
mem: ((2 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 6: 4 => ((4 integer))
mem: ((4 integer)): 4275 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 7: 4332 => ((5 string-address))
mem: ((5 string-address)): 4276 <= 4332
run: string-copy/split/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 4277 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4278 <= 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4279 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
mem: ((4087 byte) (raw)) => m
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 4280 <= #\m
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4332 string) (raw))
mem: ((4332 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 4333 => ((10 character-address))
mem: ((10 character-address)): 4281 <= 4333
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4333 <= #\m
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 4277 <= 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 4278 <= 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4279 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
mem: ((4088 byte) (raw)) => a
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\a => ((9 character))
mem: ((9 character)): 4280 <= #\a
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((4332 string) (raw))
mem: ((4332 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 4334 => ((10 character-address))
mem: ((10 character-address)): 4281 <= 4334
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => a
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\a => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4334 <= #\a
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 4277 <= 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 4278 <= 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4279 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
mem: ((4089 byte) (raw)) => i
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 4280 <= #\i
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((4332 string) (raw))
mem: ((4332 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 4335 => ((10 character-address))
mem: ((10 character-address)): 4281 <= 4335
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4335 <= #\i
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 4277 <= 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 4278 <= 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4279 <= nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((4086 string) (raw))
mem: ((4086 integer) (raw)) => 4
mem: ((4090 byte) (raw)) => n
run: string-copy/split/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 4280 <= #\n
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((4332 string) (raw))
mem: ((4332 integer) (raw)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 13: 4336 => ((10 character-address))
mem: ((10 character-address)): 4281 <= 4336
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4336 <= #\n
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 4277 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 4278 <= 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 4
run: string-copy/split/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 4279 <= t
run: string-copy/split/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4332
run: split/parse-instruction-trace/parse-traces/main 23: 4332 => ((12 string-address-address) (deref))
mem: ((12 string-address-address) (deref)): 4238 <= 4332
run: split/parse-instruction-trace/parse-traces/main 24: (((10 integer)) <- ((add)) ((11 integer)) ((1 literal)))
mem: ((11 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 24: 5 => ((10 integer))
mem: ((10 integer)): 4186 <= 5
run: split/parse-instruction-trace/parse-traces/main 25: (((9 integer)) <- ((add)) ((9 integer)) ((1 literal)))
mem: ((9 integer)) => 0
run: split/parse-instruction-trace/parse-traces/main 25: 1 => ((9 integer))
mem: ((9 integer)): 4185 <= 1
run: split/parse-instruction-trace/parse-traces/main 26: (((jump)) ((-8 offset)))
run: split/parse-instruction-trace/parse-traces/main 19: (((8 boolean)) <- ((greater-or-equal)) ((10 integer)) ((3 integer)))
mem: ((10 integer)) => 5
mem: ((3 integer)) => 4
run: split/parse-instruction-trace/parse-traces/main 19: t => ((8 boolean))
mem: ((8 boolean)): 4184 <= t
run: split/parse-instruction-trace/parse-traces/main 20: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: split/parse-instruction-trace/parse-traces/main 27: (((reply)) ((5 string-address-array-address)))
mem: ((5 string-address-array-address)) => 4237
run: parse-instruction-trace/parse-traces/main 6: 4237 => ((6 string-address-array-address-address) (deref))
mem: ((6 string-address-array-address-address) (deref)): 3958 <= 4237
run: parse-instruction-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((1 offset)))
run: parse-instruction-trace/parse-traces/main 7: 3959 => ((7 string-address-address))
mem: ((7 string-address-address)): 3935 <= 3959
run: parse-instruction-trace/parse-traces/main 8: (((8 string-address)) <- ((new)) : )
run: parse-instruction-trace/parse-traces/main 8: 4337 => ((8 string-address))
mem: ((8 string-address)): 3936 <= 4337
run: parse-instruction-trace/parse-traces/main 9: (((7 string-address-address) (deref)) ((5 string-address)) <- ((split-first-at-substring)) ((5 string-address)) ((8 string-address)))
mem: ((5 string-address)) => 4153
mem: ((8 string-address)) => 4337
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4340 => ((default-space space-address))
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4153 4337)
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4153 => ((1 string-address))
mem: ((1 string-address)): 4342 <= 4153
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4153 4337)
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 4337 => ((2 string-address))
mem: ((2 string-address)): 4343 <= 4337
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4153 integer) (raw)) => 21
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 21 => ((3 integer))
mem: ((3 integer)): 4344 <= 21
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 21
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 4345 <= nil
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 4153
mem: ((2 string-address)) => 4337
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4371 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4153 4337 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4153 => ((1 string-address))
mem: ((1 string-address)): 4373 <= 4153
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4153 4337 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 4337 => ((2 string-address))
mem: ((2 string-address)): 4374 <= 4337
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4153 4337 0)
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 4375 <= 0
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((4337 string) (raw))
mem: ((4337 integer) (raw)) => 2
mem: ((4338 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 4376 <= #\:
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4153 integer) (raw)) => 21
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 21 => ((5 integer))
mem: ((5 integer)): 4377 <= 21
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 21
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 4378 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 4153
mem: ((2 string-address)) => 4337
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4402 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4153 4337 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4153 => ((1 string-address))
mem: ((1 string-address)): 4404 <= 4153
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4153 4337 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 4337 => ((2 string-address))
mem: ((2 string-address)): 4405 <= 4337
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4153 4337 0)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 4406 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((4337 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 4407 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4153 integer) (raw)) => 21
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 21 => ((5 integer))
mem: ((5 integer)): 4408 <= 21
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 21
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 19 => ((5 integer))
mem: ((5 integer)): 4408 <= 19
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 19
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 4409 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 4410 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 4411 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4154 byte) (raw)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\0 => ((9 character))
mem: ((9 character)): 4412 <= #\0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4337 string) (raw))
mem: ((4337 integer) (raw)) => 2
mem: ((4338 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 4413 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => 0
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 4414 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4379 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 4375 <= 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 4153
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4433 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4153 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4153 => ((1 string-address))
mem: ((1 string-address)): 4435 <= 4153
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (4153 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 4436 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4153 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 4437 <= 1
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4153 integer) (raw)) => 21
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 21 => ((4 integer))
mem: ((4 integer)): 4438 <= 21
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 21
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4439 <= nil
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4155 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 4440 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 4441 <= t
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: 1 => ((3 integer))
mem: ((3 integer)): 4375 <= 1
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 1
mem: ((5 integer)) => 21
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 4378 <= nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 4153
mem: ((2 string-address)) => 4337
mem: ((3 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4464 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4153 4337 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4153 => ((1 string-address))
mem: ((1 string-address)): 4466 <= 4153
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4153 4337 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 4337 => ((2 string-address))
mem: ((2 string-address)): 4467 <= 4337
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4153 4337 1)
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 4468 <= 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((4337 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 4469 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4153 integer) (raw)) => 21
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 21 => ((5 integer))
mem: ((5 integer)): 4470 <= 21
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 21
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 19 => ((5 integer))
mem: ((5 integer)): 4470 <= 19
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 1
mem: ((5 integer)) => 19
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 4471 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 4472 <= 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 4473 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4155 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 4474 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4337 string) (raw))
mem: ((4337 integer) (raw)) => 2
mem: ((4338 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 4475 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 4476 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: 2 => ((3 integer))
mem: ((3 integer)): 4468 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 4472 <= 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 4473 <= nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4156 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 4474 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((4337 string) (raw))
mem: ((4337 integer) (raw)) => 2
mem: ((4339 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 4475 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 4476 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: 3 => ((3 integer))
mem: ((3 integer)): 4468 <= 3
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 4472 <= 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 4473 <= t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 4379 <= t
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 1
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 1 => ((7 integer))
mem: ((7 integer)): 4348 <= 1
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 4153
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4495 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4153 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4153 => ((1 string-address))
mem: ((1 string-address)): 4497 <= 4153
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4153 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 4498 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4153 0 1)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 4499 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 21 => ((4 integer))
mem: ((4 integer)): 4500 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 21
mem: ((3 integer)) => 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4526 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (21 1)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 21 => ((1 integer))
mem: ((1 integer)): 4528 <= 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (21 1)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 1 => ((2 integer))
mem: ((2 integer)): 4529 <= 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 21
mem: ((2 integer)) => 1
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4530 <= nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 1 => ((3 integer))
mem: ((3 integer)): 4499 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 1
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 1 => ((4 integer))
mem: ((4 integer)): 4500 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: 4557 => ((5 string-address))
mem: ((5 string-address)): 4501 <= 4557
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 4502 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4503 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4504 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4154 byte) (raw)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\0 => ((9 character))
mem: ((9 character)): 4505 <= #\0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4557 string) (raw))
mem: ((4557 integer) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4558 => ((10 character-address))
mem: ((10 character-address)): 4506 <= 4558
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\0 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4558 <= #\0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 4502 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 4503 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 4504 <= t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4557
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 10: 4557 => ((5 string-address))
mem: ((5 string-address)): 4346 <= 4557
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((4337 integer) (raw)) => 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 4349 <= 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 1
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 12: 3 => ((7 integer))
mem: ((7 integer)): 4348 <= 3
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 4153
mem: ((7 integer)) => 3
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4559 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4153 3 21)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 4153 => ((1 string-address))
mem: ((1 string-address)): 4561 <= 4153
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4153 3 21)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 4562 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4153 3 21)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: 21 => ((3 integer))
mem: ((3 integer)): 4563 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4153 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: 21 => ((4 integer))
mem: ((4 integer)): 4564 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 21
mem: ((3 integer)) => 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 0: 4590 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (21 21)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 1: 21 => ((1 integer))
mem: ((1 integer)): 4592 <= 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (21 21)
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 2: 21 => ((2 integer))
mem: ((2 integer)): 4593 <= 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 21
mem: ((2 integer)) => 21
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4594 <= nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 5: 21 => ((3 integer))
mem: ((3 integer)): 4563 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 21
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 6: 18 => ((4 integer))
mem: ((4 integer)): 4564 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 7: 4621 => ((5 string-address))
mem: ((5 string-address)): 4565 <= 4621
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 8: 3 => ((6 integer))
mem: ((6 integer)): 4566 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4567 <= 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 3
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4157 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4569 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4622 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4622
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4622 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 4 => ((6 integer))
mem: ((6 integer)): 4566 <= 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 4567 <= 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 4
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 4
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4158 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4569 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4623 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4623
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4623 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 5 => ((6 integer))
mem: ((6 integer)): 4566 <= 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 4567 <= 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4159 byte) (raw)) => =
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 4569 <= #\=
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4624 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4624
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4624 <= #\=
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 4566 <= 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 4567 <= 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4160 byte) (raw)) => >
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\> => ((9 character))
mem: ((9 character)): 4569 <= #\>
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4625 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4625
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => >
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\> => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4625 <= #\>
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 4566 <= 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 4567 <= 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4161 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4569 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4626 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4626
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4626 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 4566 <= 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 4567 <= 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4162 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 4569 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4627 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4627
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4627 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 4566 <= 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 4567 <= 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4163 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 4569 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4628 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4628
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4628 <= #\(
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 4566 <= 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 4567 <= 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4164 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4569 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4629 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4629
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4629 <= #\1
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 4566 <= 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 4567 <= 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4165 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4569 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4630 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4630
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4630 <= #\space
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 4566 <= 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 4567 <= 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4166 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 4569 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4631 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4631
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4631 <= #\i
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 4566 <= 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 4567 <= 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4167 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 4569 <= #\n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4632 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4632
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4632 <= #\n
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 4566 <= 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 4567 <= 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4168 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 4569 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4633 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4633
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4633 <= #\t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 4566 <= 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 4567 <= 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4169 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4569 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4634 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4634
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4634 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 4566 <= 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 4567 <= 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4170 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 4569 <= #\g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4635 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4635
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4635 <= #\g
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 4566 <= 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 4567 <= 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4171 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4569 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4636 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4636
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4636 <= #\e
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 4566 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 4567 <= 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4172 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 4569 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4637 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4637
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4637 <= #\r
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 4566 <= 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 4567 <= 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4173 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 4569 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4638 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4638
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4638 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 4566 <= 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 4567 <= 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4568 <= nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((4153 string) (raw))
mem: ((4153 integer) (raw)) => 21
mem: ((4174 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 4569 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((4621 string) (raw))
mem: ((4621 integer) (raw)) => 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4639 => ((10 character-address))
mem: ((10 character-address)): 4570 <= 4639
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4639 <= #\)
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 4566 <= 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 4567 <= 18
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 21
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 4568 <= t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-instruction-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4621
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 13: 4621 => ((6 string-address))
mem: ((6 string-address)): 4347 <= 4621
run: split-first-at-substring/parse-instruction-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 4557
mem: ((6 string-address)) => 4621
run: parse-instruction-trace/parse-traces/main 9: 4557 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 3959 <= 4557
run: parse-instruction-trace/parse-traces/main 9: 4621 => ((5 string-address))
mem: ((5 string-address)): 3933 <= 4621
run: parse-instruction-trace/parse-traces/main 10: (((9 string-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((2 offset)))
run: parse-instruction-trace/parse-traces/main 10: 3960 => ((9 string-address-address))
mem: ((9 string-address-address)): 3937 <= 3960
run: parse-instruction-trace/parse-traces/main 11: (((9 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 4621
run: parse-instruction-trace/parse-traces/main 11: 4621 => ((9 string-address-address) (deref))
mem: ((9 string-address-address) (deref)): 3960 <= 4621
run: parse-instruction-trace/parse-traces/main 12: (((reply)) ((3 instruction-trace-address)))
mem: ((3 instruction-trace-address)) => 3958
run: parse-traces/main 18: 3958 => ((3 instruction-trace-address))
mem: ((3 instruction-trace-address)): 1197 <= 3958
run: parse-traces/main 19: (((2 buffer-address)) <- ((append)) ((2 buffer-address)) ((3 instruction-trace-address)))
mem: ((2 buffer-address)) => 1255
mem: ((3 instruction-trace-address)) => 3958
run: append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/parse-traces/main 0: 4640 => ((default-space space-address))
run: append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1255 3958)
run: append/parse-traces/main 1: 1255 => ((1 buffer-address))
mem: ((1 buffer-address)): 4642 <= 1255
run: append/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1255 3958)
run: append/parse-traces/main 2: 3958 => ((2 character))
mem: ((2 character)): 4643 <= 3958
run: append/parse-traces/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 1255
run: buffer-full?/append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/parse-traces/main 0: 4671 => ((default-space space-address))
run: buffer-full?/append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1255)
run: buffer-full?/append/parse-traces/main 1: 1255 => ((1 buffer-address))
mem: ((1 buffer-address)): 4673 <= 1255
run: buffer-full?/append/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1255 integer) (raw)) => 1
run: buffer-full?/append/parse-traces/main 2: 1 => ((2 integer))
mem: ((2 integer)): 4674 <= 1
run: buffer-full?/append/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1256 string-address) (raw)) => 1257
run: buffer-full?/append/parse-traces/main 3: 1257 => ((3 string-address))
mem: ((3 string-address)): 4675 <= 1257
run: buffer-full?/append/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1257 integer) (raw)) => 30
run: buffer-full?/append/parse-traces/main 4: 30 => ((4 integer))
mem: ((4 integer)): 4676 <= 30
run: buffer-full?/append/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 1
mem: ((4 integer)) => 30
run: buffer-full?/append/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4677 <= nil
run: buffer-full?/append/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4644 <= nil
run: append/parse-traces/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/parse-traces/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/parse-traces/main 6: 1255 => ((4 integer-address))
mem: ((4 integer-address)): 4645 <= 1255
run: append/parse-traces/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1256 string-address) (raw)) => 1257
run: append/parse-traces/main 7: 1257 => ((5 string-address))
mem: ((5 string-address)): 4646 <= 1257
run: append/parse-traces/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 1
array-len: ((1257 string) (raw))
mem: ((1257 integer) (raw)) => 30
run: append/parse-traces/main 8: 1259 => ((6 byte-address))
mem: ((6 byte-address)): 4647 <= 1259
run: append/parse-traces/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 3958
run: append/parse-traces/main 9: 3958 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 1259 <= 3958
run: append/parse-traces/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 1
run: append/parse-traces/main 10: 2 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 1255 <= 2
run: append/parse-traces/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 1255
run: parse-traces/main 19: 1255 => ((2 buffer-address))
mem: ((2 buffer-address)): 1196 <= 1255
run: parse-traces/main 20: (((jump)) ((-15 offset)))
run: parse-traces/main 6: next-line
run: parse-traces/main 7: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
mem: ((1 stream-address)) => 1191
run: end-of-stream?/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: end-of-stream?/parse-traces/main 0: 4702 => ((default-space space-address))
run: end-of-stream?/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1191)
run: end-of-stream?/parse-traces/main 1: 1191 => ((1 stream-address))
mem: ((1 stream-address)): 4704 <= 1191
run: end-of-stream?/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 stream-address) (deref)) ((0 offset)))
mem: ((1191 integer) (raw)) => 102
run: end-of-stream?/parse-traces/main 2: 102 => ((2 integer))
mem: ((2 integer)): 4705 <= 102
run: end-of-stream?/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1192 string-address) (raw)) => 1031
run: end-of-stream?/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 4706 <= 1031
run: end-of-stream?/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: end-of-stream?/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 4707 <= 128
run: end-of-stream?/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 102
mem: ((4 integer)) => 128
run: end-of-stream?/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4708 <= nil
run: end-of-stream?/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: parse-traces/main 7: nil => ((6 boolean))
mem: ((6 boolean)): 1200 <= nil
run: parse-traces/main 8: (((jump-if)) ((6 boolean)) ((15 offset)))
mem: ((6 boolean)) => nil
run: parse-traces/main 9: (((7 string-address)) <- ((read-line)) ((1 stream-address)))
mem: ((1 stream-address)) => 1191
run: read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: read-line/parse-traces/main 0: 4733 => ((default-space space-address))
run: read-line/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1191)
run: read-line/parse-traces/main 1: 1191 => ((1 stream-address))
mem: ((1 stream-address)): 4735 <= 1191
run: read-line/parse-traces/main 2: (((2 integer-address)) <- ((get-address)) ((1 stream-address) (deref)) ((0 offset)))
run: read-line/parse-traces/main 2: 1191 => ((2 integer-address))
mem: ((2 integer-address)): 4736 <= 1191
run: read-line/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1192 string-address) (raw)) => 1031
run: read-line/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 4737 <= 1031
run: read-line/parse-traces/main 4: (((4 integer)) <- ((find-next)) ((3 string-address)) ((
 literal)) ((2 integer-address) (deref)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 102
run: find-next/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/read-line/parse-traces/main 0: 4764 => ((default-space space-address))
run: find-next/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 #\newline 102)
run: find-next/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 4766 <= 1031
run: find-next/read-line/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1031 #\newline 102)
run: find-next/read-line/parse-traces/main 2: #\newline => ((2 character))
mem: ((2 character)): 4767 <= #\newline
run: find-next/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 #\newline 102)
run: find-next/read-line/parse-traces/main 3: 102 => ((3 integer))
mem: ((3 integer)): 4768 <= 102
run: find-next/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: find-next/read-line/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 4769 <= 128
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 102
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 102
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1134 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 4771 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 102
run: find-next/read-line/parse-traces/main 10: 103 => ((3 integer))
mem: ((3 integer)): 4768 <= 103
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 103
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 103
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1135 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 4771 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 103
run: find-next/read-line/parse-traces/main 10: 104 => ((3 integer))
mem: ((3 integer)): 4768 <= 104
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 104
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 104
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1136 byte) (raw)) => m
run: find-next/read-line/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 4771 <= #\m
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 104
run: find-next/read-line/parse-traces/main 10: 105 => ((3 integer))
mem: ((3 integer)): 4768 <= 105
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 105
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 105
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1137 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 4771 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 105
run: find-next/read-line/parse-traces/main 10: 106 => ((3 integer))
mem: ((3 integer)): 4768 <= 106
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 106
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 106
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1138 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 4771 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 106
run: find-next/read-line/parse-traces/main 10: 107 => ((3 integer))
mem: ((3 integer)): 4768 <= 107
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 107
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 107
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1139 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 4771 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 107
run: find-next/read-line/parse-traces/main 10: 108 => ((3 integer))
mem: ((3 integer)): 4768 <= 108
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 108
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 108
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1140 byte) (raw)) => (
run: find-next/read-line/parse-traces/main 7: #\( => ((6 byte))
mem: ((6 byte)): 4771 <= #\(
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => (
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 108
run: find-next/read-line/parse-traces/main 10: 109 => ((3 integer))
mem: ((3 integer)): 4768 <= 109
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 109
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 109
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1141 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 4771 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 109
run: find-next/read-line/parse-traces/main 10: 110 => ((3 integer))
mem: ((3 integer)): 4768 <= 110
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 110
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 110
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1142 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 4771 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 110
run: find-next/read-line/parse-traces/main 10: 111 => ((3 integer))
mem: ((3 integer)): 4768 <= 111
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 111
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 111
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1143 byte) (raw)) => i
run: find-next/read-line/parse-traces/main 7: #\i => ((6 byte))
mem: ((6 byte)): 4771 <= #\i
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => i
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 111
run: find-next/read-line/parse-traces/main 10: 112 => ((3 integer))
mem: ((3 integer)): 4768 <= 112
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 112
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 112
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1144 byte) (raw)) => n
run: find-next/read-line/parse-traces/main 7: #\n => ((6 byte))
mem: ((6 byte)): 4771 <= #\n
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => n
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 112
run: find-next/read-line/parse-traces/main 10: 113 => ((3 integer))
mem: ((3 integer)): 4768 <= 113
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 113
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 113
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1145 byte) (raw)) => t
run: find-next/read-line/parse-traces/main 7: #\t => ((6 byte))
mem: ((6 byte)): 4771 <= #\t
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => t
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 113
run: find-next/read-line/parse-traces/main 10: 114 => ((3 integer))
mem: ((3 integer)): 4768 <= 114
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 114
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 114
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1146 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 4771 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 114
run: find-next/read-line/parse-traces/main 10: 115 => ((3 integer))
mem: ((3 integer)): 4768 <= 115
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 115
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 115
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1147 byte) (raw)) => g
run: find-next/read-line/parse-traces/main 7: #\g => ((6 byte))
mem: ((6 byte)): 4771 <= #\g
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => g
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 115
run: find-next/read-line/parse-traces/main 10: 116 => ((3 integer))
mem: ((3 integer)): 4768 <= 116
schedule: scheduling find-next/read-line/parse-traces/main for further processing
schedule: find-next/read-line/parse-traces/main
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 116
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 116
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1148 byte) (raw)) => e
run: find-next/read-line/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 4771 <= #\e
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 116
run: find-next/read-line/parse-traces/main 10: 117 => ((3 integer))
mem: ((3 integer)): 4768 <= 117
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 117
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 117
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1149 byte) (raw)) => r
run: find-next/read-line/parse-traces/main 7: #\r => ((6 byte))
mem: ((6 byte)): 4771 <= #\r
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => r
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 117
run: find-next/read-line/parse-traces/main 10: 118 => ((3 integer))
mem: ((3 integer)): 4768 <= 118
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 118
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 118
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1150 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 4771 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 118
run: find-next/read-line/parse-traces/main 10: 119 => ((3 integer))
mem: ((3 integer)): 4768 <= 119
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 119
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 119
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1151 byte) (raw)) => )
run: find-next/read-line/parse-traces/main 7: #\) => ((6 byte))
mem: ((6 byte)): 4771 <= #\)
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => )
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 119
run: find-next/read-line/parse-traces/main 10: 120 => ((3 integer))
mem: ((3 integer)): 4768 <= 120
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 120
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 120
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1152 byte) (raw)) => :
run: find-next/read-line/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 4771 <= #\:
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 120
run: find-next/read-line/parse-traces/main 10: 121 => ((3 integer))
mem: ((3 integer)): 4768 <= 121
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 121
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 121
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1153 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 4771 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 121
run: find-next/read-line/parse-traces/main 10: 122 => ((3 integer))
mem: ((3 integer)): 4768 <= 122
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 122
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 122
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1154 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 4771 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 122
run: find-next/read-line/parse-traces/main 10: 123 => ((3 integer))
mem: ((3 integer)): 4768 <= 123
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 123
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 123
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1155 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 4771 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 123
run: find-next/read-line/parse-traces/main 10: 124 => ((3 integer))
mem: ((3 integer)): 4768 <= 124
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 124
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 124
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1156 byte) (raw)) => <
run: find-next/read-line/parse-traces/main 7: #\< => ((6 byte))
mem: ((6 byte)): 4771 <= #\<
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => <
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 124
run: find-next/read-line/parse-traces/main 10: 125 => ((3 integer))
mem: ((3 integer)): 4768 <= 125
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 125
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 125
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1157 byte) (raw)) => =
run: find-next/read-line/parse-traces/main 7: #\= => ((6 byte))
mem: ((6 byte)): 4771 <= #\=
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => =
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 125
run: find-next/read-line/parse-traces/main 10: 126 => ((3 integer))
mem: ((3 integer)): 4768 <= 126
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 126
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 126
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1158 byte) (raw)) =>  
run: find-next/read-line/parse-traces/main 7: #\space => ((6 byte))
mem: ((6 byte)): 4771 <= #\space
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) =>  
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 126
run: find-next/read-line/parse-traces/main 10: 127 => ((3 integer))
mem: ((3 integer)): 4768 <= 127
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 127
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 4770 <= nil
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/read-line/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 127
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1159 byte) (raw)) => 1
run: find-next/read-line/parse-traces/main 7: #\1 => ((6 byte))
mem: ((6 byte)): 4771 <= #\1
run: find-next/read-line/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => 1
mem: ((2 character)) => 

run: find-next/read-line/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4772 <= nil
run: find-next/read-line/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/read-line/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 127
run: find-next/read-line/parse-traces/main 10: 128 => ((3 integer))
mem: ((3 integer)): 4768 <= 128
run: find-next/read-line/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/read-line/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 128
mem: ((4 integer)) => 128
run: find-next/read-line/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 4770 <= t
run: find-next/read-line/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => t
run: find-next/read-line/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 128
run: read-line/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 4738 <= 128
run: read-line/parse-traces/main 5: (((5 string-address)) <- ((string-copy)) ((3 string-address)) ((2 integer-address) (deref)) ((4 integer)))
mem: ((3 string-address)) => 1031
mem: ((2 integer-address) (deref)) => 102
mem: ((4 integer)) => 128
run: string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/read-line/parse-traces/main 0: 4795 => ((default-space space-address))
run: string-copy/read-line/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (1031 102 128)
run: string-copy/read-line/parse-traces/main 1: 1031 => ((1 string-address))
mem: ((1 string-address)): 4797 <= 1031
run: string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (1031 102 128)
run: string-copy/read-line/parse-traces/main 2: 102 => ((2 integer))
mem: ((2 integer)): 4798 <= 102
run: string-copy/read-line/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (1031 102 128)
run: string-copy/read-line/parse-traces/main 3: 128 => ((3 integer))
mem: ((3 integer)): 4799 <= 128
run: string-copy/read-line/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: string-copy/read-line/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 4800 <= 128
run: string-copy/read-line/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 128
mem: ((3 integer)) => 128
run: min/string-copy/read-line/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/read-line/parse-traces/main 0: 4826 => ((default-space space-address))
run: min/string-copy/read-line/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (128 128)
run: min/string-copy/read-line/parse-traces/main 1: 128 => ((1 integer))
mem: ((1 integer)): 4828 <= 128
run: min/string-copy/read-line/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (128 128)
run: min/string-copy/read-line/parse-traces/main 2: 128 => ((2 integer))
mem: ((2 integer)): 4829 <= 128
run: min/string-copy/read-line/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 128
mem: ((2 integer)) => 128
run: min/string-copy/read-line/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 4830 <= nil
run: min/string-copy/read-line/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/read-line/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 128
run: string-copy/read-line/parse-traces/main 5: 128 => ((3 integer))
mem: ((3 integer)): 4799 <= 128
run: string-copy/read-line/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 128
mem: ((2 integer)) => 102
run: string-copy/read-line/parse-traces/main 6: 26 => ((4 integer))
mem: ((4 integer)): 4800 <= 26
run: string-copy/read-line/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 26
run: string-copy/read-line/parse-traces/main 7: 4857 => ((5 string-address))
mem: ((5 string-address)): 4801 <= 4857
run: string-copy/read-line/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 102
run: string-copy/read-line/parse-traces/main 8: 102 => ((6 integer))
mem: ((6 integer)): 4802 <= 102
run: string-copy/read-line/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/read-line/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 4803 <= 0
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 102
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 102
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1134 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 4805 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4858 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4858
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4858 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 102
run: string-copy/read-line/parse-traces/main 15: 103 => ((6 integer))
mem: ((6 integer)): 4802 <= 103
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/read-line/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 4803 <= 1
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 103
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 103
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1135 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4805 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4859 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4859
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4859 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 103
run: string-copy/read-line/parse-traces/main 15: 104 => ((6 integer))
mem: ((6 integer)): 4802 <= 104
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/read-line/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 4803 <= 2
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 104
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 104
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1136 byte) (raw)) => m
run: string-copy/read-line/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 4805 <= #\m
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4860 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4860
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/read-line/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4860 <= #\m
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 104
run: string-copy/read-line/parse-traces/main 15: 105 => ((6 integer))
mem: ((6 integer)): 4802 <= 105
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/read-line/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 4803 <= 3
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 105
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 105
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1137 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 4805 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4861 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4861
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4861 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 105
run: string-copy/read-line/parse-traces/main 15: 106 => ((6 integer))
mem: ((6 integer)): 4802 <= 106
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/read-line/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 4803 <= 4
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 106
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 106
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1138 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4805 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4862 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4862
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4862 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 106
run: string-copy/read-line/parse-traces/main 15: 107 => ((6 integer))
mem: ((6 integer)): 4802 <= 107
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/read-line/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 4803 <= 5
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 107
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 107
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1139 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 4805 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4863 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4863
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4863 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 107
run: string-copy/read-line/parse-traces/main 15: 108 => ((6 integer))
mem: ((6 integer)): 4802 <= 108
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/read-line/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 4803 <= 6
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 108
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 108
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1140 byte) (raw)) => (
run: string-copy/read-line/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 4805 <= #\(
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4864 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4864
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/read-line/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4864 <= #\(
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 108
run: string-copy/read-line/parse-traces/main 15: 109 => ((6 integer))
mem: ((6 integer)): 4802 <= 109
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/read-line/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 4803 <= 7
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 109
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 109
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1141 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4805 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4865 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4865
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4865 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 109
run: string-copy/read-line/parse-traces/main 15: 110 => ((6 integer))
mem: ((6 integer)): 4802 <= 110
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/read-line/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 4803 <= 8
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 110
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 110
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1142 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4805 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4866 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4866
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4866 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 110
run: string-copy/read-line/parse-traces/main 15: 111 => ((6 integer))
mem: ((6 integer)): 4802 <= 111
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/read-line/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 4803 <= 9
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 111
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 111
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1143 byte) (raw)) => i
run: string-copy/read-line/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 4805 <= #\i
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4867 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4867
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/read-line/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4867 <= #\i
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 111
run: string-copy/read-line/parse-traces/main 15: 112 => ((6 integer))
mem: ((6 integer)): 4802 <= 112
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/read-line/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 4803 <= 10
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 112
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 112
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1144 byte) (raw)) => n
run: string-copy/read-line/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 4805 <= #\n
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4868 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4868
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/read-line/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4868 <= #\n
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 112
run: string-copy/read-line/parse-traces/main 15: 113 => ((6 integer))
mem: ((6 integer)): 4802 <= 113
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/read-line/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 4803 <= 11
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 113
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 113
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1145 byte) (raw)) => t
run: string-copy/read-line/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 4805 <= #\t
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4869 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4869
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/read-line/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4869 <= #\t
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 113
run: string-copy/read-line/parse-traces/main 15: 114 => ((6 integer))
mem: ((6 integer)): 4802 <= 114
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/read-line/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 4803 <= 12
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 114
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 114
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1146 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4805 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4870 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4870
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4870 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 114
run: string-copy/read-line/parse-traces/main 15: 115 => ((6 integer))
mem: ((6 integer)): 4802 <= 115
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/read-line/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 4803 <= 13
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 115
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 115
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1147 byte) (raw)) => g
run: string-copy/read-line/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 4805 <= #\g
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4871 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4871
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/read-line/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4871 <= #\g
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 115
run: string-copy/read-line/parse-traces/main 15: 116 => ((6 integer))
mem: ((6 integer)): 4802 <= 116
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/read-line/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 4803 <= 14
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 116
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 116
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1148 byte) (raw)) => e
run: string-copy/read-line/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 4805 <= #\e
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4872 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4872
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/read-line/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4872 <= #\e
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 116
run: string-copy/read-line/parse-traces/main 15: 117 => ((6 integer))
mem: ((6 integer)): 4802 <= 117
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/read-line/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 4803 <= 15
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 117
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 117
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1149 byte) (raw)) => r
run: string-copy/read-line/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 4805 <= #\r
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4873 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4873
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/read-line/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4873 <= #\r
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 117
run: string-copy/read-line/parse-traces/main 15: 118 => ((6 integer))
mem: ((6 integer)): 4802 <= 118
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/read-line/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 4803 <= 16
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 118
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 118
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1150 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 4805 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4874 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4874
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4874 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 118
run: string-copy/read-line/parse-traces/main 15: 119 => ((6 integer))
mem: ((6 integer)): 4802 <= 119
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/read-line/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 4803 <= 17
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 119
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 119
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1151 byte) (raw)) => )
run: string-copy/read-line/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 4805 <= #\)
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4875 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4875
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/read-line/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4875 <= #\)
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 119
run: string-copy/read-line/parse-traces/main 15: 120 => ((6 integer))
mem: ((6 integer)): 4802 <= 120
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/read-line/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 4803 <= 18
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 120
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 120
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1152 byte) (raw)) => :
run: string-copy/read-line/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 4805 <= #\:
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4876 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4876
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/read-line/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4876 <= #\:
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 120
run: string-copy/read-line/parse-traces/main 15: 121 => ((6 integer))
mem: ((6 integer)): 4802 <= 121
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/read-line/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 4803 <= 19
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 121
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 121
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1153 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4805 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4877 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4877
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4877 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 121
run: string-copy/read-line/parse-traces/main 15: 122 => ((6 integer))
mem: ((6 integer)): 4802 <= 122
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/read-line/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 4803 <= 20
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 122
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 122
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1154 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4805 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4878 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4878
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4878 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 122
run: string-copy/read-line/parse-traces/main 15: 123 => ((6 integer))
mem: ((6 integer)): 4802 <= 123
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/read-line/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 4803 <= 21
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 123
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 123
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1155 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4805 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 21
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4879 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4879
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4879 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 123
run: string-copy/read-line/parse-traces/main 15: 124 => ((6 integer))
mem: ((6 integer)): 4802 <= 124
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 21
run: string-copy/read-line/parse-traces/main 16: 22 => ((7 integer))
mem: ((7 integer)): 4803 <= 22
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 124
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 124
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1156 byte) (raw)) => <
run: string-copy/read-line/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 4805 <= #\<
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 22
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4880 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4880
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/read-line/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4880 <= #\<
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 124
run: string-copy/read-line/parse-traces/main 15: 125 => ((6 integer))
mem: ((6 integer)): 4802 <= 125
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 22
run: string-copy/read-line/parse-traces/main 16: 23 => ((7 integer))
mem: ((7 integer)): 4803 <= 23
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 125
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 125
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1157 byte) (raw)) => =
run: string-copy/read-line/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 4805 <= #\=
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 23
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4881 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4881
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/read-line/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4881 <= #\=
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 125
run: string-copy/read-line/parse-traces/main 15: 126 => ((6 integer))
mem: ((6 integer)): 4802 <= 126
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 23
run: string-copy/read-line/parse-traces/main 16: 24 => ((7 integer))
mem: ((7 integer)): 4803 <= 24
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 126
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 126
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1158 byte) (raw)) =>  
run: string-copy/read-line/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 4805 <= #\space
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 24
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4882 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4882
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/read-line/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4882 <= #\space
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 126
run: string-copy/read-line/parse-traces/main 15: 127 => ((6 integer))
mem: ((6 integer)): 4802 <= 127
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 24
run: string-copy/read-line/parse-traces/main 16: 25 => ((7 integer))
mem: ((7 integer)): 4803 <= 25
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 127
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 4804 <= nil
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/read-line/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 127
array-len: ((1031 string) (raw))
mem: ((1031 integer) (raw)) => 128
mem: ((1159 byte) (raw)) => 1
run: string-copy/read-line/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 4805 <= #\1
run: string-copy/read-line/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 25
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
run: string-copy/read-line/parse-traces/main 13: 4883 => ((10 character-address))
mem: ((10 character-address)): 4806 <= 4883
run: string-copy/read-line/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/read-line/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 4883 <= #\1
run: string-copy/read-line/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 127
run: string-copy/read-line/parse-traces/main 15: 128 => ((6 integer))
mem: ((6 integer)): 4802 <= 128
run: string-copy/read-line/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 25
run: string-copy/read-line/parse-traces/main 16: 26 => ((7 integer))
mem: ((7 integer)): 4803 <= 26
run: string-copy/read-line/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/read-line/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 128
mem: ((3 integer)) => 128
run: string-copy/read-line/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 4804 <= t
run: string-copy/read-line/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/read-line/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4857
run: read-line/parse-traces/main 5: 4857 => ((5 string-address))
mem: ((5 string-address)): 4739 <= 4857
run: read-line/parse-traces/main 6: (((2 integer-address) (deref)) <- ((add)) ((4 integer)) ((1 literal)))
mem: ((4 integer)) => 128
run: read-line/parse-traces/main 6: 129 => ((2 integer-address) (deref))
mem: ((2 integer-address) (deref)): 1191 <= 129
run: read-line/parse-traces/main 7: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 4857
run: parse-traces/main 9: 4857 => ((7 string-address))
mem: ((7 string-address)): 1201 <= 4857
run: parse-traces/main 10: (((8 trace-address)) <- ((parse-trace)) ((7 string-address)))
mem: ((7 string-address)) => 4857
run: parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: parse-trace/parse-traces/main 0: 4884 => ((default-space space-address))
run: parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4857)
run: parse-trace/parse-traces/main 1: 4857 => ((1 string-address))
mem: ((1 string-address)): 4886 <= 4857
run: parse-trace/parse-traces/main 2: (((2 trace-address)) <- ((new)) ((trace literal)))
run: parse-trace/parse-traces/main 2: 4915 => ((2 trace-address))
mem: ((2 trace-address)): 4887 <= 4915
run: parse-trace/parse-traces/main 3: (((3 string-address)) <- ((new)) : )
run: parse-trace/parse-traces/main 3: 4917 => ((3 string-address))
mem: ((3 string-address)): 4888 <= 4917
run: parse-trace/parse-traces/main 4: (((4 string-address)) ((5 string-address)) <- ((split-first-at-substring)) ((1 string-address)) ((3 string-address)))
mem: ((1 string-address)) => 4857
mem: ((3 string-address)) => 4917
run: split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: split-first-at-substring/parse-trace/parse-traces/main 0: 4920 => ((default-space space-address))
run: split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4857 4917)
run: split-first-at-substring/parse-trace/parse-traces/main 1: 4857 => ((1 string-address))
mem: ((1 string-address)): 4922 <= 4857
run: split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4857 4917)
run: split-first-at-substring/parse-trace/parse-traces/main 2: 4917 => ((2 string-address))
mem: ((2 string-address)): 4923 <= 4917
run: split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4857 integer) (raw)) => 26
run: split-first-at-substring/parse-trace/parse-traces/main 3: 26 => ((3 integer))
mem: ((3 integer)): 4924 <= 26
run: split-first-at-substring/parse-trace/parse-traces/main 4: (((4 boolean)) <- ((equal)) ((3 integer)) ((0 literal)))
mem: ((3 integer)) => 26
run: split-first-at-substring/parse-trace/parse-traces/main 4: nil => ((4 boolean))
mem: ((4 boolean)): 4925 <= nil
run: split-first-at-substring/parse-trace/parse-traces/main 5: (((jump-unless)) ((4 boolean)) ((3 offset)))
mem: ((4 boolean)) => nil
run: split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((find-substring)) ((1 string-address)) ((2 string-address)) ((0 literal)))
mem: ((1 string-address)) => 4857
mem: ((2 string-address)) => 4917
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 4951 => ((default-space space-address))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4857 4917 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 4857 => ((1 string-address))
mem: ((1 string-address)): 4953 <= 4857
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4857 4917 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 4917 => ((2 string-address))
mem: ((2 string-address)): 4954 <= 4917
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4857 4917 0)
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 4955 <= 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 character)) <- ((index)) ((2 string-address) (deref)) ((0 literal)))
array-len: ((4917 string) (raw))
mem: ((4917 integer) (raw)) => 2
mem: ((4918 byte) (raw)) => :
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: #\: => ((4 character))
mem: ((4 character)): 4956 <= #\:
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4857 integer) (raw)) => 26
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 26 => ((5 integer))
mem: ((5 integer)): 4957 <= 26
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 26
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 4958 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 4857
mem: ((2 string-address)) => 4917
mem: ((3 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 4982 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4857 4917 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 4857 => ((1 string-address))
mem: ((1 string-address)): 4984 <= 4857
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4857 4917 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 4917 => ((2 string-address))
mem: ((2 string-address)): 4985 <= 4917
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4857 4917 0)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 0 => ((3 integer))
mem: ((3 integer)): 4986 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((4917 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 4987 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4857 integer) (raw)) => 26
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 26 => ((5 integer))
mem: ((5 integer)): 4988 <= 26
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 26
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 24 => ((5 integer))
mem: ((5 integer)): 4988 <= 24
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 0
mem: ((5 integer)) => 24
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 4989 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 4990 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 4991 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 0
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4858 byte) (raw)) => m
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\m => ((9 character))
mem: ((9 character)): 4992 <= #\m
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4917 string) (raw))
mem: ((4917 integer) (raw)) => 2
mem: ((4918 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 4993 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => m
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: nil => ((11 boolean))
mem: ((11 boolean)): 4994 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 17: (((reply)) ((nil literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 4959 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 0
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 1 => ((3 integer))
mem: ((3 integer)): 4955 <= 1
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((3 integer)) <- ((find-next)) ((1 string-address)) ((4 character)) ((3 integer)))
mem: ((1 string-address)) => 4857
mem: ((4 character)) => :
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 5013 => ((default-space space-address))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4857 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 4857 => ((1 string-address))
mem: ((1 string-address)): 5015 <= 4857
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (4857 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: #\: => ((2 character))
mem: ((2 character)): 5016 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4857 #\: 1)
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 1 => ((3 integer))
mem: ((3 integer)): 5017 <= 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4857 integer) (raw)) => 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 5018 <= 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 1
mem: ((4 integer)) => 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5019 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 1
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4859 byte) (raw)) => e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\e => ((6 byte))
mem: ((6 byte)): 5020 <= #\e
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => e
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5021 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 1
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 2 => ((3 integer))
mem: ((3 integer)): 5017 <= 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 2
mem: ((4 integer)) => 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5019 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 2
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4860 byte) (raw)) => m
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\m => ((6 byte))
mem: ((6 byte)): 5020 <= #\m
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => m
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: nil => ((7 boolean))
mem: ((7 boolean)): 5021 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 2
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 3 => ((3 integer))
mem: ((3 integer)): 5017 <= 3
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump)) ((-7 offset)))
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((3 integer)) ((4 integer)))
mem: ((3 integer)) => 3
mem: ((4 integer)) => 26
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5019 <= nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((5 offset)))
mem: ((5 boolean)) => nil
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 byte)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4861 byte) (raw)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: #\: => ((6 byte))
mem: ((6 byte)): 5020 <= #\:
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((equal)) ((6 byte)) ((2 character)))
mem: ((6 byte)) => :
mem: ((2 character)) => :
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 5021 <= t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((2 offset)))
mem: ((7 boolean)) => t
run: find-next/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: 3 => ((3 integer))
mem: ((3 integer)): 4955 <= 3
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump)) ((-7 offset)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((6 boolean)) <- ((greater-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 26
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: nil => ((6 boolean))
mem: ((6 boolean)): 4958 <= nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((7 boolean)) <- ((match-at)) ((1 string-address)) ((2 string-address)) ((3 integer)))
mem: ((1 string-address)) => 4857
mem: ((2 string-address)) => 4917
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 0: 5044 => ((default-space space-address))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4857 4917 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 1: 4857 => ((1 string-address))
mem: ((1 string-address)): 5046 <= 4857
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 string-address)) <- ((next-input)))
arg: nil 1 (4857 4917 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 2: 4917 => ((2 string-address))
mem: ((2 string-address)): 5047 <= 4917
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4857 4917 3)
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 5048 <= 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((4917 integer) (raw)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 4: 2 => ((4 integer))
mem: ((4 integer)): 5049 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: (((5 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4857 integer) (raw)) => 26
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 5: 26 => ((5 integer))
mem: ((5 integer)): 5050 <= 26
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: (((5 integer)) <- ((subtract)) ((5 integer)) ((4 integer)))
mem: ((5 integer)) => 26
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 6: 24 => ((5 integer))
mem: ((5 integer)): 5050 <= 24
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: (((6 boolean)) <- ((lesser-or-equal)) ((3 integer)) ((5 integer)))
mem: ((3 integer)) => 3
mem: ((5 integer)) => 24
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 5051 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: (((jump-if)) ((6 boolean)) ((1 offset)))
mem: ((6 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: (((7 integer)) <- ((copy)) ((0 literal)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 10: 0 => ((7 integer))
mem: ((7 integer)): 5052 <= 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 0
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 5053 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 3
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4861 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\: => ((9 character))
mem: ((9 character)): 5054 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((4917 string) (raw))
mem: ((4917 integer) (raw)) => 2
mem: ((4918 byte) (raw)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character))
mem: ((10 character)): 5055 <= #\:
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) => :
mem: ((10 character)) => :
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 5056 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 3
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 4 => ((3 integer))
mem: ((3 integer)): 5048 <= 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 1 => ((7 integer))
mem: ((7 integer)): 5052 <= 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 1
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: nil => ((8 boolean))
mem: ((8 boolean)): 5053 <= nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => nil
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((3 integer)))
mem: ((3 integer)) => 4
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4862 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: #\space => ((9 character))
mem: ((9 character)): 5054 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character)) <- ((index)) ((2 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((4917 string) (raw))
mem: ((4917 integer) (raw)) => 2
mem: ((4919 byte) (raw)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character))
mem: ((10 character)): 5055 <= #\space
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: (((11 boolean)) <- ((equal)) ((9 character)) ((10 character)))
mem: ((9 character)) =>  
mem: ((10 character)) =>  
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 15: t => ((11 boolean))
mem: ((11 boolean)): 5056 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 16: (((jump-if)) ((11 boolean)) ((1 offset)))
mem: ((11 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: (((3 integer)) <- ((add)) ((3 integer)) ((1 literal)))
mem: ((3 integer)) => 4
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 18: 5 => ((3 integer))
mem: ((3 integer)): 5048 <= 5
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 19: 2 => ((7 integer))
mem: ((7 integer)): 5052 <= 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 20: (((jump)) ((-10 offset)))
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: (((8 boolean)) <- ((greater-or-equal)) ((7 integer)) ((4 integer)))
mem: ((7 integer)) => 2
mem: ((4 integer)) => 2
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 11: t => ((8 boolean))
mem: ((8 boolean)): 5053 <= t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 12: (((jump-if)) ((8 boolean)) ((8 offset)))
mem: ((8 boolean)) => t
run: match-at/find-substring/split-first-at-substring/parse-trace/parse-traces/main 21: (((reply)) ((t literal)))
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 8: t => ((7 boolean))
mem: ((7 boolean)): 4959 <= t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 9: (((jump-if)) ((7 boolean)) ((3 offset)))
mem: ((7 boolean)) => t
run: find-substring/split-first-at-substring/parse-trace/parse-traces/main 13: (((reply)) ((3 integer)))
mem: ((3 integer)) => 3
run: split-first-at-substring/parse-trace/parse-traces/main 9: 3 => ((7 integer))
mem: ((7 integer)): 4928 <= 3
run: split-first-at-substring/parse-trace/parse-traces/main 10: (((5 string-address)) <- ((string-copy)) ((1 string-address)) ((0 literal)) ((7 integer)))
mem: ((1 string-address)) => 4857
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 5075 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4857 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 4857 => ((1 string-address))
mem: ((1 string-address)): 5077 <= 4857
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4857 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 5078 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4857 0 3)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 3 => ((3 integer))
mem: ((3 integer)): 5079 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4857 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 5080 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 5106 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (26 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 26 => ((1 integer))
mem: ((1 integer)): 5108 <= 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (26 3)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 5109 <= 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 26
mem: ((2 integer)) => 3
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 5110 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 3 => ((3 integer))
mem: ((3 integer)): 5079 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 3
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 3 => ((4 integer))
mem: ((4 integer)): 5080 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 5137 => ((5 string-address))
mem: ((5 string-address)): 5081 <= 5137
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 5082 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 5083 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 0
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5084 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4858 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 5085 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((5137 string) (raw))
mem: ((5137 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5138 => ((10 character-address))
mem: ((10 character-address)): 5086 <= 5138
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5138 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 1 => ((6 integer))
mem: ((6 integer)): 5082 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 5083 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 1
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5084 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 1
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4859 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 5085 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((5137 string) (raw))
mem: ((5137 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5139 => ((10 character-address))
mem: ((10 character-address)): 5086 <= 5139
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5139 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 2 => ((6 integer))
mem: ((6 integer)): 5082 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 5083 <= 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 2
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5084 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 2
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4860 byte) (raw)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\m => ((9 character))
mem: ((9 character)): 5085 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((5137 string) (raw))
mem: ((5137 integer) (raw)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5140 => ((10 character-address))
mem: ((10 character-address)): 5086 <= 5140
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\m => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5140 <= #\m
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 3 => ((6 integer))
mem: ((6 integer)): 5082 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 5083 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 3
mem: ((3 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 5084 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 5137
run: split-first-at-substring/parse-trace/parse-traces/main 10: 5137 => ((5 string-address))
mem: ((5 string-address)): 4926 <= 5137
run: split-first-at-substring/parse-trace/parse-traces/main 11: (((8 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
mem: ((4917 integer) (raw)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 11: 2 => ((8 integer))
mem: ((8 integer)): 4929 <= 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: (((7 integer)) <- ((add)) ((7 integer)) ((8 integer)))
mem: ((7 integer)) => 3
mem: ((8 integer)) => 2
run: split-first-at-substring/parse-trace/parse-traces/main 12: 5 => ((7 integer))
mem: ((7 integer)): 4928 <= 5
run: split-first-at-substring/parse-trace/parse-traces/main 13: (((6 string-address)) <- ((string-copy)) ((1 string-address)) ((7 integer)) ((3 integer)))
mem: ((1 string-address)) => 4857
mem: ((7 integer)) => 5
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 5141 => ((default-space space-address))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (4857 5 26)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 4857 => ((1 string-address))
mem: ((1 string-address)): 5143 <= 4857
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (4857 5 26)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 5 => ((2 integer))
mem: ((2 integer)): 5144 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 integer)) <- ((next-input)))
arg: nil 2 (4857 5 26)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: 26 => ((3 integer))
mem: ((3 integer)): 5145 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((4 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((4857 integer) (raw)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: 26 => ((4 integer))
mem: ((4 integer)): 5146 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((3 integer)) <- ((min)) ((4 integer)) ((3 integer)))
mem: ((4 integer)) => 26
mem: ((3 integer)) => 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 0: 5172 => ((default-space space-address))
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: (((1 integer)) <- ((next-input)))
arg: nil 0 (26 26)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 1: 26 => ((1 integer))
mem: ((1 integer)): 5174 <= 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: (((2 integer)) <- ((next-input)))
arg: nil 1 (26 26)
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 2: 26 => ((2 integer))
mem: ((2 integer)): 5175 <= 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: (((3 boolean)) <- ((less-than)) ((1 integer)) ((2 integer)))
mem: ((1 integer)) => 26
mem: ((2 integer)) => 26
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 5176 <= nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 4: (((jump-if)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: min/string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: (((reply)) ((2 integer)))
mem: ((2 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 5: 26 => ((3 integer))
mem: ((3 integer)): 5145 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: (((4 integer)) <- ((subtract)) ((3 integer)) ((2 integer)))
mem: ((3 integer)) => 26
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 6: 21 => ((4 integer))
mem: ((4 integer)): 5146 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: (((5 string-address)) <- ((new)) ((string literal)) ((4 integer)))
mem: ((4 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 7: 5203 => ((5 string-address))
mem: ((5 string-address)): 5147 <= 5203
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: (((6 integer)) <- ((copy)) ((2 integer)))
mem: ((2 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 8: 5 => ((6 integer))
mem: ((6 integer)): 5148 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: (((7 integer)) <- ((copy)) ((0 literal)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 9: 0 => ((7 integer))
mem: ((7 integer)): 5149 <= 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 5
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 5
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4863 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5151 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 0
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5204 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5204
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5204 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 6 => ((6 integer))
mem: ((6 integer)): 5148 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 0
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 1 => ((7 integer))
mem: ((7 integer)): 5149 <= 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 6
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 6
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4864 byte) (raw)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\( => ((9 character))
mem: ((9 character)): 5151 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 1
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5205 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5205
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => (
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\( => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5205 <= #\(
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 7 => ((6 integer))
mem: ((6 integer)): 5148 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 2 => ((7 integer))
mem: ((7 integer)): 5149 <= 2
schedule: scheduling string-copy/split-first-at-substring/parse-trace/parse-traces/main for further processing
schedule: string-copy/split-first-at-substring/parse-trace/parse-traces/main
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 7
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 7
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4865 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 5151 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 2
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5206 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5206
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5206 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 8 => ((6 integer))
mem: ((6 integer)): 5148 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 2
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 3 => ((7 integer))
mem: ((7 integer)): 5149 <= 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 8
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 8
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4866 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5151 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 3
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5207 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5207
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5207 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 9 => ((6 integer))
mem: ((6 integer)): 5148 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 3
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 4 => ((7 integer))
mem: ((7 integer)): 5149 <= 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 9
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 9
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4867 byte) (raw)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\i => ((9 character))
mem: ((9 character)): 5151 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 4
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5208 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5208
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\i => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5208 <= #\i
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 10 => ((6 integer))
mem: ((6 integer)): 5148 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 4
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 5 => ((7 integer))
mem: ((7 integer)): 5149 <= 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 10
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 10
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4868 byte) (raw)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\n => ((9 character))
mem: ((9 character)): 5151 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 5
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5209 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5209
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\n => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5209 <= #\n
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 11 => ((6 integer))
mem: ((6 integer)): 5148 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 5
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 6 => ((7 integer))
mem: ((7 integer)): 5149 <= 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 11
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 11
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4869 byte) (raw)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\t => ((9 character))
mem: ((9 character)): 5151 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 6
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5210 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5210
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\t => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5210 <= #\t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 12 => ((6 integer))
mem: ((6 integer)): 5148 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 6
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 7 => ((7 integer))
mem: ((7 integer)): 5149 <= 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 12
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 12
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4870 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 5151 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 7
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5211 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5211
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5211 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 13 => ((6 integer))
mem: ((6 integer)): 5148 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 7
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 8 => ((7 integer))
mem: ((7 integer)): 5149 <= 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 13
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 13
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4871 byte) (raw)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\g => ((9 character))
mem: ((9 character)): 5151 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 8
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5212 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5212
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\g => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5212 <= #\g
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 14 => ((6 integer))
mem: ((6 integer)): 5148 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 8
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 9 => ((7 integer))
mem: ((7 integer)): 5149 <= 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 14
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 14
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4872 byte) (raw)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\e => ((9 character))
mem: ((9 character)): 5151 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 9
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5213 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5213
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\e => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5213 <= #\e
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 15 => ((6 integer))
mem: ((6 integer)): 5148 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 9
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 10 => ((7 integer))
mem: ((7 integer)): 5149 <= 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 15
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 15
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4873 byte) (raw)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\r => ((9 character))
mem: ((9 character)): 5151 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 10
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5214 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5214
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\r => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5214 <= #\r
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 16 => ((6 integer))
mem: ((6 integer)): 5148 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 10
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 11 => ((7 integer))
mem: ((7 integer)): 5149 <= 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 16
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 16
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4874 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5151 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 11
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5215 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5215
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5215 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 17 => ((6 integer))
mem: ((6 integer)): 5148 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 11
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 12 => ((7 integer))
mem: ((7 integer)): 5149 <= 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 17
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 17
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4875 byte) (raw)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\) => ((9 character))
mem: ((9 character)): 5151 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 12
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5216 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5216
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => )
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\) => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5216 <= #\)
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 18 => ((6 integer))
mem: ((6 integer)): 5148 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 12
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 13 => ((7 integer))
mem: ((7 integer)): 5149 <= 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 18
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 18
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4876 byte) (raw)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\: => ((9 character))
mem: ((9 character)): 5151 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 13
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5217 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5217
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => :
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\: => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5217 <= #\:
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 19 => ((6 integer))
mem: ((6 integer)): 5148 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 13
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 14 => ((7 integer))
mem: ((7 integer)): 5149 <= 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 19
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 19
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4877 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5151 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 14
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5218 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5218
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5218 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 20 => ((6 integer))
mem: ((6 integer)): 5148 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 14
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 15 => ((7 integer))
mem: ((7 integer)): 5149 <= 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 20
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 20
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4878 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 5151 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 15
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5219 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5219
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5219 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 21 => ((6 integer))
mem: ((6 integer)): 5148 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 15
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 16 => ((7 integer))
mem: ((7 integer)): 5149 <= 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 21
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 21
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4879 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5151 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 16
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5220 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5220
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5220 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 22 => ((6 integer))
mem: ((6 integer)): 5148 <= 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 16
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 17 => ((7 integer))
mem: ((7 integer)): 5149 <= 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 22
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 22
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4880 byte) (raw)) => <
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\< => ((9 character))
mem: ((9 character)): 5151 <= #\<
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 17
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5221 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5221
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => <
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\< => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5221 <= #\<
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 22
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 23 => ((6 integer))
mem: ((6 integer)): 5148 <= 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 17
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 18 => ((7 integer))
mem: ((7 integer)): 5149 <= 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 23
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 23
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4881 byte) (raw)) => =
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\= => ((9 character))
mem: ((9 character)): 5151 <= #\=
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 18
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5222 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5222
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => =
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\= => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5222 <= #\=
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 23
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 24 => ((6 integer))
mem: ((6 integer)): 5148 <= 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 18
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 19 => ((7 integer))
mem: ((7 integer)): 5149 <= 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 24
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 24
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4882 byte) (raw)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\space => ((9 character))
mem: ((9 character)): 5151 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 19
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5223 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5223
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) =>  
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\space => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5223 <= #\space
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 24
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 25 => ((6 integer))
mem: ((6 integer)): 5148 <= 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 19
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 20 => ((7 integer))
mem: ((7 integer)): 5149 <= 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 25
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: nil => ((8 boolean))
mem: ((8 boolean)): 5150 <= nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => nil
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: (((9 character)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 25
array-len: ((4857 string) (raw))
mem: ((4857 integer) (raw)) => 26
mem: ((4883 byte) (raw)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 12: #\1 => ((9 character))
mem: ((9 character)): 5151 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: (((10 character-address)) <- ((index-address)) ((5 string-address) (deref)) ((7 integer)))
mem: ((7 integer)) => 20
array-len: ((5203 string) (raw))
mem: ((5203 integer) (raw)) => 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 13: 5224 => ((10 character-address))
mem: ((10 character-address)): 5152 <= 5224
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: (((10 character-address) (deref)) <- ((copy)) ((9 character)))
mem: ((9 character)) => 1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 14: #\1 => ((10 character-address) (deref))
mem: ((10 character-address) (deref)): 5224 <= #\1
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: (((6 integer)) <- ((add)) ((6 integer)) ((1 literal)))
mem: ((6 integer)) => 25
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 15: 26 => ((6 integer))
mem: ((6 integer)): 5148 <= 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: (((7 integer)) <- ((add)) ((7 integer)) ((1 literal)))
mem: ((7 integer)) => 20
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 16: 21 => ((7 integer))
mem: ((7 integer)): 5149 <= 21
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 17: (((jump)) ((-8 offset)))
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: (((8 boolean)) <- ((greater-or-equal)) ((6 integer)) ((3 integer)))
mem: ((6 integer)) => 26
mem: ((3 integer)) => 26
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 10: t => ((8 boolean))
mem: ((8 boolean)): 5150 <= t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 11: (((jump-if)) ((8 boolean)) ((6 offset)))
mem: ((8 boolean)) => t
run: string-copy/split-first-at-substring/parse-trace/parse-traces/main 18: (((reply)) ((5 string-address)))
mem: ((5 string-address)) => 5203
run: split-first-at-substring/parse-trace/parse-traces/main 13: 5203 => ((6 string-address))
mem: ((6 string-address)): 4927 <= 5203
run: split-first-at-substring/parse-trace/parse-traces/main 14: (((reply)) ((5 string-address)) ((6 string-address)))
mem: ((5 string-address)) => 5137
mem: ((6 string-address)) => 5203
run: parse-trace/parse-traces/main 4: 5137 => ((4 string-address))
mem: ((4 string-address)): 4889 <= 5137
run: parse-trace/parse-traces/main 4: 5203 => ((5 string-address))
mem: ((5 string-address)): 4890 <= 5203
run: parse-trace/parse-traces/main 5: (((6 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((0 offset)))
run: parse-trace/parse-traces/main 5: 4915 => ((6 string-address-address))
mem: ((6 string-address-address)): 4891 <= 4915
run: parse-trace/parse-traces/main 6: (((6 string-address-address) (deref)) <- ((copy)) ((4 string-address)))
mem: ((4 string-address)) => 5137
run: parse-trace/parse-traces/main 6: 5137 => ((6 string-address-address) (deref))
mem: ((6 string-address-address) (deref)): 4915 <= 5137
run: parse-trace/parse-traces/main 7: (((7 string-address-address)) <- ((get-address)) ((2 trace-address) (deref)) ((1 offset)))
run: parse-trace/parse-traces/main 7: 4916 => ((7 string-address-address))
mem: ((7 string-address-address)): 4892 <= 4916
run: parse-trace/parse-traces/main 8: (((7 string-address-address) (deref)) <- ((copy)) ((5 string-address)))
mem: ((5 string-address)) => 5203
run: parse-trace/parse-traces/main 8: 5203 => ((7 string-address-address) (deref))
mem: ((7 string-address-address) (deref)): 4916 <= 5203
run: parse-trace/parse-traces/main 9: (((reply)) ((2 trace-address)))
mem: ((2 trace-address)) => 4915
run: parse-traces/main 10: 4915 => ((8 trace-address))
mem: ((8 trace-address)): 1202 <= 4915
run: parse-traces/main 11: (((9 string-address)) <- ((get)) ((8 trace-address) (deref)) ((0 offset)))
mem: ((4915 string-address) (raw)) => 5137
run: parse-traces/main 11: 5137 => ((9 string-address))
mem: ((9 string-address)): 1203 <= 5137
run: parse-traces/main 12: (((10 boolean)) <- ((string-equal)) ((9 string-address)) ((5 string-address) (const)))
mem: ((9 string-address)) => 5137
mem: ((5 string-address) (const)) => 1327
run: string-equal/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: string-equal/parse-traces/main 0: 5225 => ((default-space space-address))
run: string-equal/parse-traces/main 1: (((1 string-address)) <- ((next-input)))
arg: nil 0 (5137 1327)
run: string-equal/parse-traces/main 1: 5137 => ((1 string-address))
mem: ((1 string-address)): 5227 <= 5137
run: string-equal/parse-traces/main 2: (((2 integer)) <- ((length)) ((1 string-address) (deref)))
array-len: ((1 string-address) (deref))
mem: ((5137 integer) (raw)) => 3
run: string-equal/parse-traces/main 2: 3 => ((2 integer))
mem: ((2 integer)): 5228 <= 3
run: string-equal/parse-traces/main 3: (((3 string-address)) <- ((next-input)))
arg: nil 1 (5137 1327)
run: string-equal/parse-traces/main 3: 1327 => ((3 string-address))
mem: ((3 string-address)): 5229 <= 1327
run: string-equal/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1327 integer) (raw)) => 3
run: string-equal/parse-traces/main 4: 3 => ((4 integer))
mem: ((4 integer)): 5230 <= 3
run: string-equal/parse-traces/main 5: (((5 boolean)) <- ((equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 3
mem: ((4 integer)) => 3
run: string-equal/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 5231 <= t
run: string-equal/parse-traces/main 6: (((jump-if)) ((5 boolean)) ((1 offset)))
mem: ((5 boolean)) => t
run: string-equal/parse-traces/main 8: (((6 integer)) <- ((copy)) ((0 literal)))
run: string-equal/parse-traces/main 8: 0 => ((6 integer))
mem: ((6 integer)): 5232 <= 0
run: string-equal/parse-traces/main 9: (((7 boolean)) <- ((greater-or-equal)) ((6 integer)) ((2 integer)))
mem: ((6 integer)) => 0
mem: ((2 integer)) => 3
run: string-equal/parse-traces/main 9: nil => ((7 boolean))
mem: ((7 boolean)): 5233 <= nil
run: string-equal/parse-traces/main 10: (((jump-if)) ((7 boolean)) ((7 offset)))
mem: ((7 boolean)) => nil
run: string-equal/parse-traces/main 11: (((8 byte)) <- ((index)) ((1 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((5137 string) (raw))
mem: ((5137 integer) (raw)) => 3
mem: ((5138 byte) (raw)) => m
run: string-equal/parse-traces/main 11: #\m => ((8 byte))
mem: ((8 byte)): 5234 <= #\m
run: string-equal/parse-traces/main 12: (((9 byte)) <- ((index)) ((3 string-address) (deref)) ((6 integer)))
mem: ((6 integer)) => 0
array-len: ((1327 string) (raw))
mem: ((1327 integer) (raw)) => 3
mem: ((1328 byte) (raw)) => r
run: string-equal/parse-traces/main 12: #\r => ((9 byte))
mem: ((9 byte)): 5235 <= #\r
run: string-equal/parse-traces/main 13: (((10 boolean)) <- ((equal)) ((8 byte)) ((9 byte)))
mem: ((8 byte)) => m
mem: ((9 byte)) => r
run: string-equal/parse-traces/main 13: nil => ((10 boolean))
mem: ((10 boolean)): 5236 <= nil
run: string-equal/parse-traces/main 14: (((jump-if)) ((10 boolean)) ((1 offset)))
mem: ((10 boolean)) => nil
run: string-equal/parse-traces/main 15: (((reply)) ((nil literal)))
run: parse-traces/main 12: nil => ((10 boolean))
mem: ((10 boolean)): 1204 <= nil
run: parse-traces/main 13: (((jump-unless)) ((10 boolean)) ((7 offset)))
mem: ((10 boolean)) => nil
run: parse-traces/main 21: (((jump-unless)) ((3 instruction-trace-address)) ((-16 offset)))
mem: ((3 instruction-trace-address)) => 3958
run: parse-traces/main 22: (((4 buffer-address)) <- ((append)) ((4 buffer-address)) ((8 trace-address)))
mem: ((4 buffer-address)) => 3919
mem: ((8 trace-address)) => 4915
run: append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: append/parse-traces/main 0: 5256 => ((default-space space-address))
run: append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (3919 4915)
run: append/parse-traces/main 1: 3919 => ((1 buffer-address))
mem: ((1 buffer-address)): 5258 <= 3919
run: append/parse-traces/main 2: (((2 character)) <- ((next-input)))
arg: nil 1 (3919 4915)
run: append/parse-traces/main 2: 4915 => ((2 character))
mem: ((2 character)): 5259 <= 4915
run: append/parse-traces/main 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
mem: ((1 buffer-address)) => 3919
run: buffer-full?/append/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: buffer-full?/append/parse-traces/main 0: 5287 => ((default-space space-address))
run: buffer-full?/append/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (3919)
run: buffer-full?/append/parse-traces/main 1: 3919 => ((1 buffer-address))
mem: ((1 buffer-address)): 5289 <= 3919
run: buffer-full?/append/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((3919 integer) (raw)) => 0
run: buffer-full?/append/parse-traces/main 2: 0 => ((2 integer))
mem: ((2 integer)): 5290 <= 0
run: buffer-full?/append/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((3920 string-address) (raw)) => 3921
run: buffer-full?/append/parse-traces/main 3: 3921 => ((3 string-address))
mem: ((3 string-address)): 5291 <= 3921
run: buffer-full?/append/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((3921 integer) (raw)) => 5
run: buffer-full?/append/parse-traces/main 4: 5 => ((4 integer))
mem: ((4 integer)): 5292 <= 5
run: buffer-full?/append/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 0
mem: ((4 integer)) => 5
run: buffer-full?/append/parse-traces/main 5: nil => ((5 boolean))
mem: ((5 boolean)): 5293 <= nil
run: buffer-full?/append/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => nil
run: append/parse-traces/main 3: nil => ((3 boolean))
mem: ((3 boolean)): 5260 <= nil
run: append/parse-traces/main 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
mem: ((3 boolean)) => nil
run: append/parse-traces/main 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: append/parse-traces/main 6: 3919 => ((4 integer-address))
mem: ((4 integer-address)): 5261 <= 3919
run: append/parse-traces/main 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((3920 string-address) (raw)) => 3921
run: append/parse-traces/main 7: 3921 => ((5 string-address))
mem: ((5 string-address)): 5262 <= 3921
run: append/parse-traces/main 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
mem: ((4 integer-address) (deref)) => 0
array-len: ((3921 string) (raw))
mem: ((3921 integer) (raw)) => 5
run: append/parse-traces/main 8: 3922 => ((6 byte-address))
mem: ((6 byte-address)): 5263 <= 3922
run: append/parse-traces/main 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
mem: ((2 character)) => 4915
run: append/parse-traces/main 9: 4915 => ((6 byte-address) (deref))
mem: ((6 byte-address) (deref)): 3922 <= 4915
run: append/parse-traces/main 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
mem: ((4 integer-address) (deref)) => 0
run: append/parse-traces/main 10: 1 => ((4 integer-address) (deref))
mem: ((4 integer-address) (deref)): 3919 <= 1
run: append/parse-traces/main 11: (((reply)) ((1 buffer-address) (same-as-arg 0)))
mem: ((1 buffer-address) (same-as-arg 0)) => 3919
run: parse-traces/main 22: 3919 => ((4 buffer-address))
mem: ((4 buffer-address)): 1198 <= 3919
run: parse-traces/main 23: (((jump)) ((-18 offset)))
run: parse-traces/main 6: next-line
run: parse-traces/main 7: (((6 boolean)) <- ((end-of-stream?)) ((1 stream-address)))
mem: ((1 stream-address)) => 1191
run: end-of-stream?/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: end-of-stream?/parse-traces/main 0: 5318 => ((default-space space-address))
run: end-of-stream?/parse-traces/main 1: (((1 stream-address)) <- ((next-input)))
arg: nil 0 (1191)
run: end-of-stream?/parse-traces/main 1: 1191 => ((1 stream-address))
mem: ((1 stream-address)): 5320 <= 1191
run: end-of-stream?/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 stream-address) (deref)) ((0 offset)))
mem: ((1191 integer) (raw)) => 129
run: end-of-stream?/parse-traces/main 2: 129 => ((2 integer))
mem: ((2 integer)): 5321 <= 129
run: end-of-stream?/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 stream-address) (deref)) ((1 offset)))
mem: ((1192 string-address) (raw)) => 1031
run: end-of-stream?/parse-traces/main 3: 1031 => ((3 string-address))
mem: ((3 string-address)): 5322 <= 1031
run: end-of-stream?/parse-traces/main 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
mem: ((1031 integer) (raw)) => 128
run: end-of-stream?/parse-traces/main 4: 128 => ((4 integer))
mem: ((4 integer)): 5323 <= 128
run: end-of-stream?/parse-traces/main 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
mem: ((2 integer)) => 129
mem: ((4 integer)) => 128
run: end-of-stream?/parse-traces/main 5: t => ((5 boolean))
mem: ((5 boolean)): 5324 <= t
run: end-of-stream?/parse-traces/main 6: (((reply)) ((5 boolean)))
mem: ((5 boolean)) => t
run: parse-traces/main 7: t => ((6 boolean))
mem: ((6 boolean)): 1200 <= t
run: parse-traces/main 8: (((jump-if)) ((6 boolean)) ((15 offset)))
mem: ((6 boolean)) => t
run: parse-traces/main 24: (((jump-unless)) ((3 instruction-trace-address)) ((2 offset)))
mem: ((3 instruction-trace-address)) => 3958
run: parse-traces/main 25: (((11 trace-address-array-address-address)) <- ((get-address)) ((3 instruction-trace-address) (deref)) ((3 offset)))
run: parse-traces/main 25: 3961 => ((11 trace-address-array-address-address))
mem: ((11 trace-address-array-address-address)): 1205 <= 3961
run: parse-traces/main 26: (((11 trace-address-array-address-address) (deref)) <- ((to-array)) ((4 buffer-address)))
mem: ((4 buffer-address)) => 3919
run: to-array/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: to-array/parse-traces/main 0: 5349 => ((default-space space-address))
run: to-array/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (3919)
run: to-array/parse-traces/main 1: 3919 => ((1 buffer-address))
mem: ((1 buffer-address)): 5351 <= 3919
run: to-array/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((3919 integer) (raw)) => 1
run: to-array/parse-traces/main 2: 1 => ((2 integer))
mem: ((2 integer)): 5352 <= 1
run: to-array/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((3920 string-address) (raw)) => 3921
run: to-array/parse-traces/main 3: 3921 => ((3 string-address))
mem: ((3 string-address)): 5353 <= 3921
run: to-array/parse-traces/main 4: (((jump-if)) ((3 string-address)) ((1 offset)))
mem: ((3 string-address)) => 3921
run: to-array/parse-traces/main 6: (((4 string-address)) <- ((new)) ((string literal)) ((2 integer)))
mem: ((2 integer)) => 1
run: to-array/parse-traces/main 6: 5380 => ((4 string-address))
mem: ((4 string-address)): 5354 <= 5380
run: to-array/parse-traces/main 7: (((5 integer)) <- ((copy)) ((0 literal)))
run: to-array/parse-traces/main 7: 0 => ((5 integer))
mem: ((5 integer)): 5355 <= 0
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 0
mem: ((2 integer)) => 1
run: to-array/parse-traces/main 8: nil => ((6 boolean))
mem: ((6 boolean)): 5356 <= nil
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: to-array/parse-traces/main 10: (((7 byte)) <- ((index)) ((3 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((3921 string) (raw))
mem: ((3921 integer) (raw)) => 5
mem: ((3922 byte) (raw)) => 4915
run: to-array/parse-traces/main 10: 4915 => ((7 byte))
mem: ((7 byte)): 5357 <= 4915
run: to-array/parse-traces/main 11: (((8 byte-address)) <- ((index-address)) ((4 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((5380 string) (raw))
mem: ((5380 integer) (raw)) => 1
run: to-array/parse-traces/main 11: 5381 => ((8 byte-address))
mem: ((8 byte-address)): 5358 <= 5381
run: to-array/parse-traces/main 12: (((8 byte-address) (deref)) <- ((copy)) ((7 byte)))
mem: ((7 byte)) => 4915
run: to-array/parse-traces/main 12: 4915 => ((8 byte-address) (deref))
mem: ((8 byte-address) (deref)): 5381 <= 4915
run: to-array/parse-traces/main 13: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 0
run: to-array/parse-traces/main 13: 1 => ((5 integer))
mem: ((5 integer)): 5355 <= 1
run: to-array/parse-traces/main 14: (((jump)) ((-7 offset)))
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 1
mem: ((2 integer)) => 1
run: to-array/parse-traces/main 8: t => ((6 boolean))
mem: ((6 boolean)): 5356 <= t
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => t
run: to-array/parse-traces/main 15: (((reply)) ((4 string-address)))
mem: ((4 string-address)) => 5380
run: parse-traces/main 26: 5380 => ((11 trace-address-array-address-address) (deref))
mem: ((11 trace-address-array-address-address) (deref)): 3961 <= 5380
run: parse-traces/main 27: (((12 instruction-trace-address-array-address)) <- ((to-array)) ((2 buffer-address)))
mem: ((2 buffer-address)) => 1255
run: to-array/parse-traces/main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
run: to-array/parse-traces/main 0: 5382 => ((default-space space-address))
run: to-array/parse-traces/main 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (1255)
run: to-array/parse-traces/main 1: 1255 => ((1 buffer-address))
mem: ((1 buffer-address)): 5384 <= 1255
run: to-array/parse-traces/main 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
mem: ((1255 integer) (raw)) => 2
run: to-array/parse-traces/main 2: 2 => ((2 integer))
mem: ((2 integer)): 5385 <= 2
run: to-array/parse-traces/main 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
mem: ((1256 string-address) (raw)) => 1257
run: to-array/parse-traces/main 3: 1257 => ((3 string-address))
mem: ((3 string-address)): 5386 <= 1257
run: to-array/parse-traces/main 4: (((jump-if)) ((3 string-address)) ((1 offset)))
mem: ((3 string-address)) => 1257
run: to-array/parse-traces/main 6: (((4 string-address)) <- ((new)) ((string literal)) ((2 integer)))
mem: ((2 integer)) => 2
run: to-array/parse-traces/main 6: 5413 => ((4 string-address))
mem: ((4 string-address)): 5387 <= 5413
run: to-array/parse-traces/main 7: (((5 integer)) <- ((copy)) ((0 literal)))
run: to-array/parse-traces/main 7: 0 => ((5 integer))
mem: ((5 integer)): 5388 <= 0
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 0
mem: ((2 integer)) => 2
run: to-array/parse-traces/main 8: nil => ((6 boolean))
mem: ((6 boolean)): 5389 <= nil
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: to-array/parse-traces/main 10: (((7 byte)) <- ((index)) ((3 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((1257 string) (raw))
mem: ((1257 integer) (raw)) => 30
mem: ((1258 byte) (raw)) => 2502
run: to-array/parse-traces/main 10: 2502 => ((7 byte))
mem: ((7 byte)): 5390 <= 2502
run: to-array/parse-traces/main 11: (((8 byte-address)) <- ((index-address)) ((4 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 0
array-len: ((5413 string) (raw))
mem: ((5413 integer) (raw)) => 2
run: to-array/parse-traces/main 11: 5414 => ((8 byte-address))
mem: ((8 byte-address)): 5391 <= 5414
run: to-array/parse-traces/main 12: (((8 byte-address) (deref)) <- ((copy)) ((7 byte)))
mem: ((7 byte)) => 2502
run: to-array/parse-traces/main 12: 2502 => ((8 byte-address) (deref))
mem: ((8 byte-address) (deref)): 5414 <= 2502
run: to-array/parse-traces/main 13: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 0
run: to-array/parse-traces/main 13: 1 => ((5 integer))
mem: ((5 integer)): 5388 <= 1
run: to-array/parse-traces/main 14: (((jump)) ((-7 offset)))
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 1
mem: ((2 integer)) => 2
run: to-array/parse-traces/main 8: nil => ((6 boolean))
mem: ((6 boolean)): 5389 <= nil
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => nil
run: to-array/parse-traces/main 10: (((7 byte)) <- ((index)) ((3 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 1
array-len: ((1257 string) (raw))
mem: ((1257 integer) (raw)) => 30
mem: ((1259 byte) (raw)) => 3958
run: to-array/parse-traces/main 10: 3958 => ((7 byte))
mem: ((7 byte)): 5390 <= 3958
run: to-array/parse-traces/main 11: (((8 byte-address)) <- ((index-address)) ((4 string-address) (deref)) ((5 integer)))
mem: ((5 integer)) => 1
array-len: ((5413 string) (raw))
mem: ((5413 integer) (raw)) => 2
run: to-array/parse-traces/main 11: 5415 => ((8 byte-address))
mem: ((8 byte-address)): 5391 <= 5415
run: to-array/parse-traces/main 12: (((8 byte-address) (deref)) <- ((copy)) ((7 byte)))
mem: ((7 byte)) => 3958
run: to-array/parse-traces/main 12: 3958 => ((8 byte-address) (deref))
mem: ((8 byte-address) (deref)): 5415 <= 3958
run: to-array/parse-traces/main 13: (((5 integer)) <- ((add)) ((5 integer)) ((1 literal)))
mem: ((5 integer)) => 1
run: to-array/parse-traces/main 13: 2 => ((5 integer))
mem: ((5 integer)): 5388 <= 2
run: to-array/parse-traces/main 14: (((jump)) ((-7 offset)))
run: to-array/parse-traces/main 8: (((6 boolean)) <- ((greater-or-equal)) ((5 integer)) ((2 integer)))
mem: ((5 integer)) => 2
mem: ((2 integer)) => 2
run: to-array/parse-traces/main 8: t => ((6 boolean))
mem: ((6 boolean)): 5389 <= t
run: to-array/parse-traces/main 9: (((jump-if)) ((6 boolean)) ((5 offset)))
mem: ((6 boolean)) => t
run: to-array/parse-traces/main 15: (((reply)) ((4 string-address)))
mem: ((4 string-address)) => 5413
run: parse-traces/main 27: 5413 => ((12 instruction-trace-address-array-address))
mem: ((12 instruction-trace-address-array-address)): 1206 <= 5413
run: parse-traces/main 28: (((reply)) ((12 instruction-trace-address-array-address)))
mem: ((12 instruction-trace-address-array-address)) => 5413
run: main 7: 5413 => ((4 instruction-trace-address-array-address))
mem: ((4 instruction-trace-address-array-address)): 1005 <= 5413
schedule: done with routine nil
