 102 run: assume-console [
    left-click 1, 3
    press right-arrow
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"1": "literal"}
9993 parse:   ingredient: {"3": "literal"}
9992 load: after rewriting: left-click 1, 3
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"right-arrow": <>}
9992 load: after rewriting: press right-arrow
9999 mem: storing 'left-click' event starting at 1302
9999 mem: storing 'press' event starting at 1306
9999 mem: storing console in 1310
9999 mem: storing console data in 1312
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9993 name: element cursor-row of type editor-data is at offset 6
9993 name: element cursor-column of type editor-data is at offset 7
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check 'call' instructions inside recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1310
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1313
9999 mem: storing 14 in location 1314
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1316
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1317
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1318
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1318 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1162
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1318 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1319
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1318 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1162
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1318 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1320
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1316 is 1012
9999 mem: location 1319 is 1
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1237
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1238
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1239
 105 run: jump-unless screen, 
9999 mem: location 1237 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 5
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1240
 105 run: *row <- copy new-row
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1241
 105 run: *column <- copy new-column
9999 mem: location 1239 is 0
9999 mem: location 1241 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1237 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1316
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1317 is 1310
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1272
 105 run: jump-unless console, 
9999 mem: location 1272 is 1310
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1272 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 0
9999 mem: location 1312 is 1300
9999 mem: location 1272 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9999 mem: storing 1311 in location 1273
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1272 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 0
9999 mem: location 1312 is 1300
9999 mem: location 1272 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1312 is 1300
9999 mem: storing 1300 in location 1274
 105 run: max:number <- length *buf
9999 mem: location 1274 is 1300
9999 mem: skipping refcount at 1300
9999 mem: storing 2 in location 1275
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1273 is 1311
9999 mem: location 1311 is 0
9999 mem: location 1275 is 2
9999 mem: storing 0 in location 1276
 105 run: jump-unless done?, 
9999 mem: location 1276 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1274 is 1300
9999 mem: skipping refcount at 1300
9998 run: base address is 1301
9999 mem: location 1273 is 1311
9999 mem: location 1311 is 0
9998 run: address to copy is 1302
9998 run: its type is event
9999 mem: location 1302 is 2
9999 mem: location 1303 is 65513
9999 mem: location 1304 is 1
9999 mem: location 1305 is 3
9999 mem: storing 2 in location 1278
9999 mem: storing 65513 in location 1279
9999 mem: storing 1 in location 1280
9999 mem: storing 3 in location 1281
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1273 is 1311
9999 mem: location 1311 is 0
9999 mem: location 1273 is 1311
9999 mem: storing 1 in location 1311
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1278 is 2
9999 mem: location 1279 is 65513
9999 mem: location 1280 is 1
9999 mem: location 1281 is 3
9999 mem: location 1272 is 1310
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 1, 3]
9998 run: result 1 is 1310
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1321
9999 mem: storing 65513 in location 1322
9999 mem: storing 1 in location 1323
9999 mem: storing 3 in location 1324
9999 mem: storing 1310 in location 1317
9999 mem: storing 1 in location 1325
9999 mem: storing 0 in location 1326
 104 run: jump-unless found?, 
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1321 is 2
9999 mem: location 1322 is 65513
9999 mem: location 1323 is 1
9999 mem: location 1324 is 3
9999 mem: storing 1322 in location 1327
 104 run: jump-unless t, 
9999 mem: location 1327 is 1322
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1316 is 1012
9999 mem: location 1318 is 1000
9999 mem: location 1327 is 1322
9999 mem: location 1322 is 65513
9999 mem: location 1323 is 1
9999 mem: location 1324 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 abandon: picking up space from free-list of size 29
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1208
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1209
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1210
9999 mem: storing 1 in location 1211
9999 mem: storing 3 in location 1212
 105 run: jump-if editor, 1:offset
9999 mem: location 1209 is 1000
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1210 is 65513
9999 mem: location 1211 is 1
9999 mem: location 1212 is 3
9998 run: address to copy is 1211
9998 run: its type is number
9999 mem: location 1211 is 1
9999 mem: storing 1 in location 1213
 105 run: jump-if click-row, 1:offset
9999 mem: location 1213 is 1
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1210 is 65513
9999 mem: location 1211 is 1
9999 mem: location 1212 is 3
9998 run: address to copy is 1212
9998 run: its type is number
9999 mem: location 1212 is 3
9999 mem: storing 3 in location 1214
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1162
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1215
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1214 is 3
9999 mem: location 1215 is 0
9999 mem: storing 0 in location 1216
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1216 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1162
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 4
9999 mem: storing 4 in location 1217
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1214 is 3
9999 mem: location 1217 is 4
9999 mem: storing 0 in location 1218
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1218 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1162
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1219
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1162
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1220
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1162
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1162
9999 mem: storing 1162 in location 1221
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1208 is 1012
9999 mem: location 1209 is 1000
9999 mem: location 1213 is 1
9999 mem: location 1214 is 3
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1329
9999 mem: storing 26 in location 1330
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1332
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1333
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1334
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1335
 106 run: jump-if editor, 1:offset
9999 mem: location 1333 is 1000
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1333 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1162
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1333 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1336
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1333 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1162
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1333 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 4
9999 mem: storing 4 in location 1337
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1332 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1183
 107 run: jump-unless screen, 
9999 mem: location 1183 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1183 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1183 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1184
 107 run: reply height:number
9999 mem: location 1184 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1338
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1333 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1162
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1333 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1162
9999 mem: storing 1162 in location 1339
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1339 is 1162
9999 mem: storing 1162 in location 1340
 106 run: curr <- next_2 curr
9999 mem: location 1339 is 1162
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1162 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1162
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1162
9999 mem: skipping refcount at 1162
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1163 is 167
9999 mem: location 1164 is 1176
9999 mem: location 1165 is 0
9999 mem: location 1183 is 1162
9999 mem: skipping refcount at 1162
9999 type: type deduced to be character$
9998 run: address to copy is 1164
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1164 is 1176
9999 mem: storing 1176 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1176
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1339
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1341
 106 run: column:number <- copy left
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1342
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1333 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1162
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1333 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1343
 106 run: *cursor-row <- copy target-row
9999 mem: location 1334 is 1
9999 mem: location 1343 is 1007
9999 mem: storing 1 in location 1007
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1333 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1162
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1333 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1344
 106 run: *cursor-column <- copy target-column
9999 mem: location 1335 is 3
9999 mem: location 1344 is 1008
9999 mem: storing 3 in location 1008
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1333 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1162
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1333 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1345
 106 run: jump-unless curr, 
9999 mem: location 1339 is 1176
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1341 is 1
9999 mem: location 1338 is 5
9999 mem: storing 0 in location 1346
 106 run: jump-if off-screen?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1341 is 1
9999 mem: location 1343 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1347
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1347 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1342 is 0
9999 mem: location 1344 is 1008
9999 mem: location 1008 is 3
9999 mem: storing 0 in location 1348
 106 run: jump-unless at-cursor?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1339 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 97
9999 mem: location 1178 is 1185
9999 mem: location 1179 is 1162
9999 mem: location 1339 is 1176
9999 mem: skipping refcount at 1176
9998 run: address to copy is 1177
9998 run: its type is character
9999 mem: location 1177 is 97
9999 mem: storing 97 in location 1349
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1349 is 97
9999 mem: storing 0 in location 1350
 106 run: jump-unless newline?, 
9999 mem: location 1350 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1342 is 0
9999 mem: location 1337 is 4
9999 mem: storing 0 in location 1352
 106 run: jump-unless at-right?, 
9999 mem: location 1352 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1339 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 97
9999 mem: location 1178 is 1185
9999 mem: location 1179 is 1162
9999 mem: location 1183 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1185
9999 mem: storing 1185 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: storing 1185 in location 1339
 106 run: prev <- next_2 prev
9999 mem: location 1340 is 1162
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1162 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1162
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1162
9999 mem: skipping refcount at 1162
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1163 is 167
9999 mem: location 1164 is 1176
9999 mem: location 1165 is 0
9999 mem: location 1183 is 1162
9999 mem: skipping refcount at 1162
9999 type: type deduced to be character$
9998 run: address to copy is 1164
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1164 is 1176
9999 mem: storing 1176 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1176
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1176
9999 mem: storing 1176 in location 1340
 106 run: column <- add column, 1
9999 mem: location 1342 is 0
9999 mem: storing 1 in location 1342
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1339 is 1185
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1341 is 1
9999 mem: location 1338 is 5
9999 mem: storing 0 in location 1346
 106 run: jump-if off-screen?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1341 is 1
9999 mem: location 1343 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1347
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1347 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1342 is 1
9999 mem: location 1344 is 1008
9999 mem: location 1008 is 3
9999 mem: storing 0 in location 1348
 106 run: jump-unless at-cursor?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1339 is 1185
9999 mem: skipping refcount at 1185
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 98
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1176
9999 mem: location 1339 is 1185
9999 mem: skipping refcount at 1185
9998 run: address to copy is 1186
9998 run: its type is character
9999 mem: location 1186 is 98
9999 mem: storing 98 in location 1349
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1349 is 98
9999 mem: storing 0 in location 1350
 106 run: jump-unless newline?, 
9999 mem: location 1350 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1342 is 1
9999 mem: location 1337 is 4
9999 mem: storing 0 in location 1352
 106 run: jump-unless at-right?, 
9999 mem: location 1352 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1339 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1185
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1185
9999 mem: skipping refcount at 1185
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 98
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1176
9999 mem: location 1183 is 1185
9999 mem: skipping refcount at 1185
9999 type: type deduced to be character$
9998 run: address to copy is 1187
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: storing 1189 in location 1339
 106 run: prev <- next_2 prev
9999 mem: location 1340 is 1176
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1176 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1176
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1176
9999 mem: skipping refcount at 1176
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1177 is 97
9999 mem: location 1178 is 1185
9999 mem: location 1179 is 1162
9999 mem: location 1183 is 1176
9999 mem: skipping refcount at 1176
9999 type: type deduced to be character$
9998 run: address to copy is 1178
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1178 is 1185
9999 mem: storing 1185 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1185
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1185
9999 mem: storing 1185 in location 1340
 106 run: column <- add column, 1
9999 mem: location 1342 is 1
9999 mem: storing 2 in location 1342
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1339 is 1189
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1341 is 1
9999 mem: location 1338 is 5
9999 mem: storing 0 in location 1346
 106 run: jump-if off-screen?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1341 is 1
9999 mem: location 1343 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1347
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1347 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1342 is 2
9999 mem: location 1344 is 1008
9999 mem: location 1008 is 3
9999 mem: storing 0 in location 1348
 106 run: jump-unless at-cursor?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1339 is 1189
9999 mem: skipping refcount at 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 99
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1339 is 1189
9999 mem: skipping refcount at 1189
9998 run: address to copy is 1190
9998 run: its type is character
9999 mem: location 1190 is 99
9999 mem: storing 99 in location 1349
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1349 is 99
9999 mem: storing 0 in location 1350
 106 run: jump-unless newline?, 
9999 mem: location 1350 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1342 is 2
9999 mem: location 1337 is 4
9999 mem: storing 0 in location 1352
 106 run: jump-unless at-right?, 
9999 mem: location 1352 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1339 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1189
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1189
9999 mem: skipping refcount at 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 99
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1183 is 1189
9999 mem: skipping refcount at 1189
9999 type: type deduced to be character$
9998 run: address to copy is 1191
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: storing 1193 in location 1339
 106 run: prev <- next_2 prev
9999 mem: location 1340 is 1185
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1185 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1185
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1185
9999 mem: skipping refcount at 1185
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1186 is 98
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1176
9999 mem: location 1183 is 1185
9999 mem: skipping refcount at 1185
9999 type: type deduced to be character$
9998 run: address to copy is 1187
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1189
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1189
9999 mem: storing 1189 in location 1340
 106 run: column <- add column, 1
9999 mem: location 1342 is 2
9999 mem: storing 3 in location 1342
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1339 is 1193
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1341 is 1
9999 mem: location 1338 is 5
9999 mem: storing 0 in location 1346
 106 run: jump-if off-screen?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1341 is 1
9999 mem: location 1343 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1347
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1347 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1342 is 3
9999 mem: location 1344 is 1008
9999 mem: location 1008 is 3
9999 mem: storing 1 in location 1348
 106 run: jump-unless at-cursor?, 
9999 mem: location 1348 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1340 is 1189
9999 mem: location 1345 is 1004
9999 mem: storing 1189 in location 1004
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1339 is 1193
9999 mem: skipping refcount at 1193
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1194 is 100
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1339 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1194
9998 run: its type is character
9999 mem: location 1194 is 100
9999 mem: storing 100 in location 1349
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1349 is 100
9999 mem: storing 0 in location 1350
 106 run: jump-unless newline?, 
9999 mem: location 1350 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1342 is 3
9999 mem: location 1337 is 4
9999 mem: storing 0 in location 1352
 106 run: jump-unless at-right?, 
9999 mem: location 1352 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1339 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1193
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1193
9999 mem: skipping refcount at 1193
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1194 is 100
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1183 is 1193
9999 mem: skipping refcount at 1193
9999 type: type deduced to be character$
9998 run: address to copy is 1195
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: storing 1197 in location 1339
 106 run: prev <- next_2 prev
9999 mem: location 1340 is 1189
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1189
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1189
9999 mem: skipping refcount at 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 99
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1183 is 1189
9999 mem: skipping refcount at 1189
9999 type: type deduced to be character$
9998 run: address to copy is 1191
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1193
9999 mem: storing 1193 in location 1340
 106 run: column <- add column, 1
9999 mem: location 1342 is 3
9999 mem: storing 4 in location 1342
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1339 is 1197
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1341 is 1
9999 mem: location 1338 is 5
9999 mem: storing 0 in location 1346
 106 run: jump-if off-screen?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1341 is 1
9999 mem: location 1343 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1347
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1347 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1342 is 4
9999 mem: location 1344 is 1008
9999 mem: location 1008 is 3
9999 mem: storing 0 in location 1348
 106 run: jump-unless at-cursor?, 
9999 mem: location 1348 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1339 is 1197
9999 mem: skipping refcount at 1197
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1339 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1198
9998 run: its type is character
9999 mem: location 1198 is 101
9999 mem: storing 101 in location 1349
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1349 is 101
9999 mem: storing 0 in location 1350
 106 run: jump-unless newline?, 
9999 mem: location 1350 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1342 is 4
9999 mem: location 1337 is 4
9999 mem: storing 1 in location 1352
 106 run: jump-unless at-right?, 
9999 mem: location 1352 is 1
9998 run: jump-unless fell through
 106 run: column <- copy left
9999 mem: location 1336 is 0
9999 mem: storing 0 in location 1342
 106 run: row <- add row, 1
9999 mem: location 1341 is 1
9999 mem: storing 2 in location 1341
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1339 is 1197
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1341 is 2
9999 mem: location 1338 is 5
9999 mem: storing 0 in location 1346
 106 run: jump-if off-screen?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1341 is 2
9999 mem: location 1343 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1347
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1339 is 1197
9999 mem: skipping refcount at 1197
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1339 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1198
9998 run: its type is character
9999 mem: location 1198 is 101
9999 mem: storing 101 in location 1349
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1349 is 101
9999 mem: storing 0 in location 1350
 106 run: jump-unless newline?, 
9999 mem: location 1350 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1342 is 0
9999 mem: location 1337 is 4
9999 mem: storing 0 in location 1352
 106 run: jump-unless at-right?, 
9999 mem: location 1352 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1339 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1197
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1197
9999 mem: skipping refcount at 1197
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1183 is 1197
9999 mem: skipping refcount at 1197
9999 type: type deduced to be character$
9998 run: address to copy is 1199
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: storing 1201 in location 1339
 106 run: prev <- next_2 prev
9999 mem: location 1340 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1193
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1193
9999 mem: skipping refcount at 1193
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1194 is 100
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1183 is 1193
9999 mem: skipping refcount at 1193
9999 type: type deduced to be character$
9998 run: address to copy is 1195
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: storing 1197 in location 1340
 106 run: column <- add column, 1
9999 mem: location 1342 is 0
9999 mem: storing 1 in location 1342
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1339 is 1201
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1341 is 2
9999 mem: location 1338 is 5
9999 mem: storing 0 in location 1346
 106 run: jump-if off-screen?, 
9999 mem: location 1346 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1341 is 2
9999 mem: location 1343 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1347
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-cursor-to-next-wrapped-line-with-right-arrow
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1347 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1339 is 1201
9999 mem: skipping refcount at 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1202 is 102
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1197
9999 mem: location 1339 is 1201
9999 mem: skipping refcount at 1201
9998 run: address to copy is 1202
9998 run: its type is character
9999 mem: location 1202 is 102
9999 mem: storing 102 in location 1349
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1349 is 102
9999 mem: storing 0 in location 1350
 106 run: jump-unless newline?, 
9999 mem: location 1350 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1342 is 1
9999 mem: location 1337 is 4
9999 mem: storing 0 in location 1352
 106 run: jump-unless at-right?, 
9999 mem: location 1352 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1339 is 1201
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1201 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1201
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1201
9999 mem: skipping refcount at 1201
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1202 is 102
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1197
9999 mem: location 1183 is 1201
9999 mem: skipping refcount at 1201
9999 type: type deduced to be character$
9998 run: address to copy is 1203
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1203 is 0
9999 mem: storing 0 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1339
 106 run: prev <- next_2 prev
9999 mem: location 1340 is 1197
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1197 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1197
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1197
9999 mem: skipping refcount at 1197
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1183 is 1197
9999 mem: skipping refcount at 1197
9999 type: type deduced to be character$
9998 run: address to copy is 1199
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1199 is 1201
9999 mem: storing 1201 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1201
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1201
9999 mem: storing 1201 in location 1340
 106 run: column <- add column, 1
9999 mem: location 1342 is 1
9999 mem: storing 2 in location 1342
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1339 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1341 is 2
9999 mem: location 1343 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1347
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1342 is 2
9999 mem: location 1344 is 1008
9999 mem: location 1008 is 3
9999 mem: storing 1 in location 1353
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1347 is 0
9999 mem: location 1353 is 1
9999 mem: storing 0 in location 1354
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1341 is 2
9999 mem: location 1343 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 0 in location 1355
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1354 is 0
9999 mem: location 1355 is 0
9999 mem: storing 0 in location 1356
 106 run: jump-unless before-cursor?, 
9999 mem: location 1356 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1333 is 1000
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1209
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1222
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1223
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 3
9999 mem: storing 3 in location 1224
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1209 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1162
9999 mem: storing 1162 in location 1225
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1222 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1120 in location 1227
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1219 is 1
9999 mem: location 1220 is 0
9999 mem: location 1221 is 1162
9999 mem: location 1223 is 1
9999 mem: location 1224 is 3
9999 mem: location 1225 is 1162
9999 mem: location 1222 is 0
9999 mem: location 1227 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1227 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 1 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 1162 in location 1124
9999 mem: storing 1 in location 1125
9999 mem: storing 3 in location 1126
9999 mem: storing 1162 in location 1127
9999 mem: storing 0 in location 1128
 105 run: editor <- add-operation editor, op
9999 mem: location 1209 is 1000
9999 mem: location 1227 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1357
9999 mem: storing 5 in location 1358
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1360
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1361
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1360 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1360 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1362
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1361 is 1120
9999 mem: location 1362 is 1010
9999 mem: location 1010 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1237
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1238
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1364
9999 mem: storing 1364 in location 1239
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1239 is 1364
9999 mem: skipping refcount at 1364
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1365 is 0
9999 mem: location 1366 is 0
9999 mem: location 1239 is 1364
9999 mem: skipping refcount at 1364
9998 run: address to copy is 1365
9999 mem: storing 1365 in location 1240
 107 run: *val <- copy x
9999 mem: location 1237 is 1120
9999 mem: location 1240 is 1365
9999 mem: storing 1120 in location 1365
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1239 is 1364
9999 mem: skipping refcount at 1364
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1365 is 1120
9999 mem: location 1366 is 0
9999 mem: location 1239 is 1364
9999 mem: skipping refcount at 1364
9999 type: type deduced to be address$
9998 run: address to copy is 1366
9999 mem: storing 1366 in location 1241
 107 run: *next <- copy in
9999 mem: location 1238 is 0
9999 mem: location 1241 is 1366
9999 mem: storing 0 in location 1366
 107 run: reply result
9999 mem: location 1239 is 1364
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1364
9999 mem: location 1362 is 1010
9999 mem: storing 1364 in location 1010
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1360 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1360 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1363
 106 run: *redo <- copy 0
9999 mem: location 1363 is 1011
9999 mem: storing 0 in location 1011
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1360 is 1000
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1209
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1318 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1318 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1319
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1318 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1318 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 3
9999 mem: storing 3 in location 1320
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1316 is 1012
9999 mem: location 1319 is 1
9999 mem: location 1320 is 3
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1237
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1238
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1239
 105 run: jump-unless screen, 
9999 mem: location 1237 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1240
 105 run: *row <- copy new-row
9999 mem: location 1238 is 1
9999 mem: location 1240 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1241
 105 run: *column <- copy new-column
9999 mem: location 1239 is 3
9999 mem: location 1241 is 1016
9999 mem: storing 3 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1237 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1316
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1317 is 1310
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1272
 105 run: jump-unless console, 
9999 mem: location 1272 is 1310
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1272 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 1
9999 mem: location 1312 is 1300
9999 mem: location 1272 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9999 mem: storing 1311 in location 1273
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1272 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 1
9999 mem: location 1312 is 1300
9999 mem: location 1272 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1312 is 1300
9999 mem: storing 1300 in location 1274
 105 run: max:number <- length *buf
9999 mem: location 1274 is 1300
9999 mem: skipping refcount at 1300
9999 mem: storing 2 in location 1275
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1273 is 1311
9999 mem: location 1311 is 1
9999 mem: location 1275 is 2
9999 mem: storing 0 in location 1276
 105 run: jump-unless done?, 
9999 mem: location 1276 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1274 is 1300
9999 mem: skipping refcount at 1300
9998 run: base address is 1301
9999 mem: location 1273 is 1311
9999 mem: location 1311 is 1
9998 run: address to copy is 1306
9998 run: its type is event
9999 mem: location 1306 is 1
9999 mem: location 1307 is 65514
9999 mem: location 1308 is 0
9999 mem: location 1309 is 0
9999 mem: storing 1 in location 1278
9999 mem: storing 65514 in location 1279
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1273 is 1311
9999 mem: location 1311 is 1
9999 mem: location 1273 is 1311
9999 mem: storing 2 in location 1311
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1278 is 1
9999 mem: location 1279 is 65514
9999 mem: location 1280 is 0
9999 mem: location 1281 is 0
9999 mem: location 1272 is 1310
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65514, 0, 0]
9998 run: result 1 is 1310
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1321
9999 mem: storing 65514 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 1310 in location 1317
9999 mem: storing 1 in location 1325
9999 mem: storing 0 in location 1326
 104 run: jump-unless found?, 
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1326 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1321 is 1
9999 mem: location 1322 is 65514
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 mem: storing 0 in location 1327
 104 run: jump-unless t, 
9999 mem: location 1327 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1327 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1316 is 1012
9999 mem: location 1318 is 1000
9999 mem: location 1321 is 1
9999 mem: location 1322 is 65514
9999 mem: location 1323 is 0
9999 mem: location 1324 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1367
9999 mem: storing 85 in location 1368
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1370
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1371
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1372
9999 mem: storing 65514 in location 1373
9999 mem: storing 0 in location 1374
9999 mem: storing 0 in location 1375
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1376
 105 run: jump-if editor, 1:offset
9999 mem: location 1371 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1370 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1183
 106 run: jump-unless screen, 
9999 mem: location 1183 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1183 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1183 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1184
 106 run: reply width:number
9999 mem: location 1184 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1377
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1370 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1183
 106 run: jump-unless screen, 
9999 mem: location 1183 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1183 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1183 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1184
 106 run: reply height:number
9999 mem: location 1184 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1378
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1379
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 4
9999 mem: storing 4 in location 1380
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1381
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1382
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1383
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1382 is 1007
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1384
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1383 is 1008
9999 mem: location 1008 is 3
9999 mem: storing 3 in location 1385
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1372 is 1
9999 mem: location 1373 is 65514
9999 mem: location 1374 is 0
9999 mem: location 1375 is 0
9999 mem: storing 0 in location 1386
 105 run: jump-unless c, 
9999 mem: location 1386 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1372 is 1
9999 mem: location 1373 is 65514
9999 mem: location 1374 is 0
9999 mem: location 1375 is 0
9999 mem: storing 1373 in location 1440
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1440 is 1373
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1440 is 1373
9999 mem: location 1373 is 65514
9999 mem: storing 0 in location 1403
 105 run: jump-unless page-up?, 
9999 mem: location 1403 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1440 is 1373
9999 mem: location 1373 is 65514
9999 mem: storing 0 in location 1419
 105 run: jump-unless page-down?, 
9999 mem: location 1419 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1440 is 1373
9999 mem: location 1373 is 65514
9999 mem: storing 0 in location 1426
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1426 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1440 is 1373
9999 mem: location 1373 is 65514
9999 mem: storing 0 in location 1427
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1427 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1440 is 1373
9999 mem: location 1373 is 65514
9999 mem: storing 0 in location 1441
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1441 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1440 is 1373
9999 mem: location 1373 is 65514
9999 mem: storing 0 in location 1442
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1442 is 0
9998 run: jumping to instruction 673
 105 run: move-to-previous-character?:boolean <- equal *k, 65515/left-arrow
9999 mem: location 1440 is 1373
9999 mem: location 1373 is 65514
9999 mem: storing 0 in location 1443
 105 run: jump-unless move-to-previous-character?, 
9999 mem: location 1443 is 0
9998 run: jumping to instruction 716
 105 run: move-to-next-character?:boolean <- equal *k, 65514/right-arrow
9999 mem: location 1440 is 1373
9999 mem: location 1373 is 65514
9999 mem: storing 1 in location 1445
 105 run: jump-unless move-to-next-character?, 
9999 mem: location 1445 is 1
9998 run: jump-unless fell through
 105 run: next-cursor:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1381 is 1004
9999 mem: location 1004 is 1189
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1189 in location 1183
 106 run: jump-if in, 1:offset
9999 mem: location 1183 is 1189
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1183 is 1189
9999 mem: skipping refcount at 1189
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1190 is 99
9999 mem: location 1191 is 1193
9999 mem: location 1192 is 1185
9999 mem: location 1183 is 1189
9999 mem: skipping refcount at 1189
9999 type: type deduced to be character$
9998 run: address to copy is 1191
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1191 is 1193
9999 mem: storing 1193 in location 1184
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1193
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1193
9999 mem: storing 1193 in location 1446
 105 run: jump-unless next-cursor, 
9999 mem: location 1446 is 1193
9998 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1406
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 3
9999 mem: storing 3 in location 1407
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1189
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1162
9999 mem: storing 1162 in location 1408
 105 run: *before-cursor <- copy next-cursor
9999 mem: location 1446 is 1193
9999 mem: location 1381 is 1004
9999 mem: storing 1193 in location 1004
 105 run: editor, go-render?:boolean <- move-cursor-coordinates-right editor, screen-height
9999 mem: location 1371 is 1000
9999 mem: location 1378 is 5
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 21
9999 mem: allocating size 23
9999 mem: new alloc: 1454
9999 mem: storing 21 in location 1455
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1457
 106 run: screen-height:number <- next-ingredient-without-typechecking 
9999 mem: storing 5 in location 1458
 106 run: before-cursor:address:shared:duplex-list:character <- get *editor, before-cursor:offset
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1004 is 1193
9999 mem: storing 1193 in location 1459
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1460
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1461
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1462
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 1
9999 mem: location 1008 is 3
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 4
9999 mem: storing 4 in location 1463
 106 run: old-cursor-character:character <- get *before-cursor, value:offset
9999 mem: location 1459 is 1193
9999 mem: skipping refcount at 1193
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1194 is 100
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1459 is 1193
9999 mem: skipping refcount at 1193
9998 run: address to copy is 1194
9998 run: its type is character
9999 mem: location 1194 is 100
9999 mem: storing 100 in location 1464
 106 run: was-at-newline?:boolean <- equal old-cursor-character, 10/newline
9999 mem: location 1464 is 100
9999 mem: storing 0 in location 1465
 106 run: jump-unless was-at-newline?, 
9999 mem: location 1465 is 0
9998 run: jumping to instruction 33
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1463 is 4
9999 mem: storing 3 in location 1472
 106 run: at-wrap?:boolean <- equal *cursor-column, wrap-column
9999 mem: location 1461 is 1008
9999 mem: location 1008 is 3
9999 mem: location 1472 is 3
9999 mem: storing 1 in location 1473
 106 run: jump-unless at-wrap?, 
9999 mem: location 1473 is 1
9998 run: jump-unless fell through
 106 run: next:address:shared:duplex-list:character <- next_2 before-cursor
9999 mem: location 1459 is 1193
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1193 in location 1183
 107 run: jump-if in, 1:offset
9999 mem: location 1183 is 1193
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1183 is 1193
9999 mem: skipping refcount at 1193
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1194 is 100
9999 mem: location 1195 is 1197
9999 mem: location 1196 is 1189
9999 mem: location 1183 is 1193
9999 mem: skipping refcount at 1193
9999 type: type deduced to be character$
9998 run: address to copy is 1195
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1195 is 1197
9999 mem: storing 1197 in location 1184
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1184 is 1197
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1197
9999 mem: storing 1197 in location 1474
 106 run: jump-unless next, 
9999 mem: location 1474 is 1197
9998 run: jump-unless fell through
 106 run: next-character:character <- get *next, value:offset
9999 mem: location 1474 is 1197
9999 mem: skipping refcount at 1197
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1198 is 101
9999 mem: location 1199 is 1201
9999 mem: location 1200 is 1193
9999 mem: location 1474 is 1197
9999 mem: skipping refcount at 1197
9998 run: address to copy is 1198
9998 run: its type is character
9999 mem: location 1198 is 101
9999 mem: storing 101 in location 1475
 106 run: newline?:boolean <- equal next-character, 10/newline
9999 mem: location 1475 is 101
9999 mem: storing 0 in location 1476
 106 run: jump-if newline?, 
9999 mem: location 1476 is 0
9998 run: jump-if fell through
 106 run: *cursor-row <- add *cursor-row, 1
9999 mem: location 1460 is 1007
9999 mem: location 1007 is 1
9999 mem: location 1460 is 1007
9999 mem: storing 2 in location 1007
 106 run: *cursor-column <- copy left
9999 mem: location 1462 is 0
9999 mem: location 1461 is 1008
9999 mem: storing 0 in location 1008
 106 run: below-screen?:boolean <- greater-or-equal *cursor-row, screen-height
9999 mem: location 1460 is 1007
9999 mem: location 1007 is 2
9999 mem: location 1458 is 5
9999 mem: storing 0 in location 1466
 106 run: jump-if below-screen?, 1:offset
9999 mem: location 1466 is 0
9998 run: jump-if fell through
 106 run: reply editor/same-as-ingredient:0, 0/no-more-render
9999 mem: location 1457 is 1000
9999 abandon: saving in free-list of size 23
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 0
9999 mem: storing 1000 in location 1371
9999 mem: storing 0 in location 1376
 105 run: screen <- move-cursor screen, *cursor-row, *cursor-column
9999 mem: location 1370 is 1012
9999 mem: location 1382 is 1007
9999 mem: location 1007 is 2
9999 mem: location 1383 is 1008
9999 mem: location 1008 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1237
 106 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1238
 106 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1239
 106 run: jump-unless screen, 
9999 mem: location 1237 is 1012
9998 run: jump-unless fell through
 106 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1240
 106 run: *row <- copy new-row
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1015
9999 mem: storing 2 in location 1015
 106 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1241
 106 run: *column <- copy new-column
9999 mem: location 1239 is 0
9999 mem: location 1241 is 1016
9999 mem: storing 0 in location 1016
 106 run: reply screen:address:shared:screen
9999 mem: location 1237 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1370
 105 run: undo-coalesce-tag:number <- copy 2/right-arrow
9999 mem: storing 2 in location 1409
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1410
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1411
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1162
9999 mem: storing 1162 in location 1412
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1409 is 2
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1371 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1390
 105 run: jump-unless *undo, 
9999 mem: location 1390 is 1010
9999 mem: location 1010 is 1364
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1390 is 1010
9999 mem: location 1010 is 1364
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1364 in location 1183
 106 run: result <- get *in, value:offset
9999 mem: location 1183 is 1364
9999 mem: skipping refcount at 1364
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1365 is 1120
9999 mem: location 1366 is 0
9999 mem: location 1183 is 1364
9999 mem: skipping refcount at 1364
9998 run: address to copy is 1365
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1365 is 1120
9999 mem: storing 1120 in location 1184
 106 run: reply result:_elem
9999 mem: location 1184 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1389
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1389 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1162
9999 mem: location 1125 is 1
9999 mem: location 1126 is 3
9999 mem: location 1127 is 1162
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1389 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1122 in location 1395
 105 run: jump-unless move, 
9999 mem: location 1395 is 1122
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1395 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1162
9999 mem: location 1125 is 1
9999 mem: location 1126 is 3
9999 mem: location 1127 is 1162
9999 mem: location 1128 is 0
9999 mem: location 1395 is 1122
9998 run: address to copy is 1128
9998 run: its type is number
9999 mem: location 1128 is 0
9999 mem: storing 0 in location 1413
 105 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1409 is 2
9999 mem: location 1413 is 0
9999 mem: storing 0 in location 1414
 105 run: jump-unless coalesce?, 
9999 mem: location 1414 is 0
9998 run: jumping to instruction 750
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 mem: new alloc: 1477
9999 mem: storing 1477 in location 1389
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1406 is 1
9999 mem: location 1407 is 3
9999 mem: location 1408 is 1162
9999 mem: location 1410 is 2
9999 mem: location 1411 is 0
9999 mem: location 1412 is 1162
9999 mem: location 1409 is 2
9999 mem: location 1389 is 1477
9999 mem: skipping refcount at 1477
9999 mem: location 1389 is 1477
9999 mem: skipping refcount at 1477
9999 mem: storing 1 in location 1478
9999 mem: storing 1 in location 1479
9999 mem: storing 3 in location 1480
9999 mem: storing 1162 in location 1481
9999 mem: storing 2 in location 1482
9999 mem: storing 0 in location 1483
9999 mem: storing 1162 in location 1484
9999 mem: storing 2 in location 1485
 105 run: editor <- add-operation editor, op
9999 mem: location 1371 is 1000
9999 mem: location 1389 is 1477
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1360
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1477 in location 1361
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1360 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1364
9999 mem: location 1011 is 0
9999 mem: location 1360 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1362
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1361 is 1477
9999 mem: location 1362 is 1010
9999 mem: location 1010 is 1364
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1477 in location 1237
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1364 in location 1238
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1489
9999 mem: storing 1489 in location 1239
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1239 is 1489
9999 mem: skipping refcount at 1489
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1490 is 0
9999 mem: location 1491 is 0
9999 mem: location 1239 is 1489
9999 mem: skipping refcount at 1489
9998 run: address to copy is 1490
9999 mem: storing 1490 in location 1240
 107 run: *val <- copy x
9999 mem: location 1237 is 1477
9999 mem: location 1240 is 1490
9999 mem: storing 1477 in location 1490
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1239 is 1489
9999 mem: skipping refcount at 1489
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1490 is 1477
9999 mem: location 1491 is 0
9999 mem: location 1239 is 1489
9999 mem: skipping refcount at 1489
9999 type: type deduced to be address$
9998 run: address to copy is 1491
9999 mem: storing 1491 in location 1241
 107 run: *next <- copy in
9999 mem: location 1238 is 1364
9999 mem: location 1241 is 1491
9999 mem: storing 1364 in location 1491
 107 run: reply result
9999 mem: location 1239 is 1489
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1489
9999 mem: location 1362 is 1010
9999 mem: storing 1489 in location 1010
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1360 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1489
9999 mem: location 1011 is 0
9999 mem: location 1360 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1363
 106 run: *redo <- copy 0
9999 mem: location 1363 is 1011
9999 mem: storing 0 in location 1011
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1360 is 1000
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1371
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1370 is 1012
9999 mem: location 1371 is 1000
9999 mem: location 1376 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: storing 1012 in location 1316
9999 mem: storing 1000 in location 1318
9999 mem: storing 0 in location 1328
 104 run: jump-unless go-render?, 
9999 mem: location 1328 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1318 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1489
9999 mem: location 1011 is 0
9999 mem: location 1318 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1319
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1318 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1489
9999 mem: location 1011 is 0
9999 mem: location 1318 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1320
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1316 is 1012
9999 mem: location 1319 is 2
9999 mem: location 1320 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1237
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1238
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1239
 105 run: jump-unless screen, 
9999 mem: location 1237 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1240
 105 run: *row <- copy new-row
9999 mem: location 1238 is 2
9999 mem: location 1240 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1237 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1241
 105 run: *column <- copy new-column
9999 mem: location 1239 is 0
9999 mem: location 1241 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1237 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1316
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1317 is 1310
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1310 in location 1272
 105 run: jump-unless console, 
9999 mem: location 1272 is 1310
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1272 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 2
9999 mem: location 1312 is 1300
9999 mem: location 1272 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1311
9999 mem: storing 1311 in location 1273
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1272 is 1310
9999 mem: skipping refcount at 1310
9999 mem: location 1311 is 2
9999 mem: location 1312 is 1300
9999 mem: location 1272 is 1310
9999 mem: skipping refcount at 1310
9998 run: address to copy is 1312
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1312 is 1300
9999 mem: storing 1300 in location 1274
 105 run: max:number <- length *buf
9999 mem: location 1274 is 1300
9999 mem: skipping refcount at 1300
9999 mem: storing 2 in location 1275
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1273 is 1311
9999 mem: location 1311 is 2
9999 mem: location 1275 is 2
9999 mem: storing 1 in location 1276
 105 run: jump-unless done?, 
9999 mem: location 1276 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1180 in location 1277
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1277 is 1180
9999 mem: skipping refcount at 1180
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1272 is 1310
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1310
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1321
9999 mem: storing 0 in location 1322
9999 mem: storing 0 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 1310 in location 1317
9999 mem: storing 1 in location 1325
9999 mem: storing 1 in location 1326
 104 run: jump-unless found?, 
9999 mem: location 1325 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1326 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1316 is 1012
9999 mem: location 1317 is 1310
9999 mem: location 1318 is 1000
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1489
9999 mem: location 1011 is 0
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1162
9999 mem: location 1002 is 1162
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1193
9999 mem: location 1005 is 0
9999 mem: location 1006 is 4
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1489
9999 mem: location 1011 is 0
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .abcd↩     .
    .ef        .
    .┈┈┈┈┈     .
    .          .
  ]
 102 run: memory-should-contain [
    3 <- 2
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
