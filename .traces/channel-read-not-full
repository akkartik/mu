schedule: main
run: 1 main 0: (((1 channel-address)) <- ((init-channel)) ((3 literal)))
run: 2 init-channel 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 3 init-channel 1: (((1 channel-address)) <- ((new)) ((channel literal)))
sizeof: ((_ channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1002 to 1031
run: 4 init-channel 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1031 => ((2 integer-address))
setm: ((2 integer-address)) <= 1031
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1003 to 1031
run: 5 init-channel 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1031 to 0
run: 6 init-channel 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1032 => ((3 integer-address))
setm: ((3 integer-address)) <= 1032
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1004 to 1032
run: 7 init-channel 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1032 to 0
run: 8 init-channel 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (3)
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1005 to 3
run: 9 init-channel 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1005 to 4
run: 10 init-channel 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1033 => ((5 tagged-value-array-address-address))
setm: ((5 tagged-value-array-address-address)) <= 1033
setm: size of ((5 tagged-value-array-address-address)) is 1
setm: ((5 tagged-value-array-address-address)): setting 1006 to 1033
run: 11 init-channel 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1034 => ((5 tagged-value-array-address-address) (deref))
setm: ((5 tagged-value-array-address-address) (deref)) <= 1034
setm: size of ((5 tagged-value-array-address-address) (deref)) is 1
setm: ((5 tagged-value-array-address-address) (deref)): setting 1033 to 1034
run: 12 init-channel 10: (((reply)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
reply: (((1 channel-address))) (((1 channel-address)))
reply: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1 to 1031
run: 13 main 1: (((2 integer)) <- ((copy)) ((34 literal)))
run: 34 => ((2 integer))
setm: ((2 integer)) <= 34
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 2 to 34
run: 14 main 2: (((3 tagged-value)) <- ((save-type)) ((2 integer)))
m: ((2 integer))
sizeof: ((2 integer))
run: #(tagged record (integer 34)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (integer 34))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 3 to integer
setm: ((3 tagged-value)): setting 4 to 34
run: 15 main 3: (((1 channel-address) (deref) (nochange)) <- ((write)) ((1 channel-address)) ((3 tagged-value)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 16 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1043 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 17 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1031 #(tagged record (integer 34 . nil)))
run: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1045 to 1031
run: 18 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1031 #(tagged record (integer 34 . nil)))
run: #(tagged record (integer 34 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (integer 34 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1046 to integer
setm: ((2 tagged-value)): setting 1047 to 34
run: 19 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 20 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1074 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 21 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1076 to 0
setm: ((1 channel)): setting 1077 to 0
setm: ((1 channel)): setting 1078 to 1034
run: 22 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1077 integer) (raw))
sizeof: ((1077 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1079 to 0
run: 23 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1079 to 1
run: 24 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 25 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1105 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 26 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1107 to 0
setm: ((1 channel)): setting 1108 to 0
setm: ((1 channel)): setting 1109 to 1034
run: 27 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1109 tagged-value-array-address) (raw))
sizeof: ((1109 tagged-value-array-address) (raw))
run: 1034 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1034
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1110 to 1034
run: 28 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1111 to 4
run: 29 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1080 to 4
run: 30 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1081 to t
run: 31 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 32 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1076 integer) (raw))
sizeof: ((1076 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1082 to 0
run: 33 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1083 to nil
run: 34 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1048 to nil
run: 35 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 36 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1033 tagged-value-array-address) (raw))
sizeof: ((1033 tagged-value-array-address) (raw))
run: 1034 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1034
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1050 to 1034
run: 37 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1032 => ((7 integer-address))
setm: ((7 integer-address)) <= 1032
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1051 to 1032
run: 38 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1034 tagged-value-array) (raw))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1035 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1035
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1052 to 1035
run: 39 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (integer 34 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (integer 34 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1035 to integer
setm: ((8 tagged-value-address) (deref)): setting 1036 to 34
run: 40 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1032 to 1
run: 41 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1053 to 4
run: 42 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1054 to t
run: 43 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 44 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (deref) (nochange)))
reply: #(tagged record (0 1 1034 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (0 1 1034 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1031 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1032 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1033 to 1034
run: 45 main 4: (((1 channel-address) (deref) (nochange)) <- ((write)) ((1 channel-address)) ((3 tagged-value)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 46 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1136 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 47 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1031 #(tagged record (integer 34 . nil)))
run: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1138 to 1031
run: 48 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1031 #(tagged record (integer 34 . nil)))
run: #(tagged record (integer 34 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (integer 34 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 1139 to integer
setm: ((2 tagged-value)): setting 1140 to 34
run: 49 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 50 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1167 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 51 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1034 . nil)))
run: #(tagged record (0 1 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1169 to 0
setm: ((1 channel)): setting 1170 to 1
setm: ((1 channel)): setting 1171 to 1034
run: 52 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1170 integer) (raw))
sizeof: ((1170 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1172 to 1
run: 53 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1172 to 2
run: 54 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 55 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1198 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 56 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1034 . nil)))
run: #(tagged record (0 1 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1200 to 0
setm: ((1 channel)): setting 1201 to 1
setm: ((1 channel)): setting 1202 to 1034
run: 57 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1202 tagged-value-array-address) (raw))
sizeof: ((1202 tagged-value-array-address) (raw))
run: 1034 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1034
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1203 to 1034
run: 58 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1204 to 4
run: 59 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1173 to 4
run: 60 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1174 to t
run: 61 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 62 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1169 integer) (raw))
sizeof: ((1169 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1175 to 0
run: 63 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1176 to nil
run: 64 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 1141 to nil
run: 65 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 66 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1033 tagged-value-array-address) (raw))
sizeof: ((1033 tagged-value-array-address) (raw))
run: 1034 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1034
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 1143 to 1034
run: 67 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1032 => ((7 integer-address))
setm: ((7 integer-address)) <= 1032
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 1144 to 1032
run: 68 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1034 tagged-value-array) (raw))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1037 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1037
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 1145 to 1037
run: 69 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (integer 34 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (integer 34 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1037 to integer
setm: ((8 tagged-value-address) (deref)): setting 1038 to 34
run: 70 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1032 to 2
run: 71 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 4 => ((9 integer))
setm: ((9 integer)) <= 4
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 1146 to 4
run: 72 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 1147 to t
run: 73 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 74 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((1 channel-address) (deref) (nochange)))
reply: #(tagged record (0 2 1034 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (0 2 1034 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1031 to 0
setm: ((1 channel-address) (deref) (nochange)): setting 1032 to 2
setm: ((1 channel-address) (deref) (nochange)): setting 1033 to 1034
run: 75 main 5: (_ ((1 channel-address) (deref) (nochange)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 76 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1229 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 77 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1031)
run: 1031 => ((1 channel-address))
setm: ((1 channel-address)) <= 1031
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1231 to 1031
run: 78 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 79 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1260 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 80 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 2 1034 . nil)))
run: #(tagged record (0 2 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 2 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1262 to 0
setm: ((1 channel)): setting 1263 to 2
setm: ((1 channel)): setting 1264 to 1034
run: 81 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1262 integer) (raw))
sizeof: ((1262 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1265 to 0
run: 82 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1263 integer) (raw))
sizeof: ((1263 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1266 to 2
run: 83 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1267 to nil
run: 84 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 1232 to nil
run: 85 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 86 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1031 => ((4 integer-address))
setm: ((4 integer-address)) <= 1031
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 1234 to 1031
run: 87 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1033 tagged-value-array-address) (raw))
sizeof: ((1033 tagged-value-array-address) (raw))
run: 1034 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1034
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 1235 to 1034
run: 88 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1034 tagged-value-array) (raw))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1035 tagged-value) (raw))
sizeof: ((1035 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (integer 34 . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (integer 34 . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 1236 to integer
setm: ((6 tagged-value)): setting 1237 to 34
run: 89 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1031 to 1
run: 90 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 4 => ((8 integer))
setm: ((8 integer)) <= 4
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 1238 to 4
run: 91 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 1239 to t
run: 92 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 93 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (_ ((1 channel-address) (deref) (nochange)))
reply: #(tagged record (1 2 1034 . nil)) => ((1 channel-address) (deref) (nochange))
setm: ((1 channel-address) (deref) (nochange)) <= #(tagged record (1 2 1034 . nil))
setm: size of ((1 channel-address) (deref) (nochange)) is 3
sizeof: ((1 channel-address) (deref) (nochange))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref) (nochange)): setting 1031 to 1
setm: ((1 channel-address) (deref) (nochange)): setting 1032 to 2
setm: ((1 channel-address) (deref) (nochange)): setting 1033 to 1034
run: 94 main 6: (((5 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 95 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1291 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 96 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 2 1034 . nil)))
run: #(tagged record (1 2 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 2 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1293 to 1
setm: ((1 channel)): setting 1294 to 2
setm: ((1 channel)): setting 1295 to 1034
run: 97 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1293 integer) (raw))
sizeof: ((1293 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1296 to 1
run: 98 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1294 integer) (raw))
sizeof: ((1294 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1297 to 2
run: 99 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1298 to nil
run: 100 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((5 boolean)))
reply: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 5 to nil
run: 101 main 7: (((6 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 102 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1322 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 103 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 2 1034 . nil)))
run: #(tagged record (1 2 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 2 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1324 to 1
setm: ((1 channel)): setting 1325 to 2
setm: ((1 channel)): setting 1326 to 1034
run: 104 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((1325 integer) (raw))
sizeof: ((1325 integer) (raw))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1327 to 2
run: 105 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1327 to 3
run: 106 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 107 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1353 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 108 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 2 1034 . nil)))
run: #(tagged record (1 2 1034 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 2 1034 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 1355 to 1
setm: ((1 channel)): setting 1356 to 2
setm: ((1 channel)): setting 1357 to 1034
run: 109 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1357 tagged-value-array-address) (raw))
sizeof: ((1357 tagged-value-array-address) (raw))
run: 1034 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1034
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 1358 to 1034
run: 110 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1034 integer) (raw))
sizeof: ((1034 integer) (raw))
run: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1359 to 4
run: 111 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 4 => ((5 integer))
setm: ((5 integer)) <= 4
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 1328 to 4
run: 112 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 1329 to t
run: 113 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 114 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((1324 integer) (raw))
sizeof: ((1324 integer) (raw))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 1330 to 1
run: 115 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 1331 to nil
run: 116 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((6 boolean)))
reply: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 6 to nil
schedule: done with routine 
