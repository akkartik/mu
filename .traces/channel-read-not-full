schedule: main
run: -- nil
run: 1 main 0: ((1 channel-address) <- new-channel (3 literal))
run: -- nil
run: 2 new-channel 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1000 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1000 30))
run: 3 new-channel 1: ((1 channel-address) <- new (channel literal))
sizeof: channel
sizeof: integer
sizeof: integer
sizeof: tagged-value-array-address
run: 1031 => (1 channel-address)
setm: (1 channel-address) <= 1031
sz: (1 channel-address)
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1001 to 1031
run: -- ((1000 30) (1001 1031))
run: 4 new-channel 2: ((2 integer-address) <- get-address (1 channel-address deref) (0 offset))
record-info: (1 channel-address deref) (0 offset)
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get-address: (1 channel-address deref) (0 offset) => 1031
run: 1031 => (2 integer-address)
setm: (2 integer-address) <= 1031
sz: (2 integer-address)
setm: size of (2 integer-address) is 1
setm: (2 integer-address): setting 1002 to 1031
run: -- ((1000 30) (1001 1031) (1002 1031))
run: 5 new-channel 3: ((2 integer-address deref) <- copy (0 literal))
run: 0 => (2 integer-address deref)
setm: (2 integer-address deref) <= 0
sz: (2 integer-address deref)
m: (2 location)
sz: (2 location)
sz: (1031 integer)
setm: size of (2 integer-address deref) is 1
setm: (2 integer-address deref): setting 1031 to 0
run: -- ((1000 30) (1001 1031) (1002 1031) (1031 0))
run: 6 new-channel 4: ((3 integer-address) <- get-address (1 channel-address deref) (1 offset))
record-info: (1 channel-address deref) (1 offset)
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get-address: (1 channel-address deref) (1 offset) => 1032
run: 1032 => (3 integer-address)
setm: (3 integer-address) <= 1032
sz: (3 integer-address)
setm: size of (3 integer-address) is 1
setm: (3 integer-address): setting 1003 to 1032
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1031 0))
run: 7 new-channel 5: ((3 integer-address deref) <- copy (0 literal))
run: 0 => (3 integer-address deref)
setm: (3 integer-address deref) <= 0
sz: (3 integer-address deref)
m: (3 location)
sz: (3 location)
sz: (1032 integer)
setm: size of (3 integer-address deref) is 1
setm: (3 integer-address deref): setting 1032 to 0
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1031 0) (1032 0))
run: 8 new-channel 6: ((4 integer) <- arg)
arg: nil 0 (3)
run: 3 => (4 integer)
setm: (4 integer) <= 3
sz: (4 integer)
setm: size of (4 integer) is 1
setm: (4 integer): setting 1004 to 3
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 3) (1031 0) (1032 0))
run: 9 new-channel 7: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
add: 3 1
m: (4 integer)
sz: (4 integer)
run: 4 => (4 integer)
setm: (4 integer) <= 4
sz: (4 integer)
setm: size of (4 integer) is 1
setm: (4 integer): setting 1004 to 4
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1031 0) (1032 0))
run: 10 new-channel 8: ((5 tagged-value-array-address-address) <- get-address (1 channel-address deref) (2 offset))
record-info: (1 channel-address deref) (2 offset)
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get-address: (1 channel-address deref) (2 offset) => 1033
run: 1033 => (5 tagged-value-array-address-address)
setm: (5 tagged-value-array-address-address) <= 1033
sz: (5 tagged-value-array-address-address)
setm: size of (5 tagged-value-array-address-address) is 1
setm: (5 tagged-value-array-address-address): setting 1005 to 1033
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0))
run: 11 new-channel 9: ((5 tagged-value-array-address-address deref) <- new (tagged-value-array literal) (4 integer))
m: (4 integer)
sz: (4 integer)
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1034 => (5 tagged-value-array-address-address deref)
setm: (5 tagged-value-array-address-address deref) <= 1034
sz: (5 tagged-value-array-address-address deref)
m: (5 location)
sz: (5 location)
sz: (1033 tagged-value-array-address)
setm: size of (5 tagged-value-array-address-address deref) is 1
setm: (5 tagged-value-array-address-address deref): setting 1033 to 1034
run: -- ((1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4))
run: 12 new-channel 10: (reply (1 channel-address))
m: (1 channel-address)
sz: (1 channel-address)
reply: ((1 channel-address)) ((1 channel-address))
reply: 1031 => (1 channel-address)
setm: (1 channel-address) <= 1031
sz: (1 channel-address)
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1 to 1031
run: -- ((1 1031) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4))
run: 13 main 1: ((2 integer-address) <- new (integer literal))
sizeof: integer
run: 1043 => (2 integer-address)
setm: (2 integer-address) <= 1043
sz: (2 integer-address)
setm: size of (2 integer-address) is 1
setm: (2 integer-address): setting 2 to 1043
run: -- ((1 1031) (2 1043) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4))
run: 14 main 2: ((2 integer-address deref) <- copy (34 literal))
run: 34 => (2 integer-address deref)
setm: (2 integer-address deref) <= 34
sz: (2 integer-address deref)
m: (2 location)
sz: (2 location)
sz: (1043 integer)
setm: size of (2 integer-address deref) is 1
setm: (2 integer-address deref): setting 1043 to 34
run: -- ((1 1031) (2 1043) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34))
run: 15 main 3: ((3 tagged-value-address) <- new-tagged-value (integer-address literal) (2 integer-address))
m: (2 integer-address)
sz: (2 integer-address)
run: -- ((1 1031) (2 1043) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34))
run: 16 new-tagged-value 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1044 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1043) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30))
run: 17 new-tagged-value 1: ((1 type) <- arg)
arg: nil 0 (integer-address 1043)
run: integer-address => (1 type)
setm: (1 type) <= integer-address
sz: (1 type)
setm: size of (1 type) is 1
setm: (1 type): setting 1045 to integer-address
run: -- ((1 1031) (2 1043) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address))
run: 18 new-tagged-value 2: ((2 integer) <- sizeof (1 type))
m: (1 type)
sz: (1 type)
sizeof: integer-address
run: 1 => (2 integer)
setm: (2 integer) <= 1
sz: (2 integer)
setm: size of (2 integer) is 1
setm: (2 integer): setting 1046 to 1
run: -- ((1 1031) (2 1043) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1))
run: 19 new-tagged-value 3: ((3 boolean) <- eq (2 integer) (1 literal))
m: (2 integer)
sz: (2 integer)
run: t => (3 boolean)
setm: (3 boolean) <= t
sz: (3 boolean)
setm: size of (3 boolean) is 1
setm: (3 boolean): setting 1047 to t
run: -- ((1 1031) (2 1043) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t))
run: 20 new-tagged-value 4: (assert (3 boolean))
m: (3 boolean)
sz: (3 boolean)
run: -- ((1 1031) (2 1043) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t))
run: 21 new-tagged-value 5: ((4 tagged-value-address) <- new (tagged-value literal))
sizeof: tagged-value
sizeof: type
sizeof: location
run: 1075 => (4 tagged-value-address)
setm: (4 tagged-value-address) <= 1075
sz: (4 tagged-value-address)
setm: size of (4 tagged-value-address) is 1
setm: (4 tagged-value-address): setting 1048 to 1075
run: -- ((1 1031) (2 1043) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075))
run: 22 new-tagged-value 6: ((5 location) <- get-address (4 tagged-value-address deref) (0 offset))
record-info: (4 tagged-value-address deref) (0 offset)
record-info: initial base 1075 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (0 offset) => 1075
run: 1075 => (5 location)
setm: (5 location) <= 1075
sz: (5 location)
setm: size of (5 location) is 1
setm: (5 location): setting 1049 to 1075
run: -- ((1 1031) (2 1043) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075))
run: 23 new-tagged-value 7: ((5 location deref) <- copy (1 type))
m: (1 type)
sz: (1 type)
run: integer-address => (5 location deref)
setm: (5 location deref) <= integer-address
sz: (5 location deref)
m: (5 location)
sz: (5 location)
sz: (1075 location)
setm: size of (5 location deref) is 1
setm: (5 location deref): setting 1075 to integer-address
run: -- ((1 1031) (2 1043) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1075 integer-address))
run: 24 new-tagged-value 8: ((6 location) <- get-address (4 tagged-value-address deref) (1 offset))
record-info: (4 tagged-value-address deref) (1 offset)
record-info: initial base 1075 type ((address t) (elem tagged-value) (size 1))
record-info: (4 tagged-value-address deref) requests deref => ((elems (type location)) (fields (type payload)) (record t) (size 2))
get-address: (4 tagged-value-address deref) (1 offset) => 1076
run: 1076 => (6 location)
setm: (6 location) <= 1076
sz: (6 location)
setm: size of (6 location) is 1
setm: (6 location): setting 1050 to 1076
run: -- ((1 1031) (2 1043) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address))
run: 25 new-tagged-value 9: ((6 location deref) <- arg)
arg: nil 1 (integer-address 1043)
run: 1043 => (6 location deref)
setm: (6 location deref) <= 1043
sz: (6 location deref)
m: (6 location)
sz: (6 location)
sz: (1076 location)
setm: size of (6 location deref) is 1
setm: (6 location deref): setting 1076 to 1043
run: -- ((1 1031) (2 1043) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043))
run: 26 new-tagged-value 10: (reply (4 tagged-value-address))
m: (4 tagged-value-address)
sz: (4 tagged-value-address)
reply: ((4 tagged-value-address)) ((3 tagged-value-address))
reply: 1075 => (3 tagged-value-address)
setm: (3 tagged-value-address) <= 1075
sz: (3 tagged-value-address)
setm: size of (3 tagged-value-address) is 1
setm: (3 tagged-value-address): setting 3 to 1075
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043))
run: 27 main 4: ((1 channel-address deref) <- write (1 channel-address) (3 tagged-value-address deref))
m: (1 channel-address)
sz: (1 channel-address)
m: (3 tagged-value-address deref)
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
sz: (1075 tagged-value)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043))
run: 28 write 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1077 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30))
run: 29 write 1: ((1 channel-address) <- arg)
arg: nil 0 (1031 #(tagged record (integer-address 1043 . nil)))
run: 1031 => (1 channel-address)
setm: (1 channel-address) <= 1031
sz: (1 channel-address)
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1078 to 1031
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031))
run: 30 write 2: ((2 tagged-value) <- arg)
arg: nil 1 (1031 #(tagged record (integer-address 1043 . nil)))
run: #(tagged record (integer-address 1043 . nil)) => (2 tagged-value)
setm: (2 tagged-value) <= #(tagged record (integer-address 1043 . nil))
sz: (2 tagged-value)
setm: size of (2 tagged-value) is 2
setm: (2 tagged-value): setting 1079 to integer-address
setm: (2 tagged-value): setting 1080 to 1043
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043))
run: 31 write 3: ((4 boolean) <- full? (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
sz: (1031 channel)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043))
run: 32 full? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1108 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30))
run: 33 full? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (0 0 1034 . nil))
sz: (1 channel)
setm: size of (1 channel) is 3
setm: (1 channel): setting 1109 to 0
setm: (1 channel): setting 1110 to 0
setm: (1 channel): setting 1111 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034))
run: 34 full? 2: ((4 integer) <- get (1 channel) (1 offset))
record-info: (1 channel) (1 offset)
record-info: initial base 1109 type ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel) (1 offset) => 1110 integer
m: (1110 integer global)
sz: (1110 integer global)
run: 0 => (4 integer)
setm: (4 integer) <= 0
sz: (4 integer)
setm: size of (4 integer) is 1
setm: (4 integer): setting 1112 to 0
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 0))
run: 35 full? 3: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
add: 0 1
m: (4 integer)
sz: (4 integer)
run: 1 => (4 integer)
setm: (4 integer) <= 1
sz: (4 integer)
setm: size of (4 integer) is 1
setm: (4 integer): setting 1112 to 1
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1))
run: 36 full? 4: ((5 integer) <- capacity (1 channel))
m: (1 channel)
sz: (1 channel)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1))
run: 37 capacity 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1139 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1139 30))
run: 38 capacity 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (0 0 1034 . nil)))
run: #(tagged record (0 0 1034 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (0 0 1034 . nil))
sz: (1 channel)
setm: size of (1 channel) is 3
setm: (1 channel): setting 1140 to 0
setm: (1 channel): setting 1141 to 0
setm: (1 channel): setting 1142 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1139 30) (1140 0) (1141 0) (1142 1034))
run: 39 capacity 2: ((4 tagged-value-array-address) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
record-info: initial base 1140 type ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel) (2 offset) => 1142 tagged-value-array-address
m: (1142 tagged-value-array-address global)
sz: (1142 tagged-value-array-address global)
run: 1034 => (4 tagged-value-array-address)
setm: (4 tagged-value-array-address) <= 1034
sz: (4 tagged-value-array-address)
setm: size of (4 tagged-value-array-address) is 1
setm: (4 tagged-value-array-address): setting 1143 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034))
run: 40 capacity 3: ((5 integer) <- len (4 tagged-value-array-address deref))
array-len: (4 tagged-value-array-address deref)
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
sz: (1034 integer)
run: 4 => (5 integer)
setm: (5 integer) <= 4
sz: (5 integer)
setm: size of (5 integer) is 1
setm: (5 integer): setting 1144 to 4
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 41 capacity 4: (reply (5 integer))
m: (5 integer)
sz: (5 integer)
reply: ((5 integer)) ((5 integer))
reply: 4 => (5 integer)
setm: (5 integer) <= 4
sz: (5 integer)
setm: size of (5 integer) is 1
setm: (5 integer): setting 1113 to 4
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 42 full? 5: ((6 boolean) <- lt (4 integer) (5 integer))
m: (4 integer)
sz: (4 integer)
m: (5 integer)
sz: (5 integer)
run: t => (6 boolean)
setm: (6 boolean) <= t
sz: (6 boolean)
setm: size of (6 boolean) is 1
setm: (6 boolean): setting 1114 to t
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 43 full? 6: (jump-if (6 boolean) (1 offset))
m: (6 boolean)
sz: (6 boolean)
jump: checking that t is t
jump: jumping to 8
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 44 full? 8: ((7 integer) <- get (1 channel) (0 offset))
record-info: (1 channel) (0 offset)
record-info: initial base 1109 type ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel) (0 offset) => 1109 integer
m: (1109 integer global)
sz: (1109 integer global)
run: 0 => (7 integer)
setm: (7 integer) <= 0
sz: (7 integer)
setm: size of (7 integer) is 1
setm: (7 integer): setting 1115 to 0
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 45 full? 9: ((8 boolean) <- eq (7 integer) (4 integer))
m: (7 integer)
sz: (7 integer)
m: (4 integer)
sz: (4 integer)
run: nil => (8 boolean)
setm: (8 boolean) <= nil
sz: (8 boolean)
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1116 to nil
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 46 full? 10: (reply (8 boolean))
m: (8 boolean)
sz: (8 boolean)
reply: ((8 boolean)) ((4 boolean))
reply: nil => (4 boolean)
setm: (4 boolean) <= nil
sz: (4 boolean)
setm: size of (4 boolean) is 1
setm: (4 boolean): setting 1081 to nil
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 47 write 4: (jump-unless (4 boolean) (2 offset))
m: (4 boolean)
sz: (4 boolean)
jump: checking that nil is not t
jump: jumping to 7
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 48 write 7: ((6 tagged-value-array-address) <- get (1 channel-address deref) (2 offset))
record-info: (1 channel-address deref) (2 offset)
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel-address deref) (2 offset) => 1033 tagged-value-array-address
m: (1033 tagged-value-array-address global)
sz: (1033 tagged-value-array-address global)
run: 1034 => (6 tagged-value-array-address)
setm: (6 tagged-value-array-address) <= 1034
sz: (6 tagged-value-array-address)
setm: size of (6 tagged-value-array-address) is 1
setm: (6 tagged-value-array-address): setting 1083 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 49 write 8: ((7 integer-address) <- get-address (1 channel-address deref) (1 offset))
record-info: (1 channel-address deref) (1 offset)
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get-address: (1 channel-address deref) (1 offset) => 1032
run: 1032 => (7 integer-address)
setm: (7 integer-address) <= 1032
sz: (7 integer-address)
setm: size of (7 integer-address) is 1
setm: (7 integer-address): setting 1084 to 1032
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 50 write 9: ((8 tagged-value-address) <- index-address (6 tagged-value-array-address deref) (7 integer-address deref))
array-info: (6 tagged-value-array-address deref) (7 integer-address deref)
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
sz: (1032 integer)
array-info: initial base 1034 type ((address t) (elem tagged-value-array) (size 1))
array-info: (6 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (6 tagged-value-array-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
sz: (1034 integer)
array-info: array-len of (6 tagged-value-array-address deref) is 4
index-address: (6 tagged-value-array-address deref) (7 integer-address deref) => 1035
run: 1035 => (8 tagged-value-address)
setm: (8 tagged-value-address) <= 1035
sz: (8 tagged-value-address)
setm: size of (8 tagged-value-address) is 1
setm: (8 tagged-value-address): setting 1085 to 1035
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 51 write 10: ((8 tagged-value-address deref) <- copy (2 tagged-value))
m: (2 tagged-value)
sz: (2 tagged-value)
run: #(tagged record (integer-address 1043 . nil)) => (8 tagged-value-address deref)
setm: (8 tagged-value-address deref) <= #(tagged record (integer-address 1043 . nil))
sz: (8 tagged-value-address deref)
m: (8 location)
sz: (8 location)
sz: (1035 tagged-value)
setm: size of (8 tagged-value-address deref) is 2
setm: (8 tagged-value-address deref): setting 1035 to integer-address
setm: (8 tagged-value-address deref): setting 1036 to 1043
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 0) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 52 write 11: ((7 integer-address deref) <- add (7 integer-address deref) (1 literal))
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
sz: (1032 integer)
add: 0 1
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
sz: (1032 integer)
run: 1 => (7 integer-address deref)
setm: (7 integer-address deref) <= 1
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
sz: (1032 integer)
setm: size of (7 integer-address deref) is 1
setm: (7 integer-address deref): setting 1032 to 1
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 53 write 12: ((9 integer) <- len (6 tagged-value-array-address deref))
array-len: (6 tagged-value-array-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
sz: (1034 integer)
run: 4 => (9 integer)
setm: (9 integer) <= 4
sz: (9 integer)
setm: size of (9 integer) is 1
setm: (9 integer): setting 1086 to 4
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 54 write 13: ((10 boolean) <- lt (7 integer-address deref) (9 integer))
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
sz: (1032 integer)
m: (9 integer)
sz: (9 integer)
run: t => (10 boolean)
setm: (10 boolean) <= t
sz: (10 boolean)
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1087 to t
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 55 write 14: (jump-if (10 boolean) (1 offset))
m: (10 boolean)
sz: (10 boolean)
jump: checking that t is t
jump: jumping to 16
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 56 write 16: (reply (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
sz: (1031 channel)
reply: ((1 channel-address deref)) ((1 channel-address deref))
reply: #(tagged record (0 1 1034 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (0 1 1034 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
sz: (1031 channel)
setm: size of (1 channel-address deref) is 3
setm: (1 channel-address deref): setting 1031 to 0
setm: (1 channel-address deref): setting 1032 to 1
setm: (1 channel-address deref): setting 1033 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 57 main 5: ((1 channel-address deref) <- write (1 channel-address) (3 tagged-value-address deref))
m: (1 channel-address)
sz: (1 channel-address)
m: (3 tagged-value-address deref)
sz: (3 tagged-value-address deref)
m: (3 location)
sz: (3 location)
sz: (1075 tagged-value)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4))
run: 58 write 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1170 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30))
run: 59 write 1: ((1 channel-address) <- arg)
arg: nil 0 (1031 #(tagged record (integer-address 1043 . nil)))
run: 1031 => (1 channel-address)
setm: (1 channel-address) <= 1031
sz: (1 channel-address)
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1171 to 1031
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031))
run: 60 write 2: ((2 tagged-value) <- arg)
arg: nil 1 (1031 #(tagged record (integer-address 1043 . nil)))
run: #(tagged record (integer-address 1043 . nil)) => (2 tagged-value)
setm: (2 tagged-value) <= #(tagged record (integer-address 1043 . nil))
sz: (2 tagged-value)
setm: size of (2 tagged-value) is 2
setm: (2 tagged-value): setting 1172 to integer-address
setm: (2 tagged-value): setting 1173 to 1043
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043))
run: 61 write 3: ((4 boolean) <- full? (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
sz: (1031 channel)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043))
run: 62 full? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1201 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30))
run: 63 full? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (0 1 1034 . nil)))
run: #(tagged record (0 1 1034 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (0 1 1034 . nil))
sz: (1 channel)
setm: size of (1 channel) is 3
setm: (1 channel): setting 1202 to 0
setm: (1 channel): setting 1203 to 1
setm: (1 channel): setting 1204 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034))
run: 64 full? 2: ((4 integer) <- get (1 channel) (1 offset))
record-info: (1 channel) (1 offset)
record-info: initial base 1202 type ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel) (1 offset) => 1203 integer
m: (1203 integer global)
sz: (1203 integer global)
run: 1 => (4 integer)
setm: (4 integer) <= 1
sz: (4 integer)
setm: size of (4 integer) is 1
setm: (4 integer): setting 1205 to 1
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 1))
run: 65 full? 3: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
add: 1 1
m: (4 integer)
sz: (4 integer)
run: 2 => (4 integer)
setm: (4 integer) <= 2
sz: (4 integer)
setm: size of (4 integer) is 1
setm: (4 integer): setting 1205 to 2
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2))
run: 66 full? 4: ((5 integer) <- capacity (1 channel))
m: (1 channel)
sz: (1 channel)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2))
run: 67 capacity 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1232 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1232 30))
run: 68 capacity 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (0 1 1034 . nil)))
run: #(tagged record (0 1 1034 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (0 1 1034 . nil))
sz: (1 channel)
setm: size of (1 channel) is 3
setm: (1 channel): setting 1233 to 0
setm: (1 channel): setting 1234 to 1
setm: (1 channel): setting 1235 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1232 30) (1233 0) (1234 1) (1235 1034))
run: 69 capacity 2: ((4 tagged-value-array-address) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
record-info: initial base 1233 type ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel) (2 offset) => 1235 tagged-value-array-address
m: (1235 tagged-value-array-address global)
sz: (1235 tagged-value-array-address global)
run: 1034 => (4 tagged-value-array-address)
setm: (4 tagged-value-array-address) <= 1034
sz: (4 tagged-value-array-address)
setm: size of (4 tagged-value-array-address) is 1
setm: (4 tagged-value-array-address): setting 1236 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034))
run: 70 capacity 3: ((5 integer) <- len (4 tagged-value-array-address deref))
array-len: (4 tagged-value-array-address deref)
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
sz: (1034 integer)
run: 4 => (5 integer)
setm: (5 integer) <= 4
sz: (5 integer)
setm: size of (5 integer) is 1
setm: (5 integer): setting 1237 to 4
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 71 capacity 4: (reply (5 integer))
m: (5 integer)
sz: (5 integer)
reply: ((5 integer)) ((5 integer))
reply: 4 => (5 integer)
setm: (5 integer) <= 4
sz: (5 integer)
setm: size of (5 integer) is 1
setm: (5 integer): setting 1206 to 4
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 72 full? 5: ((6 boolean) <- lt (4 integer) (5 integer))
m: (4 integer)
sz: (4 integer)
m: (5 integer)
sz: (5 integer)
run: t => (6 boolean)
setm: (6 boolean) <= t
sz: (6 boolean)
setm: size of (6 boolean) is 1
setm: (6 boolean): setting 1207 to t
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 73 full? 6: (jump-if (6 boolean) (1 offset))
m: (6 boolean)
sz: (6 boolean)
jump: checking that t is t
jump: jumping to 8
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 74 full? 8: ((7 integer) <- get (1 channel) (0 offset))
record-info: (1 channel) (0 offset)
record-info: initial base 1202 type ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel) (0 offset) => 1202 integer
m: (1202 integer global)
sz: (1202 integer global)
run: 0 => (7 integer)
setm: (7 integer) <= 0
sz: (7 integer)
setm: size of (7 integer) is 1
setm: (7 integer): setting 1208 to 0
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 75 full? 9: ((8 boolean) <- eq (7 integer) (4 integer))
m: (7 integer)
sz: (7 integer)
m: (4 integer)
sz: (4 integer)
run: nil => (8 boolean)
setm: (8 boolean) <= nil
sz: (8 boolean)
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1209 to nil
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 76 full? 10: (reply (8 boolean))
m: (8 boolean)
sz: (8 boolean)
reply: ((8 boolean)) ((4 boolean))
reply: nil => (4 boolean)
setm: (4 boolean) <= nil
sz: (4 boolean)
setm: size of (4 boolean) is 1
setm: (4 boolean): setting 1174 to nil
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 77 write 4: (jump-unless (4 boolean) (2 offset))
m: (4 boolean)
sz: (4 boolean)
jump: checking that nil is not t
jump: jumping to 7
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 78 write 7: ((6 tagged-value-array-address) <- get (1 channel-address deref) (2 offset))
record-info: (1 channel-address deref) (2 offset)
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel-address deref) (2 offset) => 1033 tagged-value-array-address
m: (1033 tagged-value-array-address global)
sz: (1033 tagged-value-array-address global)
run: 1034 => (6 tagged-value-array-address)
setm: (6 tagged-value-array-address) <= 1034
sz: (6 tagged-value-array-address)
setm: size of (6 tagged-value-array-address) is 1
setm: (6 tagged-value-array-address): setting 1176 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 79 write 8: ((7 integer-address) <- get-address (1 channel-address deref) (1 offset))
record-info: (1 channel-address deref) (1 offset)
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get-address: (1 channel-address deref) (1 offset) => 1032
run: 1032 => (7 integer-address)
setm: (7 integer-address) <= 1032
sz: (7 integer-address)
setm: size of (7 integer-address) is 1
setm: (7 integer-address): setting 1177 to 1032
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 80 write 9: ((8 tagged-value-address) <- index-address (6 tagged-value-array-address deref) (7 integer-address deref))
array-info: (6 tagged-value-array-address deref) (7 integer-address deref)
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
sz: (1032 integer)
array-info: initial base 1034 type ((address t) (elem tagged-value-array) (size 1))
array-info: (6 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (6 tagged-value-array-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
sz: (1034 integer)
array-info: array-len of (6 tagged-value-array-address deref) is 4
index-address: (6 tagged-value-array-address deref) (7 integer-address deref) => 1037
run: 1037 => (8 tagged-value-address)
setm: (8 tagged-value-address) <= 1037
sz: (8 tagged-value-address)
setm: size of (8 tagged-value-address) is 1
setm: (8 tagged-value-address): setting 1178 to 1037
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 81 write 10: ((8 tagged-value-address deref) <- copy (2 tagged-value))
m: (2 tagged-value)
sz: (2 tagged-value)
run: #(tagged record (integer-address 1043 . nil)) => (8 tagged-value-address deref)
setm: (8 tagged-value-address deref) <= #(tagged record (integer-address 1043 . nil))
sz: (8 tagged-value-address deref)
m: (8 location)
sz: (8 location)
sz: (1037 tagged-value)
setm: size of (8 tagged-value-address deref) is 2
setm: (8 tagged-value-address deref): setting 1037 to integer-address
setm: (8 tagged-value-address deref): setting 1038 to 1043
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 1) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 82 write 11: ((7 integer-address deref) <- add (7 integer-address deref) (1 literal))
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
sz: (1032 integer)
add: 1 1
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
sz: (1032 integer)
run: 2 => (7 integer-address deref)
setm: (7 integer-address deref) <= 2
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
sz: (1032 integer)
setm: size of (7 integer-address deref) is 1
setm: (7 integer-address deref): setting 1032 to 2
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 83 write 12: ((9 integer) <- len (6 tagged-value-array-address deref))
array-len: (6 tagged-value-array-address deref)
m: (6 integer-address deref)
sz: (6 integer-address deref)
m: (6 location)
sz: (6 location)
sz: (1034 integer)
run: 4 => (9 integer)
setm: (9 integer) <= 4
sz: (9 integer)
setm: size of (9 integer) is 1
setm: (9 integer): setting 1179 to 4
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 84 write 13: ((10 boolean) <- lt (7 integer-address deref) (9 integer))
m: (7 integer-address deref)
sz: (7 integer-address deref)
m: (7 location)
sz: (7 location)
sz: (1032 integer)
m: (9 integer)
sz: (9 integer)
run: t => (10 boolean)
setm: (10 boolean) <= t
sz: (10 boolean)
setm: size of (10 boolean) is 1
setm: (10 boolean): setting 1180 to t
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 85 write 14: (jump-if (10 boolean) (1 offset))
m: (10 boolean)
sz: (10 boolean)
jump: checking that t is t
jump: jumping to 16
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 86 write 16: (reply (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
sz: (1031 channel)
reply: ((1 channel-address deref)) ((1 channel-address deref))
reply: #(tagged record (0 2 1034 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (0 2 1034 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
sz: (1031 channel)
setm: size of (1 channel-address deref) is 3
setm: (1 channel-address deref): setting 1031 to 0
setm: (1 channel-address deref): setting 1032 to 2
setm: (1 channel-address deref): setting 1033 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 87 main 6: (_ (1 channel-address deref) <- read (1 channel-address))
m: (1 channel-address)
sz: (1 channel-address)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4))
run: 88 read 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1263 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30))
run: 89 read 1: ((1 channel-address) <- arg)
arg: nil 0 (1031)
run: 1031 => (1 channel-address)
setm: (1 channel-address) <= 1031
sz: (1 channel-address)
setm: size of (1 channel-address) is 1
setm: (1 channel-address): setting 1264 to 1031
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031))
run: 90 read 2: ((2 boolean) <- empty? (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
sz: (1031 channel)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031))
run: 91 empty? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1294 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1294 30))
run: 92 empty? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (0 2 1034 . nil)))
run: #(tagged record (0 2 1034 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (0 2 1034 . nil))
sz: (1 channel)
setm: size of (1 channel) is 3
setm: (1 channel): setting 1295 to 0
setm: (1 channel): setting 1296 to 2
setm: (1 channel): setting 1297 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1294 30) (1295 0) (1296 2) (1297 1034))
run: 93 empty? 2: ((4 integer) <- get (1 channel) (0 offset))
record-info: (1 channel) (0 offset)
record-info: initial base 1295 type ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel) (0 offset) => 1295 integer
m: (1295 integer global)
sz: (1295 integer global)
run: 0 => (4 integer)
setm: (4 integer) <= 0
sz: (4 integer)
setm: size of (4 integer) is 1
setm: (4 integer): setting 1298 to 0
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0))
run: 94 empty? 3: ((5 integer) <- get (1 channel) (1 offset))
record-info: (1 channel) (1 offset)
record-info: initial base 1295 type ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel) (1 offset) => 1296 integer
m: (1296 integer global)
sz: (1296 integer global)
run: 2 => (5 integer)
setm: (5 integer) <= 2
sz: (5 integer)
setm: size of (5 integer) is 1
setm: (5 integer): setting 1299 to 2
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2))
run: 95 empty? 4: ((6 boolean) <- eq (4 integer) (5 integer))
m: (4 integer)
sz: (4 integer)
m: (5 integer)
sz: (5 integer)
run: nil => (6 boolean)
setm: (6 boolean) <= nil
sz: (6 boolean)
setm: size of (6 boolean) is 1
setm: (6 boolean): setting 1300 to nil
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2))
run: 96 empty? 5: (reply (6 boolean))
m: (6 boolean)
sz: (6 boolean)
reply: ((6 boolean)) ((2 boolean))
reply: nil => (2 boolean)
setm: (2 boolean) <= nil
sz: (2 boolean)
setm: size of (2 boolean) is 1
setm: (2 boolean): setting 1265 to nil
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2))
run: 97 read 3: (jump-unless (2 boolean) (2 offset))
m: (2 boolean)
sz: (2 boolean)
jump: checking that nil is not t
jump: jumping to 6
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2))
run: 98 read 6: ((4 integer-address) <- get-address (1 channel-address deref) (0 offset))
record-info: (1 channel-address deref) (0 offset)
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get-address: (1 channel-address deref) (0 offset) => 1031
run: 1031 => (4 integer-address)
setm: (4 integer-address) <= 1031
sz: (4 integer-address)
setm: size of (4 integer-address) is 1
setm: (4 integer-address): setting 1267 to 1031
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2))
run: 99 read 7: ((5 tagged-value-array-address) <- get (1 channel-address deref) (2 offset))
record-info: (1 channel-address deref) (2 offset)
record-info: initial base 1031 type ((address t) (elem channel) (size 1))
record-info: (1 channel-address deref) requests deref => ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel-address deref) (2 offset) => 1033 tagged-value-array-address
m: (1033 tagged-value-array-address global)
sz: (1033 tagged-value-array-address global)
run: 1034 => (5 tagged-value-array-address)
setm: (5 tagged-value-array-address) <= 1034
sz: (5 tagged-value-array-address)
setm: size of (5 tagged-value-array-address) is 1
setm: (5 tagged-value-array-address): setting 1268 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2))
run: 100 read 8: ((6 tagged-value) <- index (5 tagged-value-array-address deref) (4 integer-address deref))
array-info: (5 tagged-value-array-address deref) (4 integer-address deref)
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
sz: (1031 integer)
array-info: initial base 1034 type ((address t) (elem tagged-value-array) (size 1))
array-info: (5 tagged-value-array-address deref) requests deref => ((array t) (elem tagged-value))
array-len: (5 tagged-value-array-address deref)
m: (5 integer-address deref)
sz: (5 integer-address deref)
m: (5 location)
sz: (5 location)
sz: (1034 integer)
array-info: array-len of (5 tagged-value-array-address deref) is 4
index: (5 tagged-value-array-address deref) (4 integer-address deref) => 1035 tagged-value
m: (1035 tagged-value global)
sz: (1035 tagged-value global)
run: #(tagged record (integer-address 1043 . nil)) => (6 tagged-value)
setm: (6 tagged-value) <= #(tagged record (integer-address 1043 . nil))
sz: (6 tagged-value)
setm: size of (6 tagged-value) is 2
setm: (6 tagged-value): setting 1269 to integer-address
setm: (6 tagged-value): setting 1270 to 1043
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 0) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2))
run: 101 read 9: ((4 integer-address deref) <- add (4 integer-address deref) (1 literal))
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
sz: (1031 integer)
add: 0 1
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
sz: (1031 integer)
run: 1 => (4 integer-address deref)
setm: (4 integer-address deref) <= 1
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
sz: (1031 integer)
setm: size of (4 integer-address deref) is 1
setm: (4 integer-address deref): setting 1031 to 1
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2))
run: 102 read 10: ((8 integer) <- len (5 tagged-value-array-address deref))
array-len: (5 tagged-value-array-address deref)
m: (5 integer-address deref)
sz: (5 integer-address deref)
m: (5 location)
sz: (5 location)
sz: (1034 integer)
run: 4 => (8 integer)
setm: (8 integer) <= 4
sz: (8 integer)
setm: size of (8 integer) is 1
setm: (8 integer): setting 1271 to 4
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2))
run: 103 read 11: ((9 boolean) <- lt (4 integer-address deref) (8 integer))
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
sz: (1031 integer)
m: (8 integer)
sz: (8 integer)
run: t => (9 boolean)
setm: (9 boolean) <= t
sz: (9 boolean)
setm: size of (9 boolean) is 1
setm: (9 boolean): setting 1272 to t
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2))
run: 104 read 12: (jump-if (9 boolean) (1 offset))
m: (9 boolean)
sz: (9 boolean)
jump: checking that t is t
jump: jumping to 14
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2))
run: 105 read 14: (reply (6 tagged-value) (1 channel-address deref))
m: (6 tagged-value)
sz: (6 tagged-value)
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
sz: (1031 channel)
reply: ((6 tagged-value) (1 channel-address deref)) (_ (1 channel-address deref))
reply: #(tagged record (1 2 1034 . nil)) => (1 channel-address deref)
setm: (1 channel-address deref) <= #(tagged record (1 2 1034 . nil))
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
sz: (1031 channel)
setm: size of (1 channel-address deref) is 3
setm: (1 channel-address deref): setting 1031 to 1
setm: (1 channel-address deref): setting 1032 to 2
setm: (1 channel-address deref): setting 1033 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2))
run: 106 main 7: ((4 boolean) <- empty? (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
sz: (1031 channel)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2))
run: 107 empty? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1325 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30))
run: 108 empty? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (1 2 1034 . nil)))
run: #(tagged record (1 2 1034 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (1 2 1034 . nil))
sz: (1 channel)
setm: size of (1 channel) is 3
setm: (1 channel): setting 1326 to 1
setm: (1 channel): setting 1327 to 2
setm: (1 channel): setting 1328 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034))
run: 109 empty? 2: ((4 integer) <- get (1 channel) (0 offset))
record-info: (1 channel) (0 offset)
record-info: initial base 1326 type ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel) (0 offset) => 1326 integer
m: (1326 integer global)
sz: (1326 integer global)
run: 1 => (4 integer)
setm: (4 integer) <= 1
sz: (4 integer)
setm: size of (4 integer) is 1
setm: (4 integer): setting 1329 to 1
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1))
run: 110 empty? 3: ((5 integer) <- get (1 channel) (1 offset))
record-info: (1 channel) (1 offset)
record-info: initial base 1326 type ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel) (1 offset) => 1327 integer
m: (1327 integer global)
sz: (1327 integer global)
run: 2 => (5 integer)
setm: (5 integer) <= 2
sz: (5 integer)
setm: size of (5 integer) is 1
setm: (5 integer): setting 1330 to 2
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2))
run: 111 empty? 4: ((6 boolean) <- eq (4 integer) (5 integer))
m: (4 integer)
sz: (4 integer)
m: (5 integer)
sz: (5 integer)
run: nil => (6 boolean)
setm: (6 boolean) <= nil
sz: (6 boolean)
setm: size of (6 boolean) is 1
setm: (6 boolean): setting 1331 to nil
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2))
run: 112 empty? 5: (reply (6 boolean))
m: (6 boolean)
sz: (6 boolean)
reply: ((6 boolean)) ((4 boolean))
reply: nil => (4 boolean)
setm: (4 boolean) <= nil
sz: (4 boolean)
setm: size of (4 boolean) is 1
setm: (4 boolean): setting 4 to nil
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2))
run: 113 main 8: ((5 boolean) <- full? (1 channel-address deref))
m: (1 channel-address deref)
sz: (1 channel-address deref)
m: (1 location)
sz: (1 location)
sz: (1031 channel)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2))
run: 114 full? 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1356 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30))
run: 115 full? 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (1 2 1034 . nil)))
run: #(tagged record (1 2 1034 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (1 2 1034 . nil))
sz: (1 channel)
setm: size of (1 channel) is 3
setm: (1 channel): setting 1357 to 1
setm: (1 channel): setting 1358 to 2
setm: (1 channel): setting 1359 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30) (1357 1) (1358 2) (1359 1034))
run: 116 full? 2: ((4 integer) <- get (1 channel) (1 offset))
record-info: (1 channel) (1 offset)
record-info: initial base 1357 type ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel) (1 offset) => 1358 integer
m: (1358 integer global)
sz: (1358 integer global)
run: 2 => (4 integer)
setm: (4 integer) <= 2
sz: (4 integer)
setm: size of (4 integer) is 1
setm: (4 integer): setting 1360 to 2
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30) (1357 1) (1358 2) (1359 1034) (1360 2))
run: 117 full? 3: ((4 integer) <- add (4 integer) (1 literal))
m: (4 integer)
sz: (4 integer)
add: 2 1
m: (4 integer)
sz: (4 integer)
run: 3 => (4 integer)
setm: (4 integer) <= 3
sz: (4 integer)
setm: size of (4 integer) is 1
setm: (4 integer): setting 1360 to 3
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30) (1357 1) (1358 2) (1359 1034) (1360 3))
run: 118 full? 4: ((5 integer) <- capacity (1 channel))
m: (1 channel)
sz: (1 channel)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30) (1357 1) (1358 2) (1359 1034) (1360 3))
run: 119 capacity 0: ((default-scope scope-address) <- new (scope literal) (30 literal))
sizeof: location
run: 1387 => (default-scope scope-address)
sz: (default-scope scope-address)
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30) (1357 1) (1358 2) (1359 1034) (1360 3) (1387 30))
run: 120 capacity 1: ((1 channel) <- arg)
arg: nil 0 (#(tagged record (1 2 1034 . nil)))
run: #(tagged record (1 2 1034 . nil)) => (1 channel)
setm: (1 channel) <= #(tagged record (1 2 1034 . nil))
sz: (1 channel)
setm: size of (1 channel) is 3
setm: (1 channel): setting 1388 to 1
setm: (1 channel): setting 1389 to 2
setm: (1 channel): setting 1390 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30) (1357 1) (1358 2) (1359 1034) (1360 3) (1387 30) (1388 1) (1389 2) (1390 1034))
run: 121 capacity 2: ((4 tagged-value-array-address) <- get (1 channel) (2 offset))
record-info: (1 channel) (2 offset)
record-info: initial base 1388 type ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel) (2 offset) => 1390 tagged-value-array-address
m: (1390 tagged-value-array-address global)
sz: (1390 tagged-value-array-address global)
run: 1034 => (4 tagged-value-array-address)
setm: (4 tagged-value-array-address) <= 1034
sz: (4 tagged-value-array-address)
setm: size of (4 tagged-value-array-address) is 1
setm: (4 tagged-value-array-address): setting 1391 to 1034
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30) (1357 1) (1358 2) (1359 1034) (1360 3) (1387 30) (1388 1) (1389 2) (1390 1034) (1391 1034))
run: 122 capacity 3: ((5 integer) <- len (4 tagged-value-array-address deref))
array-len: (4 tagged-value-array-address deref)
m: (4 integer-address deref)
sz: (4 integer-address deref)
m: (4 location)
sz: (4 location)
sz: (1034 integer)
run: 4 => (5 integer)
setm: (5 integer) <= 4
sz: (5 integer)
setm: size of (5 integer) is 1
setm: (5 integer): setting 1392 to 4
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30) (1357 1) (1358 2) (1359 1034) (1360 3) (1387 30) (1388 1) (1389 2) (1390 1034) (1391 1034) (1392 4))
run: 123 capacity 4: (reply (5 integer))
m: (5 integer)
sz: (5 integer)
reply: ((5 integer)) ((5 integer))
reply: 4 => (5 integer)
setm: (5 integer) <= 4
sz: (5 integer)
setm: size of (5 integer) is 1
setm: (5 integer): setting 1361 to 4
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30) (1357 1) (1358 2) (1359 1034) (1360 3) (1361 4) (1387 30) (1388 1) (1389 2) (1390 1034) (1391 1034) (1392 4))
run: 124 full? 5: ((6 boolean) <- lt (4 integer) (5 integer))
m: (4 integer)
sz: (4 integer)
m: (5 integer)
sz: (5 integer)
run: t => (6 boolean)
setm: (6 boolean) <= t
sz: (6 boolean)
setm: size of (6 boolean) is 1
setm: (6 boolean): setting 1362 to t
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30) (1357 1) (1358 2) (1359 1034) (1360 3) (1361 4) (1362 t) (1387 30) (1388 1) (1389 2) (1390 1034) (1391 1034) (1392 4))
run: 125 full? 6: (jump-if (6 boolean) (1 offset))
m: (6 boolean)
sz: (6 boolean)
jump: checking that t is t
jump: jumping to 8
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30) (1357 1) (1358 2) (1359 1034) (1360 3) (1361 4) (1362 t) (1387 30) (1388 1) (1389 2) (1390 1034) (1391 1034) (1392 4))
run: 126 full? 8: ((7 integer) <- get (1 channel) (0 offset))
record-info: (1 channel) (0 offset)
record-info: initial base 1357 type ((elems (integer integer tagged-value-array-address)) (fields (first-full first-free circular-buffer)) (record t) (size 3))
get: (1 channel) (0 offset) => 1357 integer
m: (1357 integer global)
sz: (1357 integer global)
run: 1 => (7 integer)
setm: (7 integer) <= 1
sz: (7 integer)
setm: size of (7 integer) is 1
setm: (7 integer): setting 1363 to 1
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30) (1357 1) (1358 2) (1359 1034) (1360 3) (1361 4) (1362 t) (1363 1) (1387 30) (1388 1) (1389 2) (1390 1034) (1391 1034) (1392 4))
run: 127 full? 9: ((8 boolean) <- eq (7 integer) (4 integer))
m: (7 integer)
sz: (7 integer)
m: (4 integer)
sz: (4 integer)
run: nil => (8 boolean)
setm: (8 boolean) <= nil
sz: (8 boolean)
setm: size of (8 boolean) is 1
setm: (8 boolean): setting 1364 to nil
run: -- ((1 1031) (2 1043) (3 1075) (1000 30) (1001 1031) (1002 1031) (1003 1032) (1004 4) (1005 1033) (1031 1) (1032 2) (1033 1034) (1034 4) (1035 integer-address) (1036 1043) (1037 integer-address) (1038 1043) (1043 34) (1044 30) (1045 integer-address) (1046 1) (1047 t) (1048 1075) (1049 1075) (1050 1076) (1075 integer-address) (1076 1043) (1077 30) (1078 1031) (1079 integer-address) (1080 1043) (1083 1034) (1084 1032) (1085 1035) (1086 4) (1087 t) (1108 30) (1109 0) (1110 0) (1111 1034) (1112 1) (1113 4) (1114 t) (1115 0) (1139 30) (1140 0) (1141 0) (1142 1034) (1143 1034) (1144 4) (1170 30) (1171 1031) (1172 integer-address) (1173 1043) (1176 1034) (1177 1032) (1178 1037) (1179 4) (1180 t) (1201 30) (1202 0) (1203 1) (1204 1034) (1205 2) (1206 4) (1207 t) (1208 0) (1232 30) (1233 0) (1234 1) (1235 1034) (1236 1034) (1237 4) (1263 30) (1264 1031) (1267 1031) (1268 1034) (1269 integer-address) (1270 1043) (1271 4) (1272 t) (1294 30) (1295 0) (1296 2) (1297 1034) (1298 0) (1299 2) (1325 30) (1326 1) (1327 2) (1328 1034) (1329 1) (1330 2) (1356 30) (1357 1) (1358 2) (1359 1034) (1360 3) (1361 4) (1362 t) (1363 1) (1387 30) (1388 1) (1389 2) (1390 1034) (1391 1034) (1392 4))
run: 128 full? 10: (reply (8 boolean))
m: (8 boolean)
sz: (8 boolean)
reply: ((8 boolean)) ((5 boolean))
reply: nil => (5 boolean)
setm: (5 boolean) <= nil
sz: (5 boolean)
setm: size of (5 boolean) is 1
setm: (5 boolean): setting 5 to nil
schedule: done with routine
