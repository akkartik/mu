parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abc def]\n    new-editor s:address:array:character, screen:address, 0:literal/left, 5:literal/right\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .     .\n    .abc â†©.\n    .def  .\n    .     .\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain-in-color
parse:   ingredient: {name: "245", properties: ["245": "literal", "grey": ]}
parse:   ingredient: {name: "\n    .     .\n    .    â†©.\n    .     .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initially-wraps-long-lines
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: screen-should-contain-in-color ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initially-wraps-long-lines
 101 run: screen:address <- new-fake-screen 5:literal/width, 5:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 5 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 5
9999 mem: storing 25 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 25
9999 mem: array size is 25
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1087
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1089
 103 run: break-unless x:address:screen, 
9999 mem: location 1089 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1090
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1090 is 1036
9999 mem: storing 25 in location 1091
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1092
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 0
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 0
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 0
9999 mem: storing 1037 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1094 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1094 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 0
9999 mem: storing 1 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 1
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 1
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 1
9999 mem: storing 1039 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1094 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1094 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 1
9999 mem: storing 2 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 2
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 2
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 2
9999 mem: storing 1041 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1094 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1094 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 2
9999 mem: storing 3 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 3
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 3
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 3
9999 mem: storing 1043 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1094 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1094 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 3
9999 mem: storing 4 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 4
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 4
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 4
9999 mem: storing 1045 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1094 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1094 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 4
9999 mem: storing 5 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 5
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 5
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 5
9999 mem: storing 1047 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1094 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1094 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 5
9999 mem: storing 6 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 6
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 6
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 6
9999 mem: storing 1049 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1094 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1094 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 6
9999 mem: storing 7 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 7
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 7
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 7
9999 mem: storing 1051 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1094 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1094 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 7
9999 mem: storing 8 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 8
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 8
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 8
9999 mem: storing 1053 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1094 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1094 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 8
9999 mem: storing 9 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 9
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 9
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 9
9999 mem: storing 1055 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1094 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1094 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 9
9999 mem: storing 10 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 10
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 10
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 10
9999 mem: storing 1057 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1094 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1094 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 10
9999 mem: storing 11 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 11
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 11
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 11
9999 mem: storing 1059 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1094 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1094 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 11
9999 mem: storing 12 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 12
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 12
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 12
9999 mem: storing 1061 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1094 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1094 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 12
9999 mem: storing 13 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 13
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 13
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 13
9999 mem: storing 1063 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1094 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1094 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 13
9999 mem: storing 14 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 14
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 14
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 14
9999 mem: storing 1065 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1094 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1094 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 14
9999 mem: storing 15 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 15
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 15
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 15
9999 mem: storing 1067 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1094 is 1067
9999 run: address to copy is 1067
9999 mem: storing 1067 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1067
9999 mem: storing 0 in location 1067
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1067
9999 mem: location 1067 is 0
9999 mem: location 1068 is 0
9999 mem: location 1094 is 1067
9999 run: address to copy is 1068
9999 mem: storing 1068 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1068
9999 mem: storing 7 in location 1068
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 15
9999 mem: storing 16 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 16
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 16
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 16
9999 mem: storing 1069 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1094 is 1069
9999 run: address to copy is 1069
9999 mem: storing 1069 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1069
9999 mem: storing 0 in location 1069
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1069
9999 mem: location 1069 is 0
9999 mem: location 1070 is 0
9999 mem: location 1094 is 1069
9999 run: address to copy is 1070
9999 mem: storing 1070 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1070
9999 mem: storing 7 in location 1070
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 16
9999 mem: storing 17 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 17
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 17
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 17
9999 mem: storing 1071 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1094 is 1071
9999 run: address to copy is 1071
9999 mem: storing 1071 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1071
9999 mem: storing 0 in location 1071
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1071
9999 mem: location 1071 is 0
9999 mem: location 1072 is 0
9999 mem: location 1094 is 1071
9999 run: address to copy is 1072
9999 mem: storing 1072 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1072
9999 mem: storing 7 in location 1072
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 17
9999 mem: storing 18 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 18
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 18
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 18
9999 mem: storing 1073 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1094 is 1073
9999 run: address to copy is 1073
9999 mem: storing 1073 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1073
9999 mem: storing 0 in location 1073
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1073
9999 mem: location 1073 is 0
9999 mem: location 1074 is 0
9999 mem: location 1094 is 1073
9999 run: address to copy is 1074
9999 mem: storing 1074 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1074
9999 mem: storing 7 in location 1074
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 18
9999 mem: storing 19 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 19
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 19
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 19
9999 mem: storing 1075 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1094 is 1075
9999 run: address to copy is 1075
9999 mem: storing 1075 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1075
9999 mem: storing 0 in location 1075
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1075
9999 mem: location 1075 is 0
9999 mem: location 1076 is 0
9999 mem: location 1094 is 1075
9999 run: address to copy is 1076
9999 mem: storing 1076 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1076
9999 mem: storing 7 in location 1076
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 19
9999 mem: storing 20 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 20
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 20
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 20
9999 mem: storing 1077 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1094 is 1077
9999 run: address to copy is 1077
9999 mem: storing 1077 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1077
9999 mem: storing 0 in location 1077
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1077
9999 mem: location 1077 is 0
9999 mem: location 1078 is 0
9999 mem: location 1094 is 1077
9999 run: address to copy is 1078
9999 mem: storing 1078 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1078
9999 mem: storing 7 in location 1078
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 20
9999 mem: storing 21 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 21
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 21
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 21
9999 mem: storing 1079 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1094 is 1079
9999 run: address to copy is 1079
9999 mem: storing 1079 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1079
9999 mem: storing 0 in location 1079
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1079
9999 mem: location 1079 is 0
9999 mem: location 1080 is 0
9999 mem: location 1094 is 1079
9999 run: address to copy is 1080
9999 mem: storing 1080 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1080
9999 mem: storing 7 in location 1080
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 21
9999 mem: storing 22 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 22
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 22
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 22
9999 mem: storing 1081 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1094 is 1081
9999 run: address to copy is 1081
9999 mem: storing 1081 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1081
9999 mem: storing 0 in location 1081
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1081
9999 mem: location 1081 is 0
9999 mem: location 1082 is 0
9999 mem: location 1094 is 1081
9999 run: address to copy is 1082
9999 mem: storing 1082 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1082
9999 mem: storing 7 in location 1082
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 22
9999 mem: storing 23 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 23
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 23
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 23
9999 mem: storing 1083 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1094 is 1083
9999 run: address to copy is 1083
9999 mem: storing 1083 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1083
9999 mem: storing 0 in location 1083
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1083
9999 mem: location 1083 is 0
9999 mem: location 1084 is 0
9999 mem: location 1094 is 1083
9999 run: address to copy is 1084
9999 mem: storing 1084 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1084
9999 mem: storing 7 in location 1084
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 23
9999 mem: storing 24 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 24
9999 mem: location 1091 is 25
9999 mem: storing 0 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1090 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1092 is 24
9999 mem: location 1090 is 1036
9999 mem: location 1092 is 24
9999 mem: storing 1085 in location 1094
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1094 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1094 is 1085
9999 run: address to copy is 1085
9999 mem: storing 1085 in location 1095
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1095 is 1085
9999 mem: storing 0 in location 1085
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1094 is 1085
9999 mem: location 1085 is 0
9999 mem: location 1086 is 0
9999 mem: location 1094 is 1085
9999 run: address to copy is 1086
9999 mem: storing 1086 in location 1096
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1096 is 1086
9999 mem: storing 7 in location 1086
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1092 is 24
9999 mem: storing 25 in location 1092
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1092 is 25
9999 mem: location 1091 is 25
9999 mem: storing 1 in location 1093
 103 run: break-if done?:boolean, 
9999 mem: location 1093 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1097
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1097 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1089 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1089 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1097
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1097 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1089 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    s:address:array:character <- new [abc def]
    new-editor s:address:array:character, screen:address, 0:literal/left, 5:literal/right
  ]
parse: instruction: new
parse:   ingredient: {name: "abc def", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
name: assign s 1
after-brace: recipe run1001
after-brace: new ...
after-brace: new-editor ...
 101 run: s:address:array:character <- new [abc def]
9999 mem: storing 1118 in location 1
 101 run: new-editor s:address:array:character, screen:address, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1118
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1126
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1118 in location 1128
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1129
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1130
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1131
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1131 is 5
9999 mem: storing 4 in location 1131
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1157
9999 mem: storing 1157 in location 1132
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1159
9999 mem: storing 1159 in location 1133
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1130 is 0
9999 mem: location 1133 is 1159
9999 mem: storing 0 in location 1159
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 0
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1160
9999 mem: storing 1160 in location 1133
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1131 is 4
9999 mem: location 1133 is 1160
9999 mem: storing 4 in location 1160
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
9999 mem: location 1161 is 0
9999 mem: location 1162 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1161
9999 mem: storing 1161 in location 1133
 102 run: x:address:number/deref <- copy 1:literal/top
9999 mem: location 1133 is 1161
9999 mem: storing 1 in location 1161
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1133
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1130 is 0
9999 mem: location 1133 is 1162
9999 mem: storing 0 in location 1162
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 0
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1157
9999 mem: storing 1157 in location 1134
 102 run: init:address:address:duplex-list/deref <- push-duplex 167:literal/Â§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1163
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1165
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1166
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1194
9999 mem: storing 1194 in location 1167
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1167 is 1194
9999 mem: location 1194 is 0
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1167 is 1194
9999 run: address to copy is 1194
9999 mem: storing 1194 in location 1168
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1165 is 167
9999 mem: location 1168 is 1194
9999 mem: storing 167 in location 1194
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1167 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1167 is 1194
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 1169
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1166 is 0
9999 mem: location 1169 is 1195
9999 mem: storing 0 in location 1195
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1166 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1167 is 1194
9999 run: result 0 is 1194
9999 mem: location 1134 is 1157
9999 mem: storing 1194 in location 1157
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 1194
9999 mem: location 1158 is 0
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 1135
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1134 is 1157
9999 mem: location 1157 is 1194
9999 mem: location 1135 is 1158
9999 mem: storing 1194 in location 1158
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1128 is 1118
9999 run: jumping to instruction 21
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 32
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1128 is 1118
9999 mem: storing 7 in location 1136
 102 run: jump-if len:number, 1:offset
9999 mem: location 1136 is 7
9999 run: jumping to instruction 24
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1137
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1134 is 1157
9999 mem: location 1157 is 1194
9999 mem: storing 1194 in location 1138
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1137 is 0
9999 mem: location 1136 is 7
9999 mem: storing 0 in location 1139
 102 run: break-if done?:boolean, 
9999 mem: location 1139 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 32
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1137 is 0
9999 mem: location 1128 is 1118
9999 mem: location 1137 is 0
9999 run: address to copy is 1119
9999 run: its type is character
9999 mem: location 1119 is 97
9999 mem: storing 97 in location 1140
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1140 is 97
9999 mem: location 1138 is 1194
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1197
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1199
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1200
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1228
9999 mem: storing 1228 in location 1201
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1201 is 1228
9999 mem: location 1228 is 0
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1201 is 1228
9999 run: address to copy is 1228
9999 mem: storing 1228 in location 1202
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1199 is 97
9999 mem: location 1202 is 1228
9999 mem: storing 97 in location 1228
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1200 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1200 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 0
9999 mem: storing 0 in location 1203
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1200 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 0
9999 mem: location 1196 is 0
9999 mem: location 1200 is 1194
9999 run: address to copy is 1195
9999 mem: storing 1195 in location 1204
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1201 is 1228
9999 mem: location 1204 is 1195
9999 mem: storing 1228 in location 1195
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1201 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 0
9999 mem: location 1230 is 0
9999 mem: location 1201 is 1228
9999 run: address to copy is 1230
9999 mem: storing 1230 in location 1204
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1200 is 1194
9999 mem: location 1204 is 1230
9999 mem: storing 1194 in location 1230
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1201 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1194
9999 mem: location 1201 is 1228
9999 run: address to copy is 1229
9999 mem: storing 1229 in location 1204
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1203 is 0
9999 mem: location 1204 is 1229
9999 mem: storing 0 in location 1229
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1203 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1201 is 1228
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1138 is 1194
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1231
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1233
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1233 is 1194
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1233 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 1228
9999 mem: location 1196 is 0
9999 mem: location 1233 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1228
9999 mem: storing 1228 in location 1234
 103 run: reply result:address:duplex-list
9999 mem: location 1234 is 1228
9999 run: result 0 is 1228
9999 mem: storing 1228 in location 1138
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1137 is 0
9999 mem: storing 1 in location 1137
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1137 is 1
9999 mem: location 1136 is 7
9999 mem: storing 0 in location 1139
 102 run: break-if done?:boolean, 
9999 mem: location 1139 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 32
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1137 is 1
9999 mem: location 1128 is 1118
9999 mem: location 1137 is 1
9999 run: address to copy is 1120
9999 run: its type is character
9999 mem: location 1120 is 98
9999 mem: storing 98 in location 1140
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1140 is 98
9999 mem: location 1138 is 1228
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1262
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1264
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1265
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1293
9999 mem: storing 1293 in location 1266
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1266 is 1293
9999 mem: location 1293 is 0
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1266 is 1293
9999 run: address to copy is 1293
9999 mem: storing 1293 in location 1267
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1264 is 98
9999 mem: location 1267 is 1293
9999 mem: storing 98 in location 1293
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1265 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1194
9999 mem: location 1265 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 0
9999 mem: storing 0 in location 1268
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1265 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 0
9999 mem: location 1230 is 1194
9999 mem: location 1265 is 1228
9999 run: address to copy is 1229
9999 mem: storing 1229 in location 1269
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1266 is 1293
9999 mem: location 1269 is 1229
9999 mem: storing 1293 in location 1229
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1266 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 0
9999 mem: location 1295 is 0
9999 mem: location 1266 is 1293
9999 run: address to copy is 1295
9999 mem: storing 1295 in location 1269
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1265 is 1228
9999 mem: location 1269 is 1295
9999 mem: storing 1228 in location 1295
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1266 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1228
9999 mem: location 1266 is 1293
9999 run: address to copy is 1294
9999 mem: storing 1294 in location 1269
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1268 is 0
9999 mem: location 1269 is 1294
9999 mem: storing 0 in location 1294
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1266 is 1293
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1138 is 1228
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1296
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1298
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1298 is 1228
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1298 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1298 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 1293
9999 mem: storing 1293 in location 1299
 103 run: reply result:address:duplex-list
9999 mem: location 1299 is 1293
9999 run: result 0 is 1293
9999 mem: storing 1293 in location 1138
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1137 is 1
9999 mem: storing 2 in location 1137
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1137 is 2
9999 mem: location 1136 is 7
9999 mem: storing 0 in location 1139
 102 run: break-if done?:boolean, 
9999 mem: location 1139 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 32
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1137 is 2
9999 mem: location 1128 is 1118
9999 mem: location 1137 is 2
9999 run: address to copy is 1121
9999 run: its type is character
9999 mem: location 1121 is 99
9999 mem: storing 99 in location 1140
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1140 is 99
9999 mem: location 1138 is 1293
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1327
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1329
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 1330
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1358
9999 mem: storing 1358 in location 1331
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1331 is 1358
9999 mem: location 1358 is 0
9999 mem: location 1359 is 0
9999 mem: location 1360 is 0
9999 mem: location 1331 is 1358
9999 run: address to copy is 1358
9999 mem: storing 1358 in location 1332
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1329 is 99
9999 mem: location 1332 is 1358
9999 mem: storing 99 in location 1358
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1330 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1228
9999 mem: location 1330 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 0
9999 mem: storing 0 in location 1333
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1330 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 0
9999 mem: location 1295 is 1228
9999 mem: location 1330 is 1293
9999 run: address to copy is 1294
9999 mem: storing 1294 in location 1334
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1331 is 1358
9999 mem: location 1334 is 1294
9999 mem: storing 1358 in location 1294
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1331 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 0
9999 mem: location 1331 is 1358
9999 run: address to copy is 1360
9999 mem: storing 1360 in location 1334
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1330 is 1293
9999 mem: location 1334 is 1360
9999 mem: storing 1293 in location 1360
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1331 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 1331 is 1358
9999 run: address to copy is 1359
9999 mem: storing 1359 in location 1334
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1333 is 0
9999 mem: location 1334 is 1359
9999 mem: storing 0 in location 1359
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1333 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1331 is 1358
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1138 is 1293
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1361
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 1363
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1363 is 1293
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1363 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 1363 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1358
9999 mem: storing 1358 in location 1364
 103 run: reply result:address:duplex-list
9999 mem: location 1364 is 1358
9999 run: result 0 is 1358
9999 mem: storing 1358 in location 1138
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1137 is 2
9999 mem: storing 3 in location 1137
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1137 is 3
9999 mem: location 1136 is 7
9999 mem: storing 0 in location 1139
 102 run: break-if done?:boolean, 
9999 mem: location 1139 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 32
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1137 is 3
9999 mem: location 1128 is 1118
9999 mem: location 1137 is 3
9999 run: address to copy is 1122
9999 run: its type is character
9999 mem: location 1122 is 32
9999 mem: storing 32 in location 1140
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1140 is 32
9999 mem: location 1138 is 1358
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1392
 103 run: x:location <- next-ingredient 
9999 mem: storing 32 in location 1394
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1358 in location 1395
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1423
9999 mem: storing 1423 in location 1396
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1396 is 1423
9999 mem: location 1423 is 0
9999 mem: location 1424 is 0
9999 mem: location 1425 is 0
9999 mem: location 1396 is 1423
9999 run: address to copy is 1423
9999 mem: storing 1423 in location 1397
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1394 is 32
9999 mem: location 1397 is 1423
9999 mem: storing 32 in location 1423
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1395 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 1395 is 1358
9999 run: address to copy is 1359
9999 run: its type is address
9999 mem: location 1359 is 0
9999 mem: storing 0 in location 1398
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1395 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 0
9999 mem: location 1360 is 1293
9999 mem: location 1395 is 1358
9999 run: address to copy is 1359
9999 mem: storing 1359 in location 1399
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1396 is 1423
9999 mem: location 1399 is 1359
9999 mem: storing 1423 in location 1359
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1396 is 1423
9999 mem: location 1423 is 32
9999 mem: location 1424 is 0
9999 mem: location 1425 is 0
9999 mem: location 1396 is 1423
9999 run: address to copy is 1425
9999 mem: storing 1425 in location 1399
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1395 is 1358
9999 mem: location 1399 is 1425
9999 mem: storing 1358 in location 1425
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1396 is 1423
9999 mem: location 1423 is 32
9999 mem: location 1424 is 0
9999 mem: location 1425 is 1358
9999 mem: location 1396 is 1423
9999 run: address to copy is 1424
9999 mem: storing 1424 in location 1399
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1398 is 0
9999 mem: location 1399 is 1424
9999 mem: storing 0 in location 1424
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1398 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1396 is 1423
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1138 is 1358
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1426
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1358 in location 1428
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1428 is 1358
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1428 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 1423
9999 mem: location 1360 is 1293
9999 mem: location 1428 is 1358
9999 run: address to copy is 1359
9999 run: its type is address
9999 mem: location 1359 is 1423
9999 mem: storing 1423 in location 1429
 103 run: reply result:address:duplex-list
9999 mem: location 1429 is 1423
9999 run: result 0 is 1423
9999 mem: storing 1423 in location 1138
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1137 is 3
9999 mem: storing 4 in location 1137
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1137 is 4
9999 mem: location 1136 is 7
9999 mem: storing 0 in location 1139
 102 run: break-if done?:boolean, 
9999 mem: location 1139 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 32
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1137 is 4
9999 mem: location 1128 is 1118
9999 mem: location 1137 is 4
9999 run: address to copy is 1123
9999 run: its type is character
9999 mem: location 1123 is 100
9999 mem: storing 100 in location 1140
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1140 is 100
9999 mem: location 1138 is 1423
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1457
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1459
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1423 in location 1460
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1488
9999 mem: storing 1488 in location 1461
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1461 is 1488
9999 mem: location 1488 is 0
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1461 is 1488
9999 run: address to copy is 1488
9999 mem: storing 1488 in location 1462
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1459 is 100
9999 mem: location 1462 is 1488
9999 mem: storing 100 in location 1488
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1460 is 1423
9999 mem: location 1423 is 32
9999 mem: location 1424 is 0
9999 mem: location 1425 is 1358
9999 mem: location 1460 is 1423
9999 run: address to copy is 1424
9999 run: its type is address
9999 mem: location 1424 is 0
9999 mem: storing 0 in location 1463
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1460 is 1423
9999 mem: location 1423 is 32
9999 mem: location 1424 is 0
9999 mem: location 1425 is 1358
9999 mem: location 1460 is 1423
9999 run: address to copy is 1424
9999 mem: storing 1424 in location 1464
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1461 is 1488
9999 mem: location 1464 is 1424
9999 mem: storing 1488 in location 1424
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1461 is 1488
9999 mem: location 1488 is 100
9999 mem: location 1489 is 0
9999 mem: location 1490 is 0
9999 mem: location 1461 is 1488
9999 run: address to copy is 1490
9999 mem: storing 1490 in location 1464
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1460 is 1423
9999 mem: location 1464 is 1490
9999 mem: storing 1423 in location 1490
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1461 is 1488
9999 mem: location 1488 is 100
9999 mem: location 1489 is 0
9999 mem: location 1490 is 1423
9999 mem: location 1461 is 1488
9999 run: address to copy is 1489
9999 mem: storing 1489 in location 1464
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1463 is 0
9999 mem: location 1464 is 1489
9999 mem: storing 0 in location 1489
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1463 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1461 is 1488
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1138 is 1423
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1491
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1423 in location 1493
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1493 is 1423
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1493 is 1423
9999 mem: location 1423 is 32
9999 mem: location 1424 is 1488
9999 mem: location 1425 is 1358
9999 mem: location 1493 is 1423
9999 run: address to copy is 1424
9999 run: its type is address
9999 mem: location 1424 is 1488
9999 mem: storing 1488 in location 1494
 103 run: reply result:address:duplex-list
9999 mem: location 1494 is 1488
9999 run: result 0 is 1488
9999 mem: storing 1488 in location 1138
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1137 is 4
9999 mem: storing 5 in location 1137
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1137 is 5
9999 mem: location 1136 is 7
9999 mem: storing 0 in location 1139
 102 run: break-if done?:boolean, 
9999 mem: location 1139 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 32
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1137 is 5
9999 mem: location 1128 is 1118
9999 mem: location 1137 is 5
9999 run: address to copy is 1124
9999 run: its type is character
9999 mem: location 1124 is 101
9999 mem: storing 101 in location 1140
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1140 is 101
9999 mem: location 1138 is 1488
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1522
 103 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1524
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1488 in location 1525
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1553
9999 mem: storing 1553 in location 1526
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1526 is 1553
9999 mem: location 1553 is 0
9999 mem: location 1554 is 0
9999 mem: location 1555 is 0
9999 mem: location 1526 is 1553
9999 run: address to copy is 1553
9999 mem: storing 1553 in location 1527
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1524 is 101
9999 mem: location 1527 is 1553
9999 mem: storing 101 in location 1553
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1525 is 1488
9999 mem: location 1488 is 100
9999 mem: location 1489 is 0
9999 mem: location 1490 is 1423
9999 mem: location 1525 is 1488
9999 run: address to copy is 1489
9999 run: its type is address
9999 mem: location 1489 is 0
9999 mem: storing 0 in location 1528
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1525 is 1488
9999 mem: location 1488 is 100
9999 mem: location 1489 is 0
9999 mem: location 1490 is 1423
9999 mem: location 1525 is 1488
9999 run: address to copy is 1489
9999 mem: storing 1489 in location 1529
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1526 is 1553
9999 mem: location 1529 is 1489
9999 mem: storing 1553 in location 1489
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1526 is 1553
9999 mem: location 1553 is 101
9999 mem: location 1554 is 0
9999 mem: location 1555 is 0
9999 mem: location 1526 is 1553
9999 run: address to copy is 1555
9999 mem: storing 1555 in location 1529
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1525 is 1488
9999 mem: location 1529 is 1555
9999 mem: storing 1488 in location 1555
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1526 is 1553
9999 mem: location 1553 is 101
9999 mem: location 1554 is 0
9999 mem: location 1555 is 1488
9999 mem: location 1526 is 1553
9999 run: address to copy is 1554
9999 mem: storing 1554 in location 1529
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1528 is 0
9999 mem: location 1529 is 1554
9999 mem: storing 0 in location 1554
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1528 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1526 is 1553
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1138 is 1488
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1556
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1488 in location 1558
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1558 is 1488
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1558 is 1488
9999 mem: location 1488 is 100
9999 mem: location 1489 is 1553
9999 mem: location 1490 is 1423
9999 mem: location 1558 is 1488
9999 run: address to copy is 1489
9999 run: its type is address
9999 mem: location 1489 is 1553
9999 mem: storing 1553 in location 1559
 103 run: reply result:address:duplex-list
9999 mem: location 1559 is 1553
9999 run: result 0 is 1553
9999 mem: storing 1553 in location 1138
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1137 is 5
9999 mem: storing 6 in location 1137
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1137 is 6
9999 mem: location 1136 is 7
9999 mem: storing 0 in location 1139
 102 run: break-if done?:boolean, 
9999 mem: location 1139 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1128 is 1118
9999 mem: location 1118 is 7
9999 mem: location 1119 is 97
9999 mem: location 1120 is 98
9999 mem: location 1121 is 99
9999 mem: location 1122 is 32
9999 mem: location 1123 is 100
9999 mem: location 1124 is 101
9999 mem: location 1125 is 102
9999 mem: location 1137 is 6
9999 mem: location 1128 is 1118
9999 mem: location 1137 is 6
9999 run: address to copy is 1125
9999 run: its type is character
9999 mem: location 1125 is 102
9999 mem: storing 102 in location 1140
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1140 is 102
9999 mem: location 1138 is 1553
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1587
 103 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 1589
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1553 in location 1590
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1618
9999 mem: storing 1618 in location 1591
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1591 is 1618
9999 mem: location 1618 is 0
9999 mem: location 1619 is 0
9999 mem: location 1620 is 0
9999 mem: location 1591 is 1618
9999 run: address to copy is 1618
9999 mem: storing 1618 in location 1592
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1589 is 102
9999 mem: location 1592 is 1618
9999 mem: storing 102 in location 1618
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1590 is 1553
9999 mem: location 1553 is 101
9999 mem: location 1554 is 0
9999 mem: location 1555 is 1488
9999 mem: location 1590 is 1553
9999 run: address to copy is 1554
9999 run: its type is address
9999 mem: location 1554 is 0
9999 mem: storing 0 in location 1593
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1590 is 1553
9999 mem: location 1553 is 101
9999 mem: location 1554 is 0
9999 mem: location 1555 is 1488
9999 mem: location 1590 is 1553
9999 run: address to copy is 1554
9999 mem: storing 1554 in location 1594
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1591 is 1618
9999 mem: location 1594 is 1554
9999 mem: storing 1618 in location 1554
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1591 is 1618
9999 mem: location 1618 is 102
9999 mem: location 1619 is 0
9999 mem: location 1620 is 0
9999 mem: location 1591 is 1618
9999 run: address to copy is 1620
9999 mem: storing 1620 in location 1594
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1590 is 1553
9999 mem: location 1594 is 1620
9999 mem: storing 1553 in location 1620
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1591 is 1618
9999 mem: location 1618 is 102
9999 mem: location 1619 is 0
9999 mem: location 1620 is 1553
9999 mem: location 1591 is 1618
9999 run: address to copy is 1619
9999 mem: storing 1619 in location 1594
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1593 is 0
9999 mem: location 1594 is 1619
9999 mem: storing 0 in location 1619
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1593 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1591 is 1618
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1138 is 1553
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1621
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1553 in location 1623
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1623 is 1553
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1623 is 1553
9999 mem: location 1553 is 101
9999 mem: location 1554 is 1618
9999 mem: location 1555 is 1488
9999 mem: location 1623 is 1553
9999 run: address to copy is 1554
9999 run: its type is address
9999 mem: location 1554 is 1618
9999 mem: storing 1618 in location 1624
 103 run: reply result:address:duplex-list
9999 mem: location 1624 is 1618
9999 run: result 0 is 1618
9999 mem: storing 1618 in location 1138
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1137 is 6
9999 mem: storing 7 in location 1137
 102 run: loop 
9999 run: jumping to instruction 27
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1137 is 7
9999 mem: location 1136 is 7
9999 mem: storing 1 in location 1139
 102 run: break-if done?:boolean, 
9999 mem: location 1139 is 1
9999 run: jumping to instruction 34
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1132 is 1157
9999 mem: location 1157 is 1194
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1132 is 1157
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 1135
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1134 is 1157
9999 mem: location 1157 is 1194
9999 mem: location 1135 is 1158
9999 mem: storing 1194 in location 1158
 102 run: result:address:editor-data, _, screen:address <- render screen:address, result:address:editor-data
9999 mem: location 1129 is 1031
9999 mem: location 1132 is 1157
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1652
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1654
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1157 in location 1655
 103 run: jump-if editor:address:editor-data, 1:offset
9999 mem: location 1655 is 1157
9999 run: jumping to instruction 5
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1655 is 1157
9999 mem: location 1157 is 1194
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1655 is 1157
9999 run: address to copy is 1159
9999 run: its type is number
9999 mem: location 1159 is 0
9999 mem: storing 0 in location 1656
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1654 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1693
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1695
 104 run: break-unless x:address:screen, 
9999 mem: location 1695 is 1031
9999 run: jump-unless fell through
schedule: screen-height/render/new-editor/run1001/editor-initially-wraps-long-lines
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1695 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1695 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1696
 104 run: reply height:number
9999 mem: location 1696 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1657
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1655 is 1157
9999 mem: location 1157 is 1194
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1655 is 1157
9999 run: address to copy is 1160
9999 run: its type is number
9999 mem: location 1160 is 4
9999 mem: storing 4 in location 1658
 103 run: hide-screen screen:address
9999 mem: location 1654 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1724
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1726
 104 run: break-unless x:address:screen, 
9999 mem: location 1726 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1726 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, data:offset
9999 mem: location 1655 is 1157
9999 mem: location 1157 is 1194
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1655 is 1157
9999 run: address to copy is 1157
9999 run: its type is address
9999 mem: location 1157 is 1194
9999 mem: storing 1194 in location 1659
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1659 is 1194
9999 mem: storing 1194 in location 1660
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1659 is 1194
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1755
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1757
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1757 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1757 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 1228
9999 mem: location 1196 is 0
9999 mem: location 1757 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1228
9999 mem: storing 1228 in location 1758
 104 run: reply result:address:duplex-list
9999 mem: location 1758 is 1228
9999 run: result 0 is 1228
9999 mem: storing 1228 in location 1659
 103 run: row:number <- copy 1:literal/top
9999 mem: storing 1 in location 1661
 103 run: column:number <- copy left:number
9999 mem: location 1656 is 0
9999 mem: storing 0 in location 1662
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1655 is 1157
9999 mem: location 1157 is 1194
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1655 is 1157
9999 run: address to copy is 1161
9999 mem: storing 1161 in location 1663
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1655 is 1157
9999 mem: location 1157 is 1194
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1655 is 1157
9999 run: address to copy is 1162
9999 mem: storing 1162 in location 1664
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1655 is 1157
9999 mem: location 1157 is 1194
9999 mem: location 1158 is 1194
9999 mem: location 1159 is 0
9999 mem: location 1160 is 4
9999 mem: location 1161 is 1
9999 mem: location 1162 is 0
9999 mem: location 1655 is 1157
9999 run: address to copy is 1158
9999 mem: storing 1158 in location 1665
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1654 is 1031
9999 mem: location 1661 is 1
9999 mem: location 1662 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1786
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1788
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1789
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1790
 104 run: break-unless x:address:screen, 
9999 mem: location 1788 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1788 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1788 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1791
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1789 is 1
9999 mem: location 1791 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1788 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1788 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1792
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1790 is 0
9999 mem: location 1792 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1788 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1659 is 1228
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1661 is 1
9999 mem: location 1657 is 5
9999 mem: storing 0 in location 1666
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1666 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1661 is 1
9999 mem: location 1663 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1667
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1667 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1662 is 0
9999 mem: location 1664 is 1162
9999 mem: location 1162 is 0
9999 mem: storing 1 in location 1668
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1668 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1659 is 1228
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1817
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1819
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1819 is 1228
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1819 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1819 is 1228
9999 run: address to copy is 1230
9999 run: its type is address
9999 mem: location 1230 is 1194
9999 mem: storing 1194 in location 1820
 104 run: reply result:address:duplex-list
9999 mem: location 1820 is 1194
9999 run: result 0 is 1194
9999 mem: location 1665 is 1158
9999 mem: storing 1194 in location 1158
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1659 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1659 is 1228
9999 run: address to copy is 1228
9999 run: its type is number
9999 mem: location 1228 is 97
9999 mem: storing 97 in location 1669
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1669 is 97
9999 mem: storing 0 in location 1670
 103 run: break-unless newline?:boolean, 
9999 mem: location 1670 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1662 is 0
9999 mem: location 1658 is 4
9999 mem: storing 0 in location 1672
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1672 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1654 is 1031
9999 mem: location 1669 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1848
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1850
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1851
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1852
9999 mem: storing 0 in location 1853
 104 run: break-if color-found?:boolean, 
9999 mem: location 1853 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1852
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1854
9999 mem: storing 0 in location 1855
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1855 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1854
 104 run: break-unless x:address:screen, 
9999 mem: location 1850 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1850 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1850 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1856
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1850 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1850 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1857
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1850 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1850 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1858
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1850 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1850 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1859
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1851 is 97
9999 mem: storing 0 in location 1860
 104 run: break-unless newline?:boolean, 
9999 mem: location 1860 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1856 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1858 is 5
9999 mem: storing 5 in location 1863
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1863 is 5
9999 mem: location 1857 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 1863
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1850 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1850 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1864
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1851 is 97
9999 mem: storing 0 in location 1865
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1865 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1864 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1863 is 5
9999 mem: location 1864 is 1036
9999 mem: location 1863 is 5
9999 mem: storing 1047 in location 1867
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1867 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1867 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1868
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1867 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1867 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1869
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1851 is 97
9999 mem: location 1868 is 1047
9999 mem: storing 97 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1852 is 7
9999 mem: location 1869 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1858 is 5
9999 mem: storing 4 in location 1870
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1857 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1870 is 4
9999 mem: storing 0 in location 1871
 104 run: break-if at-right?:boolean, 
9999 mem: location 1871 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1857 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1857 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1850 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1659 is 1228
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1879
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 1881
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1881 is 1228
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1881 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 1881 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 1293
9999 mem: storing 1293 in location 1882
 104 run: reply result:address:duplex-list
9999 mem: location 1882 is 1293
9999 run: result 0 is 1293
9999 mem: storing 1293 in location 1659
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1660 is 1194
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1910
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1194 in location 1912
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1912 is 1194
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1912 is 1194
9999 mem: location 1194 is 167
9999 mem: location 1195 is 1228
9999 mem: location 1196 is 0
9999 mem: location 1912 is 1194
9999 run: address to copy is 1195
9999 run: its type is address
9999 mem: location 1195 is 1228
9999 mem: storing 1228 in location 1913
 104 run: reply result:address:duplex-list
9999 mem: location 1913 is 1228
9999 run: result 0 is 1228
9999 mem: storing 1228 in location 1660
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1662 is 0
9999 mem: storing 1 in location 1662
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1659 is 1293
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1661 is 1
9999 mem: location 1657 is 5
9999 mem: storing 0 in location 1666
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1666 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1661 is 1
9999 mem: location 1663 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1667
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1667 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1662 is 1
9999 mem: location 1664 is 1162
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1668
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1668 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1659 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 1659 is 1293
9999 run: address to copy is 1293
9999 run: its type is number
9999 mem: location 1293 is 98
9999 mem: storing 98 in location 1669
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1669 is 98
9999 mem: storing 0 in location 1670
 103 run: break-unless newline?:boolean, 
9999 mem: location 1670 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1662 is 1
9999 mem: location 1658 is 4
9999 mem: storing 0 in location 1672
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1672 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1654 is 1031
9999 mem: location 1669 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1941
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1943
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1944
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1945
9999 mem: storing 0 in location 1946
 104 run: break-if color-found?:boolean, 
9999 mem: location 1946 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1945
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1947
9999 mem: storing 0 in location 1948
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1948 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1947
 104 run: break-unless x:address:screen, 
9999 mem: location 1943 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1943 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1943 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1949
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1943 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1943 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1950
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1943 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1943 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1951
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1943 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1943 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 1952
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1944 is 98
9999 mem: storing 0 in location 1953
 104 run: break-unless newline?:boolean, 
9999 mem: location 1953 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1949 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1951 is 5
9999 mem: storing 5 in location 1956
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1956 is 5
9999 mem: location 1950 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 1956
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1943 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1943 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1957
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1944 is 98
9999 mem: storing 0 in location 1958
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1958 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1957 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 1956 is 6
9999 mem: location 1957 is 1036
9999 mem: location 1956 is 6
9999 mem: storing 1049 in location 1960
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1960 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1960 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1961
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1960 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1960 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1962
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1944 is 98
9999 mem: location 1961 is 1049
9999 mem: storing 98 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1945 is 7
9999 mem: location 1962 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1951 is 5
9999 mem: storing 4 in location 1963
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1950 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1963 is 4
9999 mem: storing 0 in location 1964
 104 run: break-if at-right?:boolean, 
9999 mem: location 1964 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1950 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1950 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1943 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1659 is 1293
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1972
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 1974
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1974 is 1293
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1974 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 1974 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1358
9999 mem: storing 1358 in location 1975
 104 run: reply result:address:duplex-list
9999 mem: location 1975 is 1358
9999 run: result 0 is 1358
9999 mem: storing 1358 in location 1659
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1660 is 1228
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2003
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1228 in location 2005
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2005 is 1228
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2005 is 1228
9999 mem: location 1228 is 97
9999 mem: location 1229 is 1293
9999 mem: location 1230 is 1194
9999 mem: location 2005 is 1228
9999 run: address to copy is 1229
9999 run: its type is address
9999 mem: location 1229 is 1293
9999 mem: storing 1293 in location 2006
 104 run: reply result:address:duplex-list
9999 mem: location 2006 is 1293
9999 run: result 0 is 1293
9999 mem: storing 1293 in location 1660
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1662 is 1
9999 mem: storing 2 in location 1662
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1659 is 1358
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1661 is 1
9999 mem: location 1657 is 5
9999 mem: storing 0 in location 1666
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1666 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1661 is 1
9999 mem: location 1663 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1667
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1667 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1662 is 2
9999 mem: location 1664 is 1162
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1668
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1668 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1659 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 1423
9999 mem: location 1360 is 1293
9999 mem: location 1659 is 1358
9999 run: address to copy is 1358
9999 run: its type is number
9999 mem: location 1358 is 99
9999 mem: storing 99 in location 1669
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1669 is 99
9999 mem: storing 0 in location 1670
 103 run: break-unless newline?:boolean, 
9999 mem: location 1670 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1662 is 2
9999 mem: location 1658 is 4
9999 mem: storing 0 in location 1672
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1672 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1654 is 1031
9999 mem: location 1669 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2034
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2036
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2037
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2038
9999 mem: storing 0 in location 2039
 104 run: break-if color-found?:boolean, 
9999 mem: location 2039 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2038
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2040
9999 mem: storing 0 in location 2041
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2041 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2040
 104 run: break-unless x:address:screen, 
9999 mem: location 2036 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2036 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2036 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2042
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2036 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2036 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2043
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2036 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2036 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2044
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2036 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2036 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2045
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2037 is 99
9999 mem: storing 0 in location 2046
 104 run: break-unless newline?:boolean, 
9999 mem: location 2046 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2042 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2044 is 5
9999 mem: storing 5 in location 2049
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2049 is 5
9999 mem: location 2043 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 2049
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2036 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2036 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2050
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2037 is 99
9999 mem: storing 0 in location 2051
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2051 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2050 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2049 is 7
9999 mem: location 2050 is 1036
9999 mem: location 2049 is 7
9999 mem: storing 1051 in location 2053
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2053 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2053 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 2054
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2053 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2053 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 2055
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2037 is 99
9999 mem: location 2054 is 1051
9999 mem: storing 99 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2038 is 7
9999 mem: location 2055 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2044 is 5
9999 mem: storing 4 in location 2056
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2043 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2056 is 4
9999 mem: storing 0 in location 2057
 104 run: break-if at-right?:boolean, 
9999 mem: location 2057 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2043 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2043 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2036 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1659 is 1358
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2065
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1358 in location 2067
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2067 is 1358
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2067 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 1423
9999 mem: location 1360 is 1293
9999 mem: location 2067 is 1358
9999 run: address to copy is 1359
9999 run: its type is address
9999 mem: location 1359 is 1423
9999 mem: storing 1423 in location 2068
 104 run: reply result:address:duplex-list
9999 mem: location 2068 is 1423
9999 run: result 0 is 1423
9999 mem: storing 1423 in location 1659
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1660 is 1293
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2096
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1293 in location 2098
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2098 is 1293
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2098 is 1293
9999 mem: location 1293 is 98
9999 mem: location 1294 is 1358
9999 mem: location 1295 is 1228
9999 mem: location 2098 is 1293
9999 run: address to copy is 1294
9999 run: its type is address
9999 mem: location 1294 is 1358
9999 mem: storing 1358 in location 2099
 104 run: reply result:address:duplex-list
9999 mem: location 2099 is 1358
9999 run: result 0 is 1358
9999 mem: storing 1358 in location 1660
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1662 is 2
9999 mem: storing 3 in location 1662
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1659 is 1423
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1661 is 1
9999 mem: location 1657 is 5
9999 mem: storing 0 in location 1666
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1666 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1661 is 1
9999 mem: location 1663 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1667
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1667 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1662 is 3
9999 mem: location 1664 is 1162
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1668
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1668 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1659 is 1423
9999 mem: location 1423 is 32
9999 mem: location 1424 is 1488
9999 mem: location 1425 is 1358
9999 mem: location 1659 is 1423
9999 run: address to copy is 1423
9999 run: its type is number
9999 mem: location 1423 is 32
9999 mem: storing 32 in location 1669
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1669 is 32
9999 mem: storing 0 in location 1670
 103 run: break-unless newline?:boolean, 
9999 mem: location 1670 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1662 is 3
9999 mem: location 1658 is 4
9999 mem: storing 0 in location 1672
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1672 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1654 is 1031
9999 mem: location 1669 is 32
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2127
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2129
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2130
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2131
9999 mem: storing 0 in location 2132
 104 run: break-if color-found?:boolean, 
9999 mem: location 2132 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2131
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2133
9999 mem: storing 0 in location 2134
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2134 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2133
 104 run: break-unless x:address:screen, 
9999 mem: location 2129 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2129 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2129 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2135
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2129 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2129 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2136
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2129 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2129 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2137
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2129 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2129 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2138
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2130 is 32
9999 mem: storing 0 in location 2139
 104 run: break-unless newline?:boolean, 
9999 mem: location 2139 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2135 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2137 is 5
9999 mem: storing 5 in location 2142
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2142 is 5
9999 mem: location 2136 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 2142
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2129 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2129 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2143
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2130 is 32
9999 mem: storing 0 in location 2144
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2144 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2143 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2142 is 8
9999 mem: location 2143 is 1036
9999 mem: location 2142 is 8
9999 mem: storing 1053 in location 2146
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2146 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2146 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 2147
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2146 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2146 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 2148
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2130 is 32
9999 mem: location 2147 is 1053
9999 mem: storing 32 in location 1053
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2131 is 7
9999 mem: location 2148 is 1054
9999 mem: storing 7 in location 1054
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2137 is 5
9999 mem: storing 4 in location 2149
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2136 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2149 is 4
9999 mem: storing 0 in location 2150
 104 run: break-if at-right?:boolean, 
9999 mem: location 2150 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2136 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2136 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2129 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1659 is 1423
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2158
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1423 in location 2160
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2160 is 1423
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2160 is 1423
9999 mem: location 1423 is 32
9999 mem: location 1424 is 1488
9999 mem: location 1425 is 1358
9999 mem: location 2160 is 1423
9999 run: address to copy is 1424
9999 run: its type is address
9999 mem: location 1424 is 1488
9999 mem: storing 1488 in location 2161
 104 run: reply result:address:duplex-list
9999 mem: location 2161 is 1488
9999 run: result 0 is 1488
9999 mem: storing 1488 in location 1659
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1660 is 1358
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2189
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1358 in location 2191
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2191 is 1358
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2191 is 1358
9999 mem: location 1358 is 99
9999 mem: location 1359 is 1423
9999 mem: location 1360 is 1293
9999 mem: location 2191 is 1358
9999 run: address to copy is 1359
9999 run: its type is address
9999 mem: location 1359 is 1423
9999 mem: storing 1423 in location 2192
 104 run: reply result:address:duplex-list
9999 mem: location 2192 is 1423
9999 run: result 0 is 1423
9999 mem: storing 1423 in location 1660
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1662 is 3
9999 mem: storing 4 in location 1662
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1659 is 1488
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1661 is 1
9999 mem: location 1657 is 5
9999 mem: storing 0 in location 1666
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1666 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1661 is 1
9999 mem: location 1663 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 1 in location 1667
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1667 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1662 is 4
9999 mem: location 1664 is 1162
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1668
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1668 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1659 is 1488
9999 mem: location 1488 is 100
9999 mem: location 1489 is 1553
9999 mem: location 1490 is 1423
9999 mem: location 1659 is 1488
9999 run: address to copy is 1488
9999 run: its type is number
9999 mem: location 1488 is 100
9999 mem: storing 100 in location 1669
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1669 is 100
9999 mem: storing 0 in location 1670
 103 run: break-unless newline?:boolean, 
9999 mem: location 1670 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1662 is 4
9999 mem: location 1658 is 4
9999 mem: storing 1 in location 1672
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1672 is 1
9999 run: jump-unless fell through
 103 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 1654 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2220
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2222
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 2223
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2224
9999 mem: storing 1 in location 2225
 104 run: break-if color-found?:boolean, 
9999 mem: location 2225 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2226
9999 mem: storing 0 in location 2227
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2227 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2226
 104 run: break-unless x:address:screen, 
9999 mem: location 2222 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2222 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2222 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2228
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2222 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2222 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2229
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2222 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2222 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2230
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2222 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2222 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2231
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2223 is 8617
9999 mem: storing 0 in location 2232
 104 run: break-unless newline?:boolean, 
9999 mem: location 2232 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2228 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2230 is 5
9999 mem: storing 5 in location 2235
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2235 is 5
9999 mem: location 2229 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 2235
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2222 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2222 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2236
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2223 is 8617
9999 mem: storing 0 in location 2237
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2237 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2236 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2235 is 9
9999 mem: location 2236 is 1036
9999 mem: location 2235 is 9
9999 mem: storing 1055 in location 2239
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2239 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2239 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 2240
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2239 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2239 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 2241
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2223 is 8617
9999 mem: location 2240 is 1055
9999 mem: storing 8617 in location 1055
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2224 is 245
9999 mem: location 2241 is 1056
9999 mem: storing 245 in location 1056
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2230 is 5
9999 mem: storing 4 in location 2242
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2229 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2242 is 4
9999 mem: storing 1 in location 2243
 104 run: break-if at-right?:boolean, 
9999 mem: location 2243 is 1
9999 run: jumping to instruction 60
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2222 is 1031
 103 run: column:number <- copy left:number
9999 mem: location 1656 is 0
9999 mem: storing 0 in location 1662
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1661 is 1
9999 mem: storing 2 in location 1661
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1654 is 1031
9999 mem: location 1661 is 2
9999 mem: location 1662 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2251
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2253
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 2254
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2255
 104 run: break-unless x:address:screen, 
9999 mem: location 2253 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2253 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2253 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2256
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2254 is 2
9999 mem: location 2256 is 1033
9999 mem: storing 2 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2253 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2253 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2257
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2255 is 0
9999 mem: location 2257 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2253 is 1031
 103 run: loop +next-character:label
9999 run: jumping to instruction 20
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1659 is 1488
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1661 is 2
9999 mem: location 1657 is 5
9999 mem: storing 0 in location 1666
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1666 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1661 is 2
9999 mem: location 1663 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 0 in location 1667
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1667 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1659 is 1488
9999 mem: location 1488 is 100
9999 mem: location 1489 is 1553
9999 mem: location 1490 is 1423
9999 mem: location 1659 is 1488
9999 run: address to copy is 1488
9999 run: its type is number
9999 mem: location 1488 is 100
9999 mem: storing 100 in location 1669
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1669 is 100
9999 mem: storing 0 in location 1670
 103 run: break-unless newline?:boolean, 
9999 mem: location 1670 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1662 is 0
9999 mem: location 1658 is 4
9999 mem: storing 0 in location 1672
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1672 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1654 is 1031
9999 mem: location 1669 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2282
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2284
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 2285
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2286
9999 mem: storing 0 in location 2287
 104 run: break-if color-found?:boolean, 
9999 mem: location 2287 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2286
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2288
9999 mem: storing 0 in location 2289
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2289 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2288
 104 run: break-unless x:address:screen, 
9999 mem: location 2284 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2284 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2284 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2290
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2284 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2284 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2291
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2284 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2284 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2292
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2284 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2284 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2293
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2285 is 100
9999 mem: storing 0 in location 2294
 104 run: break-unless newline?:boolean, 
9999 mem: location 2294 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2290 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2292 is 5
9999 mem: storing 10 in location 2297
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2297 is 10
9999 mem: location 2291 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 10 in location 2297
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2284 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2284 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2298
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2285 is 100
9999 mem: storing 0 in location 2299
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2299 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2298 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2297 is 10
9999 mem: location 2298 is 1036
9999 mem: location 2297 is 10
9999 mem: storing 1057 in location 2301
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2301 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2301 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 2302
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2301 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2301 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 2303
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2285 is 100
9999 mem: location 2302 is 1057
9999 mem: storing 100 in location 1057
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2286 is 7
9999 mem: location 2303 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2292 is 5
9999 mem: storing 4 in location 2304
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2291 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2304 is 4
9999 mem: storing 0 in location 2305
 104 run: break-if at-right?:boolean, 
9999 mem: location 2305 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2291 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2291 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2284 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1659 is 1488
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2313
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1488 in location 2315
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2315 is 1488
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2315 is 1488
9999 mem: location 1488 is 100
9999 mem: location 1489 is 1553
9999 mem: location 1490 is 1423
9999 mem: location 2315 is 1488
9999 run: address to copy is 1489
9999 run: its type is address
9999 mem: location 1489 is 1553
9999 mem: storing 1553 in location 2316
 104 run: reply result:address:duplex-list
9999 mem: location 2316 is 1553
9999 run: result 0 is 1553
9999 mem: storing 1553 in location 1659
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1660 is 1423
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2344
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1423 in location 2346
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2346 is 1423
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2346 is 1423
9999 mem: location 1423 is 32
9999 mem: location 1424 is 1488
9999 mem: location 1425 is 1358
9999 mem: location 2346 is 1423
9999 run: address to copy is 1424
9999 run: its type is address
9999 mem: location 1424 is 1488
9999 mem: storing 1488 in location 2347
 104 run: reply result:address:duplex-list
9999 mem: location 2347 is 1488
9999 run: result 0 is 1488
9999 mem: storing 1488 in location 1660
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1662 is 0
9999 mem: storing 1 in location 1662
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1659 is 1553
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1661 is 2
9999 mem: location 1657 is 5
9999 mem: storing 0 in location 1666
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1666 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1661 is 2
9999 mem: location 1663 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 0 in location 1667
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1667 is 0
9999 run: jumping to instruction 29
schedule: render/new-editor/run1001/editor-initially-wraps-long-lines
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1659 is 1553
9999 mem: location 1553 is 101
9999 mem: location 1554 is 1618
9999 mem: location 1555 is 1488
9999 mem: location 1659 is 1553
9999 run: address to copy is 1553
9999 run: its type is number
9999 mem: location 1553 is 101
9999 mem: storing 101 in location 1669
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1669 is 101
9999 mem: storing 0 in location 1670
 103 run: break-unless newline?:boolean, 
9999 mem: location 1670 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1662 is 1
9999 mem: location 1658 is 4
9999 mem: storing 0 in location 1672
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1672 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1654 is 1031
9999 mem: location 1669 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2375
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2377
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2378
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2379
9999 mem: storing 0 in location 2380
 104 run: break-if color-found?:boolean, 
9999 mem: location 2380 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2379
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2381
9999 mem: storing 0 in location 2382
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2382 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2381
 104 run: break-unless x:address:screen, 
9999 mem: location 2377 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2377 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2377 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2383
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2377 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2377 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2384
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2377 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2377 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2385
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2377 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2377 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2386
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2378 is 101
9999 mem: storing 0 in location 2387
 104 run: break-unless newline?:boolean, 
9999 mem: location 2387 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2383 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2385 is 5
9999 mem: storing 10 in location 2390
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2390 is 10
9999 mem: location 2384 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 11 in location 2390
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2377 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2377 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2391
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2378 is 101
9999 mem: storing 0 in location 2392
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2392 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2391 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2390 is 11
9999 mem: location 2391 is 1036
9999 mem: location 2390 is 11
9999 mem: storing 1059 in location 2394
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2394 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2394 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 2395
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2394 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2394 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 2396
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2378 is 101
9999 mem: location 2395 is 1059
9999 mem: storing 101 in location 1059
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2379 is 7
9999 mem: location 2396 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2385 is 5
9999 mem: storing 4 in location 2397
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2384 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2397 is 4
9999 mem: storing 0 in location 2398
 104 run: break-if at-right?:boolean, 
9999 mem: location 2398 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2384 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2384 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2377 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1659 is 1553
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2406
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1553 in location 2408
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2408 is 1553
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2408 is 1553
9999 mem: location 1553 is 101
9999 mem: location 1554 is 1618
9999 mem: location 1555 is 1488
9999 mem: location 2408 is 1553
9999 run: address to copy is 1554
9999 run: its type is address
9999 mem: location 1554 is 1618
9999 mem: storing 1618 in location 2409
 104 run: reply result:address:duplex-list
9999 mem: location 2409 is 1618
9999 run: result 0 is 1618
9999 mem: storing 1618 in location 1659
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1660 is 1488
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2437
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1488 in location 2439
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2439 is 1488
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2439 is 1488
9999 mem: location 1488 is 100
9999 mem: location 1489 is 1553
9999 mem: location 1490 is 1423
9999 mem: location 2439 is 1488
9999 run: address to copy is 1489
9999 run: its type is address
9999 mem: location 1489 is 1553
9999 mem: storing 1553 in location 2440
 104 run: reply result:address:duplex-list
9999 mem: location 2440 is 1553
9999 run: result 0 is 1553
9999 mem: storing 1553 in location 1660
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1662 is 1
9999 mem: storing 2 in location 1662
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1659 is 1618
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1661 is 2
9999 mem: location 1657 is 5
9999 mem: storing 0 in location 1666
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1666 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1661 is 2
9999 mem: location 1663 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 0 in location 1667
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1667 is 0
9999 run: jumping to instruction 29
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1659 is 1618
9999 mem: location 1618 is 102
9999 mem: location 1619 is 0
9999 mem: location 1620 is 1553
9999 mem: location 1659 is 1618
9999 run: address to copy is 1618
9999 run: its type is number
9999 mem: location 1618 is 102
9999 mem: storing 102 in location 1669
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1669 is 102
9999 mem: storing 0 in location 1670
 103 run: break-unless newline?:boolean, 
9999 mem: location 1670 is 0
9999 run: jumping to instruction 49
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1662 is 2
9999 mem: location 1658 is 4
9999 mem: storing 0 in location 1672
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1672 is 0
9999 run: jumping to instruction 58
 103 run: print-character screen:address, c:character
9999 mem: location 1654 is 1031
9999 mem: location 1669 is 102
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2468
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2470
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 2471
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2472
9999 mem: storing 0 in location 2473
 104 run: break-if color-found?:boolean, 
9999 mem: location 2473 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2472
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2474
9999 mem: storing 0 in location 2475
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2475 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2474
 104 run: break-unless x:address:screen, 
9999 mem: location 2470 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2470 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2470 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2476
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2470 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2470 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2477
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2470 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2470 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2478
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2470 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2470 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2479
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2471 is 102
9999 mem: storing 0 in location 2480
 104 run: break-unless newline?:boolean, 
9999 mem: location 2480 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2476 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2478 is 5
9999 mem: storing 10 in location 2483
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2483 is 10
9999 mem: location 2477 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 12 in location 2483
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2470 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2470 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2484
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2471 is 102
9999 mem: storing 0 in location 2485
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2485 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2484 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 101
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2483 is 12
9999 mem: location 2484 is 1036
9999 mem: location 2483 is 12
9999 mem: storing 1061 in location 2487
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2487 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2487 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 2488
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2487 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2487 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 2489
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2471 is 102
9999 mem: location 2488 is 1061
9999 mem: storing 102 in location 1061
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2472 is 7
9999 mem: location 2489 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2478 is 5
9999 mem: storing 4 in location 2490
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2477 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2490 is 4
9999 mem: storing 0 in location 2491
 104 run: break-if at-right?:boolean, 
9999 mem: location 2491 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2477 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2477 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2470 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1659 is 1618
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2499
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1618 in location 2501
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2501 is 1618
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2501 is 1618
9999 mem: location 1618 is 102
9999 mem: location 1619 is 0
9999 mem: location 1620 is 1553
9999 mem: location 2501 is 1618
9999 run: address to copy is 1619
9999 run: its type is address
9999 mem: location 1619 is 0
9999 mem: storing 0 in location 2502
 104 run: reply result:address:duplex-list
9999 mem: location 2502 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1659
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1660 is 1553
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2530
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1553 in location 2532
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2532 is 1553
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2532 is 1553
9999 mem: location 1553 is 101
9999 mem: location 1554 is 1618
9999 mem: location 1555 is 1488
9999 mem: location 2532 is 1553
9999 run: address to copy is 1554
9999 run: its type is address
9999 mem: location 1554 is 1618
9999 mem: storing 1618 in location 2533
 104 run: reply result:address:duplex-list
9999 mem: location 2533 is 1618
9999 run: result 0 is 1618
9999 mem: storing 1618 in location 1660
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1662 is 2
9999 mem: storing 3 in location 1662
 103 run: loop 
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1659 is 0
9999 run: jumping to instruction 64
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1661 is 2
9999 mem: location 1663 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 0 in location 1667
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1662 is 3
9999 mem: location 1664 is 1162
9999 mem: location 1162 is 0
9999 mem: storing 0 in location 1673
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1667 is 0
9999 mem: location 1673 is 0
9999 mem: storing 0 in location 1674
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1661 is 2
9999 mem: location 1663 is 1161
9999 mem: location 1161 is 1
9999 mem: storing 0 in location 1675
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1674 is 0
9999 mem: location 1675 is 0
9999 mem: storing 0 in location 1676
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1676 is 0
9999 run: jumping to instruction 83
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1654 is 1031
9999 mem: location 1662 is 3
9999 mem: location 1658 is 4
 104 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 2561
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2563
 104 run: left:number <- next-ingredient 
9999 mem: storing 3 in location 2564
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2565
 104 run: column:number <- copy left:number
9999 mem: location 2564 is 3
9999 mem: storing 3 in location 2566
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2566 is 3
9999 mem: location 2565 is 4
9999 mem: storing 0 in location 2567
 104 run: break-if done?:boolean, 
9999 mem: location 2567 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2563 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2602
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2604
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2605
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2606
9999 mem: storing 0 in location 2607
 105 run: break-if color-found?:boolean, 
9999 mem: location 2607 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2606
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2608
9999 mem: storing 0 in location 2609
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2609 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2608
 105 run: break-unless x:address:screen, 
9999 mem: location 2604 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2604 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2604 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2610
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2604 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2604 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2611
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2604 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2604 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2612
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2604 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2604 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2613
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2605 is 32
9999 mem: storing 0 in location 2614
 105 run: break-unless newline?:boolean, 
9999 mem: location 2614 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2610 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2612 is 5
9999 mem: storing 10 in location 2617
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2617 is 10
9999 mem: location 2611 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 13 in location 2617
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2604 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2604 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2618
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2605 is 32
9999 mem: storing 0 in location 2619
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2619 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2618 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 101
9999 mem: location 1060 is 7
9999 mem: location 1061 is 102
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2617 is 13
9999 mem: location 2618 is 1036
9999 mem: location 2617 is 13
9999 mem: storing 1063 in location 2621
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2621 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2621 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 2622
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2621 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2621 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 2623
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2605 is 32
9999 mem: location 2622 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2606 is 7
9999 mem: location 2623 is 1064
9999 mem: storing 7 in location 1064
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2612 is 5
9999 mem: storing 4 in location 2624
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2611 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2624 is 4
9999 mem: storing 0 in location 2625
 105 run: break-if at-right?:boolean, 
9999 mem: location 2625 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2611 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2611 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2604 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2566 is 3
9999 mem: storing 4 in location 2566
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2566 is 4
9999 mem: location 2565 is 4
9999 mem: storing 0 in location 2567
 104 run: break-if done?:boolean, 
9999 mem: location 2567 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2563 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2633
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2635
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2636
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2637
9999 mem: storing 0 in location 2638
 105 run: break-if color-found?:boolean, 
9999 mem: location 2638 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2637
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2639
9999 mem: storing 0 in location 2640
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2640 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2639
 105 run: break-unless x:address:screen, 
9999 mem: location 2635 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2635 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2635 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2641
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2635 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2635 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2642
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2635 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2635 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2643
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2635 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2635 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 5
9999 mem: storing 5 in location 2644
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2636 is 32
9999 mem: storing 0 in location 2645
 105 run: break-unless newline?:boolean, 
9999 mem: location 2645 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2641 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2643 is 5
9999 mem: storing 10 in location 2648
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2648 is 10
9999 mem: location 2642 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 14 in location 2648
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2635 is 1031
9999 mem: location 1031 is 5
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2635 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2649
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2636 is 32
9999 mem: storing 0 in location 2650
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2650 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2649 is 1036
9999 mem: location 1036 is 25
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 97
9999 mem: location 1048 is 7
9999 mem: location 1049 is 98
9999 mem: location 1050 is 7
9999 mem: location 1051 is 99
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 8617
9999 mem: location 1056 is 245
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1059 is 101
9999 mem: location 1060 is 7
9999 mem: location 1061 is 102
9999 mem: location 1062 is 7
9999 mem: location 1063 is 32
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1067 is 0
9999 mem: location 1068 is 7
9999 mem: location 1069 is 0
9999 mem: location 1070 is 7
9999 mem: location 1071 is 0
9999 mem: location 1072 is 7
9999 mem: location 1073 is 0
9999 mem: location 1074 is 7
9999 mem: location 1075 is 0
9999 mem: location 1076 is 7
9999 mem: location 1077 is 0
9999 mem: location 1078 is 7
9999 mem: location 1079 is 0
9999 mem: location 1080 is 7
9999 mem: location 1081 is 0
9999 mem: location 1082 is 7
9999 mem: location 1083 is 0
9999 mem: location 1084 is 7
9999 mem: location 1085 is 0
9999 mem: location 1086 is 7
9999 mem: location 2648 is 14
9999 mem: location 2649 is 1036
9999 mem: location 2648 is 14
9999 mem: storing 1065 in location 2652
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2652 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2652 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 2653
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2652 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2652 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 2654
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2636 is 32
9999 mem: location 2653 is 1065
9999 mem: storing 32 in location 1065
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2637 is 7
9999 mem: location 2654 is 1066
9999 mem: storing 7 in location 1066
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2643 is 5
9999 mem: storing 4 in location 2655
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2642 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2655 is 4
9999 mem: storing 1 in location 2656
 105 run: break-if at-right?:boolean, 
9999 mem: location 2656 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2635 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2566 is 4
9999 mem: storing 5 in location 2566
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2566 is 5
9999 mem: location 2565 is 4
9999 mem: storing 1 in location 2567
 104 run: break-if done?:boolean, 
9999 mem: location 2567 is 1
9999 run: jumping to instruction 11
 103 run: reply editor:address:editor-data/same-as-ingredient:1, row:number, screen:address/same-as-ingredient:0
9999 mem: location 1655 is 1157
9999 mem: location 1661 is 2
9999 mem: location 1654 is 1031
9999 run: result 0 is 1157
9999 run: result 1 is 2
9999 run: result 2 is 1031
9999 mem: storing 1157 in location 1132
9999 mem: storing 1031 in location 1129
 102 run: reply result:address:editor-data, screen:address/same-as-ingredient:0
9999 mem: location 1132 is 1157
9999 mem: location 1129 is 1031
 100 run: screen-should-contain [
    .     .
    .abc â†©.
    .def  .
    .     .
  ]
 100 run: screen-should-contain-in-color 245:literal/grey, [
    .     .
    .    â†©.
    .     .
    .     .
  ]
