parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abc def]\n    new-editor s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .abc â†©.\n    .def  .\n    .     .\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain-in-color
parse:   ingredient: {name: "245", properties: ["245": "literal", "grey": ]}
parse:   ingredient: {name: "\n    .    â†©.\n    .     .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initially-wraps-long-lines
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: screen-should-contain-in-color ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initially-wraps-long-lines
 101 run: screen:address <- new-fake-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1069
 103 run: break-unless x:address:screen, 
9999 mem: location 1069 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1070
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1070 is 1036
9999 mem: storing 15 in location 1071
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1072
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 0
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 0
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 0
9999 mem: storing 1037 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 0
9999 mem: storing 1 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 1
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 1
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 1
9999 mem: storing 1039 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 1
9999 mem: storing 2 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 2
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 2
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 2
9999 mem: storing 1041 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 2
9999 mem: storing 3 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 3
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 3
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 3
9999 mem: storing 1043 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 3
9999 mem: storing 4 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 4
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 4
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 4
9999 mem: storing 1045 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 4
9999 mem: storing 5 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 5
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 5
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 5
9999 mem: storing 1047 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 5
9999 mem: storing 6 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 6
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 6
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 6
9999 mem: storing 1049 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 6
9999 mem: storing 7 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 7
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 7
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 7
9999 mem: storing 1051 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 7
9999 mem: storing 8 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 8
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 8
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 8
9999 mem: storing 1053 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 8
9999 mem: storing 9 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 9
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 9
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 9
9999 mem: storing 1055 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 9
9999 mem: storing 10 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 10
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 10
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 10
9999 mem: storing 1057 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 10
9999 mem: storing 11 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 11
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 11
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 11
9999 mem: storing 1059 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 11
9999 mem: storing 12 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 12
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 12
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 12
9999 mem: storing 1061 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 12
9999 mem: storing 13 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 13
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 13
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 13
9999 mem: storing 1063 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 13
9999 mem: storing 14 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 14
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 14
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 14
9999 mem: storing 1065 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 14
9999 mem: storing 15 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 15
9999 mem: location 1071 is 15
9999 mem: storing 1 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1069 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    s:address:array:character <- new [abc def]
    new-editor s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right
  ]
parse: instruction: new
parse:   ingredient: {name: "abc def", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "top": ]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
name: assign s 1
after-brace: recipe run1001
after-brace: new ...
after-brace: new-editor ...
 101 run: s:address:array:character <- new [abc def]
9999 mem: storing 1098 in location 1
 101 run: new-editor s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1098
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1106
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1098 in location 1108
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1109
 102 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1110
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1111
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1112
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1112 is 5
9999 mem: storing 4 in location 1112
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1137
9999 mem: storing 1137 in location 1113
 102 run: sc:address:address:screen <- get-address result:address:editor-data/deref, screen:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1114
 102 run: sc:address:address:screen/deref <- copy screen:address
9999 mem: location 1109 is 1031
9999 mem: location 1114 is 1140
9999 mem: storing 1031 in location 1140
 102 run: x:address:number <- get-address result:address:editor-data/deref, top:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1141
9999 mem: storing 0 in location 1141
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1115
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1111 is 0
9999 mem: location 1115 is 1142
9999 mem: storing 0 in location 1142
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1144
9999 mem: storing 1144 in location 1115
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1112 is 4
9999 mem: location 1115 is 1144
9999 mem: storing 4 in location 1144
 102 run: x:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1143
9999 mem: storing 0 in location 1143
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1145
9999 mem: storing 0 in location 1145
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1146
9999 mem: storing 1146 in location 1115
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1111 is 0
9999 mem: location 1115 is 1146
9999 mem: storing 0 in location 1146
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1108 is 1098
9999 run: jumping to instruction 24
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1108 is 1098
9999 mem: storing 7 in location 1116
 102 run: jump-if len:number, 1:offset
9999 mem: location 1116 is 7
9999 run: jumping to instruction 27
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1117
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1118
 102 run: init:address:address:duplex-list/deref <- copy 0:literal
9999 mem: location 1118 is 1138
9999 mem: storing 0 in location 1138
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1117 is 0
9999 mem: location 1108 is 1098
9999 mem: location 1117 is 0
9999 run: address to copy is 1099
9999 run: its type is character
9999 mem: location 1099 is 97
9999 mem: storing 97 in location 1119
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1117 is 0
9999 mem: storing 1 in location 1117
 102 run: init:address:address:duplex-list/deref <- push c:character, init:address:address:duplex-list/deref
9999 mem: location 1119 is 97
9999 mem: location 1118 is 1138
9999 mem: location 1138 is 0
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1147
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1149
 103 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1150
 103 run: result:address:list <- new list:type
9999 mem: new alloc: 1178
9999 mem: storing 1178 in location 1151
 103 run: val:address:location <- get-address result:address:list/deref, value:offset
9999 mem: location 1151 is 1178
9999 mem: location 1178 is 0
9999 mem: location 1179 is 0
9999 mem: location 1151 is 1178
9999 run: address to copy is 1178
9999 mem: storing 1178 in location 1152
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1149 is 97
9999 mem: location 1152 is 1178
9999 mem: storing 97 in location 1178
 103 run: next:address:address:list <- get-address result:address:list/deref, next:offset
9999 mem: location 1151 is 1178
9999 mem: location 1178 is 97
9999 mem: location 1179 is 0
9999 mem: location 1151 is 1178
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 1153
 103 run: next:address:address:list/deref <- copy in:address:list
9999 mem: location 1150 is 0
9999 mem: location 1153 is 1179
9999 mem: storing 0 in location 1179
 103 run: reply result:address:list
9999 mem: location 1151 is 1178
9999 run: result 0 is 1178
9999 mem: location 1118 is 1138
9999 mem: storing 1178 in location 1138
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1118 is 1138
9999 mem: location 1138 is 1178
9999 mem: storing 1178 in location 1120
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1117 is 1
9999 mem: location 1116 is 7
9999 mem: storing 0 in location 1121
 102 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1117 is 1
9999 mem: location 1108 is 1098
9999 mem: location 1117 is 1
9999 run: address to copy is 1100
9999 run: its type is character
9999 mem: location 1100 is 98
9999 mem: storing 98 in location 1119
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1119 is 98
9999 mem: location 1120 is 1178
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1180
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1182
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1178 in location 1183
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1211
9999 mem: storing 1211 in location 1184
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1184 is 1211
9999 mem: location 1211 is 0
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1184 is 1211
9999 run: address to copy is 1211
9999 mem: storing 1211 in location 1185
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1182 is 98
9999 mem: location 1185 is 1211
9999 mem: storing 98 in location 1211
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1183 is 1178
9999 mem: location 1178 is 97
9999 mem: location 1179 is 0
9999 mem: location 1180 is 30
9999 mem: location 1183 is 1178
9999 run: address to copy is 1179
9999 run: its type is address
9999 mem: location 1179 is 0
9999 mem: storing 0 in location 1186
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1183 is 1178
9999 mem: location 1178 is 97
9999 mem: location 1179 is 0
9999 mem: location 1180 is 30
9999 mem: location 1183 is 1178
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 1187
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1184 is 1211
9999 mem: location 1187 is 1179
9999 mem: storing 1211 in location 1179
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1184 is 1211
9999 mem: location 1211 is 98
9999 mem: location 1212 is 0
9999 mem: location 1213 is 0
9999 mem: location 1184 is 1211
9999 run: address to copy is 1213
9999 mem: storing 1213 in location 1187
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1183 is 1178
9999 mem: location 1187 is 1213
9999 mem: storing 1178 in location 1213
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1184 is 1211
9999 mem: location 1211 is 98
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1178
9999 mem: location 1184 is 1211
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 1187
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1186 is 0
9999 mem: location 1187 is 1212
9999 mem: storing 0 in location 1212
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1186 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1184 is 1211
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1120 is 1178
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1214
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1178 in location 1216
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1216 is 1178
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1216 is 1178
9999 mem: location 1178 is 97
9999 mem: location 1179 is 1211
9999 mem: location 1180 is 30
9999 mem: location 1216 is 1178
9999 run: address to copy is 1179
9999 run: its type is address
9999 mem: location 1179 is 1211
9999 mem: storing 1211 in location 1217
 103 run: reply result:address:duplex-list
9999 mem: location 1217 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 1120
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1117 is 1
9999 mem: storing 2 in location 1117
 102 run: loop 
9999 run: jumping to instruction 35
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1117 is 2
9999 mem: location 1116 is 7
9999 mem: storing 0 in location 1121
 102 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1117 is 2
9999 mem: location 1108 is 1098
9999 mem: location 1117 is 2
9999 run: address to copy is 1101
9999 run: its type is character
9999 mem: location 1101 is 99
9999 mem: storing 99 in location 1119
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1119 is 99
9999 mem: location 1120 is 1211
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1245
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1247
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 1248
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1276
9999 mem: storing 1276 in location 1249
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1249 is 1276
9999 mem: location 1276 is 0
9999 mem: location 1277 is 0
9999 mem: location 1278 is 0
9999 mem: location 1249 is 1276
9999 run: address to copy is 1276
9999 mem: storing 1276 in location 1250
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1247 is 99
9999 mem: location 1250 is 1276
9999 mem: storing 99 in location 1276
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1248 is 1211
9999 mem: location 1211 is 98
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1178
9999 mem: location 1248 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 0
9999 mem: storing 0 in location 1251
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1248 is 1211
9999 mem: location 1211 is 98
9999 mem: location 1212 is 0
9999 mem: location 1213 is 1178
9999 mem: location 1248 is 1211
9999 run: address to copy is 1212
9999 mem: storing 1212 in location 1252
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1249 is 1276
9999 mem: location 1252 is 1212
9999 mem: storing 1276 in location 1212
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1249 is 1276
9999 mem: location 1276 is 99
9999 mem: location 1277 is 0
9999 mem: location 1278 is 0
9999 mem: location 1249 is 1276
9999 run: address to copy is 1278
9999 mem: storing 1278 in location 1252
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1248 is 1211
9999 mem: location 1252 is 1278
9999 mem: storing 1211 in location 1278
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1249 is 1276
9999 mem: location 1276 is 99
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1211
9999 mem: location 1249 is 1276
9999 run: address to copy is 1277
9999 mem: storing 1277 in location 1252
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1251 is 0
9999 mem: location 1252 is 1277
9999 mem: storing 0 in location 1277
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1251 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1249 is 1276
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1120 is 1211
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1279
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 1281
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1281 is 1211
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1281 is 1211
9999 mem: location 1211 is 98
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1178
9999 mem: location 1281 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 1282
 103 run: reply result:address:duplex-list
9999 mem: location 1282 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 1120
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1117 is 2
9999 mem: storing 3 in location 1117
 102 run: loop 
9999 run: jumping to instruction 35
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1117 is 3
9999 mem: location 1116 is 7
9999 mem: storing 0 in location 1121
 102 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1117 is 3
9999 mem: location 1108 is 1098
9999 mem: location 1117 is 3
9999 run: address to copy is 1102
9999 run: its type is character
9999 mem: location 1102 is 32
9999 mem: storing 32 in location 1119
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1119 is 32
9999 mem: location 1120 is 1276
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1310
 103 run: x:location <- next-ingredient 
9999 mem: storing 32 in location 1312
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 1313
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1341
9999 mem: storing 1341 in location 1314
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1314 is 1341
9999 mem: location 1341 is 0
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 mem: location 1314 is 1341
9999 run: address to copy is 1341
9999 mem: storing 1341 in location 1315
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1312 is 32
9999 mem: location 1315 is 1341
9999 mem: storing 32 in location 1341
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1313 is 1276
9999 mem: location 1276 is 99
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1211
9999 mem: location 1313 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 0
9999 mem: storing 0 in location 1316
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1313 is 1276
9999 mem: location 1276 is 99
9999 mem: location 1277 is 0
9999 mem: location 1278 is 1211
9999 mem: location 1313 is 1276
9999 run: address to copy is 1277
9999 mem: storing 1277 in location 1317
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1314 is 1341
9999 mem: location 1317 is 1277
9999 mem: storing 1341 in location 1277
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1314 is 1341
9999 mem: location 1341 is 32
9999 mem: location 1342 is 0
9999 mem: location 1343 is 0
9999 mem: location 1314 is 1341
9999 run: address to copy is 1343
9999 mem: storing 1343 in location 1317
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1313 is 1276
9999 mem: location 1317 is 1343
9999 mem: storing 1276 in location 1343
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1314 is 1341
9999 mem: location 1341 is 32
9999 mem: location 1342 is 0
9999 mem: location 1343 is 1276
9999 mem: location 1314 is 1341
9999 run: address to copy is 1342
9999 mem: storing 1342 in location 1317
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1316 is 0
9999 mem: location 1317 is 1342
9999 mem: storing 0 in location 1342
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1316 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1314 is 1341
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1120 is 1276
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1344
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 1346
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1346 is 1276
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1346 is 1276
9999 mem: location 1276 is 99
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 1346 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 1347
 103 run: reply result:address:duplex-list
9999 mem: location 1347 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 1120
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1117 is 3
9999 mem: storing 4 in location 1117
 102 run: loop 
9999 run: jumping to instruction 35
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1117 is 4
9999 mem: location 1116 is 7
9999 mem: storing 0 in location 1121
 102 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1117 is 4
9999 mem: location 1108 is 1098
9999 mem: location 1117 is 4
9999 run: address to copy is 1103
9999 run: its type is character
9999 mem: location 1103 is 100
9999 mem: storing 100 in location 1119
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1119 is 100
9999 mem: location 1120 is 1341
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1375
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1377
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 1378
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1406
9999 mem: storing 1406 in location 1379
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1379 is 1406
9999 mem: location 1406 is 0
9999 mem: location 1407 is 0
9999 mem: location 1408 is 0
9999 mem: location 1379 is 1406
9999 run: address to copy is 1406
9999 mem: storing 1406 in location 1380
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1377 is 100
9999 mem: location 1380 is 1406
9999 mem: storing 100 in location 1406
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1378 is 1341
9999 mem: location 1341 is 32
9999 mem: location 1342 is 0
9999 mem: location 1343 is 1276
9999 mem: location 1378 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 0
9999 mem: storing 0 in location 1381
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1378 is 1341
9999 mem: location 1341 is 32
9999 mem: location 1342 is 0
9999 mem: location 1343 is 1276
9999 mem: location 1378 is 1341
9999 run: address to copy is 1342
9999 mem: storing 1342 in location 1382
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1379 is 1406
9999 mem: location 1382 is 1342
9999 mem: storing 1406 in location 1342
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1379 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 0
9999 mem: location 1379 is 1406
9999 run: address to copy is 1408
9999 mem: storing 1408 in location 1382
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1378 is 1341
9999 mem: location 1382 is 1408
9999 mem: storing 1341 in location 1408
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1379 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 1379 is 1406
9999 run: address to copy is 1407
9999 mem: storing 1407 in location 1382
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1381 is 0
9999 mem: location 1382 is 1407
9999 mem: storing 0 in location 1407
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1381 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1379 is 1406
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1120 is 1341
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1409
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 1411
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1411 is 1341
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1411 is 1341
9999 mem: location 1341 is 32
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 1411 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 1412
 103 run: reply result:address:duplex-list
9999 mem: location 1412 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 1120
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1117 is 4
9999 mem: storing 5 in location 1117
 102 run: loop 
9999 run: jumping to instruction 35
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1117 is 5
9999 mem: location 1116 is 7
9999 mem: storing 0 in location 1121
 102 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1117 is 5
9999 mem: location 1108 is 1098
9999 mem: location 1117 is 5
9999 run: address to copy is 1104
9999 run: its type is character
9999 mem: location 1104 is 101
9999 mem: storing 101 in location 1119
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1119 is 101
9999 mem: location 1120 is 1406
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1440
 103 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1442
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1406 in location 1443
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1471
9999 mem: storing 1471 in location 1444
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1444 is 1471
9999 mem: location 1471 is 0
9999 mem: location 1472 is 0
9999 mem: location 1473 is 0
9999 mem: location 1444 is 1471
9999 run: address to copy is 1471
9999 mem: storing 1471 in location 1445
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1442 is 101
9999 mem: location 1445 is 1471
9999 mem: storing 101 in location 1471
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1443 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 1443 is 1406
9999 run: address to copy is 1407
9999 run: its type is address
9999 mem: location 1407 is 0
9999 mem: storing 0 in location 1446
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1443 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 0
9999 mem: location 1408 is 1341
9999 mem: location 1443 is 1406
9999 run: address to copy is 1407
9999 mem: storing 1407 in location 1447
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1444 is 1471
9999 mem: location 1447 is 1407
9999 mem: storing 1471 in location 1407
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1444 is 1471
9999 mem: location 1471 is 101
9999 mem: location 1472 is 0
9999 mem: location 1473 is 0
9999 mem: location 1444 is 1471
9999 run: address to copy is 1473
9999 mem: storing 1473 in location 1447
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1443 is 1406
9999 mem: location 1447 is 1473
9999 mem: storing 1406 in location 1473
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1444 is 1471
9999 mem: location 1471 is 101
9999 mem: location 1472 is 0
9999 mem: location 1473 is 1406
9999 mem: location 1444 is 1471
9999 run: address to copy is 1472
9999 mem: storing 1472 in location 1447
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1446 is 0
9999 mem: location 1447 is 1472
9999 mem: storing 0 in location 1472
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1446 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1444 is 1471
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1120 is 1406
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1474
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1406 in location 1476
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1476 is 1406
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1476 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 1471
9999 mem: location 1408 is 1341
9999 mem: location 1476 is 1406
9999 run: address to copy is 1407
9999 run: its type is address
9999 mem: location 1407 is 1471
9999 mem: storing 1471 in location 1477
 103 run: reply result:address:duplex-list
9999 mem: location 1477 is 1471
9999 run: result 0 is 1471
9999 mem: storing 1471 in location 1120
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1117 is 5
9999 mem: storing 6 in location 1117
 102 run: loop 
9999 run: jumping to instruction 35
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1117 is 6
9999 mem: location 1116 is 7
9999 mem: storing 0 in location 1121
 102 run: break-if done?:boolean, 
9999 mem: location 1121 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1117 is 6
9999 mem: location 1108 is 1098
9999 mem: location 1117 is 6
9999 run: address to copy is 1105
9999 run: its type is character
9999 mem: location 1105 is 102
9999 mem: storing 102 in location 1119
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1119 is 102
9999 mem: location 1120 is 1471
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1505
 103 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 1507
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1471 in location 1508
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1536
9999 mem: storing 1536 in location 1509
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1509 is 1536
9999 mem: location 1536 is 0
9999 mem: location 1537 is 0
9999 mem: location 1538 is 0
9999 mem: location 1509 is 1536
9999 run: address to copy is 1536
9999 mem: storing 1536 in location 1510
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1507 is 102
9999 mem: location 1510 is 1536
9999 mem: storing 102 in location 1536
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1508 is 1471
9999 mem: location 1471 is 101
9999 mem: location 1472 is 0
9999 mem: location 1473 is 1406
9999 mem: location 1508 is 1471
9999 run: address to copy is 1472
9999 run: its type is address
9999 mem: location 1472 is 0
9999 mem: storing 0 in location 1511
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1508 is 1471
9999 mem: location 1471 is 101
9999 mem: location 1472 is 0
9999 mem: location 1473 is 1406
9999 mem: location 1508 is 1471
9999 run: address to copy is 1472
9999 mem: storing 1472 in location 1512
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1509 is 1536
9999 mem: location 1512 is 1472
9999 mem: storing 1536 in location 1472
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1509 is 1536
9999 mem: location 1536 is 102
9999 mem: location 1537 is 0
9999 mem: location 1538 is 0
9999 mem: location 1509 is 1536
9999 run: address to copy is 1538
9999 mem: storing 1538 in location 1512
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1508 is 1471
9999 mem: location 1512 is 1538
9999 mem: storing 1471 in location 1538
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1509 is 1536
9999 mem: location 1536 is 102
9999 mem: location 1537 is 0
9999 mem: location 1538 is 1471
9999 mem: location 1509 is 1536
9999 run: address to copy is 1537
9999 mem: storing 1537 in location 1512
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1511 is 0
9999 mem: location 1512 is 1537
9999 mem: storing 0 in location 1537
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1511 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1509 is 1536
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1120 is 1471
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1539
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1471 in location 1541
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1541 is 1471
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1541 is 1471
9999 mem: location 1471 is 101
9999 mem: location 1472 is 1536
9999 mem: location 1473 is 1406
9999 mem: location 1541 is 1471
9999 run: address to copy is 1472
9999 run: its type is address
9999 mem: location 1472 is 1536
9999 mem: storing 1536 in location 1542
 103 run: reply result:address:duplex-list
9999 mem: location 1542 is 1536
9999 run: result 0 is 1536
9999 mem: storing 1536 in location 1120
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1117 is 6
9999 mem: storing 7 in location 1117
 102 run: loop 
9999 run: jumping to instruction 35
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1117 is 7
9999 mem: location 1116 is 7
9999 mem: storing 1 in location 1121
 102 run: break-if done?:boolean, 
9999 mem: location 1121 is 1
9999 run: jumping to instruction 42
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, cursor:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1178
9999 mem: location 1139 is 0
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1122
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1118 is 1138
9999 mem: location 1138 is 1178
9999 mem: location 1122 is 1139
9999 mem: storing 1178 in location 1139
 102 run: bottom:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1178
9999 mem: location 1139 is 1178
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1123
 102 run: bottom:address:number/deref, screen:address <- render result:address:editor-data, screen:address, top:number, left:number, right:number
9999 mem: location 1113 is 1137
9999 mem: location 1109 is 1031
9999 mem: location 1110 is 0
9999 mem: location 1111 is 0
9999 mem: location 1112 is 4
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1570
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1137 in location 1572
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1573
 103 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1574
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1575
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1573 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1601
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1603
 104 run: break-unless x:address:screen, 
9999 mem: location 1603 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1603 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1603 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1604
 104 run: reply height:number
9999 mem: location 1604 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1576
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1577
 103 run: cursor:address:duplex-list <- get editor:address:editor-data/deref, cursor:offset
9999 mem: location 1572 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1178
9999 mem: location 1139 is 1178
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1572 is 1137
9999 run: address to copy is 1139
9999 run: its type is address
9999 mem: location 1139 is 1178
9999 mem: storing 1178 in location 1578
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1572 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 1178
9999 mem: location 1139 is 1178
9999 mem: location 1140 is 1031
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 4
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1572 is 1137
9999 run: address to copy is 1138
9999 run: its type is address
9999 mem: location 1138 is 1178
9999 mem: storing 1178 in location 1579
 103 run: row:number <- copy top:number
9999 mem: location 1574 is 0
9999 mem: storing 0 in location 1580
 103 run: column:number <- copy left:number
9999 mem: location 1575 is 0
9999 mem: storing 0 in location 1581
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1573 is 1031
9999 mem: location 1580 is 0
9999 mem: location 1581 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1632
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1634
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1635
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1636
 104 run: break-unless x:address:screen, 
9999 mem: location 1634 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1634 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1634 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1637
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1635 is 0
9999 mem: location 1637 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1634 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1634 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1638
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1636 is 0
9999 mem: location 1638 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1634 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1579 is 1178
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1580 is 0
9999 mem: location 1576 is 3
9999 mem: storing 0 in location 1582
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1582 is 0
9999 run: jump-if fell through
 103 run: at-cursor?:boolean <- equal curr:address:duplex-list, cursor:address:duplex-list
9999 mem: location 1579 is 1178
9999 mem: location 1578 is 1178
9999 mem: storing 1 in location 1583
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1583 is 1
9999 run: jump-unless fell through
 103 run: cursor-row:number <- copy row:number
9999 mem: location 1580 is 0
9999 mem: storing 0 in location 1584
 103 run: cursor-column:number <- copy column:number
9999 mem: location 1581 is 0
9999 mem: storing 0 in location 1585
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1579 is 1178
9999 mem: location 1178 is 97
9999 mem: location 1179 is 1211
9999 mem: location 1180 is 30
9999 mem: location 1579 is 1178
9999 run: address to copy is 1178
9999 run: its type is number
9999 mem: location 1178 is 97
9999 mem: storing 97 in location 1586
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1586 is 97
9999 mem: storing 0 in location 1587
 103 run: break-unless newline?:boolean, 
9999 mem: location 1587 is 0
9999 run: jumping to instruction 32
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1581 is 0
9999 mem: location 1577 is 4
9999 mem: storing 0 in location 1588
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1588 is 0
9999 run: jumping to instruction 46
 103 run: print-character screen:address, c:character
9999 mem: location 1573 is 1031
9999 mem: location 1586 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1663
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1665
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1666
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1667
9999 mem: storing 0 in location 1668
 104 run: break-if color-found?:boolean, 
9999 mem: location 1668 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1667
 104 run: break-unless x:address:screen, 
9999 mem: location 1665 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1665 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1665 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1669
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1665 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1665 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1670
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1665 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1665 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1671
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1665 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1665 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1672
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1666 is 97
9999 mem: storing 0 in location 1673
 104 run: break-unless newline?:boolean, 
9999 mem: location 1673 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1669 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1671 is 5
9999 mem: storing 0 in location 1676
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1676 is 0
9999 mem: location 1670 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 1676
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1665 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1665 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1677
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1666 is 97
9999 mem: storing 0 in location 1678
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1678 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1677 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1676 is 0
9999 mem: location 1677 is 1036
9999 mem: location 1676 is 0
9999 mem: storing 1037 in location 1680
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1680 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1680 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1681
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1680 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1680 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1682
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1666 is 97
9999 mem: location 1681 is 1037
9999 mem: storing 97 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1667 is 7
9999 mem: location 1682 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1671 is 5
9999 mem: storing 4 in location 1683
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1670 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1683 is 4
9999 mem: storing 0 in location 1684
 104 run: break-if at-right?:boolean, 
9999 mem: location 1684 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1670 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1670 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1665 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1579 is 1178
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1694
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1178 in location 1696
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1696 is 1178
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1696 is 1178
9999 mem: location 1178 is 97
9999 mem: location 1179 is 1211
9999 mem: location 1180 is 30
9999 mem: location 1696 is 1178
9999 run: address to copy is 1179
9999 run: its type is address
9999 mem: location 1179 is 1211
9999 mem: storing 1211 in location 1697
 104 run: reply result:address:duplex-list
9999 mem: location 1697 is 1211
9999 run: result 0 is 1211
9999 mem: storing 1211 in location 1579
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1581 is 0
9999 mem: storing 1 in location 1581
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1579 is 1211
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1580 is 0
9999 mem: location 1576 is 3
9999 mem: storing 0 in location 1582
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1582 is 0
9999 run: jump-if fell through
 103 run: at-cursor?:boolean <- equal curr:address:duplex-list, cursor:address:duplex-list
9999 mem: location 1579 is 1211
9999 mem: location 1578 is 1178
9999 mem: storing 0 in location 1583
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1583 is 0
9999 run: jumping to instruction 22
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1579 is 1211
9999 mem: location 1211 is 98
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1178
9999 mem: location 1579 is 1211
9999 run: address to copy is 1211
9999 run: its type is number
9999 mem: location 1211 is 98
9999 mem: storing 98 in location 1586
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1586 is 98
9999 mem: storing 0 in location 1587
 103 run: break-unless newline?:boolean, 
9999 mem: location 1587 is 0
9999 run: jumping to instruction 32
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1581 is 1
9999 mem: location 1577 is 4
9999 mem: storing 0 in location 1588
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1588 is 0
9999 run: jumping to instruction 46
 103 run: print-character screen:address, c:character
9999 mem: location 1573 is 1031
9999 mem: location 1586 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1725
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1727
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1728
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1729
9999 mem: storing 0 in location 1730
 104 run: break-if color-found?:boolean, 
9999 mem: location 1730 is 0
9999 run: jump-if fell through
schedule: print-character/render/new-editor/run1001/editor-initially-wraps-long-lines
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1729
 104 run: break-unless x:address:screen, 
9999 mem: location 1727 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1727 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1727 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1731
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1727 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1727 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1732
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1727 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1727 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1733
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1727 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1727 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1734
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1728 is 98
9999 mem: storing 0 in location 1735
 104 run: break-unless newline?:boolean, 
9999 mem: location 1735 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1731 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1733 is 5
9999 mem: storing 0 in location 1738
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1738 is 0
9999 mem: location 1732 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 1738
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1727 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1727 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1739
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1728 is 98
9999 mem: storing 0 in location 1740
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1740 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1739 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1738 is 1
9999 mem: location 1739 is 1036
9999 mem: location 1738 is 1
9999 mem: storing 1039 in location 1742
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1742 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1742 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1743
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1742 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1742 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1744
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1728 is 98
9999 mem: location 1743 is 1039
9999 mem: storing 98 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1729 is 7
9999 mem: location 1744 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1733 is 5
9999 mem: storing 4 in location 1745
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1732 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1745 is 4
9999 mem: storing 0 in location 1746
 104 run: break-if at-right?:boolean, 
9999 mem: location 1746 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1732 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1732 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1727 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1579 is 1211
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1756
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1211 in location 1758
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1758 is 1211
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1758 is 1211
9999 mem: location 1211 is 98
9999 mem: location 1212 is 1276
9999 mem: location 1213 is 1178
9999 mem: location 1758 is 1211
9999 run: address to copy is 1212
9999 run: its type is address
9999 mem: location 1212 is 1276
9999 mem: storing 1276 in location 1759
 104 run: reply result:address:duplex-list
9999 mem: location 1759 is 1276
9999 run: result 0 is 1276
9999 mem: storing 1276 in location 1579
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1581 is 1
9999 mem: storing 2 in location 1581
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1579 is 1276
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1580 is 0
9999 mem: location 1576 is 3
9999 mem: storing 0 in location 1582
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1582 is 0
9999 run: jump-if fell through
 103 run: at-cursor?:boolean <- equal curr:address:duplex-list, cursor:address:duplex-list
9999 mem: location 1579 is 1276
9999 mem: location 1578 is 1178
9999 mem: storing 0 in location 1583
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1583 is 0
9999 run: jumping to instruction 22
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1579 is 1276
9999 mem: location 1276 is 99
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 1579 is 1276
9999 run: address to copy is 1276
9999 run: its type is number
9999 mem: location 1276 is 99
9999 mem: storing 99 in location 1586
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1586 is 99
9999 mem: storing 0 in location 1587
 103 run: break-unless newline?:boolean, 
9999 mem: location 1587 is 0
9999 run: jumping to instruction 32
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1581 is 2
9999 mem: location 1577 is 4
9999 mem: storing 0 in location 1588
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1588 is 0
9999 run: jumping to instruction 46
 103 run: print-character screen:address, c:character
9999 mem: location 1573 is 1031
9999 mem: location 1586 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1787
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1789
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1790
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1791
9999 mem: storing 0 in location 1792
 104 run: break-if color-found?:boolean, 
9999 mem: location 1792 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1791
 104 run: break-unless x:address:screen, 
9999 mem: location 1789 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1789 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1789 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1793
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1789 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1789 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1794
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1789 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1789 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1795
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1789 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1789 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1796
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1790 is 99
9999 mem: storing 0 in location 1797
 104 run: break-unless newline?:boolean, 
9999 mem: location 1797 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1793 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1795 is 5
9999 mem: storing 0 in location 1800
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1800 is 0
9999 mem: location 1794 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 1800
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1789 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1789 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1801
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1790 is 99
9999 mem: storing 0 in location 1802
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1802 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1801 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1800 is 2
9999 mem: location 1801 is 1036
9999 mem: location 1800 is 2
9999 mem: storing 1041 in location 1804
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1804 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1804 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1805
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1804 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1804 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1806
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1790 is 99
9999 mem: location 1805 is 1041
9999 mem: storing 99 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1791 is 7
9999 mem: location 1806 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1795 is 5
9999 mem: storing 4 in location 1807
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1794 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1807 is 4
9999 mem: storing 0 in location 1808
 104 run: break-if at-right?:boolean, 
9999 mem: location 1808 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1794 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1794 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1789 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1579 is 1276
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1818
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1276 in location 1820
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1820 is 1276
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1820 is 1276
9999 mem: location 1276 is 99
9999 mem: location 1277 is 1341
9999 mem: location 1278 is 1211
9999 mem: location 1820 is 1276
9999 run: address to copy is 1277
9999 run: its type is address
9999 mem: location 1277 is 1341
9999 mem: storing 1341 in location 1821
 104 run: reply result:address:duplex-list
9999 mem: location 1821 is 1341
9999 run: result 0 is 1341
9999 mem: storing 1341 in location 1579
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1581 is 2
9999 mem: storing 3 in location 1581
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1579 is 1341
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1580 is 0
9999 mem: location 1576 is 3
9999 mem: storing 0 in location 1582
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1582 is 0
9999 run: jump-if fell through
 103 run: at-cursor?:boolean <- equal curr:address:duplex-list, cursor:address:duplex-list
9999 mem: location 1579 is 1341
9999 mem: location 1578 is 1178
9999 mem: storing 0 in location 1583
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1583 is 0
9999 run: jumping to instruction 22
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1579 is 1341
9999 mem: location 1341 is 32
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 1579 is 1341
9999 run: address to copy is 1341
9999 run: its type is number
9999 mem: location 1341 is 32
9999 mem: storing 32 in location 1586
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1586 is 32
9999 mem: storing 0 in location 1587
 103 run: break-unless newline?:boolean, 
9999 mem: location 1587 is 0
9999 run: jumping to instruction 32
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1581 is 3
9999 mem: location 1577 is 4
9999 mem: storing 0 in location 1588
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1588 is 0
9999 run: jumping to instruction 46
 103 run: print-character screen:address, c:character
9999 mem: location 1573 is 1031
9999 mem: location 1586 is 32
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1849
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1851
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 1852
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1853
9999 mem: storing 0 in location 1854
 104 run: break-if color-found?:boolean, 
9999 mem: location 1854 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1853
 104 run: break-unless x:address:screen, 
9999 mem: location 1851 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1851 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1851 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1855
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1851 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1851 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1856
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1851 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1851 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1857
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1851 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1851 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1858
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1852 is 32
9999 mem: storing 0 in location 1859
 104 run: break-unless newline?:boolean, 
9999 mem: location 1859 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1855 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1857 is 5
9999 mem: storing 0 in location 1862
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1862 is 0
9999 mem: location 1856 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 1862
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1851 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1851 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1863
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1852 is 32
9999 mem: storing 0 in location 1864
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1864 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1863 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1862 is 3
9999 mem: location 1863 is 1036
9999 mem: location 1862 is 3
9999 mem: storing 1043 in location 1866
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1866 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1866 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1867
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1866 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1866 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1868
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1852 is 32
9999 mem: location 1867 is 1043
9999 mem: storing 32 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1853 is 7
9999 mem: location 1868 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1857 is 5
9999 mem: storing 4 in location 1869
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1856 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1869 is 4
9999 mem: storing 0 in location 1870
 104 run: break-if at-right?:boolean, 
9999 mem: location 1870 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1856 is 1034
9999 mem: location 1034 is 3
9999 mem: location 1856 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1851 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1579 is 1341
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1880
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1341 in location 1882
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1882 is 1341
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1882 is 1341
9999 mem: location 1341 is 32
9999 mem: location 1342 is 1406
9999 mem: location 1343 is 1276
9999 mem: location 1882 is 1341
9999 run: address to copy is 1342
9999 run: its type is address
9999 mem: location 1342 is 1406
9999 mem: storing 1406 in location 1883
 104 run: reply result:address:duplex-list
9999 mem: location 1883 is 1406
9999 run: result 0 is 1406
9999 mem: storing 1406 in location 1579
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1581 is 3
9999 mem: storing 4 in location 1581
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1579 is 1406
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1580 is 0
9999 mem: location 1576 is 3
9999 mem: storing 0 in location 1582
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1582 is 0
9999 run: jump-if fell through
 103 run: at-cursor?:boolean <- equal curr:address:duplex-list, cursor:address:duplex-list
9999 mem: location 1579 is 1406
9999 mem: location 1578 is 1178
9999 mem: storing 0 in location 1583
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1583 is 0
9999 run: jumping to instruction 22
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1579 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 1471
9999 mem: location 1408 is 1341
9999 mem: location 1579 is 1406
9999 run: address to copy is 1406
9999 run: its type is number
9999 mem: location 1406 is 100
9999 mem: storing 100 in location 1586
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1586 is 100
9999 mem: storing 0 in location 1587
 103 run: break-unless newline?:boolean, 
9999 mem: location 1587 is 0
9999 run: jumping to instruction 32
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1581 is 4
9999 mem: location 1577 is 4
9999 mem: storing 1 in location 1588
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1588 is 1
9999 run: jump-unless fell through
 103 run: next-node:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1579 is 1406
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1911
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1406 in location 1913
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1913 is 1406
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1913 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 1471
9999 mem: location 1408 is 1341
9999 mem: location 1913 is 1406
9999 run: address to copy is 1407
9999 run: its type is address
9999 mem: location 1407 is 1471
9999 mem: storing 1471 in location 1914
 104 run: reply result:address:duplex-list
9999 mem: location 1914 is 1471
9999 run: result 0 is 1471
9999 mem: storing 1471 in location 1589
 103 run: break-unless next-node:address:duplex-list, 
9999 mem: location 1589 is 1471
9999 run: jump-unless fell through
 103 run: next:character <- get next-node:address:duplex-list/deref, value:offset
9999 mem: location 1589 is 1471
9999 mem: location 1471 is 101
9999 mem: location 1472 is 1536
9999 mem: location 1473 is 1406
9999 mem: location 1589 is 1471
9999 run: address to copy is 1471
9999 run: its type is number
9999 mem: location 1471 is 101
9999 mem: storing 101 in location 1590
 103 run: next-character-is-newline?:boolean <- equal next:character, 10:literal/newline
9999 mem: location 1590 is 101
9999 mem: storing 0 in location 1591
 103 run: break-if next-character-is-newline?:boolean, 
9999 mem: location 1591 is 0
9999 run: jump-if fell through
 103 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 1573 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1942
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1944
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 1945
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 1946
9999 mem: storing 1 in location 1947
 104 run: break-if color-found?:boolean, 
9999 mem: location 1947 is 1
9999 run: jumping to instruction 7
 104 run: break-unless x:address:screen, 
9999 mem: location 1944 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1944 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1944 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1948
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1944 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1944 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1949
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1944 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1944 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1950
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1944 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1944 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1951
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1945 is 8617
9999 mem: storing 0 in location 1952
 104 run: break-unless newline?:boolean, 
9999 mem: location 1952 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1948 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1950 is 5
9999 mem: storing 0 in location 1955
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1955 is 0
9999 mem: location 1949 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 1955
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1944 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1944 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1956
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1945 is 8617
9999 mem: storing 0 in location 1957
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1957 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1956 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1955 is 4
9999 mem: location 1956 is 1036
9999 mem: location 1955 is 4
9999 mem: storing 1045 in location 1959
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1959 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1959 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1960
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1959 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1959 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1961
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1945 is 8617
9999 mem: location 1960 is 1045
9999 mem: storing 8617 in location 1045
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1946 is 245
9999 mem: location 1961 is 1046
9999 mem: storing 245 in location 1046
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1950 is 5
9999 mem: storing 4 in location 1962
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1949 is 1034
9999 mem: location 1034 is 4
9999 mem: location 1962 is 4
9999 mem: storing 1 in location 1963
 104 run: break-if at-right?:boolean, 
9999 mem: location 1963 is 1
9999 run: jumping to instruction 55
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1944 is 1031
 103 run: column:number <- copy left:number
9999 mem: location 1575 is 0
9999 mem: storing 0 in location 1581
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1580 is 0
9999 mem: storing 1 in location 1580
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1573 is 1031
9999 mem: location 1580 is 1
9999 mem: location 1581 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1973
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1975
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1976
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1977
 104 run: break-unless x:address:screen, 
9999 mem: location 1975 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1975 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1975 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1978
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1976 is 1
9999 mem: location 1978 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1975 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 1975 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1979
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1977 is 0
9999 mem: location 1979 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1975 is 1031
 103 run: loop +next-character:label
9999 run: jumping to instruction 14
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1579 is 1406
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1580 is 1
9999 mem: location 1576 is 3
9999 mem: storing 0 in location 1582
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1582 is 0
9999 run: jump-if fell through
 103 run: at-cursor?:boolean <- equal curr:address:duplex-list, cursor:address:duplex-list
9999 mem: location 1579 is 1406
9999 mem: location 1578 is 1178
9999 mem: storing 0 in location 1583
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1583 is 0
9999 run: jumping to instruction 22
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1579 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 1471
9999 mem: location 1408 is 1341
9999 mem: location 1579 is 1406
9999 run: address to copy is 1406
9999 run: its type is number
9999 mem: location 1406 is 100
9999 mem: storing 100 in location 1586
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1586 is 100
9999 mem: storing 0 in location 1587
 103 run: break-unless newline?:boolean, 
9999 mem: location 1587 is 0
9999 run: jumping to instruction 32
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1581 is 0
9999 mem: location 1577 is 4
9999 mem: storing 0 in location 1588
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1588 is 0
9999 run: jumping to instruction 46
 103 run: print-character screen:address, c:character
9999 mem: location 1573 is 1031
9999 mem: location 1586 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2004
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2006
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 2007
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2008
9999 mem: storing 0 in location 2009
 104 run: break-if color-found?:boolean, 
9999 mem: location 2009 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2008
 104 run: break-unless x:address:screen, 
9999 mem: location 2006 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2006 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2006 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2010
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2006 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2006 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2011
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2006 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2006 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2012
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2006 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2006 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2013
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2007 is 100
9999 mem: storing 0 in location 2014
 104 run: break-unless newline?:boolean, 
9999 mem: location 2014 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2010 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2012 is 5
9999 mem: storing 5 in location 2017
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2017 is 5
9999 mem: location 2011 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 2017
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2006 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2006 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2018
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2007 is 100
9999 mem: storing 0 in location 2019
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2019 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2018 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2017 is 5
9999 mem: location 2018 is 1036
9999 mem: location 2017 is 5
9999 mem: storing 1047 in location 2021
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2021 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 2021 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 2022
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2021 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 2021 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 2023
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2007 is 100
9999 mem: location 2022 is 1047
9999 mem: storing 100 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2008 is 7
9999 mem: location 2023 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2012 is 5
9999 mem: storing 4 in location 2024
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2011 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2024 is 4
9999 mem: storing 0 in location 2025
 104 run: break-if at-right?:boolean, 
9999 mem: location 2025 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2011 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2011 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2006 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1579 is 1406
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2035
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1406 in location 2037
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2037 is 1406
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2037 is 1406
9999 mem: location 1406 is 100
9999 mem: location 1407 is 1471
9999 mem: location 1408 is 1341
9999 mem: location 2037 is 1406
9999 run: address to copy is 1407
9999 run: its type is address
9999 mem: location 1407 is 1471
9999 mem: storing 1471 in location 2038
 104 run: reply result:address:duplex-list
9999 mem: location 2038 is 1471
9999 run: result 0 is 1471
9999 mem: storing 1471 in location 1579
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1581 is 0
9999 mem: storing 1 in location 1581
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1579 is 1471
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1580 is 1
9999 mem: location 1576 is 3
9999 mem: storing 0 in location 1582
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1582 is 0
9999 run: jump-if fell through
 103 run: at-cursor?:boolean <- equal curr:address:duplex-list, cursor:address:duplex-list
9999 mem: location 1579 is 1471
9999 mem: location 1578 is 1178
9999 mem: storing 0 in location 1583
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1583 is 0
9999 run: jumping to instruction 22
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1579 is 1471
9999 mem: location 1471 is 101
9999 mem: location 1472 is 1536
9999 mem: location 1473 is 1406
9999 mem: location 1579 is 1471
9999 run: address to copy is 1471
9999 run: its type is number
9999 mem: location 1471 is 101
9999 mem: storing 101 in location 1586
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1586 is 101
9999 mem: storing 0 in location 1587
 103 run: break-unless newline?:boolean, 
9999 mem: location 1587 is 0
9999 run: jumping to instruction 32
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1581 is 1
9999 mem: location 1577 is 4
9999 mem: storing 0 in location 1588
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1588 is 0
9999 run: jumping to instruction 46
 103 run: print-character screen:address, c:character
9999 mem: location 1573 is 1031
9999 mem: location 1586 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2066
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2068
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2069
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2070
9999 mem: storing 0 in location 2071
 104 run: break-if color-found?:boolean, 
9999 mem: location 2071 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2070
 104 run: break-unless x:address:screen, 
9999 mem: location 2068 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2068 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2068 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2072
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2068 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2068 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2073
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2068 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2068 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2074
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2068 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2068 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2075
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2069 is 101
9999 mem: storing 0 in location 2076
 104 run: break-unless newline?:boolean, 
9999 mem: location 2076 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2072 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2074 is 5
9999 mem: storing 5 in location 2079
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2079 is 5
9999 mem: location 2073 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 2079
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2068 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2068 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2080
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2069 is 101
9999 mem: storing 0 in location 2081
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2081 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2080 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2079 is 6
9999 mem: location 2080 is 1036
9999 mem: location 2079 is 6
9999 mem: storing 1049 in location 2083
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2083 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2083 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 2084
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2083 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2083 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 2085
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2069 is 101
9999 mem: location 2084 is 1049
9999 mem: storing 101 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2070 is 7
9999 mem: location 2085 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2074 is 5
9999 mem: storing 4 in location 2086
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2073 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2086 is 4
9999 mem: storing 0 in location 2087
 104 run: break-if at-right?:boolean, 
9999 mem: location 2087 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2073 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2073 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2068 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1579 is 1471
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2097
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1471 in location 2099
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2099 is 1471
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2099 is 1471
9999 mem: location 1471 is 101
9999 mem: location 1472 is 1536
9999 mem: location 1473 is 1406
9999 mem: location 2099 is 1471
9999 run: address to copy is 1472
9999 run: its type is address
9999 mem: location 1472 is 1536
9999 mem: storing 1536 in location 2100
 104 run: reply result:address:duplex-list
9999 mem: location 2100 is 1536
9999 run: result 0 is 1536
9999 mem: storing 1536 in location 1579
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1581 is 1
9999 mem: storing 2 in location 1581
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1579 is 1536
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1580 is 1
9999 mem: location 1576 is 3
9999 mem: storing 0 in location 1582
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1582 is 0
9999 run: jump-if fell through
 103 run: at-cursor?:boolean <- equal curr:address:duplex-list, cursor:address:duplex-list
9999 mem: location 1579 is 1536
9999 mem: location 1578 is 1178
9999 mem: storing 0 in location 1583
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1583 is 0
9999 run: jumping to instruction 22
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1579 is 1536
9999 mem: location 1536 is 102
9999 mem: location 1537 is 0
9999 mem: location 1538 is 1471
9999 mem: location 1579 is 1536
9999 run: address to copy is 1536
9999 run: its type is number
9999 mem: location 1536 is 102
9999 mem: storing 102 in location 1586
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1586 is 102
9999 mem: storing 0 in location 1587
 103 run: break-unless newline?:boolean, 
9999 mem: location 1587 is 0
9999 run: jumping to instruction 32
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1581 is 2
9999 mem: location 1577 is 4
9999 mem: storing 0 in location 1588
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1588 is 0
9999 run: jumping to instruction 46
 103 run: print-character screen:address, c:character
9999 mem: location 1573 is 1031
9999 mem: location 1586 is 102
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2128
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2130
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 2131
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2132
9999 mem: storing 0 in location 2133
 104 run: break-if color-found?:boolean, 
9999 mem: location 2133 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2132
 104 run: break-unless x:address:screen, 
9999 mem: location 2130 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2130 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2130 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2134
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2130 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2130 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2135
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2130 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2130 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2136
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2130 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2130 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2137
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2131 is 102
9999 mem: storing 0 in location 2138
 104 run: break-unless newline?:boolean, 
9999 mem: location 2138 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2134 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2136 is 5
9999 mem: storing 5 in location 2141
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2141 is 5
9999 mem: location 2135 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 2141
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2130 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2130 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2142
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2131 is 102
9999 mem: storing 0 in location 2143
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2143 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2142 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2141 is 7
9999 mem: location 2142 is 1036
9999 mem: location 2141 is 7
9999 mem: storing 1051 in location 2145
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2145 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2145 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 2146
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2145 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2145 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 2147
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2131 is 102
9999 mem: location 2146 is 1051
9999 mem: storing 102 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2132 is 7
9999 mem: location 2147 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2136 is 5
9999 mem: storing 4 in location 2148
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2135 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2148 is 4
9999 mem: storing 0 in location 2149
 104 run: break-if at-right?:boolean, 
9999 mem: location 2149 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2135 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2135 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2130 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1579 is 1536
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2159
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1536 in location 2161
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2161 is 1536
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2161 is 1536
9999 mem: location 1536 is 102
9999 mem: location 1537 is 0
9999 mem: location 1538 is 1471
9999 mem: location 2161 is 1536
9999 run: address to copy is 1537
9999 run: its type is address
9999 mem: location 1537 is 0
9999 mem: storing 0 in location 2162
 104 run: reply result:address:duplex-list
9999 mem: location 2162 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1579
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1581 is 2
9999 mem: storing 3 in location 1581
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1579 is 0
9999 run: jumping to instruction 51
 103 run: move-cursor screen:address, cursor-row:number, cursor-column:number
9999 mem: location 1573 is 1031
9999 mem: location 1584 is 0
9999 mem: location 1585 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2190
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2192
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2193
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2194
 104 run: break-unless x:address:screen, 
9999 mem: location 2192 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2192 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2192 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2195
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2193 is 0
9999 mem: location 2195 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2192 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2192 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2196
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2194 is 0
9999 mem: location 2196 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2192 is 1031
 103 run: reply row:number, screen:address/same-as-ingredient:1
9999 mem: location 1580 is 1
9999 mem: location 1573 is 1031
9999 run: result 0 is 1
9999 run: result 1 is 1031
9999 mem: location 1123 is 1143
9999 mem: storing 1 in location 1143
9999 mem: storing 1031 in location 1109
 102 run: reply result:address:editor-data
9999 mem: location 1113 is 1137
 100 run: screen-should-contain [
    .abc â†©.
    .def  .
    .     .
  ]
 100 run: screen-should-contain-in-color 245:literal/grey, [
    .    â†©.
    .     .
    .     .
  ]
