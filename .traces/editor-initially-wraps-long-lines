parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abc def]\n    new-editor s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .abc â†©.\n    .def  .\n    .     .\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain-in-color
parse:   ingredient: {name: "245", properties: ["245": "literal", "grey": ]}
parse:   ingredient: {name: "\n    .    â†©.\n    .     .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe editor-initially-wraps-long-lines
after-brace: new-fake-screen ...
after-brace: run ...
after-brace: screen-should-contain ...
after-brace: screen-should-contain-in-color ...
9999 new: routine allocated memory from 1000 to 101000
schedule: editor-initially-wraps-long-lines
 101 run: screen:address <- new-fake-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1069
 103 run: break-unless x:address:screen, 
9999 mem: location 1069 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1070
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1070 is 1036
9999 mem: storing 15 in location 1071
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1072
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 0
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 0
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 0
9999 mem: storing 1037 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 0
9999 mem: storing 1 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 1
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 1
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 1
9999 mem: storing 1039 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 1
9999 mem: storing 2 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 2
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 2
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 2
9999 mem: storing 1041 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 2
9999 mem: storing 3 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 3
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 3
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 3
9999 mem: storing 1043 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 3
9999 mem: storing 4 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 4
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 4
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 4
9999 mem: storing 1045 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 4
9999 mem: storing 5 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 5
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 5
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 5
9999 mem: storing 1047 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 5
9999 mem: storing 6 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 6
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 6
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 6
9999 mem: storing 1049 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 6
9999 mem: storing 7 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 7
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 7
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 7
9999 mem: storing 1051 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 7
9999 mem: storing 8 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 8
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 8
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 8
9999 mem: storing 1053 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 8
9999 mem: storing 9 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 9
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 9
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 9
9999 mem: storing 1055 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 9
9999 mem: storing 10 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 10
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 10
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 10
9999 mem: storing 1057 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 10
9999 mem: storing 11 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 11
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 11
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 11
9999 mem: storing 1059 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 11
9999 mem: storing 12 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 12
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 12
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 12
9999 mem: storing 1061 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 12
9999 mem: storing 13 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 13
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 13
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 13
9999 mem: storing 1063 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 13
9999 mem: storing 14 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 14
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 14
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 14
9999 mem: storing 1065 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 14
9999 mem: storing 15 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 15
9999 mem: location 1071 is 15
9999 mem: storing 1 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1069 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: run [
    s:address:array:character <- new [abc def]
    new-editor s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right
  ]
parse: instruction: new
parse:   ingredient: {name: "abc def", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: new-editor
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "top": ]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
name: assign s 1
after-brace: recipe run1001
after-brace: new ...
after-brace: new-editor ...
 101 run: s:address:array:character <- new [abc def]
9999 mem: storing 1098 in location 1
 101 run: new-editor s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 5:literal/right
9999 mem: location 1 is 1098
9999 mem: location 900 is 1031
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1106
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1098 in location 1108
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1109
 102 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1110
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1111
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1112
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1112 is 5
9999 mem: storing 4 in location 1112
 102 run: result:address:editor-data <- new editor-data:type
9999 mem: new alloc: 1137
9999 mem: storing 1137 in location 1113
 102 run: sc:address:address:screen <- get-address result:address:editor-data/deref, screen:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 0
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1142
9999 mem: storing 1142 in location 1114
 102 run: sc:address:address:screen/deref <- copy screen:address
9999 mem: location 1109 is 1031
9999 mem: location 1114 is 1142
9999 mem: storing 1031 in location 1142
 102 run: x:address:number <- get-address result:address:editor-data/deref, top:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1143
9999 mem: storing 1143 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1143
9999 mem: storing 0 in location 1143
 102 run: x:address:number <- get-address result:address:editor-data/deref, left:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1144
9999 mem: storing 1144 in location 1115
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1111 is 0
9999 mem: location 1115 is 1144
9999 mem: storing 0 in location 1144
 102 run: x:address:number <- get-address result:address:editor-data/deref, right:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 0
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1146
9999 mem: storing 1146 in location 1115
 102 run: x:address:number/deref <- copy right:number
9999 mem: location 1112 is 4
9999 mem: location 1115 is 1146
9999 mem: storing 4 in location 1146
 102 run: x:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1145
9999 mem: storing 0 in location 1145
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-row:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1147
9999 mem: storing 1147 in location 1115
 102 run: x:address:number/deref <- copy top:number
9999 mem: location 1110 is 0
9999 mem: location 1115 is 1147
9999 mem: storing 0 in location 1147
 102 run: x:address:number <- get-address result:address:editor-data/deref, cursor-column:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1115
 102 run: response:address:address:array:character <- get-address result:address:editor-data/deref, response:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1140
9999 mem: storing 1140 in location 1116
 102 run: response:address:address:array:character/deref <- copy 0:literal
9999 mem: location 1116 is 1140
9999 mem: storing 0 in location 1140
 102 run: warnings:address:address:array:character <- get-address result:address:editor-data/deref, warnings:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1141
9999 mem: storing 1141 in location 1117
 102 run: warnings:address:address:array:character/deref <- copy 0:literal
9999 mem: location 1117 is 1141
9999 mem: storing 0 in location 1141
 102 run: x:address:number/deref <- copy left:number
9999 mem: location 1111 is 0
9999 mem: location 1115 is 1148
9999 mem: storing 0 in location 1148
 102 run: d:address:address:duplex-list <- get-address result:address:editor-data/deref, data:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 0
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1137
9999 mem: storing 1137 in location 1118
 102 run: d:address:address:duplex-list/deref <- push-duplex 167:literal/Â§, 0:literal/tail
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1152
 103 run: x:location <- next-ingredient 
9999 mem: storing 167 in location 1154
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 0 in location 1155
 103 run: result:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1183
9999 mem: storing 1183 in location 1156
 103 run: val:address:location <- get-address result:address:duplex-list/deref, value:offset
9999 mem: location 1156 is 1183
9999 mem: location 1183 is 0
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1156 is 1183
9999 run: address to copy is 1183
9999 mem: storing 1183 in location 1157
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1154 is 167
9999 mem: location 1157 is 1183
9999 mem: storing 167 in location 1183
 103 run: next:address:address:duplex-list <- get-address result:address:duplex-list/deref, next:offset
9999 mem: location 1156 is 1183
9999 mem: location 1183 is 167
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1156 is 1183
9999 run: address to copy is 1184
9999 mem: storing 1184 in location 1158
 103 run: next:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1155 is 0
9999 mem: location 1158 is 1184
9999 mem: storing 0 in location 1184
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1155 is 0
9999 run: jump-if fell through
 103 run: reply result:address:duplex-list
9999 mem: location 1156 is 1183
9999 run: result 0 is 1183
9999 mem: location 1118 is 1137
9999 mem: storing 1183 in location 1137
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 0
9999 mem: location 1139 is 0
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1119
 102 run: y:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1118 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1119 is 1139
9999 mem: storing 1183 in location 1139
 102 run: init:address:address:duplex-list <- get-address result:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 0
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1138
9999 mem: storing 1138 in location 1120
 102 run: init:address:address:duplex-list/deref <- copy d:address:address:duplex-list/deref
9999 mem: location 1118 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1120 is 1138
9999 mem: storing 1183 in location 1138
 102 run: b:address:boolean <- get-address result:address:editor-data/deref, in-focus?:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 0
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1150
9999 mem: storing 1150 in location 1121
 102 run: b:address:boolean/deref <- copy 1:literal/true
9999 mem: location 1121 is 1150
9999 mem: storing 1 in location 1150
 102 run: r:address:recipe-ordinal <- get-address result:address:editor-data/deref, respond:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 0
9999 mem: location 1113 is 1137
9999 run: address to copy is 1151
9999 mem: storing 1151 in location 1122
 102 run: r:address:recipe-ordinal/deref <- copy handle-event:recipe
9999 mem: location 1122 is 1151
9999 mem: storing 181 in location 1151
 102 run: jump-if s:address:array:character, 1:offset
9999 mem: location 1108 is 1098
9999 run: jumping to instruction 38
 102 run: len:number <- length s:address:array:character/deref
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1108 is 1098
9999 mem: storing 7 in location 1123
 102 run: jump-if len:number, 1:offset
9999 mem: location 1123 is 7
9999 run: jumping to instruction 41
 102 run: idx:number <- copy 0:literal
9999 mem: storing 0 in location 1124
 102 run: curr:address:duplex-list <- copy init:address:address:duplex-list/deref
9999 mem: location 1120 is 1138
9999 mem: location 1138 is 1183
9999 mem: storing 1183 in location 1125
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1124 is 0
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1126
 102 run: break-if done?:boolean, 
9999 mem: location 1126 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1124 is 0
9999 mem: location 1108 is 1098
9999 mem: location 1124 is 0
9999 run: address to copy is 1099
9999 run: its type is character
9999 mem: location 1099 is 97
9999 mem: storing 97 in location 1127
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1127 is 97
9999 mem: location 1125 is 1183
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1186
 103 run: x:location <- next-ingredient 
9999 mem: storing 97 in location 1188
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1189
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1217
9999 mem: storing 1217 in location 1190
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1190 is 1217
9999 mem: location 1217 is 0
9999 mem: location 1218 is 0
9999 mem: location 1219 is 0
9999 mem: location 1190 is 1217
9999 run: address to copy is 1217
9999 mem: storing 1217 in location 1191
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1188 is 97
9999 mem: location 1191 is 1217
9999 mem: storing 97 in location 1217
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1189 is 1183
9999 mem: location 1183 is 167
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1189 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 0
9999 mem: storing 0 in location 1192
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1189 is 1183
9999 mem: location 1183 is 167
9999 mem: location 1184 is 0
9999 mem: location 1185 is 0
9999 mem: location 1189 is 1183
9999 run: address to copy is 1184
9999 mem: storing 1184 in location 1193
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1190 is 1217
9999 mem: location 1193 is 1184
9999 mem: storing 1217 in location 1184
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1190 is 1217
9999 mem: location 1217 is 97
9999 mem: location 1218 is 0
9999 mem: location 1219 is 0
9999 mem: location 1190 is 1217
9999 run: address to copy is 1219
9999 mem: storing 1219 in location 1193
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1189 is 1183
9999 mem: location 1193 is 1219
9999 mem: storing 1183 in location 1219
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1190 is 1217
9999 mem: location 1217 is 97
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1183
9999 mem: location 1190 is 1217
9999 run: address to copy is 1218
9999 mem: storing 1218 in location 1193
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1192 is 0
9999 mem: location 1193 is 1218
9999 mem: storing 0 in location 1218
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1192 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1190 is 1217
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1125 is 1183
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1220
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1222
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1222 is 1183
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1222 is 1183
9999 mem: location 1183 is 167
9999 mem: location 1184 is 1217
9999 mem: location 1185 is 0
9999 mem: location 1222 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1217
9999 mem: storing 1217 in location 1223
 103 run: reply result:address:duplex-list
9999 mem: location 1223 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1125
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1124 is 0
9999 mem: storing 1 in location 1124
 102 run: loop 
9999 run: jumping to instruction 44
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1124 is 1
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1126
 102 run: break-if done?:boolean, 
9999 mem: location 1126 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1124 is 1
9999 mem: location 1108 is 1098
9999 mem: location 1124 is 1
9999 run: address to copy is 1100
9999 run: its type is character
9999 mem: location 1100 is 98
9999 mem: storing 98 in location 1127
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1127 is 98
9999 mem: location 1125 is 1217
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1251
 103 run: x:location <- next-ingredient 
9999 mem: storing 98 in location 1253
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1254
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1282
9999 mem: storing 1282 in location 1255
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1255 is 1282
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: location 1255 is 1282
9999 run: address to copy is 1282
9999 mem: storing 1282 in location 1256
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1253 is 98
9999 mem: location 1256 is 1282
9999 mem: storing 98 in location 1282
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1254 is 1217
9999 mem: location 1217 is 97
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1183
9999 mem: location 1254 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 0
9999 mem: storing 0 in location 1257
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1254 is 1217
9999 mem: location 1217 is 97
9999 mem: location 1218 is 0
9999 mem: location 1219 is 1183
9999 mem: location 1254 is 1217
9999 run: address to copy is 1218
9999 mem: storing 1218 in location 1258
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1255 is 1282
9999 mem: location 1258 is 1218
9999 mem: storing 1282 in location 1218
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1255 is 1282
9999 mem: location 1282 is 98
9999 mem: location 1283 is 0
9999 mem: location 1284 is 0
9999 mem: location 1255 is 1282
9999 run: address to copy is 1284
9999 mem: storing 1284 in location 1258
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1254 is 1217
9999 mem: location 1258 is 1284
9999 mem: storing 1217 in location 1284
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1255 is 1282
9999 mem: location 1282 is 98
9999 mem: location 1283 is 0
9999 mem: location 1284 is 1217
9999 mem: location 1255 is 1282
9999 run: address to copy is 1283
9999 mem: storing 1283 in location 1258
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1257 is 0
9999 mem: location 1258 is 1283
9999 mem: storing 0 in location 1283
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1257 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1255 is 1282
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1125 is 1217
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1285
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1287
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1287 is 1217
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1287 is 1217
9999 mem: location 1217 is 97
9999 mem: location 1218 is 1282
9999 mem: location 1219 is 1183
9999 mem: location 1287 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1282
9999 mem: storing 1282 in location 1288
 103 run: reply result:address:duplex-list
9999 mem: location 1288 is 1282
9999 run: result 0 is 1282
9999 mem: storing 1282 in location 1125
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1124 is 1
9999 mem: storing 2 in location 1124
 102 run: loop 
9999 run: jumping to instruction 44
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1124 is 2
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1126
 102 run: break-if done?:boolean, 
9999 mem: location 1126 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1124 is 2
9999 mem: location 1108 is 1098
9999 mem: location 1124 is 2
9999 run: address to copy is 1101
9999 run: its type is character
9999 mem: location 1101 is 99
9999 mem: storing 99 in location 1127
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1127 is 99
9999 mem: location 1125 is 1282
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1316
 103 run: x:location <- next-ingredient 
9999 mem: storing 99 in location 1318
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1282 in location 1319
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1347
9999 mem: storing 1347 in location 1320
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1320 is 1347
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: location 1320 is 1347
9999 run: address to copy is 1347
9999 mem: storing 1347 in location 1321
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1318 is 99
9999 mem: location 1321 is 1347
9999 mem: storing 99 in location 1347
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1319 is 1282
9999 mem: location 1282 is 98
9999 mem: location 1283 is 0
9999 mem: location 1284 is 1217
9999 mem: location 1319 is 1282
9999 run: address to copy is 1283
9999 run: its type is address
9999 mem: location 1283 is 0
9999 mem: storing 0 in location 1322
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1319 is 1282
9999 mem: location 1282 is 98
9999 mem: location 1283 is 0
9999 mem: location 1284 is 1217
9999 mem: location 1319 is 1282
9999 run: address to copy is 1283
9999 mem: storing 1283 in location 1323
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1320 is 1347
9999 mem: location 1323 is 1283
9999 mem: storing 1347 in location 1283
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1320 is 1347
9999 mem: location 1347 is 99
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: location 1320 is 1347
9999 run: address to copy is 1349
9999 mem: storing 1349 in location 1323
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1319 is 1282
9999 mem: location 1323 is 1349
9999 mem: storing 1282 in location 1349
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1320 is 1347
9999 mem: location 1347 is 99
9999 mem: location 1348 is 0
9999 mem: location 1349 is 1282
9999 mem: location 1320 is 1347
9999 run: address to copy is 1348
9999 mem: storing 1348 in location 1323
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1322 is 0
9999 mem: location 1323 is 1348
9999 mem: storing 0 in location 1348
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1322 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1320 is 1347
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1125 is 1282
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1350
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1282 in location 1352
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1352 is 1282
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1352 is 1282
9999 mem: location 1282 is 98
9999 mem: location 1283 is 1347
9999 mem: location 1284 is 1217
9999 mem: location 1352 is 1282
9999 run: address to copy is 1283
9999 run: its type is address
9999 mem: location 1283 is 1347
9999 mem: storing 1347 in location 1353
 103 run: reply result:address:duplex-list
9999 mem: location 1353 is 1347
9999 run: result 0 is 1347
9999 mem: storing 1347 in location 1125
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1124 is 2
9999 mem: storing 3 in location 1124
 102 run: loop 
9999 run: jumping to instruction 44
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1124 is 3
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1126
 102 run: break-if done?:boolean, 
9999 mem: location 1126 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1124 is 3
9999 mem: location 1108 is 1098
9999 mem: location 1124 is 3
9999 run: address to copy is 1102
9999 run: its type is character
9999 mem: location 1102 is 32
9999 mem: storing 32 in location 1127
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1127 is 32
9999 mem: location 1125 is 1347
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1381
 103 run: x:location <- next-ingredient 
9999 mem: storing 32 in location 1383
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1347 in location 1384
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1412
9999 mem: storing 1412 in location 1385
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1385 is 1412
9999 mem: location 1412 is 0
9999 mem: location 1413 is 0
9999 mem: location 1414 is 0
9999 mem: location 1385 is 1412
9999 run: address to copy is 1412
9999 mem: storing 1412 in location 1386
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1383 is 32
9999 mem: location 1386 is 1412
9999 mem: storing 32 in location 1412
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1384 is 1347
9999 mem: location 1347 is 99
9999 mem: location 1348 is 0
9999 mem: location 1349 is 1282
9999 mem: location 1384 is 1347
9999 run: address to copy is 1348
9999 run: its type is address
9999 mem: location 1348 is 0
9999 mem: storing 0 in location 1387
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1384 is 1347
9999 mem: location 1347 is 99
9999 mem: location 1348 is 0
9999 mem: location 1349 is 1282
9999 mem: location 1384 is 1347
9999 run: address to copy is 1348
9999 mem: storing 1348 in location 1388
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1385 is 1412
9999 mem: location 1388 is 1348
9999 mem: storing 1412 in location 1348
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1385 is 1412
9999 mem: location 1412 is 32
9999 mem: location 1413 is 0
9999 mem: location 1414 is 0
9999 mem: location 1385 is 1412
9999 run: address to copy is 1414
9999 mem: storing 1414 in location 1388
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1384 is 1347
9999 mem: location 1388 is 1414
9999 mem: storing 1347 in location 1414
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1385 is 1412
9999 mem: location 1412 is 32
9999 mem: location 1413 is 0
9999 mem: location 1414 is 1347
9999 mem: location 1385 is 1412
9999 run: address to copy is 1413
9999 mem: storing 1413 in location 1388
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1387 is 0
9999 mem: location 1388 is 1413
9999 mem: storing 0 in location 1413
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1387 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1385 is 1412
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1125 is 1347
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1415
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1347 in location 1417
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1417 is 1347
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1417 is 1347
9999 mem: location 1347 is 99
9999 mem: location 1348 is 1412
9999 mem: location 1349 is 1282
9999 mem: location 1417 is 1347
9999 run: address to copy is 1348
9999 run: its type is address
9999 mem: location 1348 is 1412
9999 mem: storing 1412 in location 1418
 103 run: reply result:address:duplex-list
9999 mem: location 1418 is 1412
9999 run: result 0 is 1412
9999 mem: storing 1412 in location 1125
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1124 is 3
9999 mem: storing 4 in location 1124
 102 run: loop 
9999 run: jumping to instruction 44
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1124 is 4
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1126
 102 run: break-if done?:boolean, 
9999 mem: location 1126 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1124 is 4
9999 mem: location 1108 is 1098
9999 mem: location 1124 is 4
9999 run: address to copy is 1103
9999 run: its type is character
9999 mem: location 1103 is 100
9999 mem: storing 100 in location 1127
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1127 is 100
9999 mem: location 1125 is 1412
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1446
 103 run: x:location <- next-ingredient 
9999 mem: storing 100 in location 1448
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1412 in location 1449
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1477
9999 mem: storing 1477 in location 1450
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1450 is 1477
9999 mem: location 1477 is 0
9999 mem: location 1478 is 0
9999 mem: location 1479 is 0
9999 mem: location 1450 is 1477
9999 run: address to copy is 1477
9999 mem: storing 1477 in location 1451
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1448 is 100
9999 mem: location 1451 is 1477
9999 mem: storing 100 in location 1477
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1449 is 1412
9999 mem: location 1412 is 32
9999 mem: location 1413 is 0
9999 mem: location 1414 is 1347
9999 mem: location 1449 is 1412
9999 run: address to copy is 1413
9999 run: its type is address
9999 mem: location 1413 is 0
9999 mem: storing 0 in location 1452
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1449 is 1412
9999 mem: location 1412 is 32
9999 mem: location 1413 is 0
9999 mem: location 1414 is 1347
9999 mem: location 1449 is 1412
9999 run: address to copy is 1413
9999 mem: storing 1413 in location 1453
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1450 is 1477
9999 mem: location 1453 is 1413
9999 mem: storing 1477 in location 1413
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1450 is 1477
9999 mem: location 1477 is 100
9999 mem: location 1478 is 0
9999 mem: location 1479 is 0
9999 mem: location 1450 is 1477
9999 run: address to copy is 1479
9999 mem: storing 1479 in location 1453
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1449 is 1412
9999 mem: location 1453 is 1479
9999 mem: storing 1412 in location 1479
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1450 is 1477
9999 mem: location 1477 is 100
9999 mem: location 1478 is 0
9999 mem: location 1479 is 1412
9999 mem: location 1450 is 1477
9999 run: address to copy is 1478
9999 mem: storing 1478 in location 1453
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1452 is 0
9999 mem: location 1453 is 1478
9999 mem: storing 0 in location 1478
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1452 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1450 is 1477
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1125 is 1412
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1480
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1412 in location 1482
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1482 is 1412
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1482 is 1412
9999 mem: location 1412 is 32
9999 mem: location 1413 is 1477
9999 mem: location 1414 is 1347
9999 mem: location 1482 is 1412
9999 run: address to copy is 1413
9999 run: its type is address
9999 mem: location 1413 is 1477
9999 mem: storing 1477 in location 1483
 103 run: reply result:address:duplex-list
9999 mem: location 1483 is 1477
9999 run: result 0 is 1477
9999 mem: storing 1477 in location 1125
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1124 is 4
9999 mem: storing 5 in location 1124
 102 run: loop 
9999 run: jumping to instruction 44
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1124 is 5
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1126
 102 run: break-if done?:boolean, 
9999 mem: location 1126 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1124 is 5
9999 mem: location 1108 is 1098
9999 mem: location 1124 is 5
9999 run: address to copy is 1104
9999 run: its type is character
9999 mem: location 1104 is 101
9999 mem: storing 101 in location 1127
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1127 is 101
9999 mem: location 1125 is 1477
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1511
 103 run: x:location <- next-ingredient 
9999 mem: storing 101 in location 1513
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1477 in location 1514
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1542
9999 mem: storing 1542 in location 1515
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1515 is 1542
9999 mem: location 1542 is 0
9999 mem: location 1543 is 0
9999 mem: location 1544 is 0
9999 mem: location 1515 is 1542
9999 run: address to copy is 1542
9999 mem: storing 1542 in location 1516
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1513 is 101
9999 mem: location 1516 is 1542
9999 mem: storing 101 in location 1542
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1514 is 1477
9999 mem: location 1477 is 100
9999 mem: location 1478 is 0
9999 mem: location 1479 is 1412
9999 mem: location 1514 is 1477
9999 run: address to copy is 1478
9999 run: its type is address
9999 mem: location 1478 is 0
9999 mem: storing 0 in location 1517
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1514 is 1477
9999 mem: location 1477 is 100
9999 mem: location 1478 is 0
9999 mem: location 1479 is 1412
9999 mem: location 1514 is 1477
9999 run: address to copy is 1478
9999 mem: storing 1478 in location 1518
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1515 is 1542
9999 mem: location 1518 is 1478
9999 mem: storing 1542 in location 1478
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1515 is 1542
9999 mem: location 1542 is 101
9999 mem: location 1543 is 0
9999 mem: location 1544 is 0
9999 mem: location 1515 is 1542
9999 run: address to copy is 1544
9999 mem: storing 1544 in location 1518
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1514 is 1477
9999 mem: location 1518 is 1544
9999 mem: storing 1477 in location 1544
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1515 is 1542
9999 mem: location 1542 is 101
9999 mem: location 1543 is 0
9999 mem: location 1544 is 1477
9999 mem: location 1515 is 1542
9999 run: address to copy is 1543
9999 mem: storing 1543 in location 1518
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1517 is 0
9999 mem: location 1518 is 1543
9999 mem: storing 0 in location 1543
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1517 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1515 is 1542
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1125 is 1477
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1545
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1477 in location 1547
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1547 is 1477
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1547 is 1477
9999 mem: location 1477 is 100
9999 mem: location 1478 is 1542
9999 mem: location 1479 is 1412
9999 mem: location 1547 is 1477
9999 run: address to copy is 1478
9999 run: its type is address
9999 mem: location 1478 is 1542
9999 mem: storing 1542 in location 1548
 103 run: reply result:address:duplex-list
9999 mem: location 1548 is 1542
9999 run: result 0 is 1542
9999 mem: storing 1542 in location 1125
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1124 is 5
9999 mem: storing 6 in location 1124
 102 run: loop 
9999 run: jumping to instruction 44
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1124 is 6
9999 mem: location 1123 is 7
9999 mem: storing 0 in location 1126
 102 run: break-if done?:boolean, 
9999 mem: location 1126 is 0
9999 run: jump-if fell through
 102 run: c:character <- index s:address:array:character/deref, idx:number
9999 mem: location 1108 is 1098
9999 mem: location 1098 is 7
9999 mem: location 1099 is 97
9999 mem: location 1100 is 98
9999 mem: location 1101 is 99
9999 mem: location 1102 is 32
9999 mem: location 1103 is 100
9999 mem: location 1104 is 101
9999 mem: location 1105 is 102
9999 mem: location 1124 is 6
9999 mem: location 1108 is 1098
9999 mem: location 1124 is 6
9999 run: address to copy is 1105
9999 run: its type is character
9999 mem: location 1105 is 102
9999 mem: storing 102 in location 1127
 102 run: insert-duplex c:character, curr:address:duplex-list
9999 mem: location 1127 is 102
9999 mem: location 1125 is 1542
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1576
 103 run: x:location <- next-ingredient 
9999 mem: storing 102 in location 1578
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1542 in location 1579
 103 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1607
9999 mem: storing 1607 in location 1580
 103 run: val:address:location <- get-address new-node:address:duplex-list/deref, value:offset
9999 mem: location 1580 is 1607
9999 mem: location 1607 is 0
9999 mem: location 1608 is 0
9999 mem: location 1609 is 0
9999 mem: location 1580 is 1607
9999 run: address to copy is 1607
9999 mem: storing 1607 in location 1581
 103 run: val:address:location/deref <- copy x:location
9999 mem: location 1578 is 102
9999 mem: location 1581 is 1607
9999 mem: storing 102 in location 1607
 103 run: next-node:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1579 is 1542
9999 mem: location 1542 is 101
9999 mem: location 1543 is 0
9999 mem: location 1544 is 1477
9999 mem: location 1579 is 1542
9999 run: address to copy is 1543
9999 run: its type is address
9999 mem: location 1543 is 0
9999 mem: storing 0 in location 1582
 103 run: y:address:address:duplex-list <- get-address in:address:duplex-list/deref, next:offset
9999 mem: location 1579 is 1542
9999 mem: location 1542 is 101
9999 mem: location 1543 is 0
9999 mem: location 1544 is 1477
9999 mem: location 1579 is 1542
9999 run: address to copy is 1543
9999 mem: storing 1543 in location 1583
 103 run: y:address:address:duplex-list/deref <- copy new-node:address:duplex-list
9999 mem: location 1580 is 1607
9999 mem: location 1583 is 1543
9999 mem: storing 1607 in location 1543
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, prev:offset
9999 mem: location 1580 is 1607
9999 mem: location 1607 is 102
9999 mem: location 1608 is 0
9999 mem: location 1609 is 0
9999 mem: location 1580 is 1607
9999 run: address to copy is 1609
9999 mem: storing 1609 in location 1583
 103 run: y:address:address:duplex-list/deref <- copy in:address:duplex-list
9999 mem: location 1579 is 1542
9999 mem: location 1583 is 1609
9999 mem: storing 1542 in location 1609
 103 run: y:address:address:duplex-list <- get-address new-node:address:duplex-list/deref, next:offset
9999 mem: location 1580 is 1607
9999 mem: location 1607 is 102
9999 mem: location 1608 is 0
9999 mem: location 1609 is 1542
9999 mem: location 1580 is 1607
9999 run: address to copy is 1608
9999 mem: storing 1608 in location 1583
 103 run: y:address:address:duplex-list/deref <- copy next-node:address:duplex-list
9999 mem: location 1582 is 0
9999 mem: location 1583 is 1608
9999 mem: storing 0 in location 1608
 103 run: jump-if next-node:address:duplex-list, 1:offset
9999 mem: location 1582 is 0
9999 run: jump-if fell through
 103 run: reply new-node:address:duplex-list
9999 mem: location 1580 is 1607
 102 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1125 is 1542
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1610
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1542 in location 1612
 103 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1612 is 1542
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1612 is 1542
9999 mem: location 1542 is 101
9999 mem: location 1543 is 1607
9999 mem: location 1544 is 1477
9999 mem: location 1612 is 1542
9999 run: address to copy is 1543
9999 run: its type is address
9999 mem: location 1543 is 1607
9999 mem: storing 1607 in location 1613
 103 run: reply result:address:duplex-list
9999 mem: location 1613 is 1607
9999 run: result 0 is 1607
9999 mem: storing 1607 in location 1125
 102 run: idx:number <- add idx:number, 1:literal
9999 mem: location 1124 is 6
9999 mem: storing 7 in location 1124
 102 run: loop 
9999 run: jumping to instruction 44
 102 run: done?:boolean <- greater-or-equal idx:number, len:number
9999 mem: location 1124 is 7
9999 mem: location 1123 is 7
9999 mem: storing 1 in location 1126
 102 run: break-if done?:boolean, 
9999 mem: location 1126 is 1
9999 run: jumping to instruction 51
 102 run: y:address:address:duplex-list <- get-address result:address:editor-data/deref, before-cursor:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1113 is 1137
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1119
 102 run: y:address:address:duplex-list/deref <- copy init:address:address:duplex-list/deref
9999 mem: location 1120 is 1138
9999 mem: location 1138 is 1183
9999 mem: location 1119 is 1139
9999 mem: storing 1183 in location 1139
 102 run: bottom:address:number <- get-address result:address:editor-data/deref, bottom:offset
9999 mem: location 1113 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1113 is 1137
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 1128
 102 run: result:address:editor-data <- render result:address:editor-data
9999 mem: location 1113 is 1137
 103 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 1641
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1137 in location 1643
 103 run: screen:address <- get editor:address:editor-data/deref, screen:offset
9999 mem: location 1643 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1643 is 1137
9999 run: address to copy is 1142
9999 run: its type is address
9999 mem: location 1142 is 1031
9999 mem: storing 1031 in location 1644
 103 run: top:number <- get editor:address:editor-data/deref, top:offset
9999 mem: location 1643 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1643 is 1137
9999 run: address to copy is 1143
9999 run: its type is number
9999 mem: location 1143 is 0
9999 mem: storing 0 in location 1645
 103 run: left:number <- get editor:address:editor-data/deref, left:offset
9999 mem: location 1643 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1643 is 1137
9999 run: address to copy is 1144
9999 run: its type is number
9999 mem: location 1144 is 0
9999 mem: storing 0 in location 1646
 103 run: screen-height:number <- screen-height screen:address
9999 mem: location 1644 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1682
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1684
 104 run: break-unless x:address:screen, 
9999 mem: location 1684 is 1031
9999 run: jump-unless fell through
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1684 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1684 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1685
 104 run: reply height:number
9999 mem: location 1685 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1647
 103 run: right:number <- get editor:address:editor-data/deref, right:offset
9999 mem: location 1643 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1643 is 1137
9999 run: address to copy is 1146
9999 run: its type is number
9999 mem: location 1146 is 4
9999 mem: storing 4 in location 1648
 103 run: hide-screen screen:address
9999 mem: location 1644 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1713
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1715
 104 run: break-unless x:address:screen, 
9999 mem: location 1715 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 1715 is 1031
 103 run: curr:address:duplex-list <- get editor:address:editor-data/deref, top-of-screen:offset
9999 mem: location 1643 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1643 is 1137
9999 run: address to copy is 1138
9999 run: its type is address
9999 mem: location 1138 is 1183
9999 mem: storing 1183 in location 1649
 103 run: prev:address:duplex-list <- copy curr:address:duplex-list
9999 mem: location 1649 is 1183
9999 mem: storing 1183 in location 1650
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1183
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1744
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1746
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1746 is 1183
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1746 is 1183
9999 mem: location 1183 is 167
9999 mem: location 1184 is 1217
9999 mem: location 1185 is 0
9999 mem: location 1746 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1217
9999 mem: storing 1217 in location 1747
 104 run: reply result:address:duplex-list
9999 mem: location 1747 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1649
 103 run: row:number <- copy top:number
9999 mem: location 1645 is 0
9999 mem: storing 0 in location 1651
 103 run: column:number <- copy left:number
9999 mem: location 1646 is 0
9999 mem: storing 0 in location 1652
 103 run: cursor-row:address:number <- get-address editor:address:editor-data/deref, cursor-row:offset
9999 mem: location 1643 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1643 is 1137
9999 run: address to copy is 1147
9999 mem: storing 1147 in location 1653
 103 run: cursor-column:address:number <- get-address editor:address:editor-data/deref, cursor-column:offset
9999 mem: location 1643 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1643 is 1137
9999 run: address to copy is 1148
9999 mem: storing 1148 in location 1654
 103 run: before-cursor:address:address:duplex-list <- get-address editor:address:editor-data/deref, before-cursor:offset
9999 mem: location 1643 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1643 is 1137
9999 run: address to copy is 1139
9999 mem: storing 1139 in location 1655
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1644 is 1031
9999 mem: location 1651 is 0
9999 mem: location 1652 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1775
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1777
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1778
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1779
 104 run: break-unless x:address:screen, 
9999 mem: location 1777 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1777 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1777 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1780
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1778 is 0
9999 mem: location 1780 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1777 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1777 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1781
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1779 is 0
9999 mem: location 1781 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1777 is 1031
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 1217
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 0
9999 mem: location 1647 is 3
9999 mem: storing 0 in location 1656
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1656 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 0
9999 mem: location 1653 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 1 in location 1657
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1652 is 0
9999 mem: location 1654 is 1148
9999 mem: location 1148 is 0
9999 mem: storing 1 in location 1658
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1658 is 1
9999 run: jump-unless fell through
 103 run: before-cursor:address:address:duplex-list/deref <- prev-duplex curr:address:duplex-list
9999 mem: location 1649 is 1217
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1806
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1808
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1808 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, prev:offset
9999 mem: location 1808 is 1217
9999 mem: location 1217 is 97
9999 mem: location 1218 is 1282
9999 mem: location 1219 is 1183
9999 mem: location 1808 is 1217
9999 run: address to copy is 1219
9999 run: its type is address
9999 mem: location 1219 is 1183
9999 mem: storing 1183 in location 1809
 104 run: reply result:address:duplex-list
9999 mem: location 1809 is 1183
9999 run: result 0 is 1183
9999 mem: location 1655 is 1139
9999 mem: storing 1183 in location 1139
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1649 is 1217
9999 mem: location 1217 is 97
9999 mem: location 1218 is 1282
9999 mem: location 1219 is 1183
9999 mem: location 1649 is 1217
9999 run: address to copy is 1217
9999 run: its type is number
9999 mem: location 1217 is 97
9999 mem: storing 97 in location 1659
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 97
9999 mem: storing 0 in location 1660
 103 run: break-unless newline?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1652 is 0
9999 mem: location 1648 is 4
9999 mem: storing 0 in location 1662
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1662 is 0
9999 run: jumping to instruction 57
 103 run: print-character screen:address, c:character
9999 mem: location 1644 is 1031
9999 mem: location 1659 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1837
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1839
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1840
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1841
9999 mem: storing 0 in location 1842
 104 run: break-if color-found?:boolean, 
9999 mem: location 1842 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1841
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1843
9999 mem: storing 0 in location 1844
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1844 is 0
9999 run: jump-if fell through
schedule: print-character/render/new-editor/run1001/editor-initially-wraps-long-lines
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1843
 104 run: break-unless x:address:screen, 
9999 mem: location 1839 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1839 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1839 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1845
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1839 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1839 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1846
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1839 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1839 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1847
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1839 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1839 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1848
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1840 is 97
9999 mem: storing 0 in location 1849
 104 run: break-unless newline?:boolean, 
9999 mem: location 1849 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1845 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1847 is 5
9999 mem: storing 0 in location 1852
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1852 is 0
9999 mem: location 1846 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 1852
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1839 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1839 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1853
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1840 is 97
9999 mem: storing 0 in location 1854
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1854 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1853 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1852 is 0
9999 mem: location 1853 is 1036
9999 mem: location 1852 is 0
9999 mem: storing 1037 in location 1856
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1856 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1856 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1857
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1856 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1856 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1858
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1840 is 97
9999 mem: location 1857 is 1037
9999 mem: storing 97 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1841 is 7
9999 mem: location 1858 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1847 is 5
9999 mem: storing 4 in location 1859
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1846 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1859 is 4
9999 mem: storing 0 in location 1860
 104 run: break-if at-right?:boolean, 
9999 mem: location 1860 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1846 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1846 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1839 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1217
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1868
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1870
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1870 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1870 is 1217
9999 mem: location 1217 is 97
9999 mem: location 1218 is 1282
9999 mem: location 1219 is 1183
9999 mem: location 1870 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1282
9999 mem: storing 1282 in location 1871
 104 run: reply result:address:duplex-list
9999 mem: location 1871 is 1282
9999 run: result 0 is 1282
9999 mem: storing 1282 in location 1649
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1650 is 1183
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1899
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1901
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1901 is 1183
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1901 is 1183
9999 mem: location 1183 is 167
9999 mem: location 1184 is 1217
9999 mem: location 1185 is 0
9999 mem: location 1901 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1217
9999 mem: storing 1217 in location 1902
 104 run: reply result:address:duplex-list
9999 mem: location 1902 is 1217
9999 run: result 0 is 1217
9999 mem: storing 1217 in location 1650
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1652 is 0
9999 mem: storing 1 in location 1652
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 1282
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 0
9999 mem: location 1647 is 3
9999 mem: storing 0 in location 1656
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1656 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 0
9999 mem: location 1653 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 1 in location 1657
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1652 is 1
9999 mem: location 1654 is 1148
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1658
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1658 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1649 is 1282
9999 mem: location 1282 is 98
9999 mem: location 1283 is 1347
9999 mem: location 1284 is 1217
9999 mem: location 1649 is 1282
9999 run: address to copy is 1282
9999 run: its type is number
9999 mem: location 1282 is 98
9999 mem: storing 98 in location 1659
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 98
9999 mem: storing 0 in location 1660
 103 run: break-unless newline?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1652 is 1
9999 mem: location 1648 is 4
9999 mem: storing 0 in location 1662
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1662 is 0
9999 run: jumping to instruction 57
 103 run: print-character screen:address, c:character
9999 mem: location 1644 is 1031
9999 mem: location 1659 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1930
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1932
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1933
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1934
9999 mem: storing 0 in location 1935
 104 run: break-if color-found?:boolean, 
9999 mem: location 1935 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1934
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1936
9999 mem: storing 0 in location 1937
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 1937 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 1936
 104 run: break-unless x:address:screen, 
9999 mem: location 1932 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1932 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1932 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1938
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1932 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1932 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1939
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1932 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1932 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1940
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1932 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1932 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1941
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1933 is 98
9999 mem: storing 0 in location 1942
 104 run: break-unless newline?:boolean, 
9999 mem: location 1942 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1938 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1940 is 5
9999 mem: storing 0 in location 1945
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1945 is 0
9999 mem: location 1939 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 1945
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1932 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1932 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1946
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1933 is 98
9999 mem: storing 0 in location 1947
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1947 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1946 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1945 is 1
9999 mem: location 1946 is 1036
9999 mem: location 1945 is 1
9999 mem: storing 1039 in location 1949
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1949 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1949 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1950
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1949 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1949 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1951
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1933 is 98
9999 mem: location 1950 is 1039
9999 mem: storing 98 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1934 is 7
9999 mem: location 1951 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1940 is 5
9999 mem: storing 4 in location 1952
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1939 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1952 is 4
9999 mem: storing 0 in location 1953
 104 run: break-if at-right?:boolean, 
9999 mem: location 1953 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1939 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1939 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1932 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1282
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1961
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1282 in location 1963
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1963 is 1282
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1963 is 1282
9999 mem: location 1282 is 98
9999 mem: location 1283 is 1347
9999 mem: location 1284 is 1217
9999 mem: location 1963 is 1282
9999 run: address to copy is 1283
9999 run: its type is address
9999 mem: location 1283 is 1347
9999 mem: storing 1347 in location 1964
 104 run: reply result:address:duplex-list
9999 mem: location 1964 is 1347
9999 run: result 0 is 1347
9999 mem: storing 1347 in location 1649
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1650 is 1217
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1992
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1217 in location 1994
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 1994 is 1217
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 1994 is 1217
9999 mem: location 1217 is 97
9999 mem: location 1218 is 1282
9999 mem: location 1219 is 1183
9999 mem: location 1994 is 1217
9999 run: address to copy is 1218
9999 run: its type is address
9999 mem: location 1218 is 1282
9999 mem: storing 1282 in location 1995
 104 run: reply result:address:duplex-list
9999 mem: location 1995 is 1282
9999 run: result 0 is 1282
9999 mem: storing 1282 in location 1650
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1652 is 1
9999 mem: storing 2 in location 1652
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 1347
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 0
9999 mem: location 1647 is 3
9999 mem: storing 0 in location 1656
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1656 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 0
9999 mem: location 1653 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 1 in location 1657
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1652 is 2
9999 mem: location 1654 is 1148
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1658
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1658 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1649 is 1347
9999 mem: location 1347 is 99
9999 mem: location 1348 is 1412
9999 mem: location 1349 is 1282
9999 mem: location 1649 is 1347
9999 run: address to copy is 1347
9999 run: its type is number
9999 mem: location 1347 is 99
9999 mem: storing 99 in location 1659
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 99
9999 mem: storing 0 in location 1660
 103 run: break-unless newline?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1652 is 2
9999 mem: location 1648 is 4
9999 mem: storing 0 in location 1662
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1662 is 0
9999 run: jumping to instruction 57
 103 run: print-character screen:address, c:character
9999 mem: location 1644 is 1031
9999 mem: location 1659 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2023
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2025
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 2026
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2027
9999 mem: storing 0 in location 2028
 104 run: break-if color-found?:boolean, 
9999 mem: location 2028 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2027
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2029
9999 mem: storing 0 in location 2030
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2030 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2029
 104 run: break-unless x:address:screen, 
9999 mem: location 2025 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2025 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2025 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2031
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2025 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2025 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2032
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2025 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2025 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2033
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2025 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2025 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2034
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2026 is 99
9999 mem: storing 0 in location 2035
 104 run: break-unless newline?:boolean, 
9999 mem: location 2035 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2031 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2033 is 5
9999 mem: storing 0 in location 2038
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2038 is 0
9999 mem: location 2032 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 2038
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2025 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2025 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2039
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2026 is 99
9999 mem: storing 0 in location 2040
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2040 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2039 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2038 is 2
9999 mem: location 2039 is 1036
9999 mem: location 2038 is 2
9999 mem: storing 1041 in location 2042
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2042 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 2042 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 2043
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2042 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 2042 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 2044
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2026 is 99
9999 mem: location 2043 is 1041
9999 mem: storing 99 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2027 is 7
9999 mem: location 2044 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2033 is 5
9999 mem: storing 4 in location 2045
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2032 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2045 is 4
9999 mem: storing 0 in location 2046
 104 run: break-if at-right?:boolean, 
9999 mem: location 2046 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2032 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2032 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2025 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1347
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2054
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1347 in location 2056
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2056 is 1347
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2056 is 1347
9999 mem: location 1347 is 99
9999 mem: location 1348 is 1412
9999 mem: location 1349 is 1282
9999 mem: location 2056 is 1347
9999 run: address to copy is 1348
9999 run: its type is address
9999 mem: location 1348 is 1412
9999 mem: storing 1412 in location 2057
 104 run: reply result:address:duplex-list
9999 mem: location 2057 is 1412
9999 run: result 0 is 1412
9999 mem: storing 1412 in location 1649
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1650 is 1282
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2085
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1282 in location 2087
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2087 is 1282
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2087 is 1282
9999 mem: location 1282 is 98
9999 mem: location 1283 is 1347
9999 mem: location 1284 is 1217
9999 mem: location 2087 is 1282
9999 run: address to copy is 1283
9999 run: its type is address
9999 mem: location 1283 is 1347
9999 mem: storing 1347 in location 2088
 104 run: reply result:address:duplex-list
9999 mem: location 2088 is 1347
9999 run: result 0 is 1347
9999 mem: storing 1347 in location 1650
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1652 is 2
9999 mem: storing 3 in location 1652
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 1412
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 0
9999 mem: location 1647 is 3
9999 mem: storing 0 in location 1656
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1656 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 0
9999 mem: location 1653 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 1 in location 1657
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1652 is 3
9999 mem: location 1654 is 1148
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1658
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1658 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1649 is 1412
9999 mem: location 1412 is 32
9999 mem: location 1413 is 1477
9999 mem: location 1414 is 1347
9999 mem: location 1649 is 1412
9999 run: address to copy is 1412
9999 run: its type is number
9999 mem: location 1412 is 32
9999 mem: storing 32 in location 1659
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 32
9999 mem: storing 0 in location 1660
 103 run: break-unless newline?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1652 is 3
9999 mem: location 1648 is 4
9999 mem: storing 0 in location 1662
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1662 is 0
9999 run: jumping to instruction 57
 103 run: print-character screen:address, c:character
9999 mem: location 1644 is 1031
9999 mem: location 1659 is 32
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2116
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2118
 104 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2119
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2120
9999 mem: storing 0 in location 2121
 104 run: break-if color-found?:boolean, 
9999 mem: location 2121 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2120
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2122
9999 mem: storing 0 in location 2123
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2123 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2122
 104 run: break-unless x:address:screen, 
9999 mem: location 2118 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2118 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2118 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2124
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2118 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2118 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2125
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2118 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2118 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2126
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2118 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2118 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2127
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2119 is 32
9999 mem: storing 0 in location 2128
 104 run: break-unless newline?:boolean, 
9999 mem: location 2128 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2124 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2126 is 5
9999 mem: storing 0 in location 2131
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2131 is 0
9999 mem: location 2125 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 3 in location 2131
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2118 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2118 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2132
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2119 is 32
9999 mem: storing 0 in location 2133
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2133 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2132 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2131 is 3
9999 mem: location 2132 is 1036
9999 mem: location 2131 is 3
9999 mem: storing 1043 in location 2135
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2135 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 2135 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 2136
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2135 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 2135 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 2137
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2119 is 32
9999 mem: location 2136 is 1043
9999 mem: storing 32 in location 1043
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2120 is 7
9999 mem: location 2137 is 1044
9999 mem: storing 7 in location 1044
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2126 is 5
9999 mem: storing 4 in location 2138
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2125 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2138 is 4
9999 mem: storing 0 in location 2139
 104 run: break-if at-right?:boolean, 
9999 mem: location 2139 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2125 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2125 is 1034
9999 mem: storing 4 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2118 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1412
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2147
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1412 in location 2149
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2149 is 1412
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2149 is 1412
9999 mem: location 1412 is 32
9999 mem: location 1413 is 1477
9999 mem: location 1414 is 1347
9999 mem: location 2149 is 1412
9999 run: address to copy is 1413
9999 run: its type is address
9999 mem: location 1413 is 1477
9999 mem: storing 1477 in location 2150
 104 run: reply result:address:duplex-list
9999 mem: location 2150 is 1477
9999 run: result 0 is 1477
9999 mem: storing 1477 in location 1649
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1650 is 1347
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2178
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1347 in location 2180
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2180 is 1347
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2180 is 1347
9999 mem: location 1347 is 99
9999 mem: location 1348 is 1412
9999 mem: location 1349 is 1282
9999 mem: location 2180 is 1347
9999 run: address to copy is 1348
9999 run: its type is address
9999 mem: location 1348 is 1412
9999 mem: storing 1412 in location 2181
 104 run: reply result:address:duplex-list
9999 mem: location 2181 is 1412
9999 run: result 0 is 1412
9999 mem: storing 1412 in location 1650
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1652 is 3
9999 mem: storing 4 in location 1652
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 1477
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 0
9999 mem: location 1647 is 3
9999 mem: storing 0 in location 1656
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1656 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 0
9999 mem: location 1653 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 1 in location 1657
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 1
9999 run: jump-unless fell through
 103 run: at-cursor?:boolean <- equal column:number, cursor-column:address:number/deref
9999 mem: location 1652 is 4
9999 mem: location 1654 is 1148
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1658
 103 run: break-unless at-cursor?:boolean, 
9999 mem: location 1658 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1649 is 1477
9999 mem: location 1477 is 100
9999 mem: location 1478 is 1542
9999 mem: location 1479 is 1412
9999 mem: location 1649 is 1477
9999 run: address to copy is 1477
9999 run: its type is number
9999 mem: location 1477 is 100
9999 mem: storing 100 in location 1659
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 100
9999 mem: storing 0 in location 1660
 103 run: break-unless newline?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1652 is 4
9999 mem: location 1648 is 4
9999 mem: storing 1 in location 1662
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1662 is 1
9999 run: jump-unless fell through
 103 run: print-character screen:address, 8617:literal/loop-back-to-left, 245:literal/grey
9999 mem: location 1644 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2209
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2211
 104 run: c:character <- next-ingredient 
9999 mem: storing 8617 in location 2212
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2213
9999 mem: storing 1 in location 2214
 104 run: break-if color-found?:boolean, 
9999 mem: location 2214 is 1
9999 run: jumping to instruction 7
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2215
9999 mem: storing 0 in location 2216
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2216 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2215
 104 run: break-unless x:address:screen, 
9999 mem: location 2211 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2211 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2211 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2217
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2211 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2211 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2218
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2211 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2211 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2219
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2211 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2211 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2220
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2212 is 8617
9999 mem: storing 0 in location 2221
 104 run: break-unless newline?:boolean, 
9999 mem: location 2221 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2217 is 1033
9999 mem: location 1033 is 0
9999 mem: location 2219 is 5
9999 mem: storing 0 in location 2224
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2224 is 0
9999 mem: location 2218 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 4 in location 2224
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2211 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2211 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2225
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2212 is 8617
9999 mem: storing 0 in location 2226
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2226 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2225 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2224 is 4
9999 mem: location 2225 is 1036
9999 mem: location 2224 is 4
9999 mem: storing 1045 in location 2228
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2228 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2228 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 2229
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2228 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 2228 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 2230
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2212 is 8617
9999 mem: location 2229 is 1045
9999 mem: storing 8617 in location 1045
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2213 is 245
9999 mem: location 2230 is 1046
9999 mem: storing 245 in location 1046
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2219 is 5
9999 mem: storing 4 in location 2231
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2218 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2231 is 4
9999 mem: storing 1 in location 2232
 104 run: break-if at-right?:boolean, 
9999 mem: location 2232 is 1
9999 run: jumping to instruction 60
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2211 is 1031
 103 run: column:number <- copy left:number
9999 mem: location 1646 is 0
9999 mem: storing 0 in location 1652
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1651 is 0
9999 mem: storing 1 in location 1651
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1644 is 1031
9999 mem: location 1651 is 1
9999 mem: location 1652 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2240
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2242
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 2243
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2244
 104 run: break-unless x:address:screen, 
9999 mem: location 2242 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2242 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2242 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2245
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2243 is 1
9999 mem: location 2245 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2242 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2242 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2246
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2244 is 0
9999 mem: location 2246 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2242 is 1031
 103 run: loop +next-character:label
9999 run: jumping to instruction 19
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 1477
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 1
9999 mem: location 1647 is 3
9999 mem: storing 0 in location 1656
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1656 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 1
9999 mem: location 1653 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1657
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1649 is 1477
9999 mem: location 1477 is 100
9999 mem: location 1478 is 1542
9999 mem: location 1479 is 1412
9999 mem: location 1649 is 1477
9999 run: address to copy is 1477
9999 run: its type is number
9999 mem: location 1477 is 100
9999 mem: storing 100 in location 1659
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 100
9999 mem: storing 0 in location 1660
 103 run: break-unless newline?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1652 is 0
9999 mem: location 1648 is 4
9999 mem: storing 0 in location 1662
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1662 is 0
9999 run: jumping to instruction 57
 103 run: print-character screen:address, c:character
9999 mem: location 1644 is 1031
9999 mem: location 1659 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2271
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2273
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 2274
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2275
9999 mem: storing 0 in location 2276
 104 run: break-if color-found?:boolean, 
9999 mem: location 2276 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2275
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2277
9999 mem: storing 0 in location 2278
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2278 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2277
 104 run: break-unless x:address:screen, 
9999 mem: location 2273 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2273 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2273 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2279
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2273 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2273 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2280
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2273 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2273 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2281
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2273 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2273 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2282
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2274 is 100
9999 mem: storing 0 in location 2283
 104 run: break-unless newline?:boolean, 
9999 mem: location 2283 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2279 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2281 is 5
9999 mem: storing 5 in location 2286
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2286 is 5
9999 mem: location 2280 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 2286
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2273 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2273 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2287
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2274 is 100
9999 mem: storing 0 in location 2288
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2288 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2287 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2286 is 5
9999 mem: location 2287 is 1036
9999 mem: location 2286 is 5
9999 mem: storing 1047 in location 2290
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2290 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 2290 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 2291
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2290 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 2290 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 2292
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2274 is 100
9999 mem: location 2291 is 1047
9999 mem: storing 100 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2275 is 7
9999 mem: location 2292 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2281 is 5
9999 mem: storing 4 in location 2293
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2280 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2293 is 4
9999 mem: storing 0 in location 2294
 104 run: break-if at-right?:boolean, 
9999 mem: location 2294 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2280 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2280 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2273 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1477
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2302
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1477 in location 2304
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2304 is 1477
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2304 is 1477
9999 mem: location 1477 is 100
9999 mem: location 1478 is 1542
9999 mem: location 1479 is 1412
9999 mem: location 2304 is 1477
9999 run: address to copy is 1478
9999 run: its type is address
9999 mem: location 1478 is 1542
9999 mem: storing 1542 in location 2305
 104 run: reply result:address:duplex-list
9999 mem: location 2305 is 1542
9999 run: result 0 is 1542
9999 mem: storing 1542 in location 1649
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1650 is 1412
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2333
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1412 in location 2335
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2335 is 1412
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2335 is 1412
9999 mem: location 1412 is 32
9999 mem: location 1413 is 1477
9999 mem: location 1414 is 1347
9999 mem: location 2335 is 1412
9999 run: address to copy is 1413
9999 run: its type is address
9999 mem: location 1413 is 1477
9999 mem: storing 1477 in location 2336
 104 run: reply result:address:duplex-list
9999 mem: location 2336 is 1477
9999 run: result 0 is 1477
9999 mem: storing 1477 in location 1650
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1652 is 0
9999 mem: storing 1 in location 1652
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 1542
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 1
9999 mem: location 1647 is 3
9999 mem: storing 0 in location 1656
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1656 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 1
9999 mem: location 1653 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1657
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1649 is 1542
9999 mem: location 1542 is 101
9999 mem: location 1543 is 1607
9999 mem: location 1544 is 1477
9999 mem: location 1649 is 1542
9999 run: address to copy is 1542
9999 run: its type is number
9999 mem: location 1542 is 101
9999 mem: storing 101 in location 1659
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 101
9999 mem: storing 0 in location 1660
 103 run: break-unless newline?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1652 is 1
9999 mem: location 1648 is 4
9999 mem: storing 0 in location 1662
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1662 is 0
9999 run: jumping to instruction 57
 103 run: print-character screen:address, c:character
9999 mem: location 1644 is 1031
9999 mem: location 1659 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2364
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2366
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 2367
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2368
9999 mem: storing 0 in location 2369
 104 run: break-if color-found?:boolean, 
9999 mem: location 2369 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2368
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2370
9999 mem: storing 0 in location 2371
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2371 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2370
 104 run: break-unless x:address:screen, 
9999 mem: location 2366 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2366 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2366 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2372
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2366 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2366 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2373
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2366 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2366 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2374
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2366 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2366 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2375
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2367 is 101
9999 mem: storing 0 in location 2376
 104 run: break-unless newline?:boolean, 
9999 mem: location 2376 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2372 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2374 is 5
9999 mem: storing 5 in location 2379
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2379 is 5
9999 mem: location 2373 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 2379
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2366 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2366 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2380
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2367 is 101
9999 mem: storing 0 in location 2381
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2381 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2380 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2379 is 6
9999 mem: location 2380 is 1036
9999 mem: location 2379 is 6
9999 mem: storing 1049 in location 2383
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2383 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2383 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 2384
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2383 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 2383 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 2385
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2367 is 101
9999 mem: location 2384 is 1049
9999 mem: storing 101 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2368 is 7
9999 mem: location 2385 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2374 is 5
9999 mem: storing 4 in location 2386
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2373 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2386 is 4
9999 mem: storing 0 in location 2387
 104 run: break-if at-right?:boolean, 
9999 mem: location 2387 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2373 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2373 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2366 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1542
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2395
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1542 in location 2397
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2397 is 1542
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2397 is 1542
9999 mem: location 1542 is 101
9999 mem: location 1543 is 1607
9999 mem: location 1544 is 1477
9999 mem: location 2397 is 1542
9999 run: address to copy is 1543
9999 run: its type is address
9999 mem: location 1543 is 1607
9999 mem: storing 1607 in location 2398
 104 run: reply result:address:duplex-list
9999 mem: location 2398 is 1607
9999 run: result 0 is 1607
9999 mem: storing 1607 in location 1649
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1650 is 1477
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2426
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1477 in location 2428
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2428 is 1477
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2428 is 1477
9999 mem: location 1477 is 100
9999 mem: location 1478 is 1542
9999 mem: location 1479 is 1412
9999 mem: location 2428 is 1477
9999 run: address to copy is 1478
9999 run: its type is address
9999 mem: location 1478 is 1542
9999 mem: storing 1542 in location 2429
 104 run: reply result:address:duplex-list
9999 mem: location 2429 is 1542
9999 run: result 0 is 1542
9999 mem: storing 1542 in location 1650
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1652 is 1
9999 mem: storing 2 in location 1652
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 1607
9999 run: jump-unless fell through
 103 run: off-screen?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 1
9999 mem: location 1647 is 3
9999 mem: storing 0 in location 1656
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1656 is 0
9999 run: jump-if fell through
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 1
9999 mem: location 1653 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1657
schedule: render/new-editor/run1001/editor-initially-wraps-long-lines
 103 run: break-unless at-cursor-row?:boolean, 
9999 mem: location 1657 is 0
9999 run: jumping to instruction 28
 103 run: c:character <- get curr:address:duplex-list/deref, value:offset
9999 mem: location 1649 is 1607
9999 mem: location 1607 is 102
9999 mem: location 1608 is 0
9999 mem: location 1609 is 1542
9999 mem: location 1649 is 1607
9999 run: address to copy is 1607
9999 run: its type is number
9999 mem: location 1607 is 102
9999 mem: storing 102 in location 1659
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1659 is 102
9999 mem: storing 0 in location 1660
 103 run: break-unless newline?:boolean, 
9999 mem: location 1660 is 0
9999 run: jumping to instruction 48
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1652 is 2
9999 mem: location 1648 is 4
9999 mem: storing 0 in location 1662
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1662 is 0
9999 run: jumping to instruction 57
 103 run: print-character screen:address, c:character
9999 mem: location 1644 is 1031
9999 mem: location 1659 is 102
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2457
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2459
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 2460
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2461
9999 mem: storing 0 in location 2462
 104 run: break-if color-found?:boolean, 
9999 mem: location 2462 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2461
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2463
9999 mem: storing 0 in location 2464
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2464 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2463
 104 run: break-unless x:address:screen, 
9999 mem: location 2459 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2459 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2459 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2465
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2459 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2459 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2466
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2459 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2459 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2467
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2459 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2459 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2468
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2460 is 102
9999 mem: storing 0 in location 2469
 104 run: break-unless newline?:boolean, 
9999 mem: location 2469 is 0
9999 run: jumping to instruction 30
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2465 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2467 is 5
9999 mem: storing 5 in location 2472
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2472 is 5
9999 mem: location 2466 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 2472
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2459 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2459 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2473
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2460 is 102
9999 mem: storing 0 in location 2474
 104 run: break-unless backspace?:boolean, 
9999 mem: location 2474 is 0
9999 run: jumping to instruction 49
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2473 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2472 is 7
9999 mem: location 2473 is 1036
9999 mem: location 2472 is 7
9999 mem: storing 1051 in location 2476
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2476 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2476 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 2477
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2476 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 2476 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 2478
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2460 is 102
9999 mem: location 2477 is 1051
9999 mem: storing 102 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2461 is 7
9999 mem: location 2478 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2467 is 5
9999 mem: storing 4 in location 2479
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2466 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2479 is 4
9999 mem: storing 0 in location 2480
 104 run: break-if at-right?:boolean, 
9999 mem: location 2480 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2466 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2466 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2459 is 1031
 103 run: curr:address:duplex-list <- next-duplex curr:address:duplex-list
9999 mem: location 1649 is 1607
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2488
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1607 in location 2490
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2490 is 1607
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2490 is 1607
9999 mem: location 1607 is 102
9999 mem: location 1608 is 0
9999 mem: location 1609 is 1542
9999 mem: location 2490 is 1607
9999 run: address to copy is 1608
9999 run: its type is address
9999 mem: location 1608 is 0
9999 mem: storing 0 in location 2491
 104 run: reply result:address:duplex-list
9999 mem: location 2491 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1649
 103 run: prev:address:duplex-list <- next-duplex prev:address:duplex-list
9999 mem: location 1650 is 1542
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2519
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1542 in location 2521
 104 run: jump-if in:address:duplex-list, 1:offset
9999 mem: location 2521 is 1542
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get in:address:duplex-list/deref, next:offset
9999 mem: location 2521 is 1542
9999 mem: location 1542 is 101
9999 mem: location 1543 is 1607
9999 mem: location 1544 is 1477
9999 mem: location 2521 is 1542
9999 run: address to copy is 1543
9999 run: its type is address
9999 mem: location 1543 is 1607
9999 mem: storing 1607 in location 2522
 104 run: reply result:address:duplex-list
9999 mem: location 2522 is 1607
9999 run: result 0 is 1607
9999 mem: storing 1607 in location 1650
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1652 is 2
9999 mem: storing 3 in location 1652
 103 run: loop 
9999 run: jumping to instruction 18
 103 run: break-unless curr:address:duplex-list, 
9999 mem: location 1649 is 0
9999 run: jumping to instruction 63
 103 run: bottom:address:number <- get-address editor:address:editor-data/deref, bottom:offset
9999 mem: location 1643 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1643 is 1137
9999 run: address to copy is 1145
9999 mem: storing 1145 in location 1663
 103 run: bottom:address:number/deref <- copy row:number
9999 mem: location 1651 is 1
9999 mem: location 1663 is 1145
9999 mem: storing 1 in location 1145
 103 run: at-cursor-row?:boolean <- equal row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 1
9999 mem: location 1653 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1657
 103 run: cursor-outside-line?:boolean <- lesser-or-equal column:number, cursor-column:address:number/deref
9999 mem: location 1652 is 3
9999 mem: location 1654 is 1148
9999 mem: location 1148 is 0
9999 mem: storing 0 in location 1664
 103 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?:boolean, cursor-outside-line?:boolean
9999 mem: location 1657 is 0
9999 mem: location 1664 is 0
9999 mem: storing 0 in location 1665
 103 run: above-cursor-row?:boolean <- lesser-than row:number, cursor-row:address:number/deref
9999 mem: location 1651 is 1
9999 mem: location 1653 is 1147
9999 mem: location 1147 is 0
9999 mem: storing 0 in location 1666
 103 run: before-cursor?:boolean <- or before-cursor-on-same-line?:boolean, above-cursor-row?:boolean
9999 mem: location 1665 is 0
9999 mem: location 1666 is 0
9999 mem: storing 0 in location 1667
 103 run: break-unless before-cursor?:boolean, 
9999 mem: location 1667 is 0
9999 run: jumping to instruction 84
 103 run: clear-line-delimited screen:address, column:number, right:number
9999 mem: location 1644 is 1031
9999 mem: location 1652 is 3
9999 mem: location 1648 is 4
 104 run: default-space:address:array:location <- new location:type, 40:literal
9999 mem: array size is 40
9999 mem: new alloc: 2550
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2552
 104 run: left:number <- next-ingredient 
9999 mem: storing 3 in location 2553
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2554
 104 run: column:number <- copy left:number
9999 mem: location 2553 is 3
9999 mem: storing 3 in location 2555
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2555 is 3
9999 mem: location 2554 is 4
9999 mem: storing 0 in location 2556
 104 run: break-if done?:boolean, 
9999 mem: location 2556 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2552 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2591
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2593
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2594
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2595
9999 mem: storing 0 in location 2596
 105 run: break-if color-found?:boolean, 
9999 mem: location 2596 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2595
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2597
9999 mem: storing 0 in location 2598
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2598 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2597
 105 run: break-unless x:address:screen, 
9999 mem: location 2593 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2593 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2593 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2599
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2593 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2593 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2600
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2593 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2593 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2601
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2593 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2593 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2602
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2594 is 32
9999 mem: storing 0 in location 2603
 105 run: break-unless newline?:boolean, 
9999 mem: location 2603 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2599 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2601 is 5
9999 mem: storing 5 in location 2606
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2606 is 5
9999 mem: location 2600 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 8 in location 2606
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2593 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2593 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2607
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2594 is 32
9999 mem: storing 0 in location 2608
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2608 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2607 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2606 is 8
9999 mem: location 2607 is 1036
9999 mem: location 2606 is 8
9999 mem: storing 1053 in location 2610
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2610 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2610 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 2611
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2610 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 2610 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 2612
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2594 is 32
9999 mem: location 2611 is 1053
9999 mem: storing 32 in location 1053
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2595 is 7
9999 mem: location 2612 is 1054
9999 mem: storing 7 in location 1054
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2601 is 5
9999 mem: storing 4 in location 2613
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2600 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2613 is 4
9999 mem: storing 0 in location 2614
 105 run: break-if at-right?:boolean, 
9999 mem: location 2614 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2600 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2600 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2593 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2555 is 3
9999 mem: storing 4 in location 2555
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2555 is 4
9999 mem: location 2554 is 4
9999 mem: storing 0 in location 2556
 104 run: break-if done?:boolean, 
9999 mem: location 2556 is 0
9999 run: jump-if fell through
 104 run: print-character screen:address, 32:literal/space
9999 mem: location 2552 is 1031
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2622
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2624
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2625
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2626
9999 mem: storing 0 in location 2627
 105 run: break-if color-found?:boolean, 
9999 mem: location 2627 is 0
9999 run: jump-if fell through
 105 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 2626
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2628
9999 mem: storing 0 in location 2629
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2629 is 0
9999 run: jump-if fell through
 105 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2628
 105 run: break-unless x:address:screen, 
9999 mem: location 2624 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2624 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2624 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2630
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2624 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2624 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2631
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2624 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2624 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2632
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2624 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2624 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2633
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2625 is 32
9999 mem: storing 0 in location 2634
 105 run: break-unless newline?:boolean, 
9999 mem: location 2634 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2630 is 1033
9999 mem: location 1033 is 1
9999 mem: location 2632 is 5
9999 mem: storing 5 in location 2637
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2637 is 5
9999 mem: location 2631 is 1034
9999 mem: location 1034 is 4
9999 mem: storing 9 in location 2637
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2624 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2624 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2638
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2625 is 32
9999 mem: storing 0 in location 2639
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2639 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2638 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2637 is 9
9999 mem: location 2638 is 1036
9999 mem: location 2637 is 9
9999 mem: storing 1055 in location 2641
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2641 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2641 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 2642
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2641 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 2641 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 2643
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2625 is 32
9999 mem: location 2642 is 1055
9999 mem: storing 32 in location 1055
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2626 is 7
9999 mem: location 2643 is 1056
9999 mem: storing 7 in location 1056
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2632 is 5
9999 mem: storing 4 in location 2644
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2631 is 1034
9999 mem: location 1034 is 4
9999 mem: location 2644 is 4
9999 mem: storing 1 in location 2645
 105 run: break-if at-right?:boolean, 
9999 mem: location 2645 is 1
9999 run: jumping to instruction 60
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2624 is 1031
 104 run: column:number <- add column:number, 1:literal
9999 mem: location 2555 is 4
9999 mem: storing 5 in location 2555
 104 run: loop 
9999 run: jumping to instruction 6
 104 run: done?:boolean <- greater-than column:number, right:number
9999 mem: location 2555 is 5
9999 mem: location 2554 is 4
9999 mem: storing 1 in location 2556
 104 run: break-if done?:boolean, 
9999 mem: location 2556 is 1
9999 run: jumping to instruction 11
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1651 is 1
9999 mem: storing 2 in location 1651
 103 run: warnings:address:array:character <- get editor:address:editor-data/deref, warnings:offset
9999 mem: location 1643 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1643 is 1137
9999 run: address to copy is 1141
9999 run: its type is address
9999 mem: location 1141 is 0
9999 mem: storing 0 in location 1670
 103 run: break-unless warnings:address:array:character, 
9999 mem: location 1670 is 0
9999 run: jumping to instruction 92
 103 run: break-if warnings:address:array:character, 
9999 mem: location 1670 is 0
9999 run: jump-if fell through
 103 run: response:address:array:character <- get editor:address:editor-data/deref, response:offset
9999 mem: location 1643 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1643 is 1137
9999 run: address to copy is 1140
9999 run: its type is address
9999 mem: location 1140 is 0
9999 mem: storing 0 in location 1671
 103 run: break-unless response:address:array:character, 
9999 mem: location 1671 is 0
9999 run: jumping to instruction 98
 103 run: done?:boolean <- greater-or-equal row:number, screen-height:number
9999 mem: location 1651 is 2
9999 mem: location 1647 is 3
9999 mem: storing 0 in location 1672
 103 run: break-if done?:boolean, 
9999 mem: location 1672 is 0
9999 run: jump-if fell through
 103 run: break-if screen:address, 
9999 mem: location 1644 is 1031
9999 run: jumping to instruction 114
 103 run: break-unless screen:address, 
9999 mem: location 1644 is 1031
9999 run: jump-unless fell through
 103 run: draw-horizontal screen:address, row:number, left:number, right:number, 32:literal/space
9999 mem: location 1644 is 1031
9999 mem: location 1651 is 2
9999 mem: location 1646 is 0
9999 mem: location 1648 is 4
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2653
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 2655
 104 run: row:number <- next-ingredient 
9999 mem: storing 2 in location 2656
 104 run: x:number <- next-ingredient 
9999 mem: storing 0 in location 2657
 104 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 2658
 104 run: style:character, style-found?:boolean <- next-ingredient 
9999 mem: storing 32 in location 2659
9999 mem: storing 1 in location 2660
 104 run: break-if style-found?:boolean, 
9999 mem: location 2660 is 1
9999 run: jumping to instruction 9
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2661
9999 mem: storing 0 in location 2662
 104 run: break-if color-found?:boolean, 
9999 mem: location 2662 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 245:literal/grey
9999 mem: storing 245 in location 2661
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2663
9999 mem: storing 0 in location 2664
 104 run: break-if bg-color-found?:boolean, 
9999 mem: location 2664 is 0
9999 run: jump-if fell through
 104 run: bg-color:number <- copy 0:literal/black
9999 mem: storing 0 in location 2663
 104 run: move-cursor screen:address, row:number, x:number
9999 mem: location 2655 is 1031
9999 mem: location 2656 is 2
9999 mem: location 2657 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2684
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2686
 105 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 2687
 105 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2688
 105 run: break-unless x:address:screen, 
9999 mem: location 2686 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2686 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2686 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2689
 105 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2687 is 2
9999 mem: location 2689 is 1033
9999 mem: storing 2 in location 1033
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2686 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2686 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2690
 105 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2688 is 0
9999 mem: location 2690 is 1034
9999 mem: storing 0 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2686 is 1031
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2657 is 0
9999 mem: location 2658 is 4
9999 mem: storing 1 in location 2665
 104 run: break-unless continue?:boolean, 
9999 mem: location 2665 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 2655 is 1031
9999 mem: location 2659 is 32
9999 mem: location 2661 is 245
9999 mem: location 2663 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2715
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2717
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2718
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2719
9999 mem: storing 1 in location 2720
 105 run: break-if color-found?:boolean, 
9999 mem: location 2720 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2721
9999 mem: storing 1 in location 2722
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2722 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2717 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2717 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2717 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2723
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2717 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2717 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2724
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2717 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2717 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2725
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2717 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2717 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2726
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2718 is 32
9999 mem: storing 0 in location 2727
 105 run: break-unless newline?:boolean, 
9999 mem: location 2727 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2723 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2725 is 5
9999 mem: storing 10 in location 2730
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2730 is 10
9999 mem: location 2724 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 10 in location 2730
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2717 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 2717 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2731
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2718 is 32
9999 mem: storing 0 in location 2732
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2732 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2731 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2730 is 10
9999 mem: location 2731 is 1036
9999 mem: location 2730 is 10
9999 mem: storing 1057 in location 2734
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2734 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2734 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 2735
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2734 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 2734 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 2736
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2718 is 32
9999 mem: location 2735 is 1057
9999 mem: storing 32 in location 1057
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2719 is 245
9999 mem: location 2736 is 1058
9999 mem: storing 245 in location 1058
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2725 is 5
9999 mem: storing 4 in location 2737
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2724 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2737 is 4
9999 mem: storing 0 in location 2738
 105 run: break-if at-right?:boolean, 
9999 mem: location 2738 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2724 is 1034
9999 mem: location 1034 is 0
9999 mem: location 2724 is 1034
9999 mem: storing 1 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2717 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 2657 is 0
9999 mem: storing 1 in location 2657
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2657 is 1
9999 mem: location 2658 is 4
9999 mem: storing 1 in location 2665
 104 run: break-unless continue?:boolean, 
9999 mem: location 2665 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 2655 is 1031
9999 mem: location 2659 is 32
9999 mem: location 2661 is 245
9999 mem: location 2663 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2746
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2748
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2749
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2750
9999 mem: storing 1 in location 2751
 105 run: break-if color-found?:boolean, 
9999 mem: location 2751 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2752
9999 mem: storing 1 in location 2753
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2753 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2748 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2748 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2748 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2754
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2748 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2748 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2755
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2748 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2748 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2756
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2748 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2748 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2757
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2749 is 32
9999 mem: storing 0 in location 2758
 105 run: break-unless newline?:boolean, 
9999 mem: location 2758 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2754 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2756 is 5
9999 mem: storing 10 in location 2761
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2761 is 10
9999 mem: location 2755 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 11 in location 2761
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2748 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 2748 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2762
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2749 is 32
9999 mem: storing 0 in location 2763
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2763 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2762 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2761 is 11
9999 mem: location 2762 is 1036
9999 mem: location 2761 is 11
9999 mem: storing 1059 in location 2765
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2765 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2765 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 2766
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2765 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 2765 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 2767
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2749 is 32
9999 mem: location 2766 is 1059
9999 mem: storing 32 in location 1059
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2750 is 245
9999 mem: location 2767 is 1060
9999 mem: storing 245 in location 1060
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2756 is 5
9999 mem: storing 4 in location 2768
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2755 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2768 is 4
9999 mem: storing 0 in location 2769
 105 run: break-if at-right?:boolean, 
9999 mem: location 2769 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2755 is 1034
9999 mem: location 1034 is 1
9999 mem: location 2755 is 1034
9999 mem: storing 2 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2748 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 2657 is 1
9999 mem: storing 2 in location 2657
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2657 is 2
9999 mem: location 2658 is 4
9999 mem: storing 1 in location 2665
 104 run: break-unless continue?:boolean, 
9999 mem: location 2665 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 2655 is 1031
9999 mem: location 2659 is 32
9999 mem: location 2661 is 245
9999 mem: location 2663 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2777
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2779
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2780
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2781
9999 mem: storing 1 in location 2782
 105 run: break-if color-found?:boolean, 
9999 mem: location 2782 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2783
9999 mem: storing 1 in location 2784
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2784 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2779 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2779 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2779 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2785
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2779 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2779 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2786
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2779 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2779 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2787
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2779 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2779 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2788
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2780 is 32
9999 mem: storing 0 in location 2789
 105 run: break-unless newline?:boolean, 
9999 mem: location 2789 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2785 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2787 is 5
9999 mem: storing 10 in location 2792
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2792 is 10
9999 mem: location 2786 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 12 in location 2792
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2779 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 2779 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2793
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2780 is 32
9999 mem: storing 0 in location 2794
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2794 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2793 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2792 is 12
9999 mem: location 2793 is 1036
9999 mem: location 2792 is 12
9999 mem: storing 1061 in location 2796
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2796 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2796 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 2797
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2796 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 2796 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 2798
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2780 is 32
9999 mem: location 2797 is 1061
9999 mem: storing 32 in location 1061
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2781 is 245
9999 mem: location 2798 is 1062
9999 mem: storing 245 in location 1062
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2787 is 5
9999 mem: storing 4 in location 2799
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2786 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2799 is 4
9999 mem: storing 0 in location 2800
 105 run: break-if at-right?:boolean, 
9999 mem: location 2800 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2786 is 1034
9999 mem: location 1034 is 2
9999 mem: location 2786 is 1034
9999 mem: storing 3 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2779 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 2657 is 2
9999 mem: storing 3 in location 2657
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2657 is 3
9999 mem: location 2658 is 4
9999 mem: storing 1 in location 2665
 104 run: break-unless continue?:boolean, 
9999 mem: location 2665 is 1
9999 run: jump-unless fell through
 104 run: print-character screen:address, style:character, color:number, bg-color:number
9999 mem: location 2655 is 1031
9999 mem: location 2659 is 32
9999 mem: location 2661 is 245
9999 mem: location 2663 is 0
 105 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2808
 105 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2810
 105 run: c:character <- next-ingredient 
9999 mem: storing 32 in location 2811
 105 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 245 in location 2812
9999 mem: storing 1 in location 2813
 105 run: break-if color-found?:boolean, 
9999 mem: location 2813 is 1
9999 run: jumping to instruction 7
 105 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 2814
9999 mem: storing 1 in location 2815
 105 run: break-if bg-color-found?:boolean, 
9999 mem: location 2815 is 1
9999 run: jumping to instruction 12
 105 run: break-unless x:address:screen, 
9999 mem: location 2810 is 1031
9999 run: jump-unless fell through
 105 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2810 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2810 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2816
 105 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2810 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2810 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2817
 105 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 2810 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2810 is 1031
9999 run: address to copy is 1032
9999 run: its type is number
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 2818
 105 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 2810 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2810 is 1031
9999 run: address to copy is 1031
9999 run: its type is number
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 2819
 105 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 2811 is 32
9999 mem: storing 0 in location 2820
 105 run: break-unless newline?:boolean, 
9999 mem: location 2820 is 0
9999 run: jumping to instruction 30
 105 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 2816 is 1033
9999 mem: location 1033 is 2
9999 mem: location 2818 is 5
9999 mem: storing 10 in location 2823
 105 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 2823 is 10
9999 mem: location 2817 is 1034
9999 mem: location 1034 is 3
9999 mem: storing 13 in location 2823
 105 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 2810 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 2810 is 1031
9999 run: address to copy is 1035
9999 run: its type is address
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 2824
 105 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 2811 is 32
9999 mem: storing 0 in location 2825
 105 run: break-unless backspace?:boolean, 
9999 mem: location 2825 is 0
9999 run: jumping to instruction 49
 105 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 2824 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 32
9999 mem: location 1044 is 7
9999 mem: location 1045 is 8617
9999 mem: location 1046 is 245
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 102
9999 mem: location 1052 is 7
9999 mem: location 1053 is 32
9999 mem: location 1054 is 7
9999 mem: location 1055 is 32
9999 mem: location 1056 is 7
9999 mem: location 1057 is 32
9999 mem: location 1058 is 245
9999 mem: location 1059 is 32
9999 mem: location 1060 is 245
9999 mem: location 1061 is 32
9999 mem: location 1062 is 245
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 2823 is 13
9999 mem: location 2824 is 1036
9999 mem: location 2823 is 13
9999 mem: storing 1063 in location 2827
 105 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 2827 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2827 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 2828
 105 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 2827 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 2827 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 2829
 105 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 2811 is 32
9999 mem: location 2828 is 1063
9999 mem: storing 32 in location 1063
 105 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 2812 is 245
9999 mem: location 2829 is 1064
9999 mem: storing 245 in location 1064
 105 run: right:number <- subtract width:number, 1:literal
9999 mem: location 2818 is 5
9999 mem: storing 4 in location 2830
 105 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 2817 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2830 is 4
9999 mem: storing 0 in location 2831
 105 run: break-if at-right?:boolean, 
9999 mem: location 2831 is 0
9999 run: jump-if fell through
 105 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 2817 is 1034
9999 mem: location 1034 is 3
9999 mem: location 2817 is 1034
9999 mem: storing 4 in location 1034
 105 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2810 is 1031
 104 run: x:number <- add x:number, 1:literal
9999 mem: location 2657 is 3
9999 mem: storing 4 in location 2657
 104 run: loop 
9999 run: jumping to instruction 22
 104 run: continue?:boolean <- lesser-than x:number, right:number
9999 mem: location 2657 is 4
9999 mem: location 2658 is 4
9999 mem: storing 0 in location 2665
 104 run: break-unless continue?:boolean, 
9999 mem: location 2665 is 0
9999 run: jumping to instruction 27
 103 run: in-focus?:boolean <- get editor:address:editor-data/deref, in-focus?:offset
9999 mem: location 1643 is 1137
9999 mem: location 1137 is 1183
9999 mem: location 1138 is 1183
9999 mem: location 1139 is 1183
9999 mem: location 1140 is 0
9999 mem: location 1141 is 0
9999 mem: location 1142 is 1031
9999 mem: location 1143 is 0
9999 mem: location 1144 is 0
9999 mem: location 1145 is 1
9999 mem: location 1146 is 4
9999 mem: location 1147 is 0
9999 mem: location 1148 is 0
9999 mem: location 1149 is 0
9999 mem: location 1150 is 1
9999 mem: location 1151 is 181
9999 mem: location 1643 is 1137
9999 run: address to copy is 1150
9999 run: its type is boolean
9999 mem: location 1150 is 1
9999 mem: storing 1 in location 1673
 103 run: break-unless in-focus?:boolean, 
9999 mem: location 1673 is 1
9999 run: jump-unless fell through
 103 run: cursor-inside-right-margin?:boolean <- lesser-or-equal cursor-column:address:number/deref, right:number
9999 mem: location 1654 is 1148
9999 mem: location 1148 is 0
9999 mem: location 1648 is 4
9999 mem: storing 1 in location 1674
 103 run: assert cursor-inside-right-margin?:boolean, [cursor outside right margin]
9999 mem: location 1674 is 1
 103 run: cursor-inside-left-margin?:boolean <- greater-or-equal cursor-column:address:number/deref, left:number
9999 mem: location 1654 is 1148
9999 mem: location 1148 is 0
9999 mem: location 1646 is 0
9999 mem: storing 1 in location 1675
 103 run: assert cursor-inside-left-margin?:boolean, [cursor outside left margin]
9999 mem: location 1675 is 1
 103 run: move-cursor screen:address, cursor-row:address:number/deref, cursor-column:address:number/deref
9999 mem: location 1644 is 1031
9999 mem: location 1653 is 1147
9999 mem: location 1147 is 0
9999 mem: location 1654 is 1148
9999 mem: location 1148 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2839
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2841
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 2842
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 2843
 104 run: break-unless x:address:screen, 
9999 mem: location 2841 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 2841 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 2
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2841 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 2844
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 2842 is 0
9999 mem: location 2844 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 2841 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 4
9999 mem: location 1035 is 1036
9999 mem: location 2841 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 2845
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 2843 is 0
9999 mem: location 2845 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 2841 is 1031
 103 run: show-screen screen:address
9999 mem: location 1644 is 1031
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 2870
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 2872
 104 run: break-unless x:address:screen, 
9999 mem: location 2872 is 1031
9999 run: jump-unless fell through
 104 run: reply x:address:screen
9999 mem: location 2872 is 1031
 103 run: reply editor:address:editor-data/same-as-ingredient:0
9999 mem: location 1643 is 1137
9999 run: result 0 is 1137
9999 mem: storing 1137 in location 1113
 102 run: reply result:address:editor-data
9999 mem: location 1113 is 1137
 100 run: screen-should-contain [
    .abc â†©.
    .def  .
    .     .
  ]
 100 run: screen-should-contain-in-color 245:literal/grey, [
    .    â†©.
    .     .
    .     .
  ]
