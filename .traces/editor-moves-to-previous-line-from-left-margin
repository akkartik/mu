 102 run: assume-console [
    left-click 3, 0
    press up-arrow
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"3": "literal"}
9993 parse:   ingredient: {"0": "literal"}
9992 load: after rewriting: left-click 3, 0
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"up-arrow": <>}
9992 load: after rewriting: press up-arrow
9999 mem: storing 'left-click' event starting at 1327
9999 mem: storing 'press' event starting at 1331
9999 mem: storing console in 1335
9999 mem: storing console data in 1337
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1001
9991 transform: --- deduce types for recipe run1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1001
9991 transform: --- transform names for recipe run1001
9993 name: element cursor-row of type editor-data is at offset 6
9993 name: element cursor-column of type editor-data is at offset 7
9991 transform: --- resolve ambiguous calls for recipe run1001
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1001
9991 transform: --- transform braces for recipe run1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1001
9991 transform: --- type-check 'call' instructions inside recipe run1001
9991 transform: --- type-check calls inside recipe run1001
9991 transform: --- convert 'new' to 'allocate' for recipe run1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1335
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1338
9999 mem: storing 14 in location 1339
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1341
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1335 in location 1342
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1343
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1167
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1344
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1167
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1345
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1341 is 1012
9999 mem: location 1344 is 1
9999 mem: location 1345 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1262
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1263
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1264
 105 run: jump-unless screen, 
9999 mem: location 1262 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1265
 105 run: *row <- copy new-row
9999 mem: location 1263 is 1
9999 mem: location 1265 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1266
 105 run: *column <- copy new-column
9999 mem: location 1264 is 0
9999 mem: location 1266 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1341
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1342 is 1335
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1335 in location 1297
 105 run: jump-unless console, 
9999 mem: location 1297 is 1335
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1297 is 1335
9999 mem: skipping refcount at 1335
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1325
9999 mem: location 1297 is 1335
9999 mem: skipping refcount at 1335
9998 run: address to copy is 1336
9999 mem: storing 1336 in location 1298
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1297 is 1335
9999 mem: skipping refcount at 1335
9999 mem: location 1336 is 0
9999 mem: location 1337 is 1325
9999 mem: location 1297 is 1335
9999 mem: skipping refcount at 1335
9998 run: address to copy is 1337
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1337 is 1325
9999 mem: storing 1325 in location 1299
 105 run: max:number <- length *buf
9999 mem: location 1299 is 1325
9999 mem: skipping refcount at 1325
9999 mem: storing 2 in location 1300
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1298 is 1336
9999 mem: location 1336 is 0
9999 mem: location 1300 is 2
9999 mem: storing 0 in location 1301
 105 run: jump-unless done?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1299 is 1325
9999 mem: skipping refcount at 1325
9998 run: base address is 1326
9999 mem: location 1298 is 1336
9999 mem: location 1336 is 0
9998 run: address to copy is 1327
9998 run: its type is event
9999 mem: location 1327 is 2
9999 mem: location 1328 is 65513
9999 mem: location 1329 is 3
9999 mem: location 1330 is 0
9999 mem: storing 2 in location 1303
9999 mem: storing 65513 in location 1304
9999 mem: storing 3 in location 1305
9999 mem: storing 0 in location 1306
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1298 is 1336
9999 mem: location 1336 is 0
9999 mem: location 1298 is 1336
9999 mem: storing 1 in location 1336
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1303 is 2
9999 mem: location 1304 is 65513
9999 mem: location 1305 is 3
9999 mem: location 1306 is 0
9999 mem: location 1297 is 1335
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 0]
9998 run: result 1 is 1335
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1346
9999 mem: storing 65513 in location 1347
9999 mem: storing 3 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 1335 in location 1342
9999 mem: storing 1 in location 1350
9999 mem: storing 0 in location 1351
 104 run: jump-unless found?, 
9999 mem: location 1350 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1346 is 2
9999 mem: location 1347 is 65513
9999 mem: location 1348 is 3
9999 mem: location 1349 is 0
9999 mem: storing 1347 in location 1352
 104 run: jump-unless t, 
9999 mem: location 1352 is 1347
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1341 is 1012
9999 mem: location 1343 is 1000
9999 mem: location 1352 is 1347
9999 mem: location 1347 is 65513
9999 mem: location 1348 is 3
9999 mem: location 1349 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 abandon: picking up space from free-list of size 29
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1233
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1234
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1235
9999 mem: storing 3 in location 1236
9999 mem: storing 0 in location 1237
 105 run: jump-if editor, 1:offset
9999 mem: location 1234 is 1000
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1235 is 65513
9999 mem: location 1236 is 3
9999 mem: location 1237 is 0
9998 run: address to copy is 1236
9998 run: its type is number
9999 mem: location 1236 is 3
9999 mem: storing 3 in location 1238
 105 run: jump-if click-row, 1:offset
9999 mem: location 1238 is 3
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1235 is 65513
9999 mem: location 1236 is 3
9999 mem: location 1237 is 0
9998 run: address to copy is 1237
9998 run: its type is number
9999 mem: location 1237 is 0
9999 mem: storing 0 in location 1239
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1167
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1240
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1239 is 0
9999 mem: location 1240 is 0
9999 mem: storing 0 in location 1241
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1241 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1167
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1242
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1239 is 0
9999 mem: location 1242 is 9
9999 mem: storing 0 in location 1243
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1243 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1167
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 1
9999 mem: storing 1 in location 1244
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1167
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1245
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1167
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1167
9999 mem: storing 1167 in location 1246
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1233 is 1012
9999 mem: location 1234 is 1000
9999 mem: location 1238 is 3
9999 mem: location 1239 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1354
9999 mem: storing 26 in location 1355
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1357
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1358
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1359
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1360
 106 run: jump-if editor, 1:offset
9999 mem: location 1358 is 1000
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1358 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1167
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1358 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1361
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1358 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1167
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1358 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1362
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1357 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1188
 107 run: jump-unless screen, 
9999 mem: location 1188 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1188 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1188 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1189
 107 run: reply height:number
9999 mem: location 1189 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1363
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1358 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1167
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1358 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1167
9999 mem: storing 1167 in location 1364
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1364 is 1167
9999 mem: storing 1167 in location 1365
 106 run: curr <- next_2 curr
9999 mem: location 1364 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1167 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1167
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1167
9999 mem: skipping refcount at 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1168 is 167
9999 mem: location 1169 is 1181
9999 mem: location 1170 is 0
9999 mem: location 1188 is 1167
9999 mem: skipping refcount at 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1169
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1169 is 1181
9999 mem: storing 1181 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1364
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1366
 106 run: column:number <- copy left
9999 mem: location 1361 is 0
9999 mem: storing 0 in location 1367
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1358 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1167
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 1
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1358 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1368
 106 run: *cursor-row <- copy target-row
9999 mem: location 1359 is 3
9999 mem: location 1368 is 1007
9999 mem: storing 3 in location 1007
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1358 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1167
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1358 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1369
 106 run: *cursor-column <- copy target-column
9999 mem: location 1360 is 0
9999 mem: location 1369 is 1008
9999 mem: storing 0 in location 1008
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1358 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1167
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1358 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1370
 106 run: jump-unless curr, 
9999 mem: location 1364 is 1181
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1366 is 1
9999 mem: location 1363 is 5
9999 mem: storing 0 in location 1371
 106 run: jump-if off-screen?, 
9999 mem: location 1371 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 1
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1372
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1372 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1364 is 1181
9999 mem: skipping refcount at 1181
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1182 is 97
9999 mem: location 1183 is 1190
9999 mem: location 1184 is 1167
9999 mem: location 1364 is 1181
9999 mem: skipping refcount at 1181
9998 run: address to copy is 1182
9998 run: its type is character
9999 mem: location 1182 is 97
9999 mem: storing 97 in location 1374
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1374 is 97
9999 mem: storing 0 in location 1375
 106 run: jump-unless newline?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1367 is 0
9999 mem: location 1362 is 9
9999 mem: storing 0 in location 1377
 106 run: jump-unless at-right?, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1364 is 1181
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1181
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1182 is 97
9999 mem: location 1183 is 1190
9999 mem: location 1184 is 1167
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9999 type: type deduced to be character$
9998 run: address to copy is 1183
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1183 is 1190
9999 mem: storing 1190 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: storing 1190 in location 1364
 106 run: prev <- next_2 prev
9999 mem: location 1365 is 1167
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1167 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1167
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1167
9999 mem: skipping refcount at 1167
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1168 is 167
9999 mem: location 1169 is 1181
9999 mem: location 1170 is 0
9999 mem: location 1188 is 1167
9999 mem: skipping refcount at 1167
9999 type: type deduced to be character$
9998 run: address to copy is 1169
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1169 is 1181
9999 mem: storing 1181 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1181
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1181
9999 mem: storing 1181 in location 1365
 106 run: column <- add column, 1
9999 mem: location 1367 is 0
9999 mem: storing 1 in location 1367
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1364 is 1190
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1366 is 1
9999 mem: location 1363 is 5
9999 mem: storing 0 in location 1371
 106 run: jump-if off-screen?, 
9999 mem: location 1371 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 1
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1372
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1372 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1364 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 98
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1181
9999 mem: location 1364 is 1190
9999 mem: skipping refcount at 1190
9998 run: address to copy is 1191
9998 run: its type is character
9999 mem: location 1191 is 98
9999 mem: storing 98 in location 1374
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1374 is 98
9999 mem: storing 0 in location 1375
 106 run: jump-unless newline?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1367 is 1
9999 mem: location 1362 is 9
9999 mem: storing 0 in location 1377
 106 run: jump-unless at-right?, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1364 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 98
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1181
9999 mem: location 1188 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: storing 1194 in location 1364
 106 run: prev <- next_2 prev
9999 mem: location 1365 is 1181
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1181 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1181
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1182 is 97
9999 mem: location 1183 is 1190
9999 mem: location 1184 is 1167
9999 mem: location 1188 is 1181
9999 mem: skipping refcount at 1181
9999 type: type deduced to be character$
9998 run: address to copy is 1183
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1183 is 1190
9999 mem: storing 1190 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1190
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1190
9999 mem: storing 1190 in location 1365
 106 run: column <- add column, 1
9999 mem: location 1367 is 1
9999 mem: storing 2 in location 1367
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1364 is 1194
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1366 is 1
9999 mem: location 1363 is 5
9999 mem: storing 0 in location 1371
 106 run: jump-if off-screen?, 
9999 mem: location 1371 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 1
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1372
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1372 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1364 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 99
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1364 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is character
9999 mem: location 1195 is 99
9999 mem: storing 99 in location 1374
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1374 is 99
9999 mem: storing 0 in location 1375
 106 run: jump-unless newline?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1367 is 2
9999 mem: location 1362 is 9
9999 mem: storing 0 in location 1377
 106 run: jump-unless at-right?, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1364 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1194
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 99
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1188 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1364
 106 run: prev <- next_2 prev
9999 mem: location 1365 is 1190
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1190 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1190
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1190
9999 mem: skipping refcount at 1190
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1191 is 98
9999 mem: location 1192 is 1194
9999 mem: location 1193 is 1181
9999 mem: location 1188 is 1190
9999 mem: skipping refcount at 1190
9999 type: type deduced to be character$
9998 run: address to copy is 1192
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1192 is 1194
9999 mem: storing 1194 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: storing 1194 in location 1365
 106 run: column <- add column, 1
9999 mem: location 1367 is 2
9999 mem: storing 3 in location 1367
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1364 is 1198
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1366 is 1
9999 mem: location 1363 is 5
9999 mem: storing 0 in location 1371
 106 run: jump-if off-screen?, 
9999 mem: location 1371 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 1
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1372
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1372 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1364 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 10
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1364 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is character
9999 mem: location 1199 is 10
9999 mem: storing 10 in location 1374
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1374 is 10
9999 mem: storing 1 in location 1375
 106 run: jump-unless newline?, 
9999 mem: location 1375 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 1
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1372
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1372 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1366 is 1
9999 mem: storing 2 in location 1366
 106 run: column <- copy left
9999 mem: location 1361 is 0
9999 mem: storing 0 in location 1367
 106 run: curr <- next_2 curr
9999 mem: location 1364 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1198
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 10
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1188 is 1198
9999 mem: skipping refcount at 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1200
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: storing 1202 in location 1364
 106 run: prev <- next_2 prev
9999 mem: location 1365 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1194
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 99
9999 mem: location 1196 is 1198
9999 mem: location 1197 is 1190
9999 mem: location 1188 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1198
9999 mem: storing 1198 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1365
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1364 is 1202
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1366 is 2
9999 mem: location 1363 is 5
9999 mem: storing 0 in location 1371
 106 run: jump-if off-screen?, 
9999 mem: location 1371 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 2
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1372
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1372 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1364 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 100
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1364 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is character
9999 mem: location 1203 is 100
9999 mem: storing 100 in location 1374
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1374 is 100
9999 mem: storing 0 in location 1375
 106 run: jump-unless newline?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1367 is 0
9999 mem: location 1362 is 9
9999 mem: storing 0 in location 1377
 106 run: jump-unless at-right?, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1364 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1202
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 100
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1188 is 1202
9999 mem: skipping refcount at 1202
9999 type: type deduced to be character$
9998 run: address to copy is 1204
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: storing 1206 in location 1364
 106 run: prev <- next_2 prev
9999 mem: location 1365 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1198
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 10
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1188 is 1198
9999 mem: skipping refcount at 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1200
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: storing 1202 in location 1365
 106 run: column <- add column, 1
9999 mem: location 1367 is 0
9999 mem: storing 1 in location 1367
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1364 is 1206
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1366 is 2
9999 mem: location 1363 is 5
9999 mem: storing 0 in location 1371
 106 run: jump-if off-screen?, 
9999 mem: location 1371 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 2
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1372
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1372 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1364 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 101
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1364 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is character
9999 mem: location 1207 is 101
9999 mem: storing 101 in location 1374
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1374 is 101
9999 mem: storing 0 in location 1375
 106 run: jump-unless newline?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1367 is 1
9999 mem: location 1362 is 9
9999 mem: storing 0 in location 1377
 106 run: jump-unless at-right?, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1364 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1206
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 101
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1188 is 1206
9999 mem: skipping refcount at 1206
9999 type: type deduced to be character$
9998 run: address to copy is 1208
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: storing 1210 in location 1364
 106 run: prev <- next_2 prev
9999 mem: location 1365 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1202
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 100
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1188 is 1202
9999 mem: skipping refcount at 1202
9999 type: type deduced to be character$
9998 run: address to copy is 1204
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: storing 1206 in location 1365
 106 run: column <- add column, 1
9999 mem: location 1367 is 1
9999 mem: storing 2 in location 1367
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1364 is 1210
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1366 is 2
9999 mem: location 1363 is 5
9999 mem: storing 0 in location 1371
 106 run: jump-if off-screen?, 
9999 mem: location 1371 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 2
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1372
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1372 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1364 is 1210
9999 mem: skipping refcount at 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1211 is 102
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1364 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1211
9998 run: its type is character
9999 mem: location 1211 is 102
9999 mem: storing 102 in location 1374
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1374 is 102
9999 mem: storing 0 in location 1375
 106 run: jump-unless newline?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1367 is 2
9999 mem: location 1362 is 9
9999 mem: storing 0 in location 1377
 106 run: jump-unless at-right?, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1364 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1188
9990 schedule: next_2/snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-to-previous-line-from-left-margin
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1210
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1210
9999 mem: skipping refcount at 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1211 is 102
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1188 is 1210
9999 mem: skipping refcount at 1210
9999 type: type deduced to be character$
9998 run: address to copy is 1212
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1212 is 1214
9999 mem: storing 1214 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1214
9999 mem: storing 1214 in location 1364
 106 run: prev <- next_2 prev
9999 mem: location 1365 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1206
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 101
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1188 is 1206
9999 mem: skipping refcount at 1206
9999 type: type deduced to be character$
9998 run: address to copy is 1208
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: storing 1210 in location 1365
 106 run: column <- add column, 1
9999 mem: location 1367 is 2
9999 mem: storing 3 in location 1367
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1364 is 1214
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1366 is 2
9999 mem: location 1363 is 5
9999 mem: storing 0 in location 1371
 106 run: jump-if off-screen?, 
9999 mem: location 1371 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 2
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1372
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1372 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1364 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 10
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1364 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1215
9998 run: its type is character
9999 mem: location 1215 is 10
9999 mem: storing 10 in location 1374
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1374 is 10
9999 mem: storing 1 in location 1375
 106 run: jump-unless newline?, 
9999 mem: location 1375 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 2
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1372
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1372 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1366 is 2
9999 mem: storing 3 in location 1366
 106 run: column <- copy left
9999 mem: location 1361 is 0
9999 mem: storing 0 in location 1367
 106 run: curr <- next_2 curr
9999 mem: location 1364 is 1214
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1214
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 10
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1188 is 1214
9999 mem: skipping refcount at 1214
9999 type: type deduced to be character$
9998 run: address to copy is 1216
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1216 is 1218
9999 mem: storing 1218 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1218
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1218
9999 mem: storing 1218 in location 1364
 106 run: prev <- next_2 prev
9999 mem: location 1365 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1210
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1210
9999 mem: skipping refcount at 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1211 is 102
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1188 is 1210
9999 mem: skipping refcount at 1210
9999 type: type deduced to be character$
9998 run: address to copy is 1212
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1212 is 1214
9999 mem: storing 1214 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1214
9999 mem: storing 1214 in location 1365
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1364 is 1218
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1366 is 3
9999 mem: location 1363 is 5
9999 mem: storing 0 in location 1371
 106 run: jump-if off-screen?, 
9999 mem: location 1371 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 3
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 1 in location 1372
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1367 is 0
9999 mem: location 1369 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 1 in location 1373
 106 run: jump-unless at-cursor?, 
9999 mem: location 1373 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1365 is 1214
9999 mem: location 1370 is 1004
9999 mem: storing 1214 in location 1004
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1364 is 1218
9999 mem: skipping refcount at 1218
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1219 is 103
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1364 is 1218
9999 mem: skipping refcount at 1218
9998 run: address to copy is 1219
9998 run: its type is character
9999 mem: location 1219 is 103
9999 mem: storing 103 in location 1374
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1374 is 103
9999 mem: storing 0 in location 1375
 106 run: jump-unless newline?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1367 is 0
9999 mem: location 1362 is 9
9999 mem: storing 0 in location 1377
 106 run: jump-unless at-right?, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1364 is 1218
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1218 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1218
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1218
9999 mem: skipping refcount at 1218
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1219 is 103
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1188 is 1218
9999 mem: skipping refcount at 1218
9999 type: type deduced to be character$
9998 run: address to copy is 1220
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1220 is 1222
9999 mem: storing 1222 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1222
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1222
9999 mem: storing 1222 in location 1364
 106 run: prev <- next_2 prev
9999 mem: location 1365 is 1214
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1214
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 10
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1188 is 1214
9999 mem: skipping refcount at 1214
9999 type: type deduced to be character$
9998 run: address to copy is 1216
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1216 is 1218
9999 mem: storing 1218 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1218
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1218
9999 mem: storing 1218 in location 1365
 106 run: column <- add column, 1
9999 mem: location 1367 is 0
9999 mem: storing 1 in location 1367
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1364 is 1222
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1366 is 3
9999 mem: location 1363 is 5
9999 mem: storing 0 in location 1371
 106 run: jump-if off-screen?, 
9999 mem: location 1371 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 3
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 1 in location 1372
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1367 is 1
9999 mem: location 1369 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1373
 106 run: jump-unless at-cursor?, 
9999 mem: location 1373 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1364 is 1222
9999 mem: skipping refcount at 1222
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1223 is 104
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1364 is 1222
9999 mem: skipping refcount at 1222
9998 run: address to copy is 1223
9998 run: its type is character
9999 mem: location 1223 is 104
9999 mem: storing 104 in location 1374
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1374 is 104
9999 mem: storing 0 in location 1375
 106 run: jump-unless newline?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1367 is 1
9999 mem: location 1362 is 9
9999 mem: storing 0 in location 1377
 106 run: jump-unless at-right?, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1364 is 1222
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1222
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1222
9999 mem: skipping refcount at 1222
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1223 is 104
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1188 is 1222
9999 mem: skipping refcount at 1222
9999 type: type deduced to be character$
9998 run: address to copy is 1224
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1224 is 1226
9999 mem: storing 1226 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1226
9999 mem: storing 1226 in location 1364
 106 run: prev <- next_2 prev
9999 mem: location 1365 is 1218
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1218 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1218
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1218
9999 mem: skipping refcount at 1218
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1219 is 103
9999 mem: location 1220 is 1222
9999 mem: location 1221 is 1214
9999 mem: location 1188 is 1218
9999 mem: skipping refcount at 1218
9999 type: type deduced to be character$
9998 run: address to copy is 1220
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1220 is 1222
9999 mem: storing 1222 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1222
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1222
9999 mem: storing 1222 in location 1365
 106 run: column <- add column, 1
9999 mem: location 1367 is 1
9999 mem: storing 2 in location 1367
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1364 is 1226
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1366 is 3
9999 mem: location 1363 is 5
9999 mem: storing 0 in location 1371
 106 run: jump-if off-screen?, 
9999 mem: location 1371 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 3
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 1 in location 1372
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1372 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1367 is 2
9999 mem: location 1369 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1373
 106 run: jump-unless at-cursor?, 
9999 mem: location 1373 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1364 is 1226
9999 mem: skipping refcount at 1226
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1227 is 105
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1222
9999 mem: location 1364 is 1226
9999 mem: skipping refcount at 1226
9998 run: address to copy is 1227
9998 run: its type is character
9999 mem: location 1227 is 105
9999 mem: storing 105 in location 1374
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1374 is 105
9999 mem: storing 0 in location 1375
 106 run: jump-unless newline?, 
9999 mem: location 1375 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1367 is 2
9999 mem: location 1362 is 9
9999 mem: storing 0 in location 1377
 106 run: jump-unless at-right?, 
9999 mem: location 1377 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1364 is 1226
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1226 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1226
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1226
9999 mem: skipping refcount at 1226
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1227 is 105
9999 mem: location 1228 is 0
9999 mem: location 1229 is 1222
9999 mem: location 1188 is 1226
9999 mem: skipping refcount at 1226
9999 type: type deduced to be character$
9998 run: address to copy is 1228
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1228 is 0
9999 mem: storing 0 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: storing 0 in location 1364
 106 run: prev <- next_2 prev
9999 mem: location 1365 is 1222
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1222 in location 1188
 107 run: jump-if in, 1:offset
9999 mem: location 1188 is 1222
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1188 is 1222
9999 mem: skipping refcount at 1222
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1223 is 104
9999 mem: location 1224 is 1226
9999 mem: location 1225 is 1218
9999 mem: location 1188 is 1222
9999 mem: skipping refcount at 1222
9999 type: type deduced to be character$
9998 run: address to copy is 1224
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1224 is 1226
9999 mem: storing 1226 in location 1189
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1189 is 1226
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1226
9999 mem: storing 1226 in location 1365
 106 run: column <- add column, 1
9999 mem: location 1367 is 2
9999 mem: storing 3 in location 1367
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1364 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1366 is 3
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 1 in location 1372
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1367 is 3
9999 mem: location 1369 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1378
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1372 is 1
9999 mem: location 1378 is 0
9999 mem: storing 0 in location 1379
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1366 is 3
9999 mem: location 1368 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1380
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1379 is 0
9999 mem: location 1380 is 0
9999 mem: storing 0 in location 1381
 106 run: jump-unless before-cursor?, 
9999 mem: location 1381 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1358 is 1000
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1234
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1247
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1248
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1249
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1234 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1167
9999 mem: storing 1167 in location 1250
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1247 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1120 in location 1252
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1244 is 1
9999 mem: location 1245 is 0
9999 mem: location 1246 is 1167
9999 mem: location 1248 is 3
9999 mem: location 1249 is 0
9999 mem: location 1250 is 1167
9999 mem: location 1247 is 0
9999 mem: location 1252 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1252 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 1 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 1167 in location 1124
9999 mem: storing 3 in location 1125
9999 mem: storing 0 in location 1126
9999 mem: storing 1167 in location 1127
9999 mem: storing 0 in location 1128
 105 run: editor <- add-operation editor, op
9999 mem: location 1234 is 1000
9999 mem: location 1252 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1382
9999 mem: storing 5 in location 1383
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1385
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1386
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1385 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1385 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1387
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1386 is 1120
9999 mem: location 1387 is 1010
9999 mem: location 1010 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1262
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1263
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1389
9999 mem: storing 1389 in location 1264
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1264 is 1389
9999 mem: skipping refcount at 1389
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1390 is 0
9999 mem: location 1391 is 0
9999 mem: location 1264 is 1389
9999 mem: skipping refcount at 1389
9998 run: address to copy is 1390
9999 mem: storing 1390 in location 1265
 107 run: *val <- copy x
9999 mem: location 1262 is 1120
9999 mem: location 1265 is 1390
9999 mem: storing 1120 in location 1390
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1264 is 1389
9999 mem: skipping refcount at 1389
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1390 is 1120
9999 mem: location 1391 is 0
9999 mem: location 1264 is 1389
9999 mem: skipping refcount at 1389
9999 type: type deduced to be address$
9998 run: address to copy is 1391
9999 mem: storing 1391 in location 1266
 107 run: *next <- copy in
9999 mem: location 1263 is 0
9999 mem: location 1266 is 1391
9999 mem: storing 0 in location 1391
 107 run: reply result
9999 mem: location 1264 is 1389
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1389
9999 mem: location 1387 is 1010
9999 mem: storing 1389 in location 1010
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1385 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1385 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1388
 106 run: *redo <- copy 0
9999 mem: location 1388 is 1011
9999 mem: storing 0 in location 1011
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1385 is 1000
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1234
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1344
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1345
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1341 is 1012
9999 mem: location 1344 is 3
9999 mem: location 1345 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1262
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1263
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1264
 105 run: jump-unless screen, 
9999 mem: location 1262 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1265
 105 run: *row <- copy new-row
9999 mem: location 1263 is 3
9999 mem: location 1265 is 1015
9999 mem: storing 3 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1266
 105 run: *column <- copy new-column
9999 mem: location 1264 is 0
9999 mem: location 1266 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1341
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1342 is 1335
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1335 in location 1297
 105 run: jump-unless console, 
9999 mem: location 1297 is 1335
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1297 is 1335
9999 mem: skipping refcount at 1335
9999 mem: location 1336 is 1
9999 mem: location 1337 is 1325
9999 mem: location 1297 is 1335
9999 mem: skipping refcount at 1335
9998 run: address to copy is 1336
9999 mem: storing 1336 in location 1298
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1297 is 1335
9999 mem: skipping refcount at 1335
9999 mem: location 1336 is 1
9999 mem: location 1337 is 1325
9999 mem: location 1297 is 1335
9999 mem: skipping refcount at 1335
9998 run: address to copy is 1337
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1337 is 1325
9999 mem: storing 1325 in location 1299
 105 run: max:number <- length *buf
9999 mem: location 1299 is 1325
9999 mem: skipping refcount at 1325
9999 mem: storing 2 in location 1300
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1298 is 1336
9999 mem: location 1336 is 1
9999 mem: location 1300 is 2
9999 mem: storing 0 in location 1301
 105 run: jump-unless done?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1299 is 1325
9999 mem: skipping refcount at 1325
9998 run: base address is 1326
9999 mem: location 1298 is 1336
9999 mem: location 1336 is 1
9998 run: address to copy is 1331
9998 run: its type is event
9999 mem: location 1331 is 1
9999 mem: location 1332 is 65517
9999 mem: location 1333 is 0
9999 mem: location 1334 is 0
9999 mem: storing 1 in location 1303
9999 mem: storing 65517 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1298 is 1336
9999 mem: location 1336 is 1
9999 mem: location 1298 is 1336
9999 mem: storing 2 in location 1336
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1303 is 1
9999 mem: location 1304 is 65517
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: location 1297 is 1335
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65517, 0, 0]
9998 run: result 1 is 1335
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1346
9999 mem: storing 65517 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 1335 in location 1342
9999 mem: storing 1 in location 1350
9999 mem: storing 0 in location 1351
 104 run: jump-unless found?, 
9999 mem: location 1350 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1346 is 1
9999 mem: location 1347 is 65517
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 0 in location 1352
 104 run: jump-unless t, 
9999 mem: location 1352 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1352 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1341 is 1012
9999 mem: location 1343 is 1000
9999 mem: location 1346 is 1
9999 mem: location 1347 is 65517
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1392
9999 mem: storing 85 in location 1393
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1395
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1396
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1397
9999 mem: storing 65517 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1401
 105 run: jump-if editor, 1:offset
9999 mem: location 1396 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1395 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1188
 106 run: jump-unless screen, 
9999 mem: location 1188 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1188 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1188 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1189
 106 run: reply width:number
9999 mem: location 1189 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1402
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1395 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1188
 106 run: jump-unless screen, 
9999 mem: location 1188 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1188 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1188 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1189
 106 run: reply height:number
9999 mem: location 1189 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1403
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1404
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1405
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1406
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1407
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1408
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1407 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1409
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1408 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1410
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1397 is 1
9999 mem: location 1398 is 65517
9999 mem: location 1399 is 0
9999 mem: location 1400 is 0
9999 mem: storing 0 in location 1411
 105 run: jump-unless c, 
9999 mem: location 1411 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1397 is 1
9999 mem: location 1398 is 65517
9999 mem: location 1399 is 0
9999 mem: location 1400 is 0
9999 mem: storing 1398 in location 1465
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1465 is 1398
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1465 is 1398
9999 mem: location 1398 is 65517
9999 mem: storing 0 in location 1428
 105 run: jump-unless page-up?, 
9999 mem: location 1428 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1465 is 1398
9999 mem: location 1398 is 65517
9999 mem: storing 0 in location 1444
 105 run: jump-unless page-down?, 
9999 mem: location 1444 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1465 is 1398
9999 mem: location 1398 is 65517
9999 mem: storing 0 in location 1451
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1451 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1465 is 1398
9999 mem: location 1398 is 65517
9999 mem: storing 0 in location 1452
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1452 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1465 is 1398
9999 mem: location 1398 is 65517
9999 mem: storing 0 in location 1466
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1466 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1465 is 1398
9999 mem: location 1398 is 65517
9999 mem: storing 1 in location 1467
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1467 is 1
9998 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 3
9999 mem: storing 3 in location 1431
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1432
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1167
9999 mem: storing 1167 in location 1433
 105 run: editor, go-render? <- move-to-previous-line editor
9999 mem: location 1396 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1479
9999 mem: storing 20 in location 1480
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1482
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1482 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1482 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1483
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1482 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1482 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1484
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1482 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1482 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1485
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1482 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1482 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1486
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1482 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1482 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1487
 106 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1483 is 1007
9999 mem: location 1007 is 3
9999 mem: storing 0 in location 1488
 106 run: jump-if already-at-top?, 
9999 mem: location 1488 is 0
9998 run: jump-if fell through
 106 run: curr:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1485 is 1004
9999 mem: location 1004 is 1214
9999 mem: storing 1214 in location 1489
 106 run: old:address:shared:duplex-list:character <- copy curr
9999 mem: location 1489 is 1214
9999 mem: storing 1214 in location 1490
 106 run: c2:character <- get *curr, value:offset
9999 mem: location 1489 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 10
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1489 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1215
9998 run: its type is character
9999 mem: location 1215 is 10
9999 mem: storing 10 in location 1491
 106 run: at-newline?:boolean <- equal c2, 10/newline
9999 mem: location 1491 is 10
9999 mem: storing 1 in location 1492
 106 run: jump-if at-newline?, 
9999 mem: location 1492 is 1
9998 run: jumping to instruction 21
 106 run: old <- copy curr
9999 mem: location 1489 is 1214
9999 mem: storing 1214 in location 1490
 106 run: curr <- before-previous-line curr, editor
9999 mem: location 1489 is 1214
9999 mem: location 1482 is 1000
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: allocating size 15
9999 mem: new alloc: 1501
9999 mem: storing 13 in location 1502
 107 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1504
 107 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1505
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1504 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 10
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1504 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1215
9998 run: its type is character
9999 mem: location 1215 is 10
9999 mem: storing 10 in location 1506
 107 run: left:number <- get *editor, left:offset
9999 mem: location 1505 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1505 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1507
 107 run: right:number <- get *editor, right:offset
9999 mem: location 1505 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1505 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1508
 107 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1508 is 9
9999 mem: location 1507 is 0
9999 mem: storing 9 in location 1509
 107 run: sentinel:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1505 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1214
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 3
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1505 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1001
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1001 is 1167
9999 mem: storing 1167 in location 1510
 107 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1504 is 1214
9999 mem: location 1510 is 1167
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 108 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1161
 108 run: start:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1167 in location 1162
 108 run: result:number <- copy 0
9999 mem: storing 0 in location 1163
 108 run: jump-if curr, 1:offset
9999 mem: location 1161 is 1214
9998 run: jumping to instruction 6
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1161 is 1214
9999 mem: location 1162 is 1167
9999 mem: storing 0 in location 1164
 108 run: jump-unless at-start?, 1:offset
9999 mem: location 1164 is 0
9998 run: jumping to instruction 9
 108 run: curr <- prev_2 curr
9999 mem: location 1161 is 1214
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1188
 109 run: jump-if in, 1:offset
9999 mem: location 1188 is 1214
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1188 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 10
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1188 is 1214
9999 mem: skipping refcount at 1214
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1210
9999 mem: storing 1210 in location 1189
 109 run: reply result
9999 mem: location 1189 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1210
9999 mem: storing 1210 in location 1161
 108 run: jump-unless curr, 
9999 mem: location 1161 is 1210
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1161 is 1210
9999 mem: location 1162 is 1167
9999 mem: storing 0 in location 1164
 108 run: jump-if at-start?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1161 is 1210
9999 mem: skipping refcount at 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1211 is 102
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1161 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1211
9998 run: its type is character
9999 mem: location 1211 is 102
9999 mem: storing 102 in location 1165
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1165 is 102
9999 mem: storing 0 in location 1166
 108 run: jump-if at-newline?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1163 is 0
9999 mem: storing 1 in location 1163
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1161 is 1210
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1188
 109 run: jump-if in, 1:offset
9999 mem: location 1188 is 1210
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1188 is 1210
9999 mem: skipping refcount at 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1211 is 102
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1188 is 1210
9999 mem: skipping refcount at 1210
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1206
9999 mem: storing 1206 in location 1189
 109 run: reply result
9999 mem: location 1189 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1206
9999 mem: storing 1206 in location 1161
 108 run: jump-unless curr, 
9999 mem: location 1161 is 1206
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1161 is 1206
9999 mem: location 1162 is 1167
9999 mem: storing 0 in location 1164
 108 run: jump-if at-start?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1161 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 101
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1161 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is character
9999 mem: location 1207 is 101
9999 mem: storing 101 in location 1165
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1165 is 101
9999 mem: storing 0 in location 1166
 108 run: jump-if at-newline?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1163 is 1
9999 mem: storing 2 in location 1163
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1161 is 1206
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1188
 109 run: jump-if in, 1:offset
9999 mem: location 1188 is 1206
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1188 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 101
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1188 is 1206
9999 mem: skipping refcount at 1206
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1202
9999 mem: storing 1202 in location 1189
 109 run: reply result
9999 mem: location 1189 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1202
9999 mem: storing 1202 in location 1161
 108 run: jump-unless curr, 
9999 mem: location 1161 is 1202
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1161 is 1202
9999 mem: location 1162 is 1167
9999 mem: storing 0 in location 1164
 108 run: jump-if at-start?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1161 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 100
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1161 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is character
9999 mem: location 1203 is 100
9999 mem: storing 100 in location 1165
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1165 is 100
9999 mem: storing 0 in location 1166
 108 run: jump-if at-newline?, 
9999 mem: location 1166 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1163 is 2
9999 mem: storing 3 in location 1163
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1161 is 1202
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1188
 109 run: jump-if in, 1:offset
9999 mem: location 1188 is 1202
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1188 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 100
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1188 is 1202
9999 mem: skipping refcount at 1202
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1198
9999 mem: storing 1198 in location 1189
 109 run: reply result
9999 mem: location 1189 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1161
 108 run: jump-unless curr, 
9999 mem: location 1161 is 1198
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1161 is 1198
9999 mem: location 1162 is 1167
9999 mem: storing 0 in location 1164
 108 run: jump-if at-start?, 
9999 mem: location 1164 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1161 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 10
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1161 is 1198
9999 mem: skipping refcount at 1198
9998 run: address to copy is 1199
9998 run: its type is character
9999 mem: location 1199 is 10
9999 mem: storing 10 in location 1165
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1165 is 10
9999 mem: storing 1 in location 1166
 108 run: jump-if at-newline?, 
9999 mem: location 1166 is 1
9998 run: jumping to instruction 19
 108 run: reply result:number
9999 mem: location 1163 is 3
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 3
9999 mem: storing 3 in location 1511
 107 run: jump-if len, 
9999 mem: location 1511 is 3
9998 run: jumping to instruction 15
 107 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1511 is 3
9999 mem: location 1509 is 9
9999 mem: storing 3 in location 1513
 107 run: jump-if max, 
9999 mem: location 1513 is 3
9998 run: jumping to instruction 20
 107 run: max <- add max, 1
9999 mem: location 1513 is 3
9999 mem: storing 4 in location 1513
 107 run: count:number <- copy 0
9999 mem: storing 0 in location 1514
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1514 is 0
9999 mem: location 1513 is 4
9999 mem: storing 0 in location 1515
 107 run: jump-if done?, 
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1504 is 1214
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1214 in location 1188
 108 run: jump-if in, 1:offset
9999 mem: location 1188 is 1214
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1188 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 10
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1188 is 1214
9999 mem: skipping refcount at 1214
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1210
9999 mem: storing 1210 in location 1189
 108 run: reply result
9999 mem: location 1189 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1210
9999 mem: storing 1210 in location 1512
 107 run: jump-unless prev, 
9999 mem: location 1512 is 1210
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1512 is 1210
9999 mem: storing 1210 in location 1504
 107 run: count <- add count, 1
9999 mem: location 1514 is 0
9999 mem: storing 1 in location 1514
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1514 is 1
9999 mem: location 1513 is 4
9999 mem: storing 0 in location 1515
 107 run: jump-if done?, 
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1504 is 1210
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1188
 108 run: jump-if in, 1:offset
9999 mem: location 1188 is 1210
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1188 is 1210
9999 mem: skipping refcount at 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1211 is 102
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1188 is 1210
9999 mem: skipping refcount at 1210
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1206
9999 mem: storing 1206 in location 1189
 108 run: reply result
9999 mem: location 1189 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1206
9999 mem: storing 1206 in location 1512
 107 run: jump-unless prev, 
9999 mem: location 1512 is 1206
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1512 is 1206
9999 mem: storing 1206 in location 1504
 107 run: count <- add count, 1
9999 mem: location 1514 is 1
9999 mem: storing 2 in location 1514
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1514 is 2
9999 mem: location 1513 is 4
9999 mem: storing 0 in location 1515
 107 run: jump-if done?, 
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1504 is 1206
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1188
 108 run: jump-if in, 1:offset
9999 mem: location 1188 is 1206
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1188 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 101
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1188 is 1206
9999 mem: skipping refcount at 1206
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1202
9999 mem: storing 1202 in location 1189
 108 run: reply result
9999 mem: location 1189 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1202
9999 mem: storing 1202 in location 1512
 107 run: jump-unless prev, 
9999 mem: location 1512 is 1202
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1512 is 1202
9999 mem: storing 1202 in location 1504
 107 run: count <- add count, 1
9999 mem: location 1514 is 2
9999 mem: storing 3 in location 1514
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1514 is 3
9999 mem: location 1513 is 4
9999 mem: storing 0 in location 1515
 107 run: jump-if done?, 
9999 mem: location 1515 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1504 is 1202
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1188
 108 run: jump-if in, 1:offset
9999 mem: location 1188 is 1202
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1188 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 100
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1188 is 1202
9999 mem: skipping refcount at 1202
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1198
9999 mem: storing 1198 in location 1189
 108 run: reply result
9999 mem: location 1189 is 1198
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1512
 107 run: jump-unless prev, 
9999 mem: location 1512 is 1198
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1512 is 1198
9999 mem: storing 1198 in location 1504
 107 run: count <- add count, 1
9999 mem: location 1514 is 3
9999 mem: storing 4 in location 1514
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1514 is 4
9999 mem: location 1513 is 4
9999 mem: storing 1 in location 1515
 107 run: jump-if done?, 
9999 mem: location 1515 is 1
9998 run: jumping to instruction 31
 107 run: reply curr
9999 mem: location 1504 is 1198
9999 abandon: saving in free-list of size 15
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1198
9999 mem: storing 1198 in location 1489
 106 run: no-motion?:boolean <- equal curr, old
9999 mem: location 1489 is 1198
9999 mem: location 1490 is 1214
9999 mem: storing 0 in location 1493
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1494
 106 run: jump-unless no-motion?, 1:offset
9999 mem: location 1493 is 0
9998 run: jumping to instruction 29
 106 run: *before-cursor <- copy curr
9999 mem: location 1489 is 1198
9999 mem: location 1485 is 1004
9999 mem: storing 1198 in location 1004
 106 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1483 is 1007
9999 mem: location 1007 is 3
9999 mem: location 1483 is 1007
9999 mem: storing 2 in location 1007
 106 run: target-column:number <- copy *cursor-column
9999 mem: location 1484 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1495
 106 run: *cursor-column <- copy left
9999 mem: location 1486 is 0
9999 mem: location 1484 is 1008
9999 mem: storing 0 in location 1008
 106 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1484 is 1008
9999 mem: location 1008 is 0
9999 mem: location 1495 is 0
9999 mem: storing 1 in location 1496
 106 run: jump-if done?, 
9999 mem: location 1496 is 1
9998 run: jumping to instruction 45
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1494
 106 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1482 is 1000
9999 mem: location 1494 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 0
9999 mem: storing 1000 in location 1396
9999 mem: storing 0 in location 1401
 105 run: undo-coalesce-tag:number <- copy 3/up-arrow
9999 mem: storing 3 in location 1434
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1435
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1436
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1167
9999 mem: storing 1167 in location 1437
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1434 is 3
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1415
 105 run: jump-unless *undo, 
9999 mem: location 1415 is 1010
9999 mem: location 1010 is 1389
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1415 is 1010
9999 mem: location 1010 is 1389
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1389 in location 1188
 106 run: result <- get *in, value:offset
9999 mem: location 1188 is 1389
9999 mem: skipping refcount at 1389
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1390 is 1120
9999 mem: location 1391 is 0
9999 mem: location 1188 is 1389
9999 mem: skipping refcount at 1389
9998 run: address to copy is 1390
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1390 is 1120
9999 mem: storing 1120 in location 1189
 106 run: reply result:_elem
9999 mem: location 1189 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1414
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1414 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1167
9999 mem: location 1125 is 3
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1167
9999 mem: location 1128 is 0
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1414 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1122 in location 1420
 105 run: jump-unless move, 
9999 mem: location 1420 is 1122
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1420 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1167
9999 mem: location 1125 is 3
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1167
9999 mem: location 1128 is 0
9999 mem: location 1420 is 1122
9998 run: address to copy is 1128
9998 run: its type is number
9999 mem: location 1128 is 0
9999 mem: storing 0 in location 1438
 105 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1434 is 3
9999 mem: location 1438 is 0
9999 mem: storing 0 in location 1439
 105 run: jump-unless coalesce?, 
9999 mem: location 1439 is 0
9998 run: jumping to instruction 666
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 mem: new alloc: 1516
9999 mem: storing 1516 in location 1414
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1431 is 3
9999 mem: location 1432 is 0
9999 mem: location 1433 is 1167
9999 mem: location 1435 is 2
9999 mem: location 1436 is 0
9999 mem: location 1437 is 1167
9999 mem: location 1434 is 3
9999 mem: location 1414 is 1516
9999 mem: skipping refcount at 1516
9999 mem: location 1414 is 1516
9999 mem: skipping refcount at 1516
9999 mem: storing 1 in location 1517
9999 mem: storing 3 in location 1518
9999 mem: storing 0 in location 1519
9999 mem: storing 1167 in location 1520
9999 mem: storing 2 in location 1521
9999 mem: storing 0 in location 1522
9999 mem: storing 1167 in location 1523
9999 mem: storing 3 in location 1524
 105 run: editor <- add-operation editor, op
9999 mem: location 1396 is 1000
9999 mem: location 1414 is 1516
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1385
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1516 in location 1386
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1385 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1389
9999 mem: location 1011 is 0
9999 mem: location 1385 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1387
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1386 is 1516
9999 mem: location 1387 is 1010
9999 mem: location 1010 is 1389
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1516 in location 1262
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1389 in location 1263
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1528
9999 mem: storing 1528 in location 1264
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1264 is 1528
9999 mem: skipping refcount at 1528
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1529 is 0
9999 mem: location 1530 is 0
9999 mem: location 1264 is 1528
9999 mem: skipping refcount at 1528
9998 run: address to copy is 1529
9999 mem: storing 1529 in location 1265
 107 run: *val <- copy x
9999 mem: location 1262 is 1516
9999 mem: location 1265 is 1529
9999 mem: storing 1516 in location 1529
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1264 is 1528
9999 mem: skipping refcount at 1528
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1529 is 1516
9999 mem: location 1530 is 0
9999 mem: location 1264 is 1528
9999 mem: skipping refcount at 1528
9999 type: type deduced to be address$
9998 run: address to copy is 1530
9999 mem: storing 1530 in location 1266
 107 run: *next <- copy in
9999 mem: location 1263 is 1389
9999 mem: location 1266 is 1530
9999 mem: storing 1389 in location 1530
 107 run: reply result
9999 mem: location 1264 is 1528
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1528
9999 mem: location 1387 is 1010
9999 mem: storing 1528 in location 1010
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1385 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1385 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1388
 106 run: *redo <- copy 0
9999 mem: location 1388 is 1011
9999 mem: storing 0 in location 1011
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1385 is 1000
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1396
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1395 is 1012
9999 mem: location 1396 is 1000
9999 mem: location 1401 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: storing 1012 in location 1341
9999 mem: storing 1000 in location 1343
9999 mem: storing 0 in location 1353
 104 run: jump-unless go-render?, 
9999 mem: location 1353 is 0
9998 run: jumping to instruction 25
9990 schedule: editor-event-loop/run1001/scenario-editor-moves-to-previous-line-from-left-margin
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1344
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1345
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1341 is 1012
9999 mem: location 1344 is 2
9999 mem: location 1345 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1262
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1263
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1264
 105 run: jump-unless screen, 
9999 mem: location 1262 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1265
 105 run: *row <- copy new-row
9999 mem: location 1263 is 2
9999 mem: location 1265 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1266
 105 run: *column <- copy new-column
9999 mem: location 1264 is 0
9999 mem: location 1266 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1341
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1342 is 1335
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1335 in location 1297
 105 run: jump-unless console, 
9999 mem: location 1297 is 1335
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1297 is 1335
9999 mem: skipping refcount at 1335
9999 mem: location 1336 is 2
9999 mem: location 1337 is 1325
9999 mem: location 1297 is 1335
9999 mem: skipping refcount at 1335
9998 run: address to copy is 1336
9999 mem: storing 1336 in location 1298
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1297 is 1335
9999 mem: skipping refcount at 1335
9999 mem: location 1336 is 2
9999 mem: location 1337 is 1325
9999 mem: location 1297 is 1335
9999 mem: skipping refcount at 1335
9998 run: address to copy is 1337
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1337 is 1325
9999 mem: storing 1325 in location 1299
 105 run: max:number <- length *buf
9999 mem: location 1299 is 1325
9999 mem: skipping refcount at 1325
9999 mem: storing 2 in location 1300
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1298 is 1336
9999 mem: location 1336 is 2
9999 mem: location 1300 is 2
9999 mem: storing 1 in location 1301
 105 run: jump-unless done?, 
9999 mem: location 1301 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1185 in location 1302
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1302 is 1185
9999 mem: skipping refcount at 1185
9999 mem: location 1186 is 0
9999 mem: location 1187 is 0
9999 mem: location 1188 is 0
9999 mem: location 1189 is 0
9999 mem: location 1297 is 1335
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1335
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1346
9999 mem: storing 0 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 1335 in location 1342
9999 mem: storing 1 in location 1350
9999 mem: storing 1 in location 1351
 104 run: jump-unless found?, 
9999 mem: location 1350 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1351 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1341 is 1012
9999 mem: location 1342 is 1335
9999 mem: location 1343 is 1000
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 2 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 2
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: assume-console [
    type [0]
  ]
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type [0]
9999 mem: storing 'type' event starting at 1533
9999 mem: storing 'text' tag at 1533
9999 mem: storing character 48 at 1534
9999 mem: storing console in 1537
9999 mem: storing console data in 1539
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run1002
9991 transform: --- deduce types for recipe run1002
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run1002
9991 transform: --- transform names for recipe run1002
9991 transform: --- resolve ambiguous calls for recipe run1002
9992 transform: instruction editor-event-loop
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 997
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 997
9991 transform: --- compute instruction operations for recipe run1002
9991 transform: --- transform braces for recipe run1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run1002
9991 transform: --- type-check 'call' instructions inside recipe run1002
9991 transform: --- type-check calls inside recipe run1002
9991 transform: --- convert 'new' to 'allocate' for recipe run1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1537
9999 mem: location 2 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1341
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1537 in location 1342
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1343
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1344
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1345
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1341 is 1012
9999 mem: location 1344 is 2
9999 mem: location 1345 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1262
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1263
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1264
 105 run: jump-unless screen, 
9999 mem: location 1262 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1265
 105 run: *row <- copy new-row
9999 mem: location 1263 is 2
9999 mem: location 1265 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1266
 105 run: *column <- copy new-column
9999 mem: location 1264 is 0
9999 mem: location 1266 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1341
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1342 is 1537
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1537 in location 1297
 105 run: jump-unless console, 
9999 mem: location 1297 is 1537
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1297 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 0
9999 mem: location 1539 is 1531
9999 mem: location 1297 is 1537
9999 mem: skipping refcount at 1537
9998 run: address to copy is 1538
9999 mem: storing 1538 in location 1298
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1297 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 0
9999 mem: location 1539 is 1531
9999 mem: location 1297 is 1537
9999 mem: skipping refcount at 1537
9998 run: address to copy is 1539
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1539 is 1531
9999 mem: storing 1531 in location 1299
 105 run: max:number <- length *buf
9999 mem: location 1299 is 1531
9999 mem: skipping refcount at 1531
9999 mem: storing 1 in location 1300
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1298 is 1538
9999 mem: location 1538 is 0
9999 mem: location 1300 is 1
9999 mem: storing 0 in location 1301
 105 run: jump-unless done?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1299 is 1531
9999 mem: skipping refcount at 1531
9998 run: base address is 1532
9999 mem: location 1298 is 1538
9999 mem: location 1538 is 0
9998 run: address to copy is 1533
9998 run: its type is event
9999 mem: location 1533 is 0
9999 mem: location 1534 is 48
9999 mem: location 1535 is 0
9999 mem: location 1536 is 0
9999 mem: storing 0 in location 1303
9999 mem: storing 48 in location 1304
9999 mem: storing 0 in location 1305
9999 mem: storing 0 in location 1306
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1298 is 1538
9999 mem: location 1538 is 0
9999 mem: location 1298 is 1538
9999 mem: storing 1 in location 1538
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1303 is 0
9999 mem: location 1304 is 48
9999 mem: location 1305 is 0
9999 mem: location 1306 is 0
9999 mem: location 1297 is 1537
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1537
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1346
9999 mem: storing 48 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 1537 in location 1342
9999 mem: storing 1 in location 1350
9999 mem: storing 0 in location 1351
 104 run: jump-unless found?, 
9999 mem: location 1350 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1351 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1346 is 0
9999 mem: location 1347 is 48
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 mem: storing 0 in location 1352
 104 run: jump-unless t, 
9999 mem: location 1352 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1352 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1341 is 1012
9999 mem: location 1343 is 1000
9999 mem: location 1346 is 0
9999 mem: location 1347 is 48
9999 mem: location 1348 is 0
9999 mem: location 1349 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1395
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1396
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1397
9999 mem: storing 48 in location 1398
9999 mem: storing 0 in location 1399
9999 mem: storing 0 in location 1400
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1401
 105 run: jump-if editor, 1:offset
9999 mem: location 1396 is 1000
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1395 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1540
9999 mem: storing 3 in location 1541
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1543
 106 run: jump-unless screen, 
9999 mem: location 1543 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1543 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1543 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1544
 106 run: reply width:number
9999 mem: location 1544 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1402
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1395 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1543
 106 run: jump-unless screen, 
9999 mem: location 1543 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1543 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1543 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1544
 106 run: reply height:number
9999 mem: location 1544 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1403
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1404
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1405
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1406
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1407
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1408
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1407 is 1007
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1409
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1408 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1410
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1397 is 0
9999 mem: location 1398 is 48
9999 mem: location 1399 is 0
9999 mem: location 1400 is 0
9999 mem: storing 1398 in location 1411
 105 run: jump-unless c, 
9999 mem: location 1411 is 1398
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1411 is 1398
9999 mem: location 1398 is 48
9999 mem: storing 0 in location 1412
 105 run: jump-unless redo?, 
9999 mem: location 1412 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1411 is 1398
9999 mem: location 1398 is 48
9999 mem: storing 0 in location 1423
 105 run: jump-unless undo?, 
9999 mem: location 1423 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1411 is 1398
9999 mem: location 1398 is 48
9999 mem: storing 0 in location 1428
 105 run: jump-unless page-up?, 
9999 mem: location 1428 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1411 is 1398
9999 mem: location 1398 is 48
9999 mem: storing 0 in location 1444
 105 run: jump-unless page-down?, 
9999 mem: location 1444 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1411 is 1398
9999 mem: location 1398 is 48
9999 mem: storing 0 in location 1445
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1445 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1411 is 1398
9999 mem: location 1398 is 48
9999 mem: storing 0 in location 1450
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1450 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1411 is 1398
9999 mem: location 1398 is 48
9999 mem: storing 0 in location 1451
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1451 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1411 is 1398
9999 mem: location 1398 is 48
9999 mem: storing 0 in location 1452
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1452 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1411 is 1398
9999 mem: location 1398 is 48
9999 mem: storing 0 in location 1453
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1453 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1411 is 1398
9999 mem: location 1398 is 48
9999 mem: storing 0 in location 1457
 105 run: jump-unless tab?, 
9999 mem: location 1457 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1411 is 1398
9999 mem: location 1398 is 48
9999 mem: storing 0 in location 1461
 105 run: jump-unless newline?, 
9999 mem: location 1461 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1411 is 1398
9999 mem: location 1398 is 48
9999 mem: storing 1 in location 1464
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1401
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1464 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1167
9999 mem: storing 1167 in location 1446
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1406 is 1004
9999 mem: location 1004 is 1198
9999 mem: storing 1198 in location 1458
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1396 is 1000
9999 mem: location 1411 is 1398
9999 mem: location 1398 is 48
9999 mem: location 1395 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1545
9999 mem: storing 31 in location 1546
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1548
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1549
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1550
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1548 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1198
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1548 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1004
9999 mem: storing 1004 in location 1551
 106 run: insert_2 c, *before-cursor
9999 mem: location 1549 is 48
9999 mem: location 1551 is 1004
9999 mem: location 1004 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1161
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1162
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1578
9999 mem: storing 1578 in location 1163
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1163 is 1578
9999 mem: skipping refcount at 1578
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1579 is 0
9999 mem: location 1580 is 0
9999 mem: location 1581 is 0
9999 mem: location 1163 is 1578
9999 mem: skipping refcount at 1578
9998 run: address to copy is 1579
9999 mem: storing 1579 in location 1164
 107 run: *val <- copy x
9999 mem: location 1161 is 48
9999 mem: location 1164 is 1579
9999 mem: storing 48 in location 1579
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1162 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 10
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1162 is 1198
9999 mem: skipping refcount at 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1200
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1200 is 1202
9999 mem: storing 1202 in location 1165
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1162 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 10
9999 mem: location 1200 is 1202
9999 mem: location 1201 is 1194
9999 mem: location 1162 is 1198
9999 mem: skipping refcount at 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1200
9999 mem: storing 1200 in location 1166
 107 run: *y <- copy new-node
9999 mem: location 1163 is 1578
9999 mem: location 1166 is 1200
9999 mem: storing 1578 in location 1200
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1163 is 1578
9999 mem: skipping refcount at 1578
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1579 is 48
9999 mem: location 1580 is 0
9999 mem: location 1581 is 0
9999 mem: location 1163 is 1578
9999 mem: skipping refcount at 1578
9999 type: type deduced to be character$
9998 run: address to copy is 1581
9999 mem: storing 1581 in location 1166
 107 run: *y <- copy in
9999 mem: location 1162 is 1198
9999 mem: location 1166 is 1581
9999 mem: storing 1198 in location 1581
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1163 is 1578
9999 mem: skipping refcount at 1578
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1579 is 48
9999 mem: location 1580 is 0
9999 mem: location 1581 is 1198
9999 mem: location 1163 is 1578
9999 mem: skipping refcount at 1578
9999 type: type deduced to be character$
9998 run: address to copy is 1580
9999 mem: storing 1580 in location 1166
 107 run: *y <- copy next-node
9999 mem: location 1165 is 1202
9999 mem: location 1166 is 1580
9999 mem: storing 1202 in location 1580
 107 run: jump-if next-node, 1:offset
9999 mem: location 1165 is 1202
9998 run: jumping to instruction 15
 107 run: y <- get-address *next-node, prev:offset
9999 mem: location 1165 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 100
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1198
9999 mem: location 1165 is 1202
9999 mem: skipping refcount at 1202
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9999 mem: storing 1205 in location 1166
 107 run: *y <- copy new-node
9999 mem: location 1163 is 1578
9999 mem: location 1166 is 1205
9999 mem: storing 1578 in location 1205
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1162 is 1198
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1551 is 1004
9999 mem: location 1004 is 1198
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1543
 107 run: jump-if in, 1:offset
9999 mem: location 1543 is 1198
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1543 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 10
9999 mem: location 1200 is 1578
9999 mem: location 1201 is 1194
9999 mem: location 1543 is 1198
9999 mem: skipping refcount at 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1200
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1200 is 1578
9999 mem: storing 1578 in location 1544
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1544 is 1578
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1578
9999 mem: location 1551 is 1004
9999 mem: storing 1578 in location 1004
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1548 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1578
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1548 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9999 mem: storing 1007 in location 1552
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1548 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1578
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1548 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9999 mem: storing 1008 in location 1553
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1548 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1578
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1548 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1005
9998 run: its type is number
9999 mem: location 1005 is 0
9999 mem: storing 0 in location 1554
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1548 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1578
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 0
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1548 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1006
9998 run: its type is number
9999 mem: location 1006 is 9
9999 mem: storing 9 in location 1555
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1552 is 1007
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1556
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1553 is 1008
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1557
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1550 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1543
 107 run: jump-unless screen, 
9999 mem: location 1543 is 1012
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1543 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1543 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1544
 107 run: reply width:number
9999 mem: location 1544 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1558
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1550 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1543
 107 run: jump-unless screen, 
9999 mem: location 1543 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1543 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1543 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1544
 107 run: reply height:number
9999 mem: location 1544 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1559
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1555 is 9
9999 mem: storing 8 in location 1560
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1553 is 1008
9999 mem: location 1008 is 0
9999 mem: location 1560 is 8
9999 mem: storing 0 in location 1561
 106 run: jump-unless at-wrap?, 
9999 mem: location 1561 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1553 is 1008
9999 mem: location 1008 is 0
9999 mem: location 1553 is 1008
9999 mem: storing 1 in location 1008
 106 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1551 is 1004
9999 mem: location 1004 is 1578
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1578 in location 1543
 107 run: jump-if in, 1:offset
9999 mem: location 1543 is 1578
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1543 is 1578
9999 mem: skipping refcount at 1578
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1579 is 48
9999 mem: location 1580 is 1202
9999 mem: location 1581 is 1198
9999 mem: location 1543 is 1578
9999 mem: skipping refcount at 1578
9999 type: type deduced to be character$
9998 run: address to copy is 1580
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1580 is 1202
9999 mem: storing 1202 in location 1544
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1544 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: storing 1202 in location 1568
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1568 is 1202
9999 mem: storing 0 in location 1569
 106 run: jump-unless at-end?, 
9999 mem: location 1569 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless next, 
9999 mem: location 1568 is 1202
9998 run: jump-unless fell through
 106 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1553 is 1008
9999 mem: location 1008 is 1
9999 mem: location 1558 is 10
9999 mem: storing 0 in location 1572
 106 run: jump-if at-right?, 
9999 mem: location 1572 is 0
9998 run: jump-if fell through
 106 run: curr:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1551 is 1004
9999 mem: location 1004 is 1578
9999 mem: storing 1578 in location 1574
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1550 is 1012
9999 mem: location 1556 is 2
9999 mem: location 1557 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1262
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1263
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1264
 107 run: jump-unless screen, 
9999 mem: location 1262 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1265
 107 run: *row <- copy new-row
9999 mem: location 1263 is 2
9999 mem: location 1265 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1266
 107 run: *column <- copy new-column
9999 mem: location 1264 is 0
9999 mem: location 1266 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column:number <- copy save-column
9999 mem: location 1557 is 0
9999 mem: storing 0 in location 1575
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1567
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1575 is 0
9999 mem: location 1555 is 9
9999 mem: storing 0 in location 1572
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1572 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1574 is 1578
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1574 is 1578
9999 mem: skipping refcount at 1578
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1579 is 48
9999 mem: location 1580 is 1202
9999 mem: location 1581 is 1198
9999 mem: location 1574 is 1578
9999 mem: skipping refcount at 1578
9998 run: address to copy is 1579
9998 run: its type is character
9999 mem: location 1579 is 48
9999 mem: storing 48 in location 1576
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1576 is 48
9999 mem: storing 0 in location 1577
 106 run: jump-if at-newline?, 
9999 mem: location 1577 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1550 is 1012
9999 mem: location 1576 is 48
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1271
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 107 run: jump-if color-found?, 
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1272
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 107 run: jump-if bg-color-found?, 
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1274
 107 run: trace 90, [print-character], c
9999 mem: location 1271 is 48
  90 print-character: 48 
 107 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1276
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1277
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1278
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1278 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1278 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1271 is 48
9999 mem: storing 0 in location 1281
 107 run: jump-unless newline?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1278 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: index <- add index, *column
9999 mem: location 1284 is 20
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1284
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1285
 107 run: len:number <- length *buf
9999 mem: location 1285 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1286
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1271 is 48
9999 mem: storing 0 in location 1287
 107 run: jump-unless backspace?, 
9999 mem: location 1287 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1285 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1284 is 20
9999 mem: storing 1060 in location 1289
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1289 is 1060
9999 mem: location 1060 is 100
9999 mem: location 1061 is 7
9999 mem: location 1289 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1290
 107 run: *cursor-contents <- copy c
9999 mem: location 1271 is 48
9999 mem: location 1290 is 1060
9999 mem: storing 48 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1289 is 1060
9999 mem: location 1060 is 48
9999 mem: location 1061 is 7
9999 mem: location 1289 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1291
 107 run: *cursor-color <- copy color
9999 mem: location 1272 is 7
9999 mem: location 1291 is 1061
9999 mem: storing 7 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1292
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1292 is 9
9999 mem: storing 0 in location 1293
 107 run: jump-if at-right?, 
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1575 is 0
9999 mem: storing 1 in location 1575
 106 run: curr <- next_2 curr
9999 mem: location 1574 is 1578
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1578 in location 1543
 107 run: jump-if in, 1:offset
9999 mem: location 1543 is 1578
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1543 is 1578
9999 mem: skipping refcount at 1578
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1579 is 48
9999 mem: location 1580 is 1202
9999 mem: location 1581 is 1198
9999 mem: location 1543 is 1578
9999 mem: skipping refcount at 1578
9999 type: type deduced to be character$
9998 run: address to copy is 1580
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1580 is 1202
9999 mem: storing 1202 in location 1544
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1544 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1202
9999 mem: storing 1202 in location 1574
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1567
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1575 is 1
9999 mem: location 1555 is 9
9999 mem: storing 0 in location 1572
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1572 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1574 is 1202
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1574 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 100
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1578
9999 mem: location 1574 is 1202
9999 mem: skipping refcount at 1202
9998 run: address to copy is 1203
9998 run: its type is character
9999 mem: location 1203 is 100
9999 mem: storing 100 in location 1576
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1576 is 100
9999 mem: storing 0 in location 1577
 106 run: jump-if at-newline?, 
9999 mem: location 1577 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1550 is 1012
9999 mem: location 1576 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1271
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 107 run: jump-if color-found?, 
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1272
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 107 run: jump-if bg-color-found?, 
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1274
 107 run: trace 90, [print-character], c
9999 mem: location 1271 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1276
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1277
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1278
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1278 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1278 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1271 is 100
9999 mem: storing 0 in location 1281
 107 run: jump-unless newline?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1278 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: index <- add index, *column
9999 mem: location 1284 is 20
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1284
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1285
 107 run: len:number <- length *buf
9999 mem: location 1285 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1286
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1271 is 100
9999 mem: storing 0 in location 1287
 107 run: jump-unless backspace?, 
9999 mem: location 1287 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1285 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1284 is 21
9999 mem: storing 1062 in location 1289
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1289 is 1062
9999 mem: location 1062 is 101
9999 mem: location 1063 is 7
9999 mem: location 1289 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1290
 107 run: *cursor-contents <- copy c
9999 mem: location 1271 is 100
9999 mem: location 1290 is 1062
9999 mem: storing 100 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1289 is 1062
9999 mem: location 1062 is 100
9999 mem: location 1063 is 7
9999 mem: location 1289 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1291
 107 run: *cursor-color <- copy color
9999 mem: location 1272 is 7
9999 mem: location 1291 is 1063
9999 mem: storing 7 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1292
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1292 is 9
9999 mem: storing 0 in location 1293
 107 run: jump-if at-right?, 
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1280 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1575 is 1
9999 mem: storing 2 in location 1575
 106 run: curr <- next_2 curr
9999 mem: location 1574 is 1202
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1202 in location 1543
 107 run: jump-if in, 1:offset
9999 mem: location 1543 is 1202
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1543 is 1202
9999 mem: skipping refcount at 1202
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1203 is 100
9999 mem: location 1204 is 1206
9999 mem: location 1205 is 1578
9999 mem: location 1543 is 1202
9999 mem: skipping refcount at 1202
9999 type: type deduced to be character$
9998 run: address to copy is 1204
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1204 is 1206
9999 mem: storing 1206 in location 1544
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1544 is 1206
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1206
9999 mem: storing 1206 in location 1574
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1567
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1575 is 2
9999 mem: location 1555 is 9
9999 mem: storing 0 in location 1572
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1572 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1574 is 1206
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1574 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 101
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1574 is 1206
9999 mem: skipping refcount at 1206
9998 run: address to copy is 1207
9998 run: its type is character
9999 mem: location 1207 is 101
9999 mem: storing 101 in location 1576
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1576 is 101
9999 mem: storing 0 in location 1577
 106 run: jump-if at-newline?, 
9999 mem: location 1577 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1550 is 1012
9999 mem: location 1576 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1271
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 107 run: jump-if color-found?, 
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1272
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 107 run: jump-if bg-color-found?, 
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1274
 107 run: trace 90, [print-character], c
9999 mem: location 1271 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1276
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1277
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1278
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1278 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1278 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1271 is 101
9999 mem: storing 0 in location 1281
 107 run: jump-unless newline?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1278 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: index <- add index, *column
9999 mem: location 1284 is 20
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1284
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1285
 107 run: len:number <- length *buf
9999 mem: location 1285 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1286
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1271 is 101
9999 mem: storing 0 in location 1287
 107 run: jump-unless backspace?, 
9999 mem: location 1287 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1285 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1284 is 22
9999 mem: storing 1064 in location 1289
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1289 is 1064
9999 mem: location 1064 is 102
9999 mem: location 1065 is 7
9999 mem: location 1289 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1290
 107 run: *cursor-contents <- copy c
9999 mem: location 1271 is 101
9999 mem: location 1290 is 1064
9999 mem: storing 101 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1289 is 1064
9999 mem: location 1064 is 101
9999 mem: location 1065 is 7
9999 mem: location 1289 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1291
 107 run: *cursor-color <- copy color
9999 mem: location 1272 is 7
9999 mem: location 1291 is 1065
9999 mem: storing 7 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1292
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1292 is 9
9999 mem: storing 0 in location 1293
 107 run: jump-if at-right?, 
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1280 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1575 is 2
9999 mem: storing 3 in location 1575
 106 run: curr <- next_2 curr
9999 mem: location 1574 is 1206
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1206 in location 1543
 107 run: jump-if in, 1:offset
9999 mem: location 1543 is 1206
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1543 is 1206
9999 mem: skipping refcount at 1206
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1207 is 101
9999 mem: location 1208 is 1210
9999 mem: location 1209 is 1202
9999 mem: location 1543 is 1206
9999 mem: skipping refcount at 1206
9999 type: type deduced to be character$
9998 run: address to copy is 1208
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1208 is 1210
9999 mem: storing 1210 in location 1544
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1544 is 1210
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1210
9999 mem: storing 1210 in location 1574
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1567
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1575 is 3
9999 mem: location 1555 is 9
9999 mem: storing 0 in location 1572
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1572 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1574 is 1210
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1574 is 1210
9999 mem: skipping refcount at 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1211 is 102
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1574 is 1210
9999 mem: skipping refcount at 1210
9998 run: address to copy is 1211
9998 run: its type is character
9999 mem: location 1211 is 102
9999 mem: storing 102 in location 1576
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1576 is 102
9999 mem: storing 0 in location 1577
 106 run: jump-if at-newline?, 
9999 mem: location 1577 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1550 is 1012
9999 mem: location 1576 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1270
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1271
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1272
9999 mem: storing 0 in location 1273
 107 run: jump-if color-found?, 
9999 mem: location 1273 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1272
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1274
9999 mem: storing 0 in location 1275
 107 run: jump-if bg-color-found?, 
9999 mem: location 1275 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1274
 107 run: trace 90, [print-character], c
9999 mem: location 1271 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1270 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1276
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1277
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1278
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1278 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1278 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1277 is 5
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1276 is 10
9999 mem: storing 1 in location 1279
 107 run: jump-if legal?, 1:offset
9999 mem: location 1279 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1271 is 102
9999 mem: storing 0 in location 1281
 107 run: jump-unless newline?, 
9999 mem: location 1281 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1278 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1276 is 10
9999 mem: storing 20 in location 1284
 107 run: index <- add index, *column
9999 mem: location 1284 is 20
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1284
9990 schedule: print/insert-at-cursor/handle-keyboard-event/editor-event-loop/run1002/scenario-editor-moves-to-previous-line-from-left-margin
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1270 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1285
 107 run: len:number <- length *buf
9999 mem: location 1285 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1286
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1271 is 102
9999 mem: storing 0 in location 1287
 107 run: jump-unless backspace?, 
9999 mem: location 1287 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1285 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1284 is 23
9999 mem: storing 1066 in location 1289
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1289 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1289 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1290
 107 run: *cursor-contents <- copy c
9999 mem: location 1271 is 102
9999 mem: location 1290 is 1066
9999 mem: storing 102 in location 1066
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1289 is 1066
9999 mem: location 1066 is 102
9999 mem: location 1067 is 7
9999 mem: location 1289 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1291
 107 run: *cursor-color <- copy color
9999 mem: location 1272 is 7
9999 mem: location 1291 is 1067
9999 mem: storing 7 in location 1067
 107 run: right:number <- subtract width, 1
9999 mem: location 1276 is 10
9999 mem: storing 9 in location 1292
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1292 is 9
9999 mem: storing 0 in location 1293
 107 run: jump-if at-right?, 
9999 mem: location 1293 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1280 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1280 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1270 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1575 is 3
9999 mem: storing 4 in location 1575
 106 run: curr <- next_2 curr
9999 mem: location 1574 is 1210
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1210 in location 1543
 107 run: jump-if in, 1:offset
9999 mem: location 1543 is 1210
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1543 is 1210
9999 mem: skipping refcount at 1210
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1211 is 102
9999 mem: location 1212 is 1214
9999 mem: location 1213 is 1206
9999 mem: location 1543 is 1210
9999 mem: skipping refcount at 1210
9999 type: type deduced to be character$
9998 run: address to copy is 1212
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1212 is 1214
9999 mem: storing 1214 in location 1544
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1544 is 1214
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1214
9999 mem: storing 1214 in location 1574
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1567
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1575 is 4
9999 mem: location 1555 is 9
9999 mem: storing 0 in location 1572
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1572 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1574 is 1214
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1574 is 1214
9999 mem: skipping refcount at 1214
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1215 is 10
9999 mem: location 1216 is 1218
9999 mem: location 1217 is 1210
9999 mem: location 1574 is 1214
9999 mem: skipping refcount at 1214
9998 run: address to copy is 1215
9998 run: its type is character
9999 mem: location 1215 is 10
9999 mem: storing 10 in location 1576
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1576 is 10
9999 mem: storing 1 in location 1577
 106 run: jump-if at-newline?, 
9999 mem: location 1577 is 1
9998 run: jumping to instruction 77
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1567
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1548 is 1000
9999 mem: location 1550 is 1012
9999 mem: location 1567 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: storing 1000 in location 1396
9999 mem: storing 1012 in location 1395
9999 mem: storing 0 in location 1401
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1578
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1002
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1002 is 1167
9999 mem: storing 1167 in location 1448
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1578
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1396 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1415
 105 run: jump-unless *undo, 
9999 mem: location 1415 is 1010
9999 mem: location 1010 is 1528
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1415 is 1010
9999 mem: location 1010 is 1528
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1528 in location 1543
 106 run: result <- get *in, value:offset
9999 mem: location 1543 is 1528
9999 mem: skipping refcount at 1528
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1529 is 1516
9999 mem: location 1530 is 1389
9999 mem: location 1543 is 1528
9999 mem: skipping refcount at 1528
9998 run: address to copy is 1529
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1529 is 1516
9999 mem: storing 1516 in location 1544
 106 run: reply result:_elem
9999 mem: location 1544 is 1516
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1516
9999 mem: storing 1516 in location 1414
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1414 is 1516
9999 mem: skipping refcount at 1516
9999 mem: location 1517 is 1
9999 mem: location 1518 is 3
9999 mem: location 1519 is 0
9999 mem: location 1520 is 1167
9999 mem: location 1521 is 2
9999 mem: location 1522 is 0
9999 mem: location 1523 is 1167
9999 mem: location 1524 is 3
9999 mem: location 1525 is 0
9999 mem: location 1526 is 0
9999 mem: location 1527 is 0
9999 mem: location 1414 is 1516
9999 mem: skipping refcount at 1516
9999 mem: storing 0 in location 1421
 105 run: jump-unless typing, 
9999 mem: location 1421 is 0
9998 run: jumping to instruction 429
 105 run: insert-from:address:shared:duplex-list:character <- next_2 cursor-before
9999 mem: location 1458 is 1198
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1198 in location 1543
 106 run: jump-if in, 1:offset
9999 mem: location 1543 is 1198
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1543 is 1198
9999 mem: skipping refcount at 1198
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1199 is 10
9999 mem: location 1200 is 1578
9999 mem: location 1201 is 1194
9999 mem: location 1543 is 1198
9999 mem: skipping refcount at 1198
9999 type: type deduced to be character$
9998 run: address to copy is 1200
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1200 is 1578
9999 mem: storing 1578 in location 1544
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1544 is 1578
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1578
9999 mem: storing 1578 in location 1422
 105 run: insert-to:address:shared:duplex-list:character <- next_2 insert-from
9999 mem: location 1422 is 1578
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1578 in location 1543
 106 run: jump-if in, 1:offset
9999 mem: location 1543 is 1578
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1543 is 1578
9999 mem: skipping refcount at 1578
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1579 is 48
9999 mem: location 1580 is 1202
9999 mem: location 1581 is 1198
9999 mem: location 1543 is 1578
9999 mem: skipping refcount at 1578
9999 type: type deduced to be character$
9998 run: address to copy is 1580
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1580 is 1202
9999 mem: storing 1202 in location 1544
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1544 is 1202
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1202
9999 mem: storing 1202 in location 1460
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 mem: new alloc: 1582
9999 mem: storing 1582 in location 1414
 105 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1409 is 2
9999 mem: location 1410 is 0
9999 mem: location 1446 is 1167
9999 mem: location 1407 is 1007
9999 mem: location 1007 is 2
9999 mem: location 1408 is 1008
9999 mem: location 1008 is 1
9999 mem: location 1448 is 1167
9999 mem: location 1422 is 1578
9999 mem: location 1460 is 1202
9999 mem: location 1414 is 1582
9999 mem: skipping refcount at 1582
9999 mem: location 1414 is 1582
9999 mem: skipping refcount at 1582
9999 mem: storing 0 in location 1583
9999 mem: storing 2 in location 1584
9999 mem: storing 0 in location 1585
9999 mem: storing 1167 in location 1586
9999 mem: storing 2 in location 1587
9999 mem: storing 1 in location 1588
9999 mem: storing 1167 in location 1589
9999 mem: storing 1578 in location 1590
9999 mem: storing 1202 in location 1591
9999 mem: storing 1 in location 1592
 105 run: editor <- add-operation editor, op
9999 mem: location 1396 is 1000
9999 mem: location 1414 is 1582
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1385
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1582 in location 1386
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1385 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1578
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1528
9999 mem: location 1011 is 0
9999 mem: location 1385 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1010
9999 mem: storing 1010 in location 1387
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1386 is 1582
9999 mem: location 1387 is 1010
9999 mem: location 1010 is 1528
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1582 in location 1262
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1528 in location 1263
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1594
9999 mem: storing 1594 in location 1264
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1264 is 1594
9999 mem: skipping refcount at 1594
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1595 is 0
9999 mem: location 1596 is 0
9999 mem: location 1264 is 1594
9999 mem: skipping refcount at 1594
9998 run: address to copy is 1595
9999 mem: storing 1595 in location 1265
 107 run: *val <- copy x
9999 mem: location 1262 is 1582
9999 mem: location 1265 is 1595
9999 mem: storing 1582 in location 1595
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1264 is 1594
9999 mem: skipping refcount at 1594
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1595 is 1582
9999 mem: location 1596 is 0
9999 mem: location 1264 is 1594
9999 mem: skipping refcount at 1594
9999 type: type deduced to be address$
9998 run: address to copy is 1596
9999 mem: storing 1596 in location 1266
 107 run: *next <- copy in
9999 mem: location 1263 is 1528
9999 mem: location 1266 is 1596
9999 mem: storing 1528 in location 1596
 107 run: reply result
9999 mem: location 1264 is 1594
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1594
9999 mem: location 1387 is 1010
9999 mem: storing 1594 in location 1010
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1385 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1578
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1594
9999 mem: location 1011 is 0
9999 mem: location 1385 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1011
9999 mem: storing 1011 in location 1388
 106 run: *redo <- copy 0
9999 mem: location 1388 is 1011
9999 mem: storing 0 in location 1011
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1385 is 1000
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1396
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1395 is 1012
9999 mem: location 1396 is 1000
9999 mem: location 1401 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1000
9998 run: result 2 is 0
9999 mem: storing 1012 in location 1341
9999 mem: storing 1000 in location 1343
9999 mem: storing 0 in location 1353
 104 run: jump-unless go-render?, 
9999 mem: location 1353 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1578
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1594
9999 mem: location 1011 is 0
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1007
9998 run: its type is number
9999 mem: location 1007 is 2
9999 mem: storing 2 in location 1344
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1167
9999 mem: location 1002 is 1167
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1578
9999 mem: location 1005 is 0
9999 mem: location 1006 is 9
9999 mem: location 1007 is 2
9999 mem: location 1008 is 1
9999 mem: location 1009 is 1
9999 mem: location 1010 is 1594
9999 mem: location 1011 is 0
9999 mem: location 1343 is 1000
9999 mem: skipping refcount at 1000
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 1
9999 mem: storing 1 in location 1345
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1341 is 1012
9999 mem: location 1344 is 2
9999 mem: location 1345 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1262
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1263
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1264
 105 run: jump-unless screen, 
9999 mem: location 1262 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1265
 105 run: *row <- copy new-row
9999 mem: location 1263 is 2
9999 mem: location 1265 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1262 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1266
 105 run: *column <- copy new-column
9999 mem: location 1264 is 1
9999 mem: location 1266 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1262 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: storing 1012 in location 1341
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1342 is 1537
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1537 in location 1297
 105 run: jump-unless console, 
9999 mem: location 1297 is 1537
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1297 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 1
9999 mem: location 1539 is 1531
9999 mem: location 1297 is 1537
9999 mem: skipping refcount at 1537
9998 run: address to copy is 1538
9999 mem: storing 1538 in location 1298
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1297 is 1537
9999 mem: skipping refcount at 1537
9999 mem: location 1538 is 1
9999 mem: location 1539 is 1531
9999 mem: location 1297 is 1537
9999 mem: skipping refcount at 1537
9998 run: address to copy is 1539
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1539 is 1531
9999 mem: storing 1531 in location 1299
 105 run: max:number <- length *buf
9999 mem: location 1299 is 1531
9999 mem: skipping refcount at 1531
9999 mem: storing 1 in location 1300
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1298 is 1538
9999 mem: location 1538 is 1
9999 mem: location 1300 is 1
9999 mem: storing 1 in location 1301
 105 run: jump-unless done?, 
9999 mem: location 1301 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1540 in location 1302
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1302 is 1540
9999 mem: skipping refcount at 1540
9999 mem: location 1541 is 0
9999 mem: location 1542 is 0
9999 mem: location 1543 is 0
9999 mem: location 1544 is 0
9999 mem: location 1297 is 1537
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1537
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1346
9999 mem: storing 0 in location 1347
9999 mem: storing 0 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 1537 in location 1342
9999 mem: storing 1 in location 1350
9999 mem: storing 1 in location 1351
 104 run: jump-unless found?, 
9999 mem: location 1350 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1351 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1341 is 1012
9999 mem: location 1342 is 1537
9999 mem: location 1343 is 1000
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .abc       .
    .0def      .
    .ghi       .
    .┈┈┈┈┈┈┈┈┈┈.
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
