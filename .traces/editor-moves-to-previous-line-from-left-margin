 102 run: assume-console [
    left-click 3, 0
    press up-arrow
  ]
9993 parse: instruction: left-click
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"3": "literal"}
9993 parse:   ingredient: {"0": "literal"}
9992 load: after rewriting: left-click 3, 0
9993 parse: instruction: press
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"up-arrow": <>}
9992 load: after rewriting: press up-arrow
9999 mem: storing 'left-click' event starting at 1341
9999 mem: storing 'press' event starting at 1345
9999 mem: storing console in 1349
9999 mem: storing console data in 1351
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
    3:number <- get *2:address:shared:editor-data, cursor-row:offset
    4:number <- get *2:address:shared:editor-data, cursor-column:offset
  ]
9991 parse: --- defining run_1001
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-row": "offset"}
9993 parse:   product: {"3": "number"}
9992 load: after rewriting: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9993 parse: instruction: get
9993 parse:   number of ingredients: 2
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>, "lookup": <>}
9993 parse:   ingredient: {"cursor-column": "offset"}
9993 parse:   product: {"4": "number"}
9992 load: after rewriting: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 parse: recipe run_1001 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1001
9991 transform: --- deduce types for recipe run_1001
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1001
9991 transform: --- transform names for recipe run_1001
9993 name: element cursor-row of type editor-data is at offset 7
9993 name: element cursor-column of type editor-data is at offset 8
9991 transform: --- resolve ambiguous calls for recipe run_1001
9992 transform: instruction editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 97
9992 transform: checking variant 0: recipe editor-event-loop {"screen": <"address" : <"shared" : <"screen" : <>>>>} {"console": <"address" : <"shared" : <"console" : <>>>>} {"editor": <"address" : <"shared" : <"editor-data" : <>>>>} -> {"screen": <"address" : <"shared" : <"screen" : <>>>>} {"console": <"address" : <"shared" : <"console" : <>>>>} {"editor": <"address" : <"shared" : <"editor-data" : <>>>>}
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 97
9991 transform: --- compute instruction operations for recipe run_1001
9991 transform: --- transform braces for recipe run_1001
9992 transform: editor-event-loop ...
9992 transform: get ...
9992 transform: get ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1001
9991 transform: --- type-check 'call' instructions inside recipe run_1001
9991 transform: --- type-check calls inside recipe run_1001
9991 transform: --- convert 'new' to 'allocate' for recipe run_1001
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1349
9999 mem: location 2 is 1158
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 mem: new alloc: 1352
9999 mem: storing 14 in location 1353
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1355
9999 mem: incrementing refcount of 1012: 101 -> 102
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1349 in location 1356
9999 mem: incrementing refcount of 1349: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1357
9999 mem: incrementing refcount of 1158: 6 -> 7
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1358
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1359
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1355 is 1012
9999 mem: location 1358 is 1
9999 mem: location 1359 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 102 -> 103
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 6
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 1
9999 mem: location 1279 is 1015
9999 mem: storing 1 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 103 -> 102
9999 mem: storing 1012 in location 1355
9999 mem: incrementing refcount of 1012: 102 -> 103
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1356 is 1349
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1349 in location 1311
9999 mem: incrementing refcount of 1349: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1311 is 1349
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1349
9999 mem: skipping refcount at 1349
9999 mem: location 1350 is 0
9999 mem: location 1351 is 1339
9999 mem: location 1311 is 1349
9999 mem: skipping refcount at 1349
9998 run: address to copy is 1350
9999 mem: storing 1350 in location 1312
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1349
9999 mem: skipping refcount at 1349
9999 mem: location 1350 is 0
9999 mem: location 1351 is 1339
9999 mem: location 1311 is 1349
9999 mem: skipping refcount at 1349
9998 run: address to copy is 1351
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1351 is 1339
9999 mem: storing 1339 in location 1313
9999 mem: incrementing refcount of 1339: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9999 mem: storing 2 in location 1314
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1350
9999 mem: location 1350 is 0
9999 mem: location 1314 is 2
9999 mem: storing 0 in location 1315
 105 run: jump-unless done?, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9998 run: base address is 1340
9999 mem: location 1312 is 1350
9999 mem: location 1350 is 0
9998 run: address to copy is 1341
9998 run: its type is event
9999 mem: location 1341 is 2
9999 mem: location 1342 is 65513
9999 mem: location 1343 is 3
9999 mem: location 1344 is 0
9999 mem: storing 2 in location 1317
9999 mem: storing 65513 in location 1318
9999 mem: storing 3 in location 1319
9999 mem: storing 0 in location 1320
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1312 is 1350
9999 mem: location 1350 is 0
9999 mem: location 1312 is 1350
9999 mem: storing 1 in location 1350
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1317 is 2
9999 mem: location 1318 is 65513
9999 mem: location 1319 is 3
9999 mem: location 1320 is 0
9999 mem: location 1311 is 1349
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [2, 65513, 3, 0]
9998 run: result 1 is 1349
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 2 in location 1360
9999 mem: storing 65513 in location 1361
9999 mem: storing 3 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: decrementing refcount of 1349: 2 -> 1
9999 mem: storing 1349 in location 1356
9999 mem: incrementing refcount of 1349: 1 -> 2
9999 mem: storing 1 in location 1364
9999 mem: storing 0 in location 1365
 104 run: jump-unless found?, 
9999 mem: location 1364 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1365 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1360 is 2
9999 mem: location 1361 is 65513
9999 mem: location 1362 is 3
9999 mem: location 1363 is 0
9999 mem: storing 1361 in location 1366
 104 run: jump-unless t, 
9999 mem: location 1366 is 1361
9998 run: jump-unless fell through
 104 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1355 is 1012
9999 mem: location 1357 is 1158
9999 mem: location 1366 is 1361
9999 mem: location 1361 is 65513
9999 mem: location 1362 is 3
9999 mem: location 1363 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 27
9999 mem: allocating size 29
9999 mem: new alloc: 1368
9999 mem: storing 27 in location 1369
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1371
9999 mem: incrementing refcount of 1012: 103 -> 104
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1372
9999 mem: incrementing refcount of 1158: 7 -> 8
 105 run: t:touch-event <- next-ingredient-without-typechecking 
9999 mem: storing 65513 in location 1373
9999 mem: storing 3 in location 1374
9999 mem: storing 0 in location 1375
 105 run: jump-if editor, 1:offset
9999 mem: location 1372 is 1158
9998 run: jumping to instruction 6
 105 run: click-row:number <- get t, row:offset
9999 mem: location 1373 is 65513
9999 mem: location 1374 is 3
9999 mem: location 1375 is 0
9998 run: address to copy is 1374
9998 run: its type is number
9999 mem: location 1374 is 3
9999 mem: storing 3 in location 1376
 105 run: jump-if click-row, 1:offset
9999 mem: location 1376 is 3
9998 run: jumping to instruction 9
 105 run: click-column:number <- get t, column:offset
9999 mem: location 1373 is 65513
9999 mem: location 1374 is 3
9999 mem: location 1375 is 0
9998 run: address to copy is 1375
9998 run: its type is number
9999 mem: location 1375 is 0
9999 mem: storing 0 in location 1377
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1378
 105 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1377 is 0
9999 mem: location 1378 is 0
9999 mem: storing 0 in location 1379
 105 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1379 is 0
9998 run: jumping to instruction 14
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1380
 105 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1377 is 0
9999 mem: location 1380 is 9
9999 mem: storing 0 in location 1381
 105 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1381 is 0
9998 run: jumping to instruction 18
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 1
9999 mem: storing 1 in location 1382
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1383
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1384
9999 mem: incrementing refcount of 1180: 11 -> 12
 105 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1371 is 1012
9999 mem: location 1372 is 1158
9999 mem: location 1376 is 3
9999 mem: location 1377 is 0
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 26
9999 mem: allocating size 28
9999 mem: new alloc: 1397
9999 mem: storing 26 in location 1398
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1400
9999 mem: incrementing refcount of 1012: 104 -> 105
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1401
9999 mem: incrementing refcount of 1158: 8 -> 9
 106 run: target-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1402
 106 run: target-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1403
 106 run: jump-if editor, 1:offset
9999 mem: location 1401 is 1158
9998 run: jumping to instruction 7
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1401 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1401 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1404
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1401 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1401 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1405
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1400 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 105 -> 106
 107 run: jump-unless screen, 
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1202
 107 run: reply height:number
9999 mem: location 1202 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1406
 106 run: curr:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1401 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1401 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1407
9999 mem: incrementing refcount of 1180: 12 -> 13
 106 run: prev:address:shared:duplex-list:character <- copy curr
9999 mem: location 1407 is 1180
9999 mem: storing 1180 in location 1408
9999 mem: incrementing refcount of 1180: 13 -> 14
 106 run: curr <- next_2 curr
9999 mem: location 1407 is 1180
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1201
9999 mem: incrementing refcount of 1180: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1180
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 15 -> 14
9999 mem: storing 1194 in location 1407
9999 mem: incrementing refcount of 1194: 15 -> 16
 106 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1409
 106 run: column:number <- copy left
9999 mem: location 1404 is 0
9999 mem: storing 0 in location 1410
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1401 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 1
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1401 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1411
 106 run: *cursor-row <- copy target-row
9999 mem: location 1402 is 3
9999 mem: location 1411 is 1166
9999 mem: storing 3 in location 1166
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1401 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1401 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1412
 106 run: *cursor-column <- copy target-column
9999 mem: location 1403 is 0
9999 mem: location 1412 is 1167
9999 mem: storing 0 in location 1167
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1401 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1180
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1401 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1413
 106 run: jump-unless curr, 
9999 mem: location 1407 is 1194
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1409 is 1
9999 mem: location 1406 is 5
9999 mem: storing 0 in location 1414
 106 run: jump-if off-screen?, 
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 1
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 0 in location 1415
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1407 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1407 is 1194
9999 mem: skipping refcount at 1194
9998 run: address to copy is 1195
9998 run: its type is character
9999 mem: location 1195 is 97
9999 mem: storing 97 in location 1417
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1417 is 97
9999 mem: storing 0 in location 1418
 106 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1410 is 0
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1420
 106 run: jump-unless at-right?, 
9999 mem: location 1420 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1407 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 17 -> 16
9999 mem: storing 1203 in location 1407
9999 mem: incrementing refcount of 1203: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1408 is 1180
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1201
9999 mem: incrementing refcount of 1180: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1180
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1181 is 167
9999 mem: location 1182 is 1194
9999 mem: location 1183 is 0
9999 mem: location 1201 is 1180
9999 mem: skipping refcount at 1180
9999 type: type deduced to be character$
9998 run: address to copy is 1182
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1182 is 1194
9999 mem: storing 1194 in location 1202
9999 mem: incrementing refcount of 1194: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1194
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1194
9999 mem: decrementing refcount of 1180: 15 -> 14
9999 mem: storing 1194 in location 1408
9999 mem: incrementing refcount of 1194: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1410 is 0
9999 mem: storing 1 in location 1410
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1407 is 1203
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1409 is 1
9999 mem: location 1406 is 5
9999 mem: storing 0 in location 1414
 106 run: jump-if off-screen?, 
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 1
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 0 in location 1415
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1407 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1407 is 1203
9999 mem: skipping refcount at 1203
9998 run: address to copy is 1204
9998 run: its type is character
9999 mem: location 1204 is 98
9999 mem: storing 98 in location 1417
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1417 is 98
9999 mem: storing 0 in location 1418
 106 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1410 is 1
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1420
 106 run: jump-unless at-right?, 
9999 mem: location 1420 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1407 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 17 -> 16
9999 mem: storing 1207 in location 1407
9999 mem: incrementing refcount of 1207: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1408 is 1194
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1194 in location 1201
9999 mem: incrementing refcount of 1194: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1194
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1195 is 97
9999 mem: location 1196 is 1203
9999 mem: location 1197 is 1180
9999 mem: location 1201 is 1194
9999 mem: skipping refcount at 1194
9999 type: type deduced to be character$
9998 run: address to copy is 1196
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1196 is 1203
9999 mem: storing 1203 in location 1202
9999 mem: incrementing refcount of 1203: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1203
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1203
9999 mem: decrementing refcount of 1194: 19 -> 18
9999 mem: storing 1203 in location 1408
9999 mem: incrementing refcount of 1203: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1410 is 1
9999 mem: storing 2 in location 1410
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1407 is 1207
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1409 is 1
9999 mem: location 1406 is 5
9999 mem: storing 0 in location 1414
 106 run: jump-if off-screen?, 
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 1
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 0 in location 1415
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1407 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1407 is 1207
9999 mem: skipping refcount at 1207
9998 run: address to copy is 1208
9998 run: its type is character
9999 mem: location 1208 is 99
9999 mem: storing 99 in location 1417
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1417 is 99
9999 mem: storing 0 in location 1418
 106 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1410 is 2
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1420
 106 run: jump-unless at-right?, 
9999 mem: location 1420 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1407 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 17 -> 16
9999 mem: storing 1211 in location 1407
9999 mem: incrementing refcount of 1211: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1408 is 1203
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1203 in location 1201
9999 mem: incrementing refcount of 1203: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1203
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1204 is 98
9999 mem: location 1205 is 1207
9999 mem: location 1206 is 1194
9999 mem: location 1201 is 1203
9999 mem: skipping refcount at 1203
9999 type: type deduced to be character$
9998 run: address to copy is 1205
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1205 is 1207
9999 mem: storing 1207 in location 1202
9999 mem: incrementing refcount of 1207: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1207
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1207
9999 mem: decrementing refcount of 1203: 19 -> 18
9999 mem: storing 1207 in location 1408
9999 mem: incrementing refcount of 1207: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1410 is 2
9999 mem: storing 3 in location 1410
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1407 is 1211
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1409 is 1
9999 mem: location 1406 is 5
9999 mem: storing 0 in location 1414
 106 run: jump-if off-screen?, 
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 1
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 0 in location 1415
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1407 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1407 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1417
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1417 is 10
9999 mem: storing 1 in location 1418
 106 run: jump-unless newline?, 
9999 mem: location 1418 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 1
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 0 in location 1415
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1409 is 1
9999 mem: storing 2 in location 1409
 106 run: column <- copy left
9999 mem: location 1404 is 0
9999 mem: storing 0 in location 1410
 106 run: curr <- next_2 curr
9999 mem: location 1407 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 17 -> 16
9999 mem: storing 1215 in location 1407
9999 mem: incrementing refcount of 1215: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1408 is 1207
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1207 in location 1201
9999 mem: incrementing refcount of 1207: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1207
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1208 is 99
9999 mem: location 1209 is 1211
9999 mem: location 1210 is 1203
9999 mem: location 1201 is 1207
9999 mem: skipping refcount at 1207
9999 type: type deduced to be character$
9998 run: address to copy is 1209
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1209 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1207: 19 -> 18
9999 mem: storing 1211 in location 1408
9999 mem: incrementing refcount of 1211: 17 -> 18
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1407 is 1215
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1409 is 2
9999 mem: location 1406 is 5
9999 mem: storing 0 in location 1414
 106 run: jump-if off-screen?, 
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 2
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 0 in location 1415
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1407 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1407 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 100
9999 mem: storing 100 in location 1417
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1417 is 100
9999 mem: storing 0 in location 1418
 106 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1410 is 0
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1420
 106 run: jump-unless at-right?, 
9999 mem: location 1420 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1407 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 17 -> 16
9999 mem: storing 1219 in location 1407
9999 mem: incrementing refcount of 1219: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1408 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1201
9999 mem: incrementing refcount of 1211: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1201 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1211: 19 -> 18
9999 mem: storing 1215 in location 1408
9999 mem: incrementing refcount of 1215: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1410 is 0
9999 mem: storing 1 in location 1410
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1407 is 1219
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1409 is 2
9999 mem: location 1406 is 5
9999 mem: storing 0 in location 1414
 106 run: jump-if off-screen?, 
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 2
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 0 in location 1415
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1407 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1407 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 101
9999 mem: storing 101 in location 1417
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1417 is 101
9999 mem: storing 0 in location 1418
 106 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1410 is 1
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1420
 106 run: jump-unless at-right?, 
9999 mem: location 1420 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1407 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 17 -> 16
9999 mem: storing 1223 in location 1407
9999 mem: incrementing refcount of 1223: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1408 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 19 -> 18
9999 mem: storing 1219 in location 1408
9999 mem: incrementing refcount of 1219: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1410 is 1
9999 mem: storing 2 in location 1410
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1407 is 1223
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1409 is 2
9999 mem: location 1406 is 5
9999 mem: storing 0 in location 1414
 106 run: jump-if off-screen?, 
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 2
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 0 in location 1415
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1407 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1407 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is character
9999 mem: location 1224 is 102
9999 mem: storing 102 in location 1417
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1417 is 102
9999 mem: storing 0 in location 1418
 106 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1410 is 2
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1420
 106 run: jump-unless at-right?, 
9999 mem: location 1420 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1407 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1202
9999 mem: incrementing refcount of 1227: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 17 -> 16
9999 mem: storing 1227 in location 1407
9999 mem: incrementing refcount of 1227: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1408 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 19 -> 18
9999 mem: storing 1223 in location 1408
9999 mem: incrementing refcount of 1223: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1410 is 2
9999 mem: storing 3 in location 1410
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1407 is 1227
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1409 is 2
9999 mem: location 1406 is 5
9999 mem: storing 0 in location 1414
 106 run: jump-if off-screen?, 
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 2
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 0 in location 1415
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1407 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1407 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is character
9999 mem: location 1228 is 10
9999 mem: storing 10 in location 1417
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1417 is 10
9999 mem: storing 1 in location 1418
 106 run: jump-unless newline?, 
9999 mem: location 1418 is 1
9998 run: jump-unless fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 2
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 0 in location 1415
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1415 is 0
9998 run: jumping to instruction 43
 106 run: row <- add row, 1
9999 mem: location 1409 is 2
9999 mem: storing 3 in location 1409
 106 run: column <- copy left
9999 mem: location 1404 is 0
9999 mem: storing 0 in location 1410
 106 run: curr <- next_2 curr
9999 mem: location 1407 is 1227
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1201
9999 mem: incrementing refcount of 1227: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1227
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1202
9999 mem: incrementing refcount of 1231: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 17 -> 16
9999 mem: storing 1231 in location 1407
9999 mem: incrementing refcount of 1231: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1408 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1202
9999 mem: incrementing refcount of 1227: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 19 -> 18
9999 mem: storing 1227 in location 1408
9999 mem: incrementing refcount of 1227: 17 -> 18
 106 run: jump +next-character:label
9998 run: jumping to instruction 22
 106 run: jump-unless curr, 
9999 mem: location 1407 is 1231
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1409 is 3
9999 mem: location 1406 is 5
9999 mem: storing 0 in location 1414
 106 run: jump-if off-screen?, 
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 3
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 1 in location 1415
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1415 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1410 is 0
9999 mem: location 1412 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 1 in location 1416
 106 run: jump-unless at-cursor?, 
9999 mem: location 1416 is 1
9998 run: jump-unless fell through
 106 run: *before-cursor <- copy prev
9999 mem: location 1408 is 1227
9999 mem: location 1413 is 1162
9999 mem: decrementing refcount of 1180: 14 -> 13
9999 mem: storing 1227 in location 1162
9999 mem: incrementing refcount of 1227: 18 -> 19
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1407 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1407 is 1231
9999 mem: skipping refcount at 1231
9998 run: address to copy is 1232
9998 run: its type is character
9999 mem: location 1232 is 103
9999 mem: storing 103 in location 1417
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1417 is 103
9999 mem: storing 0 in location 1418
 106 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 49
9990 schedule: snap-cursor/move-cursor-in-editor/editor-event-loop/run_1001/scenario_editor-moves-to-previous-line-from-left-margin
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1410 is 0
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1420
 106 run: jump-unless at-right?, 
9999 mem: location 1420 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1407 is 1231
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1201
9999 mem: incrementing refcount of 1231: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1231
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1202
9999 mem: incrementing refcount of 1235: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 17 -> 16
9999 mem: storing 1235 in location 1407
9999 mem: incrementing refcount of 1235: 15 -> 16
 106 run: prev <- next_2 prev
9999 mem: location 1408 is 1227
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1201
9999 mem: incrementing refcount of 1227: 19 -> 20
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1227
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1229
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1229 is 1231
9999 mem: storing 1231 in location 1202
9999 mem: incrementing refcount of 1231: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1231
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1231
9999 mem: decrementing refcount of 1227: 20 -> 19
9999 mem: storing 1231 in location 1408
9999 mem: incrementing refcount of 1231: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1410 is 0
9999 mem: storing 1 in location 1410
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1407 is 1235
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1409 is 3
9999 mem: location 1406 is 5
9999 mem: storing 0 in location 1414
 106 run: jump-if off-screen?, 
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 3
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 1 in location 1415
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1415 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1410 is 1
9999 mem: location 1412 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1416
 106 run: jump-unless at-cursor?, 
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1407 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1407 is 1235
9999 mem: skipping refcount at 1235
9998 run: address to copy is 1236
9998 run: its type is character
9999 mem: location 1236 is 104
9999 mem: storing 104 in location 1417
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1417 is 104
9999 mem: storing 0 in location 1418
 106 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1410 is 1
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1420
 106 run: jump-unless at-right?, 
9999 mem: location 1420 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1407 is 1235
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1201
9999 mem: incrementing refcount of 1235: 16 -> 17
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1235
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1202
9999 mem: incrementing refcount of 1239: 12 -> 13
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 17 -> 16
9999 mem: storing 1239 in location 1407
9999 mem: incrementing refcount of 1239: 13 -> 14
 106 run: prev <- next_2 prev
9999 mem: location 1408 is 1231
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1231 in location 1201
9999 mem: incrementing refcount of 1231: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1231
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1232 is 103
9999 mem: location 1233 is 1235
9999 mem: location 1234 is 1227
9999 mem: location 1201 is 1231
9999 mem: skipping refcount at 1231
9999 type: type deduced to be character$
9998 run: address to copy is 1233
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1233 is 1235
9999 mem: storing 1235 in location 1202
9999 mem: incrementing refcount of 1235: 16 -> 17
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1235
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1235
9999 mem: decrementing refcount of 1231: 19 -> 18
9999 mem: storing 1235 in location 1408
9999 mem: incrementing refcount of 1235: 17 -> 18
 106 run: column <- add column, 1
9999 mem: location 1410 is 1
9999 mem: storing 2 in location 1410
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1407 is 1239
9998 run: jump-unless fell through
 106 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1409 is 3
9999 mem: location 1406 is 5
9999 mem: storing 0 in location 1414
 106 run: jump-if off-screen?, 
9999 mem: location 1414 is 0
9998 run: jump-if fell through
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 3
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 1 in location 1415
 106 run: jump-unless at-cursor-row?, 
9999 mem: location 1415 is 1
9998 run: jump-unless fell through
 106 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1410 is 2
9999 mem: location 1412 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1416
 106 run: jump-unless at-cursor?, 
9999 mem: location 1416 is 0
9998 run: jumping to instruction 31
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1407 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1407 is 1239
9999 mem: skipping refcount at 1239
9998 run: address to copy is 1240
9998 run: its type is character
9999 mem: location 1240 is 105
9999 mem: storing 105 in location 1417
 106 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1417 is 105
9999 mem: storing 0 in location 1418
 106 run: jump-unless newline?, 
9999 mem: location 1418 is 0
9998 run: jumping to instruction 49
 106 run: at-right?:boolean <- equal column, right
9999 mem: location 1410 is 2
9999 mem: location 1405 is 9
9999 mem: storing 0 in location 1420
 106 run: jump-unless at-right?, 
9999 mem: location 1420 is 0
9998 run: jumping to instruction 56
 106 run: curr <- next_2 curr
9999 mem: location 1407 is 1239
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1239 in location 1201
9999 mem: incrementing refcount of 1239: 14 -> 15
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1239
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1239
9999 mem: skipping refcount at 1239
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1240 is 105
9999 mem: location 1241 is 0
9999 mem: location 1242 is 1235
9999 mem: location 1201 is 1239
9999 mem: skipping refcount at 1239
9999 type: type deduced to be character$
9998 run: address to copy is 1241
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1241 is 0
9999 mem: storing 0 in location 1202
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 0
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 0
9999 mem: decrementing refcount of 1239: 15 -> 14
9999 mem: storing 0 in location 1407
 106 run: prev <- next_2 prev
9999 mem: location 1408 is 1235
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1235 in location 1201
9999 mem: incrementing refcount of 1235: 18 -> 19
 107 run: jump-if in, 1:offset
9999 mem: location 1201 is 1235
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1236 is 104
9999 mem: location 1237 is 1239
9999 mem: location 1238 is 1231
9999 mem: location 1201 is 1235
9999 mem: skipping refcount at 1235
9999 type: type deduced to be character$
9998 run: address to copy is 1237
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1237 is 1239
9999 mem: storing 1239 in location 1202
9999 mem: incrementing refcount of 1239: 14 -> 15
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1202 is 1239
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1239
9999 mem: decrementing refcount of 1235: 19 -> 18
9999 mem: storing 1239 in location 1408
9999 mem: incrementing refcount of 1239: 15 -> 16
 106 run: column <- add column, 1
9999 mem: location 1410 is 2
9999 mem: storing 3 in location 1410
 106 run: jump 
9998 run: jumping to instruction 21
 106 run: jump-unless curr, 
9999 mem: location 1407 is 0
9998 run: jumping to instruction 61
 106 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1409 is 3
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 1 in location 1415
 106 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1410 is 3
9999 mem: location 1412 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1421
 106 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1415 is 1
9999 mem: location 1421 is 0
9999 mem: storing 0 in location 1422
 106 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1409 is 3
9999 mem: location 1411 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 0 in location 1423
 106 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1422 is 0
9999 mem: location 1423 is 0
9999 mem: storing 0 in location 1424
 106 run: jump-unless before-cursor?, 
9999 mem: location 1424 is 0
9998 run: jumping to instruction 72
 106 run: reply editor:address:shared:editor-data
9999 mem: location 1401 is 1158
9999 abandon: saving in free-list of size 28
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1158
9999 mem: decrementing refcount of 1158: 9 -> 8
9999 mem: storing 1158 in location 1372
9999 mem: incrementing refcount of 1158: 8 -> 9
 105 run: undo-coalesce-tag:number <- copy 0/never
9999 mem: storing 0 in location 1385
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 3
9999 mem: storing 3 in location 1386
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1387
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1372 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1388
9999 mem: incrementing refcount of 1180: 13 -> 14
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1385 is 0
9998 run: jumping to instruction 44
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: storing 1000 in location 1390
9999 mem: incrementing refcount of 1000: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1382 is 1
9999 mem: location 1383 is 0
9999 mem: location 1384 is 1180
9999 mem: location 1386 is 3
9999 mem: location 1387 is 0
9999 mem: location 1388 is 1180
9999 mem: location 1385 is 0
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1390 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1 in location 1001
9999 mem: storing 1 in location 1002
9999 mem: storing 0 in location 1003
9999 mem: storing 1180 in location 1004
9999 mem: storing 3 in location 1005
9999 mem: storing 0 in location 1006
9999 mem: storing 1180 in location 1007
9999 mem: storing 0 in location 1008
 105 run: editor <- add-operation editor, op
9999 mem: location 1372 is 1158
9999 mem: location 1390 is 1000
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 mem: new alloc: 1425
9999 mem: storing 5 in location 1426
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1428
9999 mem: incrementing refcount of 1158: 9 -> 10
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1429
9999 mem: incrementing refcount of 1000: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1428 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 0
9999 mem: location 1170 is 0
9999 mem: location 1428 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1430
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1429 is 1000
9999 mem: location 1430 is 1169
9999 mem: location 1169 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1276
9999 mem: incrementing refcount of 1000: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1277
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1432
9999 mem: storing 1432 in location 1278
9999 mem: incrementing refcount of 1432: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1278 is 1432
9999 mem: skipping refcount at 1432
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1433 is 0
9999 mem: location 1434 is 0
9999 mem: location 1278 is 1432
9999 mem: skipping refcount at 1432
9998 run: address to copy is 1433
9999 mem: storing 1433 in location 1279
 107 run: *val <- copy x
9999 mem: location 1276 is 1000
9999 mem: location 1279 is 1433
9999 mem: storing 1000 in location 1433
9999 mem: incrementing refcount of 1000: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1278 is 1432
9999 mem: skipping refcount at 1432
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1433 is 1000
9999 mem: location 1434 is 0
9999 mem: location 1278 is 1432
9999 mem: skipping refcount at 1432
9999 type: type deduced to be address$
9998 run: address to copy is 1434
9999 mem: storing 1434 in location 1280
 107 run: *next <- copy in
9999 mem: location 1277 is 0
9999 mem: location 1280 is 1434
9999 mem: storing 0 in location 1434
 107 run: reply result
9999 mem: location 1278 is 1432
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1432
9999 mem: location 1430 is 1169
9999 mem: storing 1432 in location 1169
9999 mem: incrementing refcount of 1432: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1428 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1428 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1431
 106 run: *redo <- copy 0
9999 mem: location 1431 is 1170
9999 mem: storing 0 in location 1170
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1428 is 1158
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1158
9999 mem: decrementing refcount of 1158: 10 -> 9
9999 mem: storing 1158 in location 1372
9999 mem: incrementing refcount of 1158: 9 -> 10
 105 run: reply 1/true
9999 abandon: saving in free-list of size 29
9999 trace: reply: decrementing callstack depth from 4
 104 run: jump +next-event:label
9998 run: jumping to instruction 6
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 3
9999 mem: storing 3 in location 1358
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1359
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1355 is 1012
9999 mem: location 1358 is 3
9999 mem: location 1359 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 106 -> 107
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 3 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 1
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 3
9999 mem: location 1279 is 1015
9999 mem: storing 3 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 107 -> 106
9999 mem: storing 1012 in location 1355
9999 mem: incrementing refcount of 1012: 106 -> 107
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1356 is 1349
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1349 in location 1311
9999 mem: incrementing refcount of 1349: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1311 is 1349
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1349
9999 mem: skipping refcount at 1349
9999 mem: location 1350 is 1
9999 mem: location 1351 is 1339
9999 mem: location 1311 is 1349
9999 mem: skipping refcount at 1349
9998 run: address to copy is 1350
9999 mem: storing 1350 in location 1312
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1349
9999 mem: skipping refcount at 1349
9999 mem: location 1350 is 1
9999 mem: location 1351 is 1339
9999 mem: location 1311 is 1349
9999 mem: skipping refcount at 1349
9998 run: address to copy is 1351
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1351 is 1339
9999 mem: storing 1339 in location 1313
9999 mem: incrementing refcount of 1339: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9999 mem: storing 2 in location 1314
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1350
9999 mem: location 1350 is 1
9999 mem: location 1314 is 2
9999 mem: storing 0 in location 1315
 105 run: jump-unless done?, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9998 run: base address is 1340
9999 mem: location 1312 is 1350
9999 mem: location 1350 is 1
9998 run: address to copy is 1345
9998 run: its type is event
9999 mem: location 1345 is 1
9999 mem: location 1346 is 65517
9999 mem: location 1347 is 0
9999 mem: location 1348 is 0
9999 mem: storing 1 in location 1317
9999 mem: storing 65517 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1312 is 1350
9999 mem: location 1350 is 1
9999 mem: location 1312 is 1350
9999 mem: storing 2 in location 1350
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1317 is 1
9999 mem: location 1318 is 65517
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1311 is 1349
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [1, 65517, 0, 0]
9998 run: result 1 is 1349
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 1 in location 1360
9999 mem: storing 65517 in location 1361
9999 mem: storing 0 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: decrementing refcount of 1349: 3 -> 2
9999 mem: storing 1349 in location 1356
9999 mem: incrementing refcount of 1349: 2 -> 3
9999 mem: storing 1 in location 1364
9999 mem: storing 0 in location 1365
 104 run: jump-unless found?, 
9999 mem: location 1364 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1365 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1360 is 1
9999 mem: location 1361 is 65517
9999 mem: location 1362 is 0
9999 mem: location 1363 is 0
9999 mem: storing 0 in location 1366
 104 run: jump-unless t, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1366 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1355 is 1012
9999 mem: location 1357 is 1158
9999 mem: location 1360 is 1
9999 mem: location 1361 is 65517
9999 mem: location 1362 is 0
9999 mem: location 1363 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 mem: new alloc: 1435
9999 mem: storing 85 in location 1436
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1438
9999 mem: incrementing refcount of 1012: 107 -> 108
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1439
9999 mem: incrementing refcount of 1158: 10 -> 11
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1440
9999 mem: storing 65517 in location 1441
9999 mem: storing 0 in location 1442
9999 mem: storing 0 in location 1443
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1444
 105 run: jump-if editor, 1:offset
9999 mem: location 1439 is 1158
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1438 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 108 -> 109
 106 run: jump-unless screen, 
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1202
 106 run: reply width:number
9999 mem: location 1202 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1445
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1438 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1201
9999 mem: incrementing refcount of 1012: 109 -> 110
 106 run: jump-unless screen, 
9999 mem: location 1201 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1201 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1202
 106 run: reply height:number
9999 mem: location 1202 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1446
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1447
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1448
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1449
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1450
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1451
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1450 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 3 in location 1452
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1451 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1453
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1440 is 1
9999 mem: location 1441 is 65517
9999 mem: location 1442 is 0
9999 mem: location 1443 is 0
9999 mem: storing 0 in location 1454
 105 run: jump-unless c, 
9999 mem: location 1454 is 0
9998 run: jumping to instruction 438
 105 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1440 is 1
9999 mem: location 1441 is 65517
9999 mem: location 1442 is 0
9999 mem: location 1443 is 0
9999 mem: storing 1441 in location 1508
 105 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1508 is 1441
 105 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1508 is 1441
9999 mem: location 1441 is 65517
9999 mem: storing 0 in location 1471
 105 run: jump-unless page-up?, 
9999 mem: location 1471 is 0
9998 run: jumping to instruction 482
 105 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1508 is 1441
9999 mem: location 1441 is 65517
9999 mem: storing 0 in location 1487
 105 run: jump-unless page-down?, 
9999 mem: location 1487 is 0
9998 run: jumping to instruction 523
 105 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1508 is 1441
9999 mem: location 1441 is 65517
9999 mem: storing 0 in location 1494
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1494 is 0
9998 run: jumping to instruction 561
 105 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1508 is 1441
9999 mem: location 1441 is 65517
9999 mem: storing 0 in location 1495
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 599
 105 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1508 is 1441
9999 mem: location 1441 is 65517
9999 mem: storing 0 in location 1509
 105 run: jump-unless move-to-next-line?, 
9999 mem: location 1509 is 0
9998 run: jumping to instruction 636
 105 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1508 is 1441
9999 mem: location 1441 is 65517
9999 mem: storing 1 in location 1510
 105 run: jump-unless move-to-previous-line?, 
9999 mem: location 1510 is 1
9998 run: jump-unless fell through
 105 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 3
9999 mem: storing 3 in location 1474
 105 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1475
 105 run: before-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1476
9999 mem: incrementing refcount of 1180: 14 -> 15
 105 run: editor, go-render? <- move-to-previous-line editor
9999 mem: location 1439 is 1158
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 20
9999 mem: allocating size 22
9999 mem: new alloc: 1522
9999 mem: storing 20 in location 1523
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1525
9999 mem: incrementing refcount of 1158: 11 -> 12
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1525 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1525 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1526
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1525 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1525 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1527
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1525 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1525 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1528
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1525 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1525 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1529
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1525 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1525 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1530
 106 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1526 is 1166
9999 mem: location 1166 is 3
9999 mem: storing 0 in location 1531
 106 run: jump-if already-at-top?, 
9999 mem: location 1531 is 0
9998 run: jump-if fell through
 106 run: curr:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1528 is 1162
9999 mem: location 1162 is 1227
9999 mem: storing 1227 in location 1532
9999 mem: incrementing refcount of 1227: 19 -> 20
 106 run: old:address:shared:duplex-list:character <- copy curr
9999 mem: location 1532 is 1227
9999 mem: storing 1227 in location 1533
9999 mem: incrementing refcount of 1227: 20 -> 21
 106 run: c2:character <- get *curr, value:offset
9999 mem: location 1532 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1532 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is character
9999 mem: location 1228 is 10
9999 mem: storing 10 in location 1534
 106 run: at-newline?:boolean <- equal c2, 10/newline
9999 mem: location 1534 is 10
9999 mem: storing 1 in location 1535
 106 run: jump-if at-newline?, 
9999 mem: location 1535 is 1
9998 run: jumping to instruction 21
 106 run: old <- copy curr
9999 mem: location 1532 is 1227
9999 mem: decrementing refcount of 1227: 21 -> 20
9999 mem: storing 1227 in location 1533
9999 mem: incrementing refcount of 1227: 20 -> 21
 106 run: curr <- before-previous-line curr, editor
9999 mem: location 1532 is 1227
9999 mem: location 1525 is 1158
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: allocating size 15
9999 mem: new alloc: 1544
9999 mem: storing 13 in location 1545
 107 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1547
9999 mem: incrementing refcount of 1227: 21 -> 22
 107 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1548
9999 mem: incrementing refcount of 1158: 12 -> 13
 107 run: c:character <- get *curr, value:offset
9999 mem: location 1547 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1547 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is character
9999 mem: location 1228 is 10
9999 mem: storing 10 in location 1549
 107 run: left:number <- get *editor, left:offset
9999 mem: location 1548 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1548 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1550
 107 run: right:number <- get *editor, right:offset
9999 mem: location 1548 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1548 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1551
 107 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1551 is 9
9999 mem: location 1550 is 0
9999 mem: storing 9 in location 1552
 107 run: sentinel:address:shared:duplex-list:character <- get *editor, data:offset
9999 mem: location 1548 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1227
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 3
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1548 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1159
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1159 is 1180
9999 mem: storing 1180 in location 1553
9999 mem: incrementing refcount of 1180: 15 -> 16
 107 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1547 is 1227
9999 mem: location 1553 is 1180
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 108 run: curr:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1174
9999 mem: incrementing refcount of 1227: 22 -> 23
 108 run: start:address:shared:duplex-list:character <- next-ingredient-without-typechecking 
9999 mem: storing 1180 in location 1175
9999 mem: incrementing refcount of 1180: 16 -> 17
 108 run: result:number <- copy 0
9999 mem: storing 0 in location 1176
 108 run: jump-if curr, 1:offset
9999 mem: location 1174 is 1227
9998 run: jumping to instruction 6
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1227
9999 mem: location 1175 is 1180
9999 mem: storing 0 in location 1177
 108 run: jump-unless at-start?, 1:offset
9999 mem: location 1177 is 0
9998 run: jumping to instruction 9
 108 run: curr <- prev_2 curr
9999 mem: location 1174 is 1227
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1201
9999 mem: incrementing refcount of 1227: 23 -> 24
 109 run: jump-if in, 1:offset
9999 mem: location 1201 is 1227
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1230
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1230 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 18 -> 19
 109 run: reply result
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1227: 24 -> 23
9999 mem: storing 1223 in location 1174
9999 mem: incrementing refcount of 1223: 19 -> 20
 108 run: jump-unless curr, 
9999 mem: location 1174 is 1223
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1223
9999 mem: location 1175 is 1180
9999 mem: storing 0 in location 1177
 108 run: jump-if at-start?, 
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1174 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1174 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is character
9999 mem: location 1224 is 102
9999 mem: storing 102 in location 1178
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1178 is 102
9999 mem: storing 0 in location 1179
 108 run: jump-if at-newline?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1176 is 0
9999 mem: storing 1 in location 1176
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1174 is 1223
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 20 -> 21
 109 run: jump-if in, 1:offset
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1226
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1226 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 18 -> 19
 109 run: reply result
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1223: 21 -> 20
9999 mem: storing 1219 in location 1174
9999 mem: incrementing refcount of 1219: 19 -> 20
 108 run: jump-unless curr, 
9999 mem: location 1174 is 1219
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1219
9999 mem: location 1175 is 1180
9999 mem: storing 0 in location 1177
 108 run: jump-if at-start?, 
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1174 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1174 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 101
9999 mem: storing 101 in location 1178
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1178 is 101
9999 mem: storing 0 in location 1179
 108 run: jump-if at-newline?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1176 is 1
9999 mem: storing 2 in location 1176
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1174 is 1219
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 20 -> 21
 109 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1222
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1222 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 18 -> 19
 109 run: reply result
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1219: 21 -> 20
9999 mem: storing 1215 in location 1174
9999 mem: incrementing refcount of 1215: 19 -> 20
 108 run: jump-unless curr, 
9999 mem: location 1174 is 1215
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1215
9999 mem: location 1175 is 1180
9999 mem: storing 0 in location 1177
 108 run: jump-if at-start?, 
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1174 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1174 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 100
9999 mem: storing 100 in location 1178
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1178 is 100
9999 mem: storing 0 in location 1179
 108 run: jump-if at-newline?, 
9999 mem: location 1179 is 0
9998 run: jump-if fell through
 108 run: result <- add result, 1
9999 mem: location 1176 is 2
9999 mem: storing 3 in location 1176
 108 run: jump 
9998 run: jumping to instruction 10
 108 run: curr <- prev_2 curr
9999 mem: location 1174 is 1215
9999 trace: incrementing callstack depth to 8
 109 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 109 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 20 -> 21
 109 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 109 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1218
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1218 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 18 -> 19
 109 run: reply result
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 8
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1215: 21 -> 20
9999 mem: storing 1211 in location 1174
9999 mem: incrementing refcount of 1211: 19 -> 20
 108 run: jump-unless curr, 
9999 mem: location 1174 is 1211
9998 run: jump-unless fell through
 108 run: at-start?:boolean <- equal curr, start
9999 mem: location 1174 is 1211
9999 mem: location 1175 is 1180
9999 mem: storing 0 in location 1177
 108 run: jump-if at-start?, 
9999 mem: location 1177 is 0
9998 run: jump-if fell through
 108 run: c:character <- get *curr, value:offset
9999 mem: location 1174 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1174 is 1211
9999 mem: skipping refcount at 1211
9998 run: address to copy is 1212
9998 run: its type is character
9999 mem: location 1212 is 10
9999 mem: storing 10 in location 1178
 108 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1178 is 10
9999 mem: storing 1 in location 1179
 108 run: jump-if at-newline?, 
9999 mem: location 1179 is 1
9998 run: jumping to instruction 19
 108 run: reply result:number
9999 mem: location 1176 is 3
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 3
9999 mem: storing 3 in location 1554
 107 run: jump-if len, 
9999 mem: location 1554 is 3
9998 run: jumping to instruction 15
 107 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1554 is 3
9999 mem: location 1552 is 9
9999 mem: storing 3 in location 1556
 107 run: jump-if max, 
9999 mem: location 1556 is 3
9998 run: jumping to instruction 20
 107 run: max <- add max, 1
9999 mem: location 1556 is 3
9999 mem: storing 4 in location 1556
 107 run: count:number <- copy 0
9999 mem: storing 0 in location 1557
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1557 is 0
9999 mem: location 1556 is 4
9999 mem: storing 0 in location 1558
 107 run: jump-if done?, 
9999 mem: location 1558 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1547 is 1227
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1227 in location 1201
9999 mem: incrementing refcount of 1227: 23 -> 24
 108 run: jump-if in, 1:offset
9999 mem: location 1201 is 1227
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1201 is 1227
9999 mem: skipping refcount at 1227
9999 type: type deduced to be character$
9998 run: address to copy is 1230
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1230 is 1223
9999 mem: storing 1223 in location 1202
9999 mem: incrementing refcount of 1223: 20 -> 21
 108 run: reply result
9999 mem: location 1202 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1223
9999 mem: storing 1223 in location 1555
9999 mem: incrementing refcount of 1223: 21 -> 22
 107 run: jump-unless prev, 
9999 mem: location 1555 is 1223
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1555 is 1223
9999 mem: decrementing refcount of 1227: 24 -> 23
9999 mem: storing 1223 in location 1547
9999 mem: incrementing refcount of 1223: 22 -> 23
 107 run: count <- add count, 1
9999 mem: location 1557 is 0
9999 mem: storing 1 in location 1557
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1557 is 1
9999 mem: location 1556 is 4
9999 mem: storing 0 in location 1558
 107 run: jump-if done?, 
9999 mem: location 1558 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1547 is 1223
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1201
9999 mem: incrementing refcount of 1223: 23 -> 24
 108 run: jump-if in, 1:offset
9999 mem: location 1201 is 1223
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1201 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1226
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1226 is 1219
9999 mem: storing 1219 in location 1202
9999 mem: incrementing refcount of 1219: 20 -> 21
 108 run: reply result
9999 mem: location 1202 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1223: 24 -> 23
9999 mem: storing 1219 in location 1555
9999 mem: incrementing refcount of 1219: 21 -> 22
 107 run: jump-unless prev, 
9999 mem: location 1555 is 1219
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1555 is 1219
9999 mem: decrementing refcount of 1223: 23 -> 22
9999 mem: storing 1219 in location 1547
9999 mem: incrementing refcount of 1219: 22 -> 23
 107 run: count <- add count, 1
9999 mem: location 1557 is 1
9999 mem: storing 2 in location 1557
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1557 is 2
9999 mem: location 1556 is 4
9999 mem: storing 0 in location 1558
 107 run: jump-if done?, 
9999 mem: location 1558 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1547 is 1219
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1201
9999 mem: incrementing refcount of 1219: 23 -> 24
 108 run: jump-if in, 1:offset
9999 mem: location 1201 is 1219
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1201 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1222
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1222 is 1215
9999 mem: storing 1215 in location 1202
9999 mem: incrementing refcount of 1215: 20 -> 21
 108 run: reply result
9999 mem: location 1202 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1219: 24 -> 23
9999 mem: storing 1215 in location 1555
9999 mem: incrementing refcount of 1215: 21 -> 22
 107 run: jump-unless prev, 
9999 mem: location 1555 is 1215
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1555 is 1215
9999 mem: decrementing refcount of 1219: 23 -> 22
9999 mem: storing 1215 in location 1547
9999 mem: incrementing refcount of 1215: 22 -> 23
 107 run: count <- add count, 1
9999 mem: location 1557 is 2
9999 mem: storing 3 in location 1557
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1557 is 3
9999 mem: location 1556 is 4
9999 mem: storing 0 in location 1558
 107 run: jump-if done?, 
9999 mem: location 1558 is 0
9998 run: jump-if fell through
 107 run: prev:address:shared:duplex-list:character <- prev_2 curr
9999 mem: location 1547 is 1215
9999 trace: incrementing callstack depth to 7
 108 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 108 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1201
9999 mem: incrementing refcount of 1215: 23 -> 24
 108 run: jump-if in, 1:offset
9999 mem: location 1201 is 1215
9998 run: jumping to instruction 4
 108 run: result <- get *in, prev:offset
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1201 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1218
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1218 is 1211
9999 mem: storing 1211 in location 1202
9999 mem: incrementing refcount of 1211: 20 -> 21
 108 run: reply result
9999 mem: location 1202 is 1211
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 7
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1215: 24 -> 23
9999 mem: storing 1211 in location 1555
9999 mem: incrementing refcount of 1211: 21 -> 22
 107 run: jump-unless prev, 
9999 mem: location 1555 is 1211
9998 run: jump-unless fell through
 107 run: curr <- copy prev
9999 mem: location 1555 is 1211
9999 mem: decrementing refcount of 1215: 23 -> 22
9999 mem: storing 1211 in location 1547
9999 mem: incrementing refcount of 1211: 22 -> 23
 107 run: count <- add count, 1
9999 mem: location 1557 is 3
9999 mem: storing 4 in location 1557
 107 run: jump 
9998 run: jumping to instruction 24
 107 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1557 is 4
9999 mem: location 1556 is 4
9999 mem: storing 1 in location 1558
 107 run: jump-if done?, 
9999 mem: location 1558 is 1
9998 run: jumping to instruction 31
 107 run: reply curr
9999 mem: location 1547 is 1211
9999 abandon: saving in free-list of size 15
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1211
9999 mem: decrementing refcount of 1227: 23 -> 22
9999 mem: storing 1211 in location 1532
9999 mem: incrementing refcount of 1211: 23 -> 24
 106 run: no-motion?:boolean <- equal curr, old
9999 mem: location 1532 is 1211
9999 mem: location 1533 is 1227
9999 mem: storing 0 in location 1536
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1537
 106 run: jump-unless no-motion?, 1:offset
9999 mem: location 1536 is 0
9998 run: jumping to instruction 29
 106 run: *before-cursor <- copy curr
9999 mem: location 1532 is 1211
9999 mem: location 1528 is 1162
9999 mem: decrementing refcount of 1227: 22 -> 21
9999 mem: storing 1211 in location 1162
9999 mem: incrementing refcount of 1211: 24 -> 25
 106 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1526 is 1166
9999 mem: location 1166 is 3
9999 mem: location 1526 is 1166
9999 mem: storing 2 in location 1166
 106 run: target-column:number <- copy *cursor-column
9999 mem: location 1527 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1538
 106 run: *cursor-column <- copy left
9999 mem: location 1529 is 0
9999 mem: location 1527 is 1167
9999 mem: storing 0 in location 1167
 106 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1527 is 1167
9999 mem: location 1167 is 0
9999 mem: location 1538 is 0
9999 mem: storing 1 in location 1539
 106 run: jump-if done?, 
9999 mem: location 1539 is 1
9998 run: jumping to instruction 45
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1537
 106 run: reply editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1525 is 1158
9999 mem: location 1537 is 0
9999 abandon: saving in free-list of size 22
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1158
9998 run: result 1 is 0
9999 mem: decrementing refcount of 1158: 13 -> 12
9999 mem: storing 1158 in location 1439
9999 mem: incrementing refcount of 1158: 12 -> 13
9999 mem: storing 0 in location 1444
 105 run: undo-coalesce-tag:number <- copy 3/up-arrow
9999 mem: storing 3 in location 1477
 105 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1478
 105 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1479
 105 run: after-top-of-screen:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1480
9999 mem: incrementing refcount of 1180: 17 -> 18
 105 run: jump-unless undo-coalesce-tag, 
9999 mem: location 1477 is 3
9998 run: jump-unless fell through
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1458
 105 run: jump-unless *undo, 
9999 mem: location 1458 is 1169
9999 mem: location 1169 is 1432
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1458 is 1169
9999 mem: location 1169 is 1432
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1432 in location 1201
9999 mem: incrementing refcount of 1432: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1201 is 1432
9999 mem: skipping refcount at 1432
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1433 is 1000
9999 mem: location 1434 is 0
9999 mem: location 1201 is 1432
9999 mem: skipping refcount at 1432
9998 run: address to copy is 1433
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1433 is 1000
9999 mem: storing 1000 in location 1202
9999 mem: incrementing refcount of 1000: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1202 is 1000
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1000
9999 mem: storing 1000 in location 1457
9999 mem: incrementing refcount of 1000: 5 -> 6
 105 run: move:address:move-operation <- maybe-convert *op, move:variant
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9999 mem: location 1001 is 1
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1180
9999 mem: location 1005 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1180
9999 mem: location 1008 is 0
9999 mem: location 1009 is 0
9999 mem: location 1010 is 0
9999 mem: location 1011 is 0
9999 mem: location 1457 is 1000
9999 mem: skipping refcount at 1000
9999 mem: storing 1002 in location 1463
 105 run: jump-unless move, 
9999 mem: location 1463 is 1002
9998 run: jump-unless fell through
 105 run: previous-coalesce-tag:number <- get *move, tag:offset
9999 mem: location 1463 is 1002
9999 mem: location 1002 is 1
9999 mem: location 1003 is 0
9999 mem: location 1004 is 1180
9999 mem: location 1005 is 3
9999 mem: location 1006 is 0
9999 mem: location 1007 is 1180
9999 mem: location 1008 is 0
9999 mem: location 1463 is 1002
9998 run: address to copy is 1008
9998 run: its type is number
9999 mem: location 1008 is 0
9999 mem: storing 0 in location 1481
 105 run: coalesce?:boolean <- equal undo-coalesce-tag, previous-coalesce-tag
9999 mem: location 1477 is 3
9999 mem: location 1481 is 0
9999 mem: storing 0 in location 1482
 105 run: jump-unless coalesce?, 
9999 mem: location 1482 is 0
9998 run: jumping to instruction 666
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 abandon: picking up space from free-list of size 12
9999 mem: decrementing refcount of 1000: 6 -> 5
9999 mem: storing 1120 in location 1457
9999 mem: incrementing refcount of 1120: 0 -> 1
 105 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, undo-coalesce-tag
9999 mem: location 1474 is 3
9999 mem: location 1475 is 0
9999 mem: location 1476 is 1180
9999 mem: location 1478 is 2
9999 mem: location 1479 is 0
9999 mem: location 1480 is 1180
9999 mem: location 1477 is 3
9999 mem: location 1457 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1457 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 1 in location 1121
9999 mem: storing 3 in location 1122
9999 mem: storing 0 in location 1123
9999 mem: storing 1180 in location 1124
9999 mem: storing 2 in location 1125
9999 mem: storing 0 in location 1126
9999 mem: storing 1180 in location 1127
9999 mem: storing 3 in location 1128
 105 run: editor <- add-operation editor, op
9999 mem: location 1439 is 1158
9999 mem: location 1457 is 1120
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1428
9999 mem: incrementing refcount of 1158: 13 -> 14
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1429
9999 mem: incrementing refcount of 1120: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1428 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1432
9999 mem: location 1170 is 0
9999 mem: location 1428 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1430
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1429 is 1120
9999 mem: location 1430 is 1169
9999 mem: location 1169 is 1432
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1120 in location 1276
9999 mem: incrementing refcount of 1120: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1432 in location 1277
9999 mem: incrementing refcount of 1432: 3 -> 4
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1559
9999 mem: storing 1559 in location 1278
9999 mem: incrementing refcount of 1559: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1278 is 1559
9999 mem: skipping refcount at 1559
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1560 is 0
9999 mem: location 1561 is 0
9999 mem: location 1278 is 1559
9999 mem: skipping refcount at 1559
9998 run: address to copy is 1560
9999 mem: storing 1560 in location 1279
 107 run: *val <- copy x
9999 mem: location 1276 is 1120
9999 mem: location 1279 is 1560
9999 mem: storing 1120 in location 1560
9999 mem: incrementing refcount of 1120: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1278 is 1559
9999 mem: skipping refcount at 1559
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1560 is 1120
9999 mem: location 1561 is 0
9999 mem: location 1278 is 1559
9999 mem: skipping refcount at 1559
9999 type: type deduced to be address$
9998 run: address to copy is 1561
9999 mem: storing 1561 in location 1280
 107 run: *next <- copy in
9999 mem: location 1277 is 1432
9999 mem: location 1280 is 1561
9999 mem: storing 1432 in location 1561
9999 mem: incrementing refcount of 1432: 4 -> 5
 107 run: reply result
9999 mem: location 1278 is 1559
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1559
9999 mem: location 1430 is 1169
9999 mem: decrementing refcount of 1432: 5 -> 4
9999 mem: storing 1559 in location 1169
9999 mem: incrementing refcount of 1559: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1428 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1428 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1431
 106 run: *redo <- copy 0
9999 mem: location 1431 is 1170
9999 mem: storing 0 in location 1170
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1428 is 1158
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1158
9999 mem: decrementing refcount of 1158: 14 -> 13
9999 mem: storing 1158 in location 1439
9999 mem: incrementing refcount of 1158: 13 -> 14
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1438 is 1012
9999 mem: location 1439 is 1158
9999 mem: location 1444 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1158
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 110 -> 109
9999 mem: storing 1012 in location 1355
9999 mem: incrementing refcount of 1012: 109 -> 110
9999 mem: decrementing refcount of 1158: 14 -> 13
9999 mem: storing 1158 in location 1357
9999 mem: incrementing refcount of 1158: 13 -> 14
9999 mem: storing 0 in location 1367
 104 run: jump-unless go-render?, 
9999 mem: location 1367 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1358
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1359
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1355 is 1012
9999 mem: location 1358 is 2
9999 mem: location 1359 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 110 -> 111
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 3
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 111 -> 110
9999 mem: storing 1012 in location 1355
9999 mem: incrementing refcount of 1012: 110 -> 111
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1356 is 1349
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1349 in location 1311
9999 mem: incrementing refcount of 1349: 3 -> 4
 105 run: jump-unless console, 
9999 mem: location 1311 is 1349
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1349
9999 mem: skipping refcount at 1349
9999 mem: location 1350 is 2
9999 mem: location 1351 is 1339
9999 mem: location 1311 is 1349
9999 mem: skipping refcount at 1349
9998 run: address to copy is 1350
9999 mem: storing 1350 in location 1312
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1349
9999 mem: skipping refcount at 1349
9999 mem: location 1350 is 2
9999 mem: location 1351 is 1339
9999 mem: location 1311 is 1349
9999 mem: skipping refcount at 1349
9998 run: address to copy is 1351
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1351 is 1339
9999 mem: storing 1339 in location 1313
9999 mem: incrementing refcount of 1339: 2 -> 3
 105 run: max:number <- length *buf
9999 mem: location 1313 is 1339
9999 mem: skipping refcount at 1339
9999 mem: storing 2 in location 1314
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1350
9999 mem: location 1350 is 2
9999 mem: location 1314 is 2
9999 mem: storing 1 in location 1315
 105 run: jump-unless done?, 
9999 mem: location 1315 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1198 in location 1316
9999 mem: incrementing refcount of 1198: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1316 is 1198
9999 mem: skipping refcount at 1198
9999 mem: location 1199 is 0
9999 mem: location 1200 is 0
9999 mem: location 1201 is 0
9999 mem: location 1202 is 0
9999 mem: location 1311 is 1349
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1349
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1360
9999 mem: storing 0 in location 1361
9999 mem: storing 0 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: decrementing refcount of 1349: 4 -> 3
9999 mem: storing 1349 in location 1356
9999 mem: incrementing refcount of 1349: 3 -> 4
9999 mem: storing 1 in location 1364
9999 mem: storing 1 in location 1365
 104 run: jump-unless found?, 
9999 mem: location 1364 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1365 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1355 is 1012
9999 mem: location 1356 is 1349
9999 mem: location 1357 is 1158
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: 3:number <- get *2:address:shared:editor-data, cursor-row:offset
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 3
 103 run: 4:number <- get *2:address:shared:editor-data, cursor-column:offset
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 2 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 4
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: memory-should-contain [
    3 <- 2
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 102 run: check-trace-count-for-label 0, [print-character]
 102 run: assume-console [
    type [0]
  ]
9993 parse: instruction: type
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"0": "literal-string"}
9992 load: after rewriting: type [0]
9999 mem: storing 'type' event starting at 1564
9999 mem: storing 'text' tag at 1564
9999 mem: storing character 48 at 1565
9999 mem: storing console in 1568
9999 mem: storing console data in 1570
 102 run: run [
    editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
  ]
9991 parse: --- defining run_1002
9993 parse: instruction: editor-event-loop
9993 parse:   number of ingredients: 3
9993 parse:   ingredient: {"screen": <"address" : <"shared" : <"screen" : <>>>>}
9993 parse:   ingredient: {"console": <"address" : <"shared" : <"console" : <>>>>}
9993 parse:   ingredient: {"2": <"address" : <"shared" : <"editor-data" : <>>>>}
9992 load: after rewriting: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 parse: recipe run_1002 has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe run_1002
9991 transform: --- deduce types for recipe run_1002
9992 transform: screen => <address : <shared : <screen : <>>>>
9992 transform: console => <address : <shared : <console : <>>>>
9991 transform: --- collect surrounding spaces for recipe run_1002
9991 transform: --- transform names for recipe run_1002
9991 transform: --- resolve ambiguous calls for recipe run_1002
9992 transform: instruction editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for base: 97
9992 transform: checking variant 0: recipe editor-event-loop {"screen": <"address" : <"shared" : <"screen" : <>>>>} {"console": <"address" : <"shared" : <"console" : <>>>>} {"editor": <"address" : <"shared" : <"editor-data" : <>>>>} -> {"screen": <"address" : <"shared" : <"screen" : <>>>>} {"console": <"address" : <"shared" : <"console" : <>>>>} {"editor": <"address" : <"shared" : <"editor-data" : <>>>>}
9993 transform: strict match: ingredient 0
9993 transform: strict match: ingredient 1
9993 transform: strict match: ingredient 2
9992 transform: score for variant 0: 97
9991 transform: --- compute instruction operations for recipe run_1002
9991 transform: --- transform braces for recipe run_1002
9992 transform: editor-event-loop ...
9992 transform:  ...
9991 transform: --- perform checks for recipe run_1002
9991 transform: --- type-check 'call' instructions inside recipe run_1002
9991 transform: --- type-check calls inside recipe run_1002
9991 transform: --- convert 'new' to 'allocate' for recipe run_1002
9991 transform: --- parsing any uninitialized reagents as integers
9998 trace: run: incrementing callstack depth to 2
 103 run: editor-event-loop screen:address:shared:screen, console:address:shared:console, 2:address:shared:editor-data
9999 mem: location 900 is 1012
9999 mem: location 901 is 1568
9999 mem: location 2 is 1158
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 14
9999 mem: allocating size 16
9999 abandon: picking up space from free-list of size 16
 104 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1355
9999 mem: incrementing refcount of 1012: 111 -> 112
 104 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1568 in location 1356
9999 mem: incrementing refcount of 1568: 0 -> 1
 104 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1357
9999 mem: incrementing refcount of 1158: 14 -> 15
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1358
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1359
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1355 is 1012
9999 mem: location 1358 is 2
9999 mem: location 1359 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 112 -> 113
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
9990 schedule: move-cursor/editor-event-loop/run_1002/scenario_editor-moves-to-previous-line-from-left-margin
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 113 -> 112
9999 mem: storing 1012 in location 1355
9999 mem: incrementing refcount of 1012: 112 -> 113
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1356 is 1568
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1568 in location 1311
9999 mem: incrementing refcount of 1568: 1 -> 2
 105 run: jump-unless console, 
9999 mem: location 1311 is 1568
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1568
9999 mem: skipping refcount at 1568
9999 mem: location 1569 is 0
9999 mem: location 1570 is 1562
9999 mem: location 1311 is 1568
9999 mem: skipping refcount at 1568
9998 run: address to copy is 1569
9999 mem: storing 1569 in location 1312
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1568
9999 mem: skipping refcount at 1568
9999 mem: location 1569 is 0
9999 mem: location 1570 is 1562
9999 mem: location 1311 is 1568
9999 mem: skipping refcount at 1568
9998 run: address to copy is 1570
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1570 is 1562
9999 mem: storing 1562 in location 1313
9999 mem: incrementing refcount of 1562: 0 -> 1
 105 run: max:number <- length *buf
9999 mem: location 1313 is 1562
9999 mem: skipping refcount at 1562
9999 mem: storing 1 in location 1314
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1569
9999 mem: location 1569 is 0
9999 mem: location 1314 is 1
9999 mem: storing 0 in location 1315
 105 run: jump-unless done?, 
9999 mem: location 1315 is 0
9998 run: jumping to instruction 12
 105 run: result <- index *buf, *current-event-index
9999 mem: location 1313 is 1562
9999 mem: skipping refcount at 1562
9998 run: base address is 1563
9999 mem: location 1312 is 1569
9999 mem: location 1569 is 0
9998 run: address to copy is 1564
9998 run: its type is event
9999 mem: location 1564 is 0
9999 mem: location 1565 is 48
9999 mem: location 1566 is 0
9999 mem: location 1567 is 0
9999 mem: storing 0 in location 1317
9999 mem: storing 48 in location 1318
9999 mem: storing 0 in location 1319
9999 mem: storing 0 in location 1320
 105 run: *current-event-index <- add *current-event-index, 1
9999 mem: location 1312 is 1569
9999 mem: location 1569 is 0
9999 mem: location 1312 is 1569
9999 mem: storing 1 in location 1569
 105 run: reply result, console/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1317 is 0
9999 mem: location 1318 is 48
9999 mem: location 1319 is 0
9999 mem: location 1320 is 0
9999 mem: location 1311 is 1568
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 48, 0, 0]
9998 run: result 1 is 1568
9998 run: result 2 is 1
9998 run: result 3 is 0
9999 mem: storing 0 in location 1360
9999 mem: storing 48 in location 1361
9999 mem: storing 0 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: decrementing refcount of 1568: 2 -> 1
9999 mem: storing 1568 in location 1356
9999 mem: incrementing refcount of 1568: 1 -> 2
9999 mem: storing 1 in location 1364
9999 mem: storing 0 in location 1365
 104 run: jump-unless found?, 
9999 mem: location 1364 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1365 is 0
9998 run: jump-if fell through
 104 run: trace 10, [app], [next-event]
  10 app: next-event 
 104 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1360 is 0
9999 mem: location 1361 is 48
9999 mem: location 1362 is 0
9999 mem: location 1363 is 0
9999 mem: storing 0 in location 1366
 104 run: jump-unless t, 
9999 mem: location 1366 is 0
9998 run: jumping to instruction 18
 104 run: jump-if t, 
9999 mem: location 1366 is 0
9998 run: jump-if fell through
 104 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1355 is 1012
9999 mem: location 1357 is 1158
9999 mem: location 1360 is 0
9999 mem: location 1361 is 48
9999 mem: location 1362 is 0
9999 mem: location 1363 is 0
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 85
9999 mem: allocating size 87
9999 abandon: picking up space from free-list of size 87
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1438
9999 mem: incrementing refcount of 1012: 113 -> 114
 105 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1439
9999 mem: incrementing refcount of 1158: 15 -> 16
 105 run: e:event <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1440
9999 mem: storing 48 in location 1441
9999 mem: storing 0 in location 1442
9999 mem: storing 0 in location 1443
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1444
 105 run: jump-if editor, 1:offset
9999 mem: location 1439 is 1158
9998 run: jumping to instruction 7
 105 run: screen-width:number <- screen-width screen
9999 mem: location 1438 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1571
9999 mem: storing 3 in location 1572
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1574
9999 mem: incrementing refcount of 1012: 114 -> 115
 106 run: jump-unless screen, 
9999 mem: location 1574 is 1012
9998 run: jump-unless fell through
 106 run: width <- get *screen, num-columns:offset
9999 mem: location 1574 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1574 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1575
 106 run: reply width:number
9999 mem: location 1575 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 10
9999 mem: storing 10 in location 1445
 105 run: screen-height:number <- screen-height screen
9999 mem: location 1438 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1574
9999 mem: incrementing refcount of 1012: 115 -> 116
 106 run: jump-unless screen, 
9999 mem: location 1574 is 1012
9998 run: jump-unless fell through
 106 run: height <- get *screen, num-rows:offset
9999 mem: location 1574 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1574 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1575
 106 run: reply height:number
9999 mem: location 1575 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 5
9999 mem: storing 5 in location 1446
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1447
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1448
 105 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1449
 105 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1450
 105 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1451
 105 run: save-row:number <- copy *cursor-row
9999 mem: location 1450 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1452
 105 run: save-column:number <- copy *cursor-column
9999 mem: location 1451 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1453
 105 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1440 is 0
9999 mem: location 1441 is 48
9999 mem: location 1442 is 0
9999 mem: location 1443 is 0
9999 mem: storing 1441 in location 1454
 105 run: jump-unless c, 
9999 mem: location 1454 is 1441
9998 run: jump-unless fell through
 105 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 105 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1455
 105 run: jump-unless redo?, 
9999 mem: location 1455 is 0
9998 run: jumping to instruction 61
 105 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1466
 105 run: jump-unless undo?, 
9999 mem: location 1466 is 0
9998 run: jumping to instruction 108
 105 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1471
 105 run: jump-unless page-up?, 
9999 mem: location 1471 is 0
9998 run: jumping to instruction 149
 105 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1487
 105 run: jump-unless page-down?, 
9999 mem: location 1487 is 0
9998 run: jumping to instruction 190
 105 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1488
 105 run: jump-unless delete-to-end-of-line?, 
9999 mem: location 1488 is 0
9998 run: jumping to instruction 210
 105 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1493
 105 run: jump-unless delete-to-start-of-line?, 
9999 mem: location 1493 is 0
9998 run: jumping to instruction 230
 105 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1494
 105 run: jump-unless move-to-end-of-line?, 
9999 mem: location 1494 is 0
9998 run: jumping to instruction 268
 105 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1495
 105 run: jump-unless move-to-start-of-line?, 
9999 mem: location 1495 is 0
9998 run: jumping to instruction 306
 105 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1496
 105 run: jump-unless delete-previous-character?, 
9999 mem: location 1496 is 0
9998 run: jumping to instruction 346
 105 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1500
 105 run: jump-unless tab?, 
9999 mem: location 1500 is 0
9998 run: jumping to instruction 383
 105 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 0 in location 1504
 105 run: jump-unless newline?, 
9999 mem: location 1504 is 0
9998 run: jumping to instruction 402
 105 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: storing 1 in location 1507
 105 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1444
 105 run: jump-if regular-character?, 1:offset
9999 mem: location 1507 is 1
9998 run: jumping to instruction 407
 105 run: top-before:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1489
9999 mem: incrementing refcount of 1180: 18 -> 19
 105 run: cursor-before:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1449 is 1162
9999 mem: location 1162 is 1211
9999 mem: storing 1211 in location 1501
9999 mem: incrementing refcount of 1211: 25 -> 26
 105 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1439 is 1158
9999 mem: location 1454 is 1441
9999 mem: location 1441 is 48
9999 mem: location 1438 is 1012
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 31
9999 mem: allocating size 33
9999 mem: new alloc: 1576
9999 mem: storing 31 in location 1577
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1579
9999 mem: incrementing refcount of 1158: 16 -> 17
 106 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1580
 106 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1581
9999 mem: incrementing refcount of 1012: 116 -> 117
 106 run: before-cursor:address:address:shared:duplex-list:character <- get-address *editor, before-cursor:offset
9999 mem: location 1579 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1211
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1579 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1162
9999 mem: storing 1162 in location 1582
 106 run: insert_2 c, *before-cursor
9999 mem: location 1580 is 48
9999 mem: location 1582 is 1162
9999 mem: location 1162 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 7
9999 mem: allocating size 9
9999 abandon: picking up space from free-list of size 9
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1174
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1175
9999 mem: incrementing refcount of 1211: 26 -> 27
 107 run: new-node:address:shared:duplex-list:_elem <- new {(duplex-list _elem): type}
9999 mem: allocating size 4
9999 mem: new alloc: 1609
9999 mem: storing 1609 in location 1176
9999 mem: incrementing refcount of 1609: 0 -> 1
 107 run: val:address:_elem <- get-address *new-node, value:offset
9999 mem: location 1176 is 1609
9999 mem: skipping refcount at 1609
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1610 is 0
9999 mem: location 1611 is 0
9999 mem: location 1612 is 0
9999 mem: location 1176 is 1609
9999 mem: skipping refcount at 1609
9998 run: address to copy is 1610
9999 mem: storing 1610 in location 1177
 107 run: *val <- copy x
9999 mem: location 1174 is 48
9999 mem: location 1177 is 1610
9999 mem: storing 48 in location 1610
 107 run: next-node:address:shared:duplex-list:_elem <- get *in, next:offset
9999 mem: location 1175 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1175 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1215
9999 mem: storing 1215 in location 1178
9999 mem: incrementing refcount of 1215: 22 -> 23
 107 run: y:address:address:shared:duplex-list:_elem <- get-address *in, next:offset
9999 mem: location 1175 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1215
9999 mem: location 1214 is 1207
9999 mem: location 1175 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9999 mem: storing 1213 in location 1179
 107 run: *y <- copy new-node
9999 mem: location 1176 is 1609
9999 mem: location 1179 is 1213
9999 mem: decrementing refcount of 1215: 23 -> 22
9999 mem: storing 1609 in location 1213
9999 mem: incrementing refcount of 1609: 1 -> 2
 107 run: y <- get-address *new-node, prev:offset
9999 mem: location 1176 is 1609
9999 mem: skipping refcount at 1609
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1610 is 48
9999 mem: location 1611 is 0
9999 mem: location 1612 is 0
9999 mem: location 1176 is 1609
9999 mem: skipping refcount at 1609
9999 type: type deduced to be character$
9998 run: address to copy is 1612
9999 mem: storing 1612 in location 1179
 107 run: *y <- copy in
9999 mem: location 1175 is 1211
9999 mem: location 1179 is 1612
9999 mem: storing 1211 in location 1612
9999 mem: incrementing refcount of 1211: 27 -> 28
 107 run: y <- get-address *new-node, next:offset
9999 mem: location 1176 is 1609
9999 mem: skipping refcount at 1609
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1610 is 48
9999 mem: location 1611 is 0
9999 mem: location 1612 is 1211
9999 mem: location 1176 is 1609
9999 mem: skipping refcount at 1609
9999 type: type deduced to be character$
9998 run: address to copy is 1611
9999 mem: storing 1611 in location 1179
 107 run: *y <- copy next-node
9999 mem: location 1178 is 1215
9999 mem: location 1179 is 1611
9999 mem: storing 1215 in location 1611
9999 mem: incrementing refcount of 1215: 22 -> 23
 107 run: jump-if next-node, 1:offset
9999 mem: location 1178 is 1215
9998 run: jumping to instruction 15
 107 run: y <- get-address *next-node, prev:offset
9999 mem: location 1178 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1211
9999 mem: location 1178 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1218
9999 mem: storing 1218 in location 1179
 107 run: *y <- copy new-node
9999 mem: location 1176 is 1609
9999 mem: location 1179 is 1218
9999 mem: decrementing refcount of 1211: 28 -> 27
9999 mem: storing 1609 in location 1218
9999 mem: incrementing refcount of 1609: 2 -> 3
 107 run: reply in:address:shared:duplex-list:_elem
9999 mem: location 1175 is 1211
9999 abandon: saving in free-list of size 9
9999 trace: reply: decrementing callstack depth from 6
 106 run: *before-cursor <- next_2 *before-cursor
9999 mem: location 1582 is 1162
9999 mem: location 1162 is 1211
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1574
9999 mem: incrementing refcount of 1211: 27 -> 28
 107 run: jump-if in, 1:offset
9999 mem: location 1574 is 1211
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1574 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1609
9999 mem: location 1214 is 1207
9999 mem: location 1574 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1609
9999 mem: storing 1609 in location 1575
9999 mem: incrementing refcount of 1609: 3 -> 4
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1575 is 1609
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1609
9999 mem: location 1582 is 1162
9999 mem: decrementing refcount of 1211: 28 -> 27
9999 mem: storing 1609 in location 1162
9999 mem: incrementing refcount of 1609: 4 -> 5
 106 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1579 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1609
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1579 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9999 mem: storing 1166 in location 1583
 106 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1579 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1609
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1579 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9999 mem: storing 1167 in location 1584
 106 run: left:number <- get *editor, left:offset
9999 mem: location 1579 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1609
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1579 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1163
9998 run: its type is number
9999 mem: location 1163 is 0
9999 mem: storing 0 in location 1585
 106 run: right:number <- get *editor, right:offset
9999 mem: location 1579 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1609
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 0
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1579 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1164
9998 run: its type is number
9999 mem: location 1164 is 9
9999 mem: storing 9 in location 1586
 106 run: save-row:number <- copy *cursor-row
9999 mem: location 1583 is 1166
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1587
 106 run: save-column:number <- copy *cursor-column
9999 mem: location 1584 is 1167
9999 mem: location 1167 is 0
9999 mem: storing 0 in location 1588
 106 run: screen-width:number <- screen-width screen
9999 mem: location 1581 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1574
9999 mem: incrementing refcount of 1012: 117 -> 118
 107 run: jump-unless screen, 
9999 mem: location 1574 is 1012
9998 run: jump-unless fell through
 107 run: width <- get *screen, num-columns:offset
9999 mem: location 1574 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1574 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1575
 107 run: reply width:number
9999 mem: location 1575 is 10
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 10
9999 mem: storing 10 in location 1589
 106 run: screen-height:number <- screen-height screen
9999 mem: location 1581 is 1012
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1574
9999 mem: incrementing refcount of 1012: 118 -> 119
 107 run: jump-unless screen, 
9999 mem: location 1574 is 1012
9998 run: jump-unless fell through
 107 run: height <- get *screen, num-rows:offset
9999 mem: location 1574 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1574 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1575
 107 run: reply height:number
9999 mem: location 1575 is 5
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 5
9999 mem: storing 5 in location 1590
 106 run: wrap-column:number <- subtract right, 1
9999 mem: location 1586 is 9
9999 mem: storing 8 in location 1591
 106 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1584 is 1167
9999 mem: location 1167 is 0
9999 mem: location 1591 is 8
9999 mem: storing 0 in location 1592
 106 run: jump-unless at-wrap?, 
9999 mem: location 1592 is 0
9998 run: jumping to instruction 41
 106 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1584 is 1167
9999 mem: location 1167 is 0
9999 mem: location 1584 is 1167
9999 mem: storing 1 in location 1167
 106 run: next:address:shared:duplex-list:character <- next_2 *before-cursor
9999 mem: location 1582 is 1162
9999 mem: location 1162 is 1609
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1609 in location 1574
9999 mem: incrementing refcount of 1609: 5 -> 6
 107 run: jump-if in, 1:offset
9999 mem: location 1574 is 1609
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1574 is 1609
9999 mem: skipping refcount at 1609
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1610 is 48
9999 mem: location 1611 is 1215
9999 mem: location 1612 is 1211
9999 mem: location 1574 is 1609
9999 mem: skipping refcount at 1609
9999 type: type deduced to be character$
9998 run: address to copy is 1611
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1611 is 1215
9999 mem: storing 1215 in location 1575
9999 mem: incrementing refcount of 1215: 23 -> 24
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1575 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1599
9999 mem: incrementing refcount of 1215: 24 -> 25
 106 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1599 is 1215
9999 mem: storing 0 in location 1600
 106 run: jump-unless at-end?, 
9999 mem: location 1600 is 0
9998 run: jumping to instruction 56
 106 run: jump-unless next, 
9999 mem: location 1599 is 1215
9998 run: jump-unless fell through
 106 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1584 is 1167
9999 mem: location 1167 is 1
9999 mem: location 1589 is 10
9999 mem: storing 0 in location 1603
 106 run: jump-if at-right?, 
9999 mem: location 1603 is 0
9998 run: jump-if fell through
 106 run: curr:address:shared:duplex-list:character <- copy *before-cursor
9999 mem: location 1582 is 1162
9999 mem: location 1162 is 1609
9999 mem: storing 1609 in location 1605
9999 mem: incrementing refcount of 1609: 6 -> 7
 106 run: move-cursor screen, save-row, save-column
9999 mem: location 1581 is 1012
9999 mem: location 1587 is 2
9999 mem: location 1588 is 0
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 119 -> 120
 107 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 107 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 0 in location 1278
 107 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 107 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 107 run: *column <- copy new-column
9999 mem: location 1278 is 0
9999 mem: location 1280 is 1016
9999 mem: storing 0 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column:number <- copy save-column
9999 mem: location 1588 is 0
9999 mem: storing 0 in location 1606
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1598
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1606 is 0
9999 mem: location 1586 is 9
9999 mem: storing 0 in location 1603
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1603 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1605 is 1609
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1605 is 1609
9999 mem: skipping refcount at 1609
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1610 is 48
9999 mem: location 1611 is 1215
9999 mem: location 1612 is 1211
9999 mem: location 1605 is 1609
9999 mem: skipping refcount at 1609
9998 run: address to copy is 1610
9998 run: its type is character
9999 mem: location 1610 is 48
9999 mem: storing 48 in location 1607
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1607 is 48
9999 mem: storing 0 in location 1608
 106 run: jump-if at-newline?, 
9999 mem: location 1608 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1581 is 1012
9999 mem: location 1607 is 48
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 120 -> 121
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 48 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1286
9999 mem: storing 0 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1286
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 48
  90 print-character: 48 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 48
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: storing 20 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 0
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 65 -> 66
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 48
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 20
9999 mem: storing 1060 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1060
9999 mem: location 1060 is 100
9999 mem: location 1061 is 7
9999 mem: location 1303 is 1060
9998 run: address to copy is 1060
9999 mem: storing 1060 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 48
9999 mem: location 1304 is 1060
9999 mem: storing 48 in location 1060
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1060
9999 mem: location 1060 is 48
9999 mem: location 1061 is 7
9999 mem: location 1303 is 1060
9998 run: address to copy is 1061
9999 mem: storing 1061 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1061
9999 mem: storing 7 in location 1061
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 0
9999 mem: location 1294 is 1016
9999 mem: storing 1 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1606 is 0
9999 mem: storing 1 in location 1606
 106 run: curr <- next_2 curr
9999 mem: location 1605 is 1609
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1609 in location 1574
9999 mem: incrementing refcount of 1609: 7 -> 8
 107 run: jump-if in, 1:offset
9999 mem: location 1574 is 1609
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1574 is 1609
9999 mem: skipping refcount at 1609
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1610 is 48
9999 mem: location 1611 is 1215
9999 mem: location 1612 is 1211
9999 mem: location 1574 is 1609
9999 mem: skipping refcount at 1609
9999 type: type deduced to be character$
9998 run: address to copy is 1611
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1611 is 1215
9999 mem: storing 1215 in location 1575
9999 mem: incrementing refcount of 1215: 25 -> 26
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1575 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1215
9999 mem: decrementing refcount of 1609: 8 -> 7
9999 mem: storing 1215 in location 1605
9999 mem: incrementing refcount of 1215: 26 -> 27
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1598
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1606 is 1
9999 mem: location 1586 is 9
9999 mem: storing 0 in location 1603
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1603 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1605 is 1215
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1605 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1609
9999 mem: location 1605 is 1215
9999 mem: skipping refcount at 1215
9998 run: address to copy is 1216
9998 run: its type is character
9999 mem: location 1216 is 100
9999 mem: storing 100 in location 1607
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1607 is 100
9999 mem: storing 0 in location 1608
 106 run: jump-if at-newline?, 
9999 mem: location 1608 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1581 is 1012
9999 mem: location 1607 is 100
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 121 -> 122
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 100 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1286
9999 mem: storing 0 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1286
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 100
  90 print-character: 100 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 100
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: storing 21 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 1
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 66 -> 67
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 100
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 21
9999 mem: storing 1062 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1062
9999 mem: location 1062 is 101
9999 mem: location 1063 is 7
9999 mem: location 1303 is 1062
9998 run: address to copy is 1062
9999 mem: storing 1062 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 100
9999 mem: location 1304 is 1062
9999 mem: storing 100 in location 1062
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1062
9999 mem: location 1062 is 100
9999 mem: location 1063 is 7
9999 mem: location 1303 is 1062
9998 run: address to copy is 1063
9999 mem: storing 1063 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1063
9999 mem: storing 7 in location 1063
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 1
9999 mem: location 1294 is 1016
9999 mem: storing 2 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1606 is 1
9999 mem: storing 2 in location 1606
 106 run: curr <- next_2 curr
9999 mem: location 1605 is 1215
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1215 in location 1574
9999 mem: incrementing refcount of 1215: 27 -> 28
 107 run: jump-if in, 1:offset
9999 mem: location 1574 is 1215
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1574 is 1215
9999 mem: skipping refcount at 1215
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1216 is 100
9999 mem: location 1217 is 1219
9999 mem: location 1218 is 1609
9999 mem: location 1574 is 1215
9999 mem: skipping refcount at 1215
9999 type: type deduced to be character$
9998 run: address to copy is 1217
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1217 is 1219
9999 mem: storing 1219 in location 1575
9999 mem: incrementing refcount of 1219: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1575 is 1219
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1219
9999 mem: decrementing refcount of 1215: 28 -> 27
9999 mem: storing 1219 in location 1605
9999 mem: incrementing refcount of 1219: 23 -> 24
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1598
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1606 is 2
9999 mem: location 1586 is 9
9999 mem: storing 0 in location 1603
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1603 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1605 is 1219
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1605 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1605 is 1219
9999 mem: skipping refcount at 1219
9998 run: address to copy is 1220
9998 run: its type is character
9999 mem: location 1220 is 101
9999 mem: storing 101 in location 1607
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1607 is 101
9999 mem: storing 0 in location 1608
 106 run: jump-if at-newline?, 
9999 mem: location 1608 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1581 is 1012
9999 mem: location 1607 is 101
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 122 -> 123
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 101 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1286
9999 mem: storing 0 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1286
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 101
  90 print-character: 101 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 101
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: storing 22 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 2
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 67 -> 68
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 101
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 22
9999 mem: storing 1064 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1064
9999 mem: location 1064 is 102
9999 mem: location 1065 is 7
9999 mem: location 1303 is 1064
9998 run: address to copy is 1064
9999 mem: storing 1064 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 101
9999 mem: location 1304 is 1064
9999 mem: storing 101 in location 1064
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1064
9999 mem: location 1064 is 101
9999 mem: location 1065 is 7
9999 mem: location 1303 is 1064
9998 run: address to copy is 1065
9999 mem: storing 1065 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1065
9999 mem: storing 7 in location 1065
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 2
9999 mem: location 1294 is 1016
9999 mem: storing 3 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1606 is 2
9999 mem: storing 3 in location 1606
 106 run: curr <- next_2 curr
9999 mem: location 1605 is 1219
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1219 in location 1574
9999 mem: incrementing refcount of 1219: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1574 is 1219
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1574 is 1219
9999 mem: skipping refcount at 1219
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1220 is 101
9999 mem: location 1221 is 1223
9999 mem: location 1222 is 1215
9999 mem: location 1574 is 1219
9999 mem: skipping refcount at 1219
9999 type: type deduced to be character$
9998 run: address to copy is 1221
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1221 is 1223
9999 mem: storing 1223 in location 1575
9999 mem: incrementing refcount of 1223: 22 -> 23
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1575 is 1223
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1223
9999 mem: decrementing refcount of 1219: 25 -> 24
9999 mem: storing 1223 in location 1605
9999 mem: incrementing refcount of 1223: 23 -> 24
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1598
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1606 is 3
9999 mem: location 1586 is 9
9999 mem: storing 0 in location 1603
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1603 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1605 is 1223
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1605 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1605 is 1223
9999 mem: skipping refcount at 1223
9998 run: address to copy is 1224
9998 run: its type is character
9999 mem: location 1224 is 102
9999 mem: storing 102 in location 1607
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1607 is 102
9999 mem: storing 0 in location 1608
 106 run: jump-if at-newline?, 
9999 mem: location 1608 is 0
9998 run: jump-if fell through
 106 run: print screen, currc
9999 mem: location 1581 is 1012
9999 mem: location 1607 is 102
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 25
9999 mem: allocating size 27
9999 abandon: picking up space from free-list of size 27
 107 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1284
9999 mem: incrementing refcount of 1012: 123 -> 124
 107 run: c:character <- next-ingredient-without-typechecking 
9999 mem: storing 102 in location 1285
 107 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1286
9999 mem: storing 0 in location 1287
 107 run: jump-if color-found?, 
9999 mem: location 1287 is 0
9998 run: jump-if fell through
 107 run: color <- copy 7/white
9999 mem: storing 7 in location 1286
 107 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1288
9999 mem: storing 0 in location 1289
 107 run: jump-if bg-color-found?, 
9999 mem: location 1289 is 0
9998 run: jump-if fell through
 107 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1288
 107 run: trace 90, [print-character], c
9999 mem: location 1285 is 102
  90 print-character: 102 
 107 run: jump-unless screen, 
9999 mem: location 1284 is 1012
9998 run: jump-unless fell through
 107 run: width:number <- get *screen, num-columns:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1014
9998 run: its type is number
9999 mem: location 1014 is 10
9999 mem: storing 10 in location 1290
 107 run: height:number <- get *screen, num-rows:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1013
9998 run: its type is number
9999 mem: location 1013 is 5
9999 mem: storing 5 in location 1291
 107 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1292
 107 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 22
 107 run: legal? <- lesser-than *row, height
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1291 is 5
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 25
 107 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1294
 107 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 29
 107 run: legal? <- lesser-than *column, width
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1290 is 10
9999 mem: storing 1 in location 1293
 107 run: jump-if legal?, 1:offset
9999 mem: location 1293 is 1
9998 run: jumping to instruction 32
 107 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1285 is 102
9999 mem: storing 0 in location 1295
 107 run: jump-unless newline?, 
9999 mem: location 1295 is 0
9998 run: jumping to instruction 43
 107 run: index:number <- multiply *row, width
9999 mem: location 1292 is 1015
9999 mem: location 1015 is 2
9999 mem: location 1290 is 10
9999 mem: storing 20 in location 1298
 107 run: index <- add index, *column
9999 mem: location 1298 is 20
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: storing 23 in location 1298
 107 run: buf:address:shared:array:screen-cell <- get *screen, data:offset
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 3
9999 mem: location 1017 is 1018
9999 mem: location 1284 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1017
9998 run: its type is <address : <shared : <array : <screen-cell : <>>>>>
9999 mem: location 1017 is 1018
9999 mem: storing 1018 in location 1299
9999 mem: incrementing refcount of 1018: 68 -> 69
 107 run: len:number <- length *buf
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: storing 50 in location 1300
 107 run: backspace?:boolean <- equal c, 8
9999 mem: location 1285 is 102
9999 mem: storing 0 in location 1301
 107 run: jump-unless backspace?, 
9999 mem: location 1301 is 0
9998 run: jumping to instruction 63
 107 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1299 is 1018
9999 mem: skipping refcount at 1018
9999 mem: location 1298 is 23
9999 mem: storing 1066 in location 1303
 107 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1303 is 1066
9999 mem: location 1066 is 32
9999 mem: location 1067 is 7
9999 mem: location 1303 is 1066
9998 run: address to copy is 1066
9999 mem: storing 1066 in location 1304
 107 run: *cursor-contents <- copy c
9999 mem: location 1285 is 102
9999 mem: location 1304 is 1066
9999 mem: storing 102 in location 1066
 107 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1303 is 1066
9999 mem: location 1066 is 102
9999 mem: location 1067 is 7
9999 mem: location 1303 is 1066
9998 run: address to copy is 1067
9999 mem: storing 1067 in location 1305
 107 run: *cursor-color <- copy color
9999 mem: location 1286 is 7
9999 mem: location 1305 is 1067
9999 mem: storing 7 in location 1067
 107 run: right:number <- subtract width, 1
9999 mem: location 1290 is 10
9999 mem: storing 9 in location 1306
 107 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1306 is 9
9999 mem: storing 0 in location 1307
 107 run: jump-if at-right?, 
9999 mem: location 1307 is 0
9998 run: jump-if fell through
 107 run: *column <- add *column, 1
9999 mem: location 1294 is 1016
9999 mem: location 1016 is 3
9999 mem: location 1294 is 1016
9999 mem: storing 4 in location 1016
 107 run: reply screen:address:shared:screen
9999 mem: location 1284 is 1012
9999 abandon: saving in free-list of size 27
9999 trace: reply: decrementing callstack depth from 6
 106 run: curr-column <- add curr-column, 1
9999 mem: location 1606 is 3
9999 mem: storing 4 in location 1606
 106 run: curr <- next_2 curr
9999 mem: location 1605 is 1223
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 107 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1223 in location 1574
9999 mem: incrementing refcount of 1223: 24 -> 25
 107 run: jump-if in, 1:offset
9999 mem: location 1574 is 1223
9998 run: jumping to instruction 4
 107 run: result <- get *in, next:offset
9999 mem: location 1574 is 1223
9999 mem: skipping refcount at 1223
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1224 is 102
9999 mem: location 1225 is 1227
9999 mem: location 1226 is 1219
9999 mem: location 1574 is 1223
9999 mem: skipping refcount at 1223
9999 type: type deduced to be character$
9998 run: address to copy is 1225
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1225 is 1227
9999 mem: storing 1227 in location 1575
9999 mem: incrementing refcount of 1227: 21 -> 22
 107 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1575 is 1227
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1227
9999 mem: decrementing refcount of 1223: 25 -> 24
9999 mem: storing 1227 in location 1605
9999 mem: incrementing refcount of 1227: 22 -> 23
 106 run: jump 
9998 run: jumping to instruction 65
 106 run: go-render? <- copy 1/true
9999 mem: storing 1 in location 1598
 106 run: at-right?:boolean <- greater-than curr-column, right
9999 mem: location 1606 is 4
9999 mem: location 1586 is 9
9999 mem: storing 0 in location 1603
 106 run: jump-unless at-right?, 1:offset
9999 mem: location 1603 is 0
9998 run: jumping to instruction 69
 106 run: jump-unless curr, 
9999 mem: location 1605 is 1227
9998 run: jump-unless fell through
 106 run: currc:character <- get *curr, value:offset
9999 mem: location 1605 is 1227
9999 mem: skipping refcount at 1227
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1228 is 10
9999 mem: location 1229 is 1231
9999 mem: location 1230 is 1223
9999 mem: location 1605 is 1227
9999 mem: skipping refcount at 1227
9998 run: address to copy is 1228
9998 run: its type is character
9999 mem: location 1228 is 10
9999 mem: storing 10 in location 1607
 106 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1607 is 10
9999 mem: storing 1 in location 1608
 106 run: jump-if at-newline?, 
9999 mem: location 1608 is 1
9998 run: jumping to instruction 77
 106 run: go-render? <- copy 0/false
9999 mem: storing 0 in location 1598
 106 run: reply editor:address:shared:editor-data, screen:address:shared:screen, go-render?:boolean
9999 mem: location 1579 is 1158
9999 mem: location 1581 is 1012
9999 mem: location 1598 is 0
9999 abandon: saving in free-list of size 33
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1158
9998 run: result 1 is 1012
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1158: 17 -> 16
9999 mem: storing 1158 in location 1439
9999 mem: incrementing refcount of 1158: 16 -> 17
9999 mem: decrementing refcount of 1012: 124 -> 123
9999 mem: storing 1012 in location 1438
9999 mem: incrementing refcount of 1012: 123 -> 124
9999 mem: storing 0 in location 1444
 105 run: top-after:address:shared:duplex-list:character <- get *editor, top-of-screen:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1609
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1160
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1160 is 1180
9999 mem: storing 1180 in location 1491
9999 mem: incrementing refcount of 1180: 19 -> 20
 105 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1609
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1439 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1458
 105 run: jump-unless *undo, 
9999 mem: location 1458 is 1169
9999 mem: location 1169 is 1559
9998 run: jump-unless fell through
 105 run: op:address:shared:operation <- first_3 *undo
9999 mem: location 1458 is 1169
9999 mem: location 1169 is 1559
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1559 in location 1574
9999 mem: incrementing refcount of 1559: 2 -> 3
 106 run: result <- get *in, value:offset
9999 mem: location 1574 is 1559
9999 mem: skipping refcount at 1559
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1560 is 1120
9999 mem: location 1561 is 1432
9999 mem: location 1574 is 1559
9999 mem: skipping refcount at 1559
9998 run: address to copy is 1560
9998 run: its type is <address : <shared : <operation : <>>>>
9999 mem: location 1560 is 1120
9999 mem: storing 1120 in location 1575
9999 mem: incrementing refcount of 1120: 4 -> 5
 106 run: reply result:_elem
9999 mem: location 1575 is 1120
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1120
9999 mem: storing 1120 in location 1457
9999 mem: incrementing refcount of 1120: 5 -> 6
 105 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1457 is 1120
9999 mem: skipping refcount at 1120
9999 mem: location 1121 is 1
9999 mem: location 1122 is 3
9999 mem: location 1123 is 0
9999 mem: location 1124 is 1180
9999 mem: location 1125 is 2
9999 mem: location 1126 is 0
9999 mem: location 1127 is 1180
9999 mem: location 1128 is 3
9999 mem: location 1129 is 0
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1457 is 1120
9999 mem: skipping refcount at 1120
9999 mem: storing 0 in location 1464
 105 run: jump-unless typing, 
9999 mem: location 1464 is 0
9998 run: jumping to instruction 429
 105 run: insert-from:address:shared:duplex-list:character <- next_2 cursor-before
9999 mem: location 1501 is 1211
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1211 in location 1574
9999 mem: incrementing refcount of 1211: 27 -> 28
 106 run: jump-if in, 1:offset
9999 mem: location 1574 is 1211
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1574 is 1211
9999 mem: skipping refcount at 1211
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1212 is 10
9999 mem: location 1213 is 1609
9999 mem: location 1214 is 1207
9999 mem: location 1574 is 1211
9999 mem: skipping refcount at 1211
9999 type: type deduced to be character$
9998 run: address to copy is 1213
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1213 is 1609
9999 mem: storing 1609 in location 1575
9999 mem: incrementing refcount of 1609: 7 -> 8
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1575 is 1609
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1609
9999 mem: storing 1609 in location 1465
9999 mem: incrementing refcount of 1609: 8 -> 9
 105 run: insert-to:address:shared:duplex-list:character <- next_2 insert-from
9999 mem: location 1465 is 1609
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9990 schedule: next_2/handle-keyboard-event/editor-event-loop/run_1002/scenario_editor-moves-to-previous-line-from-left-margin
 106 run: in:address:shared:duplex-list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1609 in location 1574
9999 mem: incrementing refcount of 1609: 9 -> 10
 106 run: jump-if in, 1:offset
9999 mem: location 1574 is 1609
9998 run: jumping to instruction 4
 106 run: result <- get *in, next:offset
9999 mem: location 1574 is 1609
9999 mem: skipping refcount at 1609
9999 type: checking size of type ingredient

9999 type: type deduced to be character$
9999 mem: location 1610 is 48
9999 mem: location 1611 is 1215
9999 mem: location 1612 is 1211
9999 mem: location 1574 is 1609
9999 mem: skipping refcount at 1609
9999 type: type deduced to be character$
9998 run: address to copy is 1611
9998 run: its type is <address : <shared : <duplex-list : <character : <>>>>>
9999 mem: location 1611 is 1215
9999 mem: storing 1215 in location 1575
9999 mem: incrementing refcount of 1215: 27 -> 28
 106 run: reply result:address:shared:duplex-list:_elem/contained-in:in
9999 mem: location 1575 is 1215
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1215
9999 mem: storing 1215 in location 1503
9999 mem: incrementing refcount of 1215: 28 -> 29
 105 run: op:address:shared:operation <- new operation:type
9999 mem: allocating size 12
9999 mem: new alloc: 1613
9999 mem: decrementing refcount of 1120: 6 -> 5
9999 mem: storing 1613 in location 1457
9999 mem: incrementing refcount of 1613: 0 -> 1
 105 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1452 is 2
9999 mem: location 1453 is 0
9999 mem: location 1489 is 1180
9999 mem: location 1450 is 1166
9999 mem: location 1166 is 2
9999 mem: location 1451 is 1167
9999 mem: location 1167 is 1
9999 mem: location 1491 is 1180
9999 mem: location 1465 is 1609
9999 mem: location 1503 is 1215
9999 mem: location 1457 is 1613
9999 mem: skipping refcount at 1613
9999 mem: location 1457 is 1613
9999 mem: skipping refcount at 1613
9999 mem: storing 0 in location 1614
9999 mem: storing 2 in location 1615
9999 mem: storing 0 in location 1616
9999 mem: storing 1180 in location 1617
9999 mem: storing 2 in location 1618
9999 mem: storing 1 in location 1619
9999 mem: storing 1180 in location 1620
9999 mem: storing 1609 in location 1621
9999 mem: storing 1215 in location 1622
9999 mem: storing 1 in location 1623
 105 run: editor <- add-operation editor, op
9999 mem: location 1439 is 1158
9999 mem: location 1457 is 1613
9999 trace: incrementing callstack depth to 5
 106 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 5
9999 mem: allocating size 7
9999 abandon: picking up space from free-list of size 7
 106 run: editor:address:shared:editor-data <- next-ingredient-without-typechecking 
9999 mem: storing 1158 in location 1428
9999 mem: incrementing refcount of 1158: 17 -> 18
 106 run: op:address:shared:operation <- next-ingredient-without-typechecking 
9999 mem: storing 1613 in location 1429
9999 mem: incrementing refcount of 1613: 1 -> 2
 106 run: undo:address:address:shared:list:address:shared:operation <- get-address *editor, undo:offset
9999 mem: location 1428 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1609
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1559
9999 mem: location 1170 is 0
9999 mem: location 1428 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1169
9999 mem: storing 1169 in location 1430
 106 run: *undo <- push_4 op, *undo
9999 mem: location 1429 is 1613
9999 mem: location 1430 is 1169
9999 mem: location 1169 is 1559
9999 trace: incrementing callstack depth to 6
 107 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 107 run: x:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1613 in location 1276
9999 mem: incrementing refcount of 1613: 2 -> 3
 107 run: in:address:shared:list:_elem <- next-ingredient-without-typechecking 
9999 mem: storing 1559 in location 1277
9999 mem: incrementing refcount of 1559: 3 -> 4
 107 run: result:address:shared:list:_elem <- new {(list _elem): type}
9999 mem: allocating size 3
9999 mem: new alloc: 1625
9999 mem: storing 1625 in location 1278
9999 mem: incrementing refcount of 1625: 0 -> 1
 107 run: val:address:_elem <- get-address *result, value:offset
9999 mem: location 1278 is 1625
9999 mem: skipping refcount at 1625
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1626 is 0
9999 mem: location 1627 is 0
9999 mem: location 1278 is 1625
9999 mem: skipping refcount at 1625
9998 run: address to copy is 1626
9999 mem: storing 1626 in location 1279
 107 run: *val <- copy x
9999 mem: location 1276 is 1613
9999 mem: location 1279 is 1626
9999 mem: storing 1613 in location 1626
9999 mem: incrementing refcount of 1613: 3 -> 4
 107 run: next:address:address:shared:list:_elem <- get-address *result, next:offset
9999 mem: location 1278 is 1625
9999 mem: skipping refcount at 1625
9999 type: checking size of type ingredient

9999 type: type deduced to be address$
9999 mem: location 1626 is 1613
9999 mem: location 1627 is 0
9999 mem: location 1278 is 1625
9999 mem: skipping refcount at 1625
9999 type: type deduced to be address$
9998 run: address to copy is 1627
9999 mem: storing 1627 in location 1280
 107 run: *next <- copy in
9999 mem: location 1277 is 1559
9999 mem: location 1280 is 1627
9999 mem: storing 1559 in location 1627
9999 mem: incrementing refcount of 1559: 4 -> 5
 107 run: reply result
9999 mem: location 1278 is 1625
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 6
9998 run: result 0 is 1625
9999 mem: location 1430 is 1169
9999 mem: decrementing refcount of 1559: 5 -> 4
9999 mem: storing 1625 in location 1169
9999 mem: incrementing refcount of 1625: 1 -> 2
 106 run: redo:address:address:shared:list:address:shared:operation <- get-address *editor, redo:offset
9999 mem: location 1428 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1609
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1625
9999 mem: location 1170 is 0
9999 mem: location 1428 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1170
9999 mem: storing 1170 in location 1431
 106 run: *redo <- copy 0
9999 mem: location 1431 is 1170
9999 mem: storing 0 in location 1170
 106 run: reply editor/same-as-ingredient:0
9999 mem: location 1428 is 1158
9999 abandon: saving in free-list of size 7
9999 trace: reply: decrementing callstack depth from 5
9998 run: result 0 is 1158
9999 mem: decrementing refcount of 1158: 18 -> 17
9999 mem: storing 1158 in location 1439
9999 mem: incrementing refcount of 1158: 17 -> 18
 105 run: reply screen:address:shared:screen, editor:address:shared:editor-data, go-render?:boolean
9999 mem: location 1438 is 1012
9999 mem: location 1439 is 1158
9999 mem: location 1444 is 0
9999 abandon: saving in free-list of size 87
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9998 run: result 1 is 1158
9998 run: result 2 is 0
9999 mem: decrementing refcount of 1012: 124 -> 123
9999 mem: storing 1012 in location 1355
9999 mem: incrementing refcount of 1012: 123 -> 124
9999 mem: decrementing refcount of 1158: 18 -> 17
9999 mem: storing 1158 in location 1357
9999 mem: incrementing refcount of 1158: 17 -> 18
9999 mem: storing 0 in location 1367
 104 run: jump-unless go-render?, 
9999 mem: location 1367 is 0
9998 run: jumping to instruction 25
 104 run: jump 
9998 run: jumping to instruction 5
 104 run: cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1609
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1625
9999 mem: location 1170 is 0
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1166
9998 run: its type is number
9999 mem: location 1166 is 2
9999 mem: storing 2 in location 1358
 104 run: cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9999 mem: location 1159 is 1180
9999 mem: location 1160 is 1180
9999 mem: location 1161 is 0
9999 mem: location 1162 is 1609
9999 mem: location 1163 is 0
9999 mem: location 1164 is 9
9999 mem: location 1165 is 3
9999 mem: location 1166 is 2
9999 mem: location 1167 is 1
9999 mem: location 1168 is 1
9999 mem: location 1169 is 1625
9999 mem: location 1170 is 0
9999 mem: location 1357 is 1158
9999 mem: skipping refcount at 1158
9998 run: address to copy is 1167
9998 run: its type is number
9999 mem: location 1167 is 1
9999 mem: storing 1 in location 1359
 104 run: screen <- move-cursor screen, cursor-row, cursor-column
9999 mem: location 1355 is 1012
9999 mem: location 1358 is 2
9999 mem: location 1359 is 1
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 6
9999 mem: allocating size 8
9999 abandon: picking up space from free-list of size 8
 105 run: screen:address:shared:screen <- next-ingredient-without-typechecking 
9999 mem: storing 1012 in location 1276
9999 mem: incrementing refcount of 1012: 124 -> 125
 105 run: new-row:number <- next-ingredient-without-typechecking 
9999 mem: storing 2 in location 1277
 105 run: new-column:number <- next-ingredient-without-typechecking 
9999 mem: storing 1 in location 1278
 105 run: jump-unless screen, 
9999 mem: location 1276 is 1012
9998 run: jump-unless fell through
 105 run: row:address:number <- get-address *screen, cursor-row:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1015
9999 mem: storing 1015 in location 1279
 105 run: *row <- copy new-row
9999 mem: location 1277 is 2
9999 mem: location 1279 is 1015
9999 mem: storing 2 in location 1015
 105 run: column:address:number <- get-address *screen, cursor-column:offset
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9999 mem: location 1013 is 5
9999 mem: location 1014 is 10
9999 mem: location 1015 is 2
9999 mem: location 1016 is 4
9999 mem: location 1017 is 1018
9999 mem: location 1276 is 1012
9999 mem: skipping refcount at 1012
9998 run: address to copy is 1016
9999 mem: storing 1016 in location 1280
 105 run: *column <- copy new-column
9999 mem: location 1278 is 1
9999 mem: location 1280 is 1016
9999 mem: storing 1 in location 1016
 105 run: reply screen:address:shared:screen
9999 mem: location 1276 is 1012
9999 abandon: saving in free-list of size 8
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is 1012
9999 mem: decrementing refcount of 1012: 125 -> 124
9999 mem: storing 1012 in location 1355
9999 mem: incrementing refcount of 1012: 124 -> 125
 104 run: e:event, console:address:shared:console, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1356 is 1568
9999 trace: incrementing callstack depth to 4
 105 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: allocating size 14
9999 abandon: picking up space from free-list of size 14
 105 run: console:address:shared:console <- next-ingredient-without-typechecking 
9999 mem: storing 1568 in location 1311
9999 mem: incrementing refcount of 1568: 2 -> 3
 105 run: jump-unless console, 
9999 mem: location 1311 is 1568
9998 run: jump-unless fell through
 105 run: current-event-index:address:number <- get-address *console, current-event-index:offset
9999 mem: location 1311 is 1568
9999 mem: skipping refcount at 1568
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1562
9999 mem: location 1311 is 1568
9999 mem: skipping refcount at 1568
9998 run: address to copy is 1569
9999 mem: storing 1569 in location 1312
 105 run: buf:address:shared:array:event <- get *console, events:offset
9999 mem: location 1311 is 1568
9999 mem: skipping refcount at 1568
9999 mem: location 1569 is 1
9999 mem: location 1570 is 1562
9999 mem: location 1311 is 1568
9999 mem: skipping refcount at 1568
9998 run: address to copy is 1570
9998 run: its type is <address : <shared : <array : <event : <>>>>>
9999 mem: location 1570 is 1562
9999 mem: storing 1562 in location 1313
9999 mem: incrementing refcount of 1562: 1 -> 2
 105 run: max:number <- length *buf
9999 mem: location 1313 is 1562
9999 mem: skipping refcount at 1562
9999 mem: storing 1 in location 1314
 105 run: done?:boolean <- greater-or-equal *current-event-index, max
9999 mem: location 1312 is 1569
9999 mem: location 1569 is 1
9999 mem: location 1314 is 1
9999 mem: storing 1 in location 1315
 105 run: jump-unless done?, 
9999 mem: location 1315 is 1
9998 run: jump-unless fell through
 105 run: dummy:address:shared:event <- new event:type
9999 mem: allocating size 5
9999 abandon: picking up space from free-list of size 5
9999 mem: storing 1571 in location 1316
9999 mem: incrementing refcount of 1571: 0 -> 1
 105 run: reply *dummy, console/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1316 is 1571
9999 mem: skipping refcount at 1571
9999 mem: location 1572 is 0
9999 mem: location 1573 is 0
9999 mem: location 1574 is 0
9999 mem: location 1575 is 0
9999 mem: location 1311 is 1568
9999 abandon: saving in free-list of size 14
9999 trace: reply: decrementing callstack depth from 4
9998 run: result 0 is [0, 0, 0, 0]
9998 run: result 1 is 1568
9998 run: result 2 is 1
9998 run: result 3 is 1
9999 mem: storing 0 in location 1360
9999 mem: storing 0 in location 1361
9999 mem: storing 0 in location 1362
9999 mem: storing 0 in location 1363
9999 mem: decrementing refcount of 1568: 3 -> 2
9999 mem: storing 1568 in location 1356
9999 mem: incrementing refcount of 1568: 2 -> 3
9999 mem: storing 1 in location 1364
9999 mem: storing 1 in location 1365
 104 run: jump-unless found?, 
9999 mem: location 1364 is 1
9998 run: jump-unless fell through
 104 run: jump-if quit?, 
9999 mem: location 1365 is 1
9998 run: jumping to instruction 28
 104 run: reply screen:address:shared:screen, console:address:shared:console, editor:address:shared:editor-data
9999 mem: location 1355 is 1012
9999 mem: location 1356 is 1568
9999 mem: location 1357 is 1158
9999 abandon: saving in free-list of size 16
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 trace: reply: decrementing callstack depth from 2
 102 run: screen-should-contain [
    .          .
    .abc       .
    .0def      .
    .ghi       .
    .┈┈┈┈┈┈┈┈┈┈.
  ]
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
