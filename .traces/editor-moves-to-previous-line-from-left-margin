 101 run: assume-console [
    left-click 3, 0
    press up-arrow
  ]
parse: instruction: left-click
parse:   ingredient: {name: "3", properties: ["3": "literal"]}
parse:   ingredient: {name: "0", properties: ["0": "literal"]}
parse: instruction: press
parse:   ingredient: {name: "up-arrow", properties: ["up-arrow": ]}
 101 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
    3:number <- get *2:address:editor-data, cursor-row:offset
    4:number <- get *2:address:editor-data, cursor-column:offset
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-row", properties: ["cursor-row": "offset"]}
parse:   product: {name: "3", properties: ["3": "number"]}
parse: instruction: get
parse:   ingredient: {name: "2", properties: ["*2": "address":"editor-data", "lookup": ]}
parse:   ingredient: {name: "cursor-column", properties: ["cursor-column": "offset"]}
parse:   product: {name: "4", properties: ["4": "number"]}
name: element cursor-row of type editor-data is at offset 6
name: element cursor-column of type editor-data is at offset 7
after-brace: recipe run1001
after-brace: editor-event-loop ...
after-brace: get ...
after-brace: get ...
 101 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1312
9999 mem: location 2 is 1115
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1277
 102 run: console:address <- next-ingredient 
9999 mem: storing 1312 in location 1278
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1279
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1312
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
9999 mem: new alloc: 1314
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1312 in location 1316
 103 run: break-unless x, 
9999 mem: location 1316 is 1312
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1316 is 1312
9999 mem: location 1312 is 0
9999 mem: location 1313 is 1303
9999 mem: location 1316 is 1312
9999 run: address to copy is 1312
9999 mem: storing 1312 in location 1317
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1316 is 1312
9999 mem: location 1312 is 0
9999 mem: location 1313 is 1303
9999 mem: location 1316 is 1312
9999 run: address to copy is 1313
9999 run: its type is address
9999 mem: location 1313 is 1303
9999 mem: storing 1303 in location 1318
 103 run: max:number <- length *buf
9999 mem: location 1318 is 1303
9999 mem: storing 2 in location 1319
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1317 is 1312
9999 mem: location 1312 is 0
9999 mem: location 1319 is 2
9999 mem: storing 0 in location 1320
 103 run: break-unless done?, 
9999 mem: location 1320 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1318 is 1303
9999 mem: location 1317 is 1312
9999 mem: location 1312 is 0
9999 run: address to copy is 1304
9999 run: its type is event
9999 mem: location 1304 is 2
9999 mem: location 1305 is 65513
9999 mem: location 1306 is 3
9999 mem: location 1307 is 0
9999 mem: storing 2 in location 1322
9999 mem: storing 65513 in location 1323
9999 mem: storing 3 in location 1324
9999 mem: storing 0 in location 1325
 103 run: *idx <- add *idx, 1
9999 mem: location 1317 is 1312
9999 mem: location 1312 is 0
9999 mem: location 1317 is 1312
9999 mem: storing 1 in location 1312
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1322 is 2
9999 mem: location 1323 is 65513
9999 mem: location 1324 is 3
9999 mem: location 1325 is 0
9999 mem: location 1316 is 1312
9999 run: result 0 is [2, 65513, 3, 0]
9999 run: result 1 is 1312
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 2 in location 1280
9999 mem: storing 65513 in location 1281
9999 mem: storing 3 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1312 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 0 in location 1285
 102 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1285 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1280 is 2
9999 mem: location 1281 is 65513
9999 mem: location 1282 is 3
9999 mem: location 1283 is 0
9999 mem: storing 1281 in location 1286
 102 run: break-unless t, 
9999 mem: location 1286 is 1281
9999 run: jump-unless fell through
 102 run: move-cursor-in-editor screen, editor, *t
9999 mem: location 1277 is 1009
9999 mem: location 1279 is 1115
9999 mem: location 1286 is 1281
9999 mem: location 1281 is 65513
9999 mem: location 1282 is 3
9999 mem: location 1283 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
9999 mem: new alloc: 1327
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1329
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1330
 103 run: t:touch-event <- next-ingredient 
9999 mem: storing 65513 in location 1331
9999 mem: storing 3 in location 1332
9999 mem: storing 0 in location 1333
 103 run: jump-if editor, 1:offset
9999 mem: location 1330 is 1115
9999 run: jumping to instruction 6
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1331 is 65513
9999 mem: location 1332 is 3
9999 mem: location 1333 is 0
9999 run: address to copy is 1333
9999 run: its type is number
9999 mem: location 1333 is 0
9999 mem: storing 0 in location 1334
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1330 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1330 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1335
 103 run: too-far-left?:boolean <- lesser-than click-column, left
9999 mem: location 1334 is 0
9999 mem: location 1335 is 0
9999 mem: storing 0 in location 1336
 103 run: jump-unless too-far-left?, 1:offset
9999 mem: location 1336 is 0
9999 run: jumping to instruction 11
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1330 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1330 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1337
 103 run: too-far-right?:boolean <- greater-than click-column, right
9999 mem: location 1334 is 0
9999 mem: location 1337 is 9
9999 mem: storing 0 in location 1338
 103 run: jump-unless too-far-right?, 1:offset
9999 mem: location 1338 is 0
9999 run: jumping to instruction 15
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1330 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1330 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 1
9999 mem: storing 1 in location 1339
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1330 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1330 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1340
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1330 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1330 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1341
 103 run: click-row:number <- get t, row:offset
9999 mem: location 1331 is 65513
9999 mem: location 1332 is 3
9999 mem: location 1333 is 0
9999 run: address to copy is 1332
9999 run: its type is number
9999 mem: location 1332 is 3
9999 mem: storing 3 in location 1342
 103 run: click-column:number <- get t, column:offset
9999 mem: location 1331 is 65513
9999 mem: location 1332 is 3
9999 mem: location 1333 is 0
9999 run: address to copy is 1333
9999 run: its type is number
9999 mem: location 1333 is 0
9999 mem: storing 0 in location 1334
 103 run: editor <- snap-cursor screen, editor, click-row, click-column
9999 mem: location 1329 is 1009
9999 mem: location 1330 is 1115
9999 mem: location 1342 is 3
9999 mem: location 1334 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 26
 104 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1200
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1201
 104 run: target-row:number <- next-ingredient 
9999 mem: storing 3 in location 1202
 104 run: target-column:number <- next-ingredient 
9999 mem: storing 0 in location 1203
 104 run: jump-if editor, 1:offset
9999 mem: location 1201 is 1115
9999 run: jumping to instruction 7
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1204
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1205
 104 run: screen-height:number <- screen-height screen
9999 mem: location 1200 is 1009
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1166
 105 run: break-unless sc, 
9999 mem: location 1166 is 1009
9999 run: jump-unless fell through
 105 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1166 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1167
 105 run: reply height
9999 mem: location 1167 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1206
 104 run: curr:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1207
 104 run: prev:address:duplex-list <- copy curr
9999 mem: location 1207 is 1158
9999 mem: storing 1158 in location 1208
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1158
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1158
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1166 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1207
 104 run: row:number <- copy 1/top
9999 mem: storing 1 in location 1209
 104 run: column:number <- copy left
9999 mem: location 1204 is 0
9999 mem: storing 0 in location 1210
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 1
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1211
 104 run: *cursor-row <- copy target-row
9999 mem: location 1202 is 3
9999 mem: location 1211 is 1121
9999 mem: location 1211 is 1121
9999 mem: storing 3 in location 1121
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1212
 104 run: *cursor-column <- copy target-column
9999 mem: location 1203 is 0
9999 mem: location 1212 is 1122
9999 mem: location 1212 is 1122
9999 mem: storing 0 in location 1122
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1201 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1158
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1201 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1213
 104 run: break-unless curr, 
9999 mem: location 1207 is 1161
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 1
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1207 is 1161
9999 run: address to copy is 1161
9999 run: its type is number
9999 mem: location 1161 is 97
9999 mem: storing 97 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 97
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 0
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1161
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1161
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1166 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1158
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1158
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1158
9999 mem: location 1158 is 167
9999 mem: location 1159 is 1161
9999 mem: location 1160 is 0
9999 mem: location 1166 is 1158
9999 run: address to copy is 1159
9999 run: its type is address
9999 mem: location 1159 is 1161
9999 mem: storing 1161 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1161
9999 run: result 0 is 1161
9999 mem: storing 1161 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 0
9999 mem: storing 1 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1168
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 1
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1207 is 1168
9999 run: address to copy is 1168
9999 run: its type is number
9999 mem: location 1168 is 98
9999 mem: storing 98 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 98
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 1
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1168
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1168
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1166 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1161
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1161 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1161
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1161
9999 mem: location 1161 is 97
9999 mem: location 1162 is 1168
9999 mem: location 1163 is 1158
9999 mem: location 1166 is 1161
9999 run: address to copy is 1162
9999 run: its type is address
9999 mem: location 1162 is 1168
9999 mem: storing 1168 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1168
9999 run: result 0 is 1168
9999 mem: storing 1168 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 1
9999 mem: storing 2 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1171
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 1
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1207 is 1171
9999 run: address to copy is 1171
9999 run: its type is number
9999 mem: location 1171 is 99
9999 mem: storing 99 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 99
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 2
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1171
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1171
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1166 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1168
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1168 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1168
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1168
9999 mem: location 1168 is 98
9999 mem: location 1169 is 1171
9999 mem: location 1170 is 1161
9999 mem: location 1166 is 1168
9999 run: address to copy is 1169
9999 run: its type is address
9999 mem: location 1169 is 1171
9999 mem: storing 1171 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1171
9999 run: result 0 is 1171
9999 mem: storing 1171 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 2
9999 mem: storing 3 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1174
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 1
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1207 is 1174
9999 run: address to copy is 1174
9999 run: its type is number
9999 mem: location 1174 is 10
9999 mem: storing 10 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 1
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1209 is 1
9999 mem: storing 2 in location 1209
 104 run: column <- copy left
9999 mem: location 1204 is 0
9999 mem: storing 0 in location 1210
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1174
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1174
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1166 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1171
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1171 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1171
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1171
9999 mem: location 1171 is 99
9999 mem: location 1172 is 1174
9999 mem: location 1173 is 1168
9999 mem: location 1166 is 1171
9999 run: address to copy is 1172
9999 run: its type is address
9999 mem: location 1172 is 1174
9999 mem: storing 1174 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1208
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1207 is 1177
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 2
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1207 is 1177
9999 run: address to copy is 1177
9999 run: its type is number
9999 mem: location 1177 is 100
9999 mem: storing 100 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 100
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 0
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1177
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1174
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1174
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1166 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 0
9999 mem: storing 1 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1180
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 2
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1207 is 1180
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 101
9999 mem: storing 101 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 101
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 1
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1180
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1177
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 1
9999 mem: storing 2 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1183
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 2
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1207 is 1183
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 102
9999 mem: storing 102 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 102
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 2
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1183
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1183
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1166 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1180
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 2
9999 mem: storing 3 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1186
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 2
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1207 is 1186
9999 run: address to copy is 1186
9999 run: its type is number
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 10
9999 mem: storing 1 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 1
9999 run: jump-unless fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 2
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 0
9999 run: jumping to instruction 43
 104 run: row <- add row, 1
9999 mem: location 1209 is 2
9999 mem: storing 3 in location 1209
 104 run: column <- copy left
9999 mem: location 1204 is 0
9999 mem: storing 0 in location 1210
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1186
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1186
9999 run: jumping to instruction 4
schedule: next-duplex/snap-cursor/move-cursor-in-editor/editor-event-loop/run1001/scenario-editor-moves-to-previous-line-from-left-margin
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1166 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1189
9999 run: result 0 is 1189
9999 mem: storing 1189 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1183
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1183
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1166 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1208
 104 run: loop +next-character:label
9999 run: jumping to instruction 22
 104 run: break-unless curr, 
9999 mem: location 1207 is 1189
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 3
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 1 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1210 is 0
9999 mem: location 1212 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 1 in location 1216
 104 run: break-unless at-cursor?, 
9999 mem: location 1216 is 1
9999 run: jump-unless fell through
 104 run: *before-cursor <- copy prev
9999 mem: location 1208 is 1186
9999 mem: location 1213 is 1118
9999 mem: location 1213 is 1118
9999 mem: storing 1186 in location 1118
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1207 is 1189
9999 run: address to copy is 1189
9999 run: its type is number
9999 mem: location 1189 is 103
9999 mem: storing 103 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 103
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 0
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1189
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1189
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1166 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1192
9999 run: result 0 is 1192
9999 mem: storing 1192 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1186
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1186
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1166 is 1186
9999 run: address to copy is 1187
9999 run: its type is address
9999 mem: location 1187 is 1189
9999 mem: storing 1189 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1189
9999 run: result 0 is 1189
9999 mem: storing 1189 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 0
9999 mem: storing 1 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1192
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 3
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 1 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1210 is 1
9999 mem: location 1212 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1216
 104 run: break-unless at-cursor?, 
9999 mem: location 1216 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1207 is 1192
9999 run: address to copy is 1192
9999 run: its type is number
9999 mem: location 1192 is 104
9999 mem: storing 104 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 104
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 1
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1192
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1192
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1166 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1195
9999 run: result 0 is 1195
9999 mem: storing 1195 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1189
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1189 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1189
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1189
9999 mem: location 1189 is 103
9999 mem: location 1190 is 1192
9999 mem: location 1191 is 1186
9999 mem: location 1166 is 1189
9999 run: address to copy is 1190
9999 run: its type is address
9999 mem: location 1190 is 1192
9999 mem: storing 1192 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1192
9999 run: result 0 is 1192
9999 mem: storing 1192 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 1
9999 mem: storing 2 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 1195
9999 run: jump-unless fell through
 104 run: off-screen?:boolean <- greater-or-equal row, screen-height
9999 mem: location 1209 is 3
9999 mem: location 1206 is 5
9999 mem: storing 0 in location 1214
 104 run: break-if off-screen?, 
9999 mem: location 1214 is 0
9999 run: jump-if fell through
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 1 in location 1215
 104 run: break-unless at-cursor-row?, 
9999 mem: location 1215 is 1
9999 run: jump-unless fell through
 104 run: at-cursor?:boolean <- equal column, *cursor-column
9999 mem: location 1210 is 2
9999 mem: location 1212 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1216
 104 run: break-unless at-cursor?, 
9999 mem: location 1216 is 0
9999 run: jumping to instruction 31
 104 run: c:character <- get *curr, value:offset
9999 mem: location 1207 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1192
9999 mem: location 1207 is 1195
9999 run: address to copy is 1195
9999 run: its type is number
9999 mem: location 1195 is 105
9999 mem: storing 105 in location 1217
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1217 is 105
9999 mem: storing 0 in location 1218
 104 run: break-unless newline?, 
9999 mem: location 1218 is 0
9999 run: jumping to instruction 49
 104 run: at-right?:boolean <- equal column, right
9999 mem: location 1210 is 2
9999 mem: location 1205 is 9
9999 mem: storing 0 in location 1220
 104 run: break-unless at-right?, 
9999 mem: location 1220 is 0
9999 run: jumping to instruction 56
 104 run: curr <- next-duplex curr
9999 mem: location 1207 is 1195
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1195 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1195
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1195
9999 mem: location 1195 is 105
9999 mem: location 1196 is 0
9999 mem: location 1197 is 1192
9999 mem: location 1166 is 1195
9999 run: address to copy is 1196
9999 run: its type is address
9999 mem: location 1196 is 0
9999 mem: storing 0 in location 1167
 105 run: reply result
9999 mem: location 1167 is 0
9999 run: result 0 is 0
9999 mem: storing 0 in location 1207
 104 run: prev <- next-duplex prev
9999 mem: location 1208 is 1192
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 105 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1192 in location 1166
 105 run: jump-if in, 1:offset
9999 mem: location 1166 is 1192
9999 run: jumping to instruction 4
 105 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1166 is 1192
9999 mem: location 1192 is 104
9999 mem: location 1193 is 1195
9999 mem: location 1194 is 1189
9999 mem: location 1166 is 1192
9999 run: address to copy is 1193
9999 run: its type is address
9999 mem: location 1193 is 1195
9999 mem: storing 1195 in location 1167
 105 run: reply result
9999 mem: location 1167 is 1195
9999 run: result 0 is 1195
9999 mem: storing 1195 in location 1208
 104 run: column <- add column, 1
9999 mem: location 1210 is 2
9999 mem: storing 3 in location 1210
 104 run: loop 
9999 run: jumping to instruction 21
 104 run: break-unless curr, 
9999 mem: location 1207 is 0
9999 run: jumping to instruction 61
 104 run: at-cursor-row?:boolean <- equal row, *cursor-row
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 1 in location 1215
 104 run: cursor-outside-line?:boolean <- lesser-or-equal column, *cursor-column
9999 mem: location 1210 is 3
9999 mem: location 1212 is 1122
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1221
 104 run: before-cursor-on-same-line?:boolean <- and at-cursor-row?, cursor-outside-line?
9999 mem: location 1215 is 1
9999 mem: location 1221 is 0
9999 mem: storing 0 in location 1222
 104 run: above-cursor-row?:boolean <- lesser-than row, *cursor-row
9999 mem: location 1209 is 3
9999 mem: location 1211 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1223
 104 run: before-cursor?:boolean <- or before-cursor-on-same-line?, above-cursor-row?
9999 mem: location 1222 is 0
9999 mem: location 1223 is 0
9999 mem: storing 0 in location 1224
 104 run: break-unless before-cursor?, 
9999 mem: location 1224 is 0
9999 run: jumping to instruction 72
 104 run: reply editor/same-as-ingredient:1
9999 mem: location 1201 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1330
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1330 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1330 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 3
9999 mem: storing 3 in location 1343
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1330 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1330 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1344
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1330 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1330 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1345
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1347
9999 mem: storing 1347 in location 1346
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, 0/empty, 0/empty, 0/empty
9999 mem: location 1339 is 1
9999 mem: location 1340 is 0
9999 mem: location 1341 is 1158
9999 mem: location 1343 is 3
9999 mem: location 1344 is 0
9999 mem: location 1345 is 1158
9999 mem: location 1346 is 1347
9999 mem: storing 1 in location 1347
9999 mem: storing 1 in location 1348
9999 mem: storing 0 in location 1349
9999 mem: storing 1158 in location 1350
9999 mem: storing 3 in location 1351
9999 mem: storing 0 in location 1352
9999 mem: storing 1158 in location 1353
9999 mem: storing 0 in location 1354
9999 mem: storing 0 in location 1355
9999 mem: storing 0 in location 1356
 103 run: editor <- add-operation editor, op
9999 mem: location 1330 is 1115
9999 mem: location 1346 is 1347
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1271
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1347 in location 1272
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1271 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 0
9999 mem: location 1125 is 0
9999 mem: location 1271 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1273
 104 run: *undo <- push op, *undo
9999 mem: location 1272 is 1347
9999 mem: location 1273 is 1124
9999 mem: location 1124 is 0
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1347 in location 1227
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 0 in location 1228
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1357
9999 mem: storing 1357 in location 1229
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1229 is 1357
9999 mem: location 1357 is 0
9999 mem: location 1358 is 0
9999 mem: location 1229 is 1357
9999 run: address to copy is 1357
9999 mem: storing 1357 in location 1230
 105 run: *val <- copy x
9999 mem: location 1227 is 1347
9999 mem: location 1230 is 1357
9999 mem: location 1230 is 1357
9999 mem: storing 1347 in location 1357
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1229 is 1357
9999 mem: location 1357 is 1347
9999 mem: location 1358 is 0
9999 mem: location 1229 is 1357
9999 run: address to copy is 1358
9999 mem: storing 1358 in location 1231
 105 run: *next <- copy in
9999 mem: location 1228 is 0
9999 mem: location 1231 is 1358
9999 mem: location 1231 is 1358
9999 mem: storing 0 in location 1358
 105 run: reply result
9999 mem: location 1229 is 1357
9999 run: result 0 is 1357
9999 mem: location 1273 is 1124
9999 mem: storing 1357 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1271 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1271 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1274
 104 run: *redo <- copy 0
9999 mem: location 1274 is 1125
9999 mem: location 1274 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1271 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1330
 103 run: reply 1/true
 102 run: loop +next-event:label
9999 run: jumping to instruction 6
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1312
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1312 in location 1316
 103 run: break-unless x, 
9999 mem: location 1316 is 1312
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1316 is 1312
9999 mem: location 1312 is 1
9999 mem: location 1313 is 1303
9999 mem: location 1316 is 1312
9999 run: address to copy is 1312
9999 mem: storing 1312 in location 1317
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1316 is 1312
9999 mem: location 1312 is 1
9999 mem: location 1313 is 1303
9999 mem: location 1316 is 1312
9999 run: address to copy is 1313
9999 run: its type is address
9999 mem: location 1313 is 1303
9999 mem: storing 1303 in location 1318
 103 run: max:number <- length *buf
9999 mem: location 1318 is 1303
9999 mem: storing 2 in location 1319
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1317 is 1312
9999 mem: location 1312 is 1
9999 mem: location 1319 is 2
9999 mem: storing 0 in location 1320
 103 run: break-unless done?, 
9999 mem: location 1320 is 0
9999 run: jumping to instruction 12
 103 run: result:event <- index *buf, *idx
9999 mem: location 1318 is 1303
9999 mem: location 1317 is 1312
9999 mem: location 1312 is 1
9999 run: address to copy is 1308
9999 run: its type is event
9999 mem: location 1308 is 1
9999 mem: location 1309 is 65517
9999 mem: location 1310 is 0
9999 mem: location 1311 is 0
9999 mem: storing 1 in location 1322
9999 mem: storing 65517 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 103 run: *idx <- add *idx, 1
9999 mem: location 1317 is 1312
9999 mem: location 1312 is 1
9999 mem: location 1317 is 1312
9999 mem: storing 2 in location 1312
 103 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1322 is 1
9999 mem: location 1323 is 65517
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: location 1316 is 1312
9999 run: result 0 is [1, 65517, 0, 0]
9999 run: result 1 is 1312
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 1 in location 1280
9999 mem: storing 65517 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1312 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 0 in location 1285
 102 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1285 is 0
9999 run: jump-if fell through
 102 run: trace 10, [app], [next-event]
  10 app: next-event 
 102 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1280 is 1
9999 mem: location 1281 is 65517
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: storing 0 in location 1286
 102 run: break-unless t, 
9999 mem: location 1286 is 0
9999 run: jumping to instruction 15
 102 run: break-if t, 
9999 mem: location 1286 is 0
9999 run: jump-if fell through
 102 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1277 is 1009
9999 mem: location 1279 is 1115
9999 mem: location 1280 is 1
9999 mem: location 1281 is 65517
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 76
9999 mem: new alloc: 1359
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1361
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1362
 103 run: e:event <- next-ingredient 
9999 mem: storing 1 in location 1363
9999 mem: storing 65517 in location 1364
9999 mem: storing 0 in location 1365
9999 mem: storing 0 in location 1366
 103 run: jump-if editor, 1:offset
9999 mem: location 1362 is 1115
9999 run: jumping to instruction 6
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1361 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1166
 104 run: break-unless sc, 
9999 mem: location 1166 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1166 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1167
 104 run: reply width
9999 mem: location 1167 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1367
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1361 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1166
 104 run: break-unless sc, 
9999 mem: location 1166 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1166 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1166 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1167
 104 run: reply height
9999 mem: location 1167 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1368
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1369
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1370
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1371
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1372
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1373
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1372 is 1121
9999 mem: location 1121 is 3
9999 mem: location 1372 is 1121
9999 mem: location 1372 is 1121
9999 mem: storing 3 in location 1374
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1373 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1373 is 1122
9999 mem: location 1373 is 1122
9999 mem: storing 0 in location 1375
 103 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1363 is 1
9999 mem: location 1364 is 65517
9999 mem: location 1365 is 0
9999 mem: location 1366 is 0
9999 mem: storing 0 in location 1376
 103 run: break-unless c, 
9999 mem: location 1376 is 0
9999 run: jumping to instruction 266
 103 run: k:address:number <- maybe-convert e:event, keycode:variant
9999 mem: location 1363 is 1
9999 mem: location 1364 is 65517
9999 mem: location 1365 is 0
9999 mem: location 1366 is 0
9999 mem: storing 1364 in location 1419
 103 run: assert k, [event was of unknown type; neither keyboard nor mouse]
9999 mem: location 1419 is 1364
 103 run: page-up?:boolean <- equal *k, 65519/page-up
9999 mem: location 1419 is 1364
9999 mem: location 1364 is 65517
9999 mem: storing 0 in location 1388
 103 run: break-unless page-up?, 
9999 mem: location 1388 is 0
9999 run: jumping to instruction 291
 103 run: page-down?:boolean <- equal *k, 65518/page-down
9999 mem: location 1419 is 1364
9999 mem: location 1364 is 65517
9999 mem: storing 0 in location 1398
 103 run: break-unless page-down?, 
9999 mem: location 1398 is 0
9999 run: jumping to instruction 313
 103 run: move-to-end-of-line?:boolean <- equal *k, 65520/end
9999 mem: location 1419 is 1364
9999 mem: location 1364 is 65517
9999 mem: storing 0 in location 1401
 103 run: break-unless move-to-end-of-line?, 
9999 mem: location 1401 is 0
9999 run: jumping to instruction 330
 103 run: move-to-start-of-line?:boolean <- equal *k, 65521/home
9999 mem: location 1419 is 1364
9999 mem: location 1364 is 65517
9999 mem: storing 0 in location 1402
 103 run: break-unless move-to-start-of-line?, 
9999 mem: location 1402 is 0
9999 run: jumping to instruction 347
 103 run: move-to-next-line?:boolean <- equal *k, 65516/down-arrow
9999 mem: location 1419 is 1364
9999 mem: location 1364 is 65517
9999 mem: storing 0 in location 1420
 103 run: break-unless move-to-next-line?, 
9999 mem: location 1420 is 0
9999 run: jumping to instruction 364
 103 run: move-to-previous-line?:boolean <- equal *k, 65517/up-arrow
9999 mem: location 1419 is 1364
9999 mem: location 1364 is 65517
9999 mem: storing 1 in location 1421
 103 run: break-unless move-to-previous-line?, 
9999 mem: location 1421 is 1
9999 run: jump-unless fell through
 103 run: before-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 3
9999 mem: storing 3 in location 1391
 103 run: before-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1392
 103 run: before-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1393
 103 run: editor, go-render? <- move-to-previous-line editor
9999 mem: location 1362 is 1115
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 19
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1329
 104 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1329 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1329 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1330
 104 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1329 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1329 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1331
 104 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1329 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1329 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1332
 104 run: left:number <- get *editor, left:offset
9999 mem: location 1329 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1329 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1333
 104 run: right:number <- get *editor, right:offset
9999 mem: location 1329 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1329 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1334
 104 run: already-at-top?:boolean <- lesser-or-equal *cursor-row, 1/top
9999 mem: location 1330 is 1121
9999 mem: location 1121 is 3
9999 mem: storing 0 in location 1335
 104 run: break-if already-at-top?, 
9999 mem: location 1335 is 0
9999 run: jump-if fell through
 104 run: curr:address:duplex-list <- copy *before-cursor
9999 mem: location 1332 is 1118
9999 mem: location 1118 is 1186
9999 mem: location 1332 is 1118
9999 mem: location 1332 is 1118
9999 mem: storing 1186 in location 1336
 104 run: old:address:duplex-list <- copy curr
9999 mem: location 1336 is 1186
9999 mem: storing 1186 in location 1337
 104 run: c2:character <- get *curr, value:offset
9999 mem: location 1336 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1336 is 1186
9999 run: address to copy is 1186
9999 run: its type is number
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1338
 104 run: at-newline?:boolean <- equal c2, 10/newline
9999 mem: location 1338 is 10
9999 mem: storing 1 in location 1339
 104 run: break-if at-newline?, 
9999 mem: location 1339 is 1
9999 run: jumping to instruction 20
 104 run: old <- copy curr
9999 mem: location 1336 is 1186
9999 mem: storing 1186 in location 1337
 104 run: curr <- before-previous-line curr, editor
9999 mem: location 1336 is 1186
9999 mem: location 1329 is 1115
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 13
9999 mem: new alloc: 1436
 105 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1438
 105 run: c:character <- get *curr, value:offset
9999 mem: location 1438 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1438 is 1186
9999 run: address to copy is 1186
9999 run: its type is number
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1439
 105 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1440
 105 run: left:number <- get *editor, left:offset
9999 mem: location 1440 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1440 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1441
 105 run: right:number <- get *editor, right:offset
9999 mem: location 1440 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1440 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1442
 105 run: max-line-length:number <- subtract right, left, -1/exclusive-right, 1/wrap-icon
9999 mem: location 1442 is 9
9999 mem: location 1441 is 0
9999 mem: storing 9 in location 1443
 105 run: sentinel:address:duplex-list <- get *editor, data:offset
9999 mem: location 1440 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1186
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 3
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1440 is 1115
9999 run: address to copy is 1115
9999 run: its type is address
9999 mem: location 1115 is 1158
9999 mem: storing 1158 in location 1444
 105 run: len:number <- previous-line-length curr, sentinel
9999 mem: location 1438 is 1186
9999 mem: location 1444 is 1158
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 106 run: curr:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1152
 106 run: start:address:duplex-list <- next-ingredient 
9999 mem: storing 1158 in location 1153
 106 run: result:number <- copy 0
9999 mem: storing 0 in location 1154
 106 run: jump-if curr, 1:offset
9999 mem: location 1152 is 1186
9999 run: jumping to instruction 6
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1186
9999 mem: location 1153 is 1158
9999 mem: storing 0 in location 1155
 106 run: jump-unless at-start?, 1:offset
9999 mem: location 1155 is 0
9999 run: jumping to instruction 9
 106 run: curr <- prev-duplex curr
9999 mem: location 1152 is 1186
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1166
 107 run: jump-if in, 1:offset
9999 mem: location 1166 is 1186
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1166 is 1186
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1183
9999 mem: storing 1183 in location 1167
 107 run: reply result
9999 mem: location 1167 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1152 is 1183
9999 run: jump-unless fell through
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1183
9999 mem: location 1153 is 1158
9999 mem: storing 0 in location 1155
 106 run: break-if at-start?, 
9999 mem: location 1155 is 0
9999 run: jump-if fell through
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1152 is 1183
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 102
9999 mem: storing 102 in location 1156
 106 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1156 is 102
9999 mem: storing 0 in location 1157
 106 run: break-if at-newline?, 
9999 mem: location 1157 is 0
9999 run: jump-if fell through
 106 run: result <- add result, 1
9999 mem: location 1154 is 0
9999 mem: storing 1 in location 1154
 106 run: loop 
9999 run: jumping to instruction 10
 106 run: curr <- prev-duplex curr
9999 mem: location 1152 is 1183
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1166
 107 run: jump-if in, 1:offset
9999 mem: location 1166 is 1183
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1166 is 1183
9999 run: address to copy is 1185
9999 run: its type is address
9999 mem: location 1185 is 1180
9999 mem: storing 1180 in location 1167
 107 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1152 is 1180
9999 run: jump-unless fell through
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1180
9999 mem: location 1153 is 1158
9999 mem: storing 0 in location 1155
 106 run: break-if at-start?, 
9999 mem: location 1155 is 0
9999 run: jump-if fell through
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1152 is 1180
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 101
9999 mem: storing 101 in location 1156
 106 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1156 is 101
9999 mem: storing 0 in location 1157
 106 run: break-if at-newline?, 
9999 mem: location 1157 is 0
9999 run: jump-if fell through
 106 run: result <- add result, 1
9999 mem: location 1154 is 1
9999 mem: storing 2 in location 1154
 106 run: loop 
9999 run: jumping to instruction 10
 106 run: curr <- prev-duplex curr
9999 mem: location 1152 is 1180
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 107 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1182
9999 run: its type is address
9999 mem: location 1182 is 1177
9999 mem: storing 1177 in location 1167
 107 run: reply result
9999 mem: location 1167 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1152 is 1177
9999 run: jump-unless fell through
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1177
9999 mem: location 1153 is 1158
9999 mem: storing 0 in location 1155
 106 run: break-if at-start?, 
9999 mem: location 1155 is 0
9999 run: jump-if fell through
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1152 is 1177
9999 run: address to copy is 1177
9999 run: its type is number
9999 mem: location 1177 is 100
9999 mem: storing 100 in location 1156
 106 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1156 is 100
9999 mem: storing 0 in location 1157
 106 run: break-if at-newline?, 
9999 mem: location 1157 is 0
9999 run: jump-if fell through
 106 run: result <- add result, 1
9999 mem: location 1154 is 2
9999 mem: storing 3 in location 1154
 106 run: loop 
9999 run: jumping to instruction 10
 106 run: curr <- prev-duplex curr
9999 mem: location 1152 is 1177
 107 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 107 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 107 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 107 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1179
9999 run: its type is address
9999 mem: location 1179 is 1174
9999 mem: storing 1174 in location 1167
 107 run: reply result
9999 mem: location 1167 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1152
 106 run: break-unless curr, 
9999 mem: location 1152 is 1174
9999 run: jump-unless fell through
 106 run: at-start?:boolean <- equal curr, start
9999 mem: location 1152 is 1174
9999 mem: location 1153 is 1158
9999 mem: storing 0 in location 1155
 106 run: break-if at-start?, 
9999 mem: location 1155 is 0
9999 run: jump-if fell through
 106 run: c:character <- get *curr, value:offset
9999 mem: location 1152 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1152 is 1174
9999 run: address to copy is 1174
9999 run: its type is number
9999 mem: location 1174 is 10
9999 mem: storing 10 in location 1156
 106 run: at-newline?:boolean <- equal c, 10/newline
9999 mem: location 1156 is 10
9999 mem: storing 1 in location 1157
 106 run: break-if at-newline?, 
9999 mem: location 1157 is 1
9999 run: jumping to instruction 19
 106 run: reply result
9999 mem: location 1154 is 3
9999 run: result 0 is 3
9999 mem: storing 3 in location 1445
 105 run: break-if len, 
9999 mem: location 1445 is 3
9999 run: jumping to instruction 15
 105 run: _, max:number <- divide-with-remainder len, max-line-length
9999 mem: location 1445 is 3
9999 mem: location 1443 is 9
9999 mem: storing 3 in location 1447
 105 run: break-if max, 
9999 mem: location 1447 is 3
9999 run: jumping to instruction 20
 105 run: max <- add max, 1
9999 mem: location 1447 is 3
9999 mem: storing 4 in location 1447
 105 run: count:number <- copy 0
9999 mem: storing 0 in location 1448
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1448 is 0
9999 mem: location 1447 is 4
9999 mem: storing 0 in location 1449
 105 run: break-if done?, 
9999 mem: location 1449 is 0
9999 run: jump-if fell through
 105 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1438 is 1186
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1186 in location 1166
 106 run: jump-if in, 1:offset
9999 mem: location 1166 is 1186
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1166 is 1186
9999 run: address to copy is 1188
9999 run: its type is address
9999 mem: location 1188 is 1183
9999 mem: storing 1183 in location 1167
 106 run: reply result
9999 mem: location 1167 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1446
 105 run: break-unless prev, 
9999 mem: location 1446 is 1183
9999 run: jump-unless fell through
 105 run: curr <- copy prev
9999 mem: location 1446 is 1183
9999 mem: storing 1183 in location 1438
 105 run: count <- add count, 1
9999 mem: location 1448 is 0
9999 mem: storing 1 in location 1448
 105 run: loop 
9999 run: jumping to instruction 24
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1448 is 1
9999 mem: location 1447 is 4
9999 mem: storing 0 in location 1449
 105 run: break-if done?, 
9999 mem: location 1449 is 0
9999 run: jump-if fell through
 105 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1438 is 1183
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1166
 106 run: jump-if in, 1:offset
9999 mem: location 1166 is 1183
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1166 is 1183
9999 run: address to copy is 1185
9999 run: its type is address
9999 mem: location 1185 is 1180
9999 mem: storing 1180 in location 1167
 106 run: reply result
9999 mem: location 1167 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1446
 105 run: break-unless prev, 
9999 mem: location 1446 is 1180
9999 run: jump-unless fell through
 105 run: curr <- copy prev
9999 mem: location 1446 is 1180
9999 mem: storing 1180 in location 1438
 105 run: count <- add count, 1
9999 mem: location 1448 is 1
9999 mem: storing 2 in location 1448
 105 run: loop 
9999 run: jumping to instruction 24
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1448 is 2
9999 mem: location 1447 is 4
9999 mem: storing 0 in location 1449
 105 run: break-if done?, 
9999 mem: location 1449 is 0
9999 run: jump-if fell through
 105 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1438 is 1180
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1166
 106 run: jump-if in, 1:offset
9999 mem: location 1166 is 1180
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1166 is 1180
9999 run: address to copy is 1182
9999 run: its type is address
9999 mem: location 1182 is 1177
9999 mem: storing 1177 in location 1167
 106 run: reply result
9999 mem: location 1167 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1446
 105 run: break-unless prev, 
9999 mem: location 1446 is 1177
9999 run: jump-unless fell through
 105 run: curr <- copy prev
9999 mem: location 1446 is 1177
9999 mem: storing 1177 in location 1438
 105 run: count <- add count, 1
9999 mem: location 1448 is 2
9999 mem: storing 3 in location 1448
 105 run: loop 
9999 run: jumping to instruction 24
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1448 is 3
9999 mem: location 1447 is 4
9999 mem: storing 0 in location 1449
 105 run: break-if done?, 
9999 mem: location 1449 is 0
9999 run: jump-if fell through
 105 run: prev:address:duplex-list <- prev-duplex curr
9999 mem: location 1438 is 1177
 106 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 106 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1166
 106 run: jump-if in, 1:offset
9999 mem: location 1166 is 1177
9999 run: jumping to instruction 4
 106 run: result:address:duplex-list <- get *in, prev:offset
9999 mem: location 1166 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1166 is 1177
9999 run: address to copy is 1179
9999 run: its type is address
9999 mem: location 1179 is 1174
9999 mem: storing 1174 in location 1167
 106 run: reply result
9999 mem: location 1167 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1446
 105 run: break-unless prev, 
9999 mem: location 1446 is 1174
9999 run: jump-unless fell through
 105 run: curr <- copy prev
9999 mem: location 1446 is 1174
9999 mem: storing 1174 in location 1438
 105 run: count <- add count, 1
9999 mem: location 1448 is 3
9999 mem: storing 4 in location 1448
 105 run: loop 
9999 run: jumping to instruction 24
 105 run: done?:boolean <- greater-or-equal count, max
9999 mem: location 1448 is 4
9999 mem: location 1447 is 4
9999 mem: storing 1 in location 1449
 105 run: break-if done?, 
9999 mem: location 1449 is 1
9999 run: jumping to instruction 31
 105 run: reply curr
9999 mem: location 1438 is 1174
9999 run: result 0 is 1174
9999 mem: storing 1174 in location 1336
 104 run: no-motion?:boolean <- equal curr, old
9999 mem: location 1336 is 1174
9999 mem: location 1337 is 1186
9999 mem: storing 0 in location 1340
 104 run: jump-unless no-motion?, 1:offset
9999 mem: location 1340 is 0
9999 run: jumping to instruction 27
 104 run: *before-cursor <- copy curr
9999 mem: location 1336 is 1174
9999 mem: location 1332 is 1118
9999 mem: location 1332 is 1118
9999 mem: storing 1174 in location 1118
 104 run: *cursor-row <- subtract *cursor-row, 1
9999 mem: location 1330 is 1121
9999 mem: location 1121 is 3
9999 mem: location 1330 is 1121
9999 mem: storing 2 in location 1121
 104 run: target-column:number <- copy *cursor-column
9999 mem: location 1331 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1331 is 1122
9999 mem: location 1331 is 1122
9999 mem: storing 0 in location 1341
 104 run: *cursor-column <- copy left
9999 mem: location 1333 is 0
9999 mem: location 1331 is 1122
9999 mem: location 1331 is 1122
9999 mem: storing 0 in location 1122
 104 run: done?:boolean <- greater-or-equal *cursor-column, target-column
9999 mem: location 1331 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1341 is 0
9999 mem: storing 1 in location 1342
 104 run: break-if done?, 
9999 mem: location 1342 is 1
9999 run: jumping to instruction 43
 104 run: reply editor/same-as-ingredient:0, 0/no-more-render
9999 mem: location 1329 is 1115
9999 run: result 0 is 1115
9999 run: result 1 is 0
9999 mem: storing 1115 in location 1362
9999 mem: storing 0 in location 1404
 103 run: after-cursor-row:number <- get *editor, cursor-row:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 1394
 103 run: after-cursor-column:number <- get *editor, cursor-column:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 1395
 103 run: after-top-of-screen:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1396
 103 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1450
9999 mem: storing 1450 in location 1379
 103 run: *op <- merge 1/move-operation, before-cursor-row, before-cursor-column, before-top-of-screen, after-cursor-row, after-cursor-column, after-top-of-screen, 0/empty, 0/empty, 0/empty
9999 mem: location 1391 is 3
9999 mem: location 1392 is 0
9999 mem: location 1393 is 1158
9999 mem: location 1394 is 2
9999 mem: location 1395 is 0
9999 mem: location 1396 is 1158
9999 mem: location 1379 is 1450
9999 mem: storing 1 in location 1450
9999 mem: storing 3 in location 1451
9999 mem: storing 0 in location 1452
9999 mem: storing 1158 in location 1453
9999 mem: storing 2 in location 1454
9999 mem: storing 0 in location 1455
9999 mem: storing 1158 in location 1456
9999 mem: storing 0 in location 1457
9999 mem: storing 0 in location 1458
9999 mem: storing 0 in location 1459
 103 run: editor <- add-operation editor, op
9999 mem: location 1362 is 1115
9999 mem: location 1379 is 1450
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 104 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1271
 104 run: op:address:operation <- next-ingredient 
9999 mem: storing 1450 in location 1272
 104 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1271 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1357
9999 mem: location 1125 is 0
9999 mem: location 1271 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1273
 104 run: *undo <- push op, *undo
9999 mem: location 1272 is 1450
9999 mem: location 1273 is 1124
9999 mem: location 1124 is 1357
 105 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 105 run: x:location <- next-ingredient 
9999 mem: storing 1450 in location 1227
 105 run: in:address:list <- next-ingredient 
9999 mem: storing 1357 in location 1228
 105 run: result:address:list <- new list:type
9999 mem: new alloc: 1460
9999 mem: storing 1460 in location 1229
 105 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1229 is 1460
9999 mem: location 1460 is 0
9999 mem: location 1461 is 0
9999 mem: location 1229 is 1460
9999 run: address to copy is 1460
9999 mem: storing 1460 in location 1230
 105 run: *val <- copy x
9999 mem: location 1227 is 1450
9999 mem: location 1230 is 1460
9999 mem: location 1230 is 1460
9999 mem: storing 1450 in location 1460
 105 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1229 is 1460
9999 mem: location 1460 is 1450
9999 mem: location 1461 is 0
9999 mem: location 1229 is 1460
9999 run: address to copy is 1461
9999 mem: storing 1461 in location 1231
 105 run: *next <- copy in
9999 mem: location 1228 is 1357
9999 mem: location 1231 is 1461
9999 mem: location 1231 is 1461
9999 mem: storing 1357 in location 1461
 105 run: reply result
9999 mem: location 1229 is 1460
9999 run: result 0 is 1460
9999 mem: location 1273 is 1124
9999 mem: storing 1460 in location 1124
 104 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1271 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1271 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1274
 104 run: *redo <- copy 0
9999 mem: location 1274 is 1125
9999 mem: location 1274 is 1125
9999 mem: storing 0 in location 1125
 104 run: reply editor/same-as-ingredient:0
9999 mem: location 1271 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1362
 103 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1361 is 1009
9999 mem: location 1362 is 1115
9999 mem: location 1404 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1277
9999 mem: storing 1115 in location 1279
9999 mem: storing 0 in location 1287
 102 run: break-unless go-render?, 
9999 mem: location 1287 is 0
9999 run: jumping to instruction 22
 102 run: loop 
9999 run: jumping to instruction 5
 102 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1312
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 103 run: x:address:console <- next-ingredient 
9999 mem: storing 1312 in location 1316
 103 run: break-unless x, 
9999 mem: location 1316 is 1312
9999 run: jump-unless fell through
 103 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1316 is 1312
9999 mem: location 1312 is 2
9999 mem: location 1313 is 1303
9999 mem: location 1316 is 1312
9999 run: address to copy is 1312
9999 mem: storing 1312 in location 1317
 103 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1316 is 1312
9999 mem: location 1312 is 2
9999 mem: location 1313 is 1303
9999 mem: location 1316 is 1312
9999 run: address to copy is 1313
9999 run: its type is address
9999 mem: location 1313 is 1303
9999 mem: storing 1303 in location 1318
 103 run: max:number <- length *buf
9999 mem: location 1318 is 1303
9999 mem: storing 2 in location 1319
 103 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1317 is 1312
9999 mem: location 1312 is 2
9999 mem: location 1319 is 2
9999 mem: storing 1 in location 1320
 103 run: break-unless done?, 
9999 mem: location 1320 is 1
9999 run: jump-unless fell through
 103 run: dummy:address:event <- new event:type
9999 mem: storing 1164 in location 1321
 103 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1321 is 1164
9999 mem: location 1164 is 0
9999 mem: location 1165 is 0
9999 mem: location 1166 is 0
9999 mem: location 1167 is 0
9999 mem: location 1316 is 1312
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1312
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1312 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 1 in location 1285
 102 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 102 run: break-if quit?, 
9999 mem: location 1285 is 1
9999 run: jumping to instruction 25
 101 run: 3:number <- get *2:address:editor-data, cursor-row:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1121
9999 run: its type is number
9999 mem: location 1121 is 2
9999 mem: storing 2 in location 3
 101 run: 4:number <- get *2:address:editor-data, cursor-column:offset
9999 mem: location 2 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 2 is 1115
9999 run: address to copy is 1122
9999 run: its type is number
9999 mem: location 1122 is 0
9999 mem: storing 0 in location 4
 100 run: memory-should-contain [
    3 <- 2
    4 <- 0
  ]
9999 run: checking location 3
9999 run: checking location 4
 100 run: check-trace-count-for-label 0, [print-character]
 100 run: assume-console [
    type [0]
  ]
parse: instruction: type
parse:   ingredient: {name: "0", properties: [_: "literal-string"]}
 100 run: run [
    editor-event-loop screen:address, console:address, 2:address:editor-data
  ]
parse: instruction: editor-event-loop
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "console", properties: ["console": "address"]}
parse:   ingredient: {name: "2", properties: ["2": "address":"editor-data"]}
after-brace: recipe run1002
after-brace: editor-event-loop ...
 100 run: editor-event-loop screen:address, console:address, 2:address:editor-data
9999 mem: location 900 is 1009
9999 mem: location 901 is 1467
9999 mem: location 2 is 1115
 101 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 101 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1277
 101 run: console:address <- next-ingredient 
9999 mem: storing 1467 in location 1278
 101 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1279
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1467
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1467 in location 1316
 102 run: break-unless x, 
9999 mem: location 1316 is 1467
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1316 is 1467
9999 mem: location 1467 is 0
9999 mem: location 1468 is 1462
9999 mem: location 1316 is 1467
9999 run: address to copy is 1467
9999 mem: storing 1467 in location 1317
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1316 is 1467
9999 mem: location 1467 is 0
9999 mem: location 1468 is 1462
9999 mem: location 1316 is 1467
9999 run: address to copy is 1468
9999 run: its type is address
9999 mem: location 1468 is 1462
9999 mem: storing 1462 in location 1318
 102 run: max:number <- length *buf
9999 mem: location 1318 is 1462
9999 mem: storing 1 in location 1319
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1317 is 1467
9999 mem: location 1467 is 0
9999 mem: location 1319 is 1
9999 mem: storing 0 in location 1320
 102 run: break-unless done?, 
9999 mem: location 1320 is 0
9999 run: jumping to instruction 12
 102 run: result:event <- index *buf, *idx
9999 mem: location 1318 is 1462
9999 mem: location 1317 is 1467
9999 mem: location 1467 is 0
9999 run: address to copy is 1463
9999 run: its type is event
9999 mem: location 1463 is 0
9999 mem: location 1464 is 48
9999 mem: location 1465 is 0
9999 mem: location 1466 is 0
9999 mem: storing 0 in location 1322
9999 mem: storing 48 in location 1323
9999 mem: storing 0 in location 1324
9999 mem: storing 0 in location 1325
 102 run: *idx <- add *idx, 1
9999 mem: location 1317 is 1467
9999 mem: location 1467 is 0
9999 mem: location 1317 is 1467
9999 mem: storing 1 in location 1467
 102 run: reply result, x/same-as-ingredient:0, 1/found, 0/quit
9999 mem: location 1322 is 0
9999 mem: location 1323 is 48
9999 mem: location 1324 is 0
9999 mem: location 1325 is 0
9999 mem: location 1316 is 1467
9999 run: result 0 is [0, 48, 0, 0]
9999 run: result 1 is 1467
9999 run: result 2 is 1
9999 run: result 3 is 0
9999 mem: storing 0 in location 1280
9999 mem: storing 48 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1467 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 0 in location 1285
 101 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1285 is 0
9999 run: jump-if fell through
 101 run: trace 10, [app], [next-event]
  10 app: next-event 
 101 run: t:address:touch-event <- maybe-convert e, touch:variant
9999 mem: location 1280 is 0
9999 mem: location 1281 is 48
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
9999 mem: storing 0 in location 1286
 101 run: break-unless t, 
9999 mem: location 1286 is 0
9999 run: jumping to instruction 15
 101 run: break-if t, 
9999 mem: location 1286 is 0
9999 run: jump-if fell through
 101 run: screen, editor, go-render?:boolean <- handle-keyboard-event screen, editor, e
9999 mem: location 1277 is 1009
9999 mem: location 1279 is 1115
9999 mem: location 1280 is 0
9999 mem: location 1281 is 48
9999 mem: location 1282 is 0
9999 mem: location 1283 is 0
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 76
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1361
 102 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1362
 102 run: e:event <- next-ingredient 
9999 mem: storing 0 in location 1363
9999 mem: storing 48 in location 1364
9999 mem: storing 0 in location 1365
9999 mem: storing 0 in location 1366
 102 run: jump-if editor, 1:offset
9999 mem: location 1362 is 1115
9999 run: jumping to instruction 6
 102 run: screen-width:number <- screen-width screen
9999 mem: location 1361 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: new alloc: 1469
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1471
 103 run: break-unless sc, 
9999 mem: location 1471 is 1009
9999 run: jump-unless fell through
 103 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1471 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1471 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1472
 103 run: reply width
9999 mem: location 1472 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1367
 102 run: screen-height:number <- screen-height screen
9999 mem: location 1361 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1471
schedule: screen-height/handle-keyboard-event/editor-event-loop/run1002/scenario-editor-moves-to-previous-line-from-left-margin
 103 run: break-unless sc, 
9999 mem: location 1471 is 1009
9999 run: jump-unless fell through
 103 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1471 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1471 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1472
 103 run: reply height
9999 mem: location 1472 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1368
 102 run: left:number <- get *editor, left:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1369
 102 run: right:number <- get *editor, right:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1370
 102 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1371
 102 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1372
 102 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1373
 102 run: save-row:number <- copy *cursor-row
9999 mem: location 1372 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1372 is 1121
9999 mem: location 1372 is 1121
9999 mem: storing 2 in location 1374
 102 run: save-column:number <- copy *cursor-column
9999 mem: location 1373 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1373 is 1122
9999 mem: location 1373 is 1122
9999 mem: storing 0 in location 1375
 102 run: c:address:character <- maybe-convert e, text:variant
9999 mem: location 1363 is 0
9999 mem: location 1364 is 48
9999 mem: location 1365 is 0
9999 mem: location 1366 is 0
9999 mem: storing 1364 in location 1376
 102 run: break-unless c, 
9999 mem: location 1376 is 1364
9999 run: jump-unless fell through
 102 run: trace 10, [app], [handle-keyboard-event: special character]
  10 app: handle-keyboard-event: special character 
 102 run: redo?:boolean <- equal *c, 25/ctrl-y
9999 mem: location 1376 is 1364
9999 mem: location 1364 is 48
9999 mem: storing 0 in location 1377
 102 run: break-unless redo?, 
9999 mem: location 1377 is 0
9999 run: jumping to instruction 49
 102 run: undo?:boolean <- equal *c, 26/ctrl-z
9999 mem: location 1376 is 1364
9999 mem: location 1364 is 48
9999 mem: storing 0 in location 1385
 102 run: break-unless undo?, 
9999 mem: location 1385 is 0
9999 run: jumping to instruction 81
 102 run: page-up?:boolean <- equal *c, 2/ctrl-b
9999 mem: location 1376 is 1364
9999 mem: location 1364 is 48
9999 mem: storing 0 in location 1388
 102 run: break-unless page-up?, 
9999 mem: location 1388 is 0
9999 run: jumping to instruction 103
 102 run: page-down?:boolean <- equal *c, 6/ctrl-f
9999 mem: location 1376 is 1364
9999 mem: location 1364 is 48
9999 mem: storing 0 in location 1398
 102 run: break-unless page-down?, 
9999 mem: location 1398 is 0
9999 run: jumping to instruction 125
 102 run: delete-to-end-of-line?:boolean <- equal *c, 11/ctrl-k
9999 mem: location 1376 is 1364
9999 mem: location 1364 is 48
9999 mem: storing 0 in location 1399
 102 run: break-unless delete-to-end-of-line?, 
9999 mem: location 1399 is 0
9999 run: jumping to instruction 131
 102 run: delete-to-start-of-line?:boolean <- equal *c, 21/ctrl-u
9999 mem: location 1376 is 1364
9999 mem: location 1364 is 48
9999 mem: storing 0 in location 1400
 102 run: break-unless delete-to-start-of-line?, 
9999 mem: location 1400 is 0
9999 run: jumping to instruction 137
 102 run: move-to-end-of-line?:boolean <- equal *c, 5/ctrl-e
9999 mem: location 1376 is 1364
9999 mem: location 1364 is 48
9999 mem: storing 0 in location 1401
 102 run: break-unless move-to-end-of-line?, 
9999 mem: location 1401 is 0
9999 run: jumping to instruction 154
 102 run: move-to-start-of-line?:boolean <- equal *c, 1/ctrl-a
9999 mem: location 1376 is 1364
9999 mem: location 1364 is 48
9999 mem: storing 0 in location 1402
 102 run: break-unless move-to-start-of-line?, 
9999 mem: location 1402 is 0
9999 run: jumping to instruction 171
 102 run: delete-previous-character?:boolean <- equal *c, 8/backspace
9999 mem: location 1376 is 1364
9999 mem: location 1364 is 48
9999 mem: storing 0 in location 1403
 102 run: break-unless delete-previous-character?, 
9999 mem: location 1403 is 0
9999 run: jumping to instruction 177
 102 run: tab?:boolean <- equal *c, 9/tab
9999 mem: location 1376 is 1364
9999 mem: location 1364 is 48
9999 mem: storing 0 in location 1405
 102 run: break-unless tab?, 
9999 mem: location 1405 is 0
9999 run: jumping to instruction 213
 102 run: newline?:boolean <- equal *c, 10/newline
9999 mem: location 1376 is 1364
9999 mem: location 1364 is 48
9999 mem: storing 0 in location 1415
 102 run: break-unless newline?, 
9999 mem: location 1415 is 0
9999 run: jumping to instruction 231
 102 run: regular-character?:boolean <- greater-or-equal *c, 32/space
9999 mem: location 1376 is 1364
9999 mem: location 1364 is 48
9999 mem: storing 1 in location 1418
 102 run: jump-if regular-character?, 1:offset
9999 mem: location 1418 is 1
9999 run: jumping to instruction 235
 102 run: top-before:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1406
 102 run: cursor-before:address:duplex-list <- copy *before-cursor
9999 mem: location 1371 is 1118
9999 mem: location 1118 is 1174
9999 mem: location 1371 is 1118
9999 mem: location 1371 is 1118
9999 mem: storing 1174 in location 1407
 102 run: editor, screen, go-render?:boolean <- insert-at-cursor editor, *c, screen
9999 mem: location 1362 is 1115
9999 mem: location 1376 is 1364
9999 mem: location 1364 is 48
9999 mem: location 1361 is 1009
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 30
9999 mem: new alloc: 1473
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1475
 103 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1476
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1009 in location 1477
 103 run: before-cursor:address:address:duplex-list <- get-address *editor, before-cursor:offset
9999 mem: location 1475 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1174
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1475 is 1115
9999 run: address to copy is 1118
9999 mem: storing 1118 in location 1478
 103 run: insert-duplex c, *before-cursor
9999 mem: location 1476 is 48
9999 mem: location 1478 is 1118
9999 mem: location 1118 is 1174
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 7
 104 run: x:location <- next-ingredient 
9999 mem: storing 48 in location 1152
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1153
 104 run: new-node:address:duplex-list <- new duplex-list:type
9999 mem: new alloc: 1504
9999 mem: storing 1504 in location 1154
 104 run: val:address:location <- get-address *new-node, value:offset
9999 mem: location 1154 is 1504
9999 mem: location 1504 is 0
9999 mem: location 1505 is 0
9999 mem: location 1506 is 0
9999 mem: location 1154 is 1504
9999 run: address to copy is 1504
9999 mem: storing 1504 in location 1155
 104 run: *val <- copy x
9999 mem: location 1152 is 48
9999 mem: location 1155 is 1504
9999 mem: location 1155 is 1504
9999 mem: storing 48 in location 1504
 104 run: next-node:address:duplex-list <- get *in, next:offset
9999 mem: location 1153 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1153 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1177
9999 mem: storing 1177 in location 1156
 104 run: y:address:address:duplex-list <- get-address *in, next:offset
9999 mem: location 1153 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1177
9999 mem: location 1176 is 1171
9999 mem: location 1153 is 1174
9999 run: address to copy is 1175
9999 mem: storing 1175 in location 1157
 104 run: *y <- copy new-node
9999 mem: location 1154 is 1504
9999 mem: location 1157 is 1175
9999 mem: location 1157 is 1175
9999 mem: storing 1504 in location 1175
 104 run: y <- get-address *new-node, prev:offset
9999 mem: location 1154 is 1504
9999 mem: location 1504 is 48
9999 mem: location 1505 is 0
9999 mem: location 1506 is 0
9999 mem: location 1154 is 1504
9999 run: address to copy is 1506
9999 mem: storing 1506 in location 1157
 104 run: *y <- copy in
9999 mem: location 1153 is 1174
9999 mem: location 1157 is 1506
9999 mem: location 1157 is 1506
9999 mem: storing 1174 in location 1506
 104 run: y <- get-address *new-node, next:offset
9999 mem: location 1154 is 1504
9999 mem: location 1504 is 48
9999 mem: location 1505 is 0
9999 mem: location 1506 is 1174
9999 mem: location 1154 is 1504
9999 run: address to copy is 1505
9999 mem: storing 1505 in location 1157
 104 run: *y <- copy next-node
9999 mem: location 1156 is 1177
9999 mem: location 1157 is 1505
9999 mem: location 1157 is 1505
9999 mem: storing 1177 in location 1505
 104 run: jump-if next-node, 1:offset
9999 mem: location 1156 is 1177
9999 run: jumping to instruction 15
 104 run: y <- get-address *next-node, prev:offset
9999 mem: location 1156 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1174
9999 mem: location 1156 is 1177
9999 run: address to copy is 1179
9999 mem: storing 1179 in location 1157
 104 run: *y <- copy new-node
9999 mem: location 1154 is 1504
9999 mem: location 1157 is 1179
9999 mem: location 1157 is 1179
9999 mem: storing 1504 in location 1179
 104 run: reply new-node
9999 mem: location 1154 is 1504
 103 run: *before-cursor <- next-duplex *before-cursor
9999 mem: location 1478 is 1118
9999 mem: location 1118 is 1174
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1471
 104 run: jump-if in, 1:offset
9999 mem: location 1471 is 1174
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1471 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1504
9999 mem: location 1176 is 1171
9999 mem: location 1471 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1504
9999 mem: storing 1504 in location 1472
 104 run: reply result
9999 mem: location 1472 is 1504
9999 run: result 0 is 1504
9999 mem: location 1478 is 1118
9999 mem: storing 1504 in location 1118
 103 run: cursor-row:address:number <- get-address *editor, cursor-row:offset
9999 mem: location 1475 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1504
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1475 is 1115
9999 run: address to copy is 1121
9999 mem: storing 1121 in location 1479
 103 run: cursor-column:address:number <- get-address *editor, cursor-column:offset
9999 mem: location 1475 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1504
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1475 is 1115
9999 run: address to copy is 1122
9999 mem: storing 1122 in location 1480
 103 run: left:number <- get *editor, left:offset
9999 mem: location 1475 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1504
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1475 is 1115
9999 run: address to copy is 1119
9999 run: its type is number
9999 mem: location 1119 is 0
9999 mem: storing 0 in location 1481
 103 run: right:number <- get *editor, right:offset
9999 mem: location 1475 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1504
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 0
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1475 is 1115
9999 run: address to copy is 1120
9999 run: its type is number
9999 mem: location 1120 is 9
9999 mem: storing 9 in location 1482
 103 run: save-row:number <- copy *cursor-row
9999 mem: location 1479 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1479 is 1121
9999 mem: location 1479 is 1121
9999 mem: storing 2 in location 1483
 103 run: save-column:number <- copy *cursor-column
9999 mem: location 1480 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1480 is 1122
9999 mem: location 1480 is 1122
9999 mem: storing 0 in location 1484
 103 run: screen-width:number <- screen-width screen
9999 mem: location 1477 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1471
 104 run: break-unless sc, 
9999 mem: location 1471 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1471 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1471 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1472
 104 run: reply width
9999 mem: location 1472 is 10
9999 run: result 0 is 10
9999 mem: storing 10 in location 1485
 103 run: screen-height:number <- screen-height screen
9999 mem: location 1477 is 1009
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1471
 104 run: break-unless sc, 
9999 mem: location 1471 is 1009
9999 run: jump-unless fell through
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1471 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1471 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1472
 104 run: reply height
9999 mem: location 1472 is 5
9999 run: result 0 is 5
9999 mem: storing 5 in location 1486
 103 run: wrap-column:number <- subtract right, 1
9999 mem: location 1482 is 9
9999 mem: storing 8 in location 1487
 103 run: at-wrap?:boolean <- greater-or-equal *cursor-column, wrap-column
9999 mem: location 1480 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1487 is 8
9999 mem: storing 0 in location 1488
 103 run: break-unless at-wrap?, 
9999 mem: location 1488 is 0
9999 run: jumping to instruction 38
 103 run: *cursor-column <- add *cursor-column, 1
9999 mem: location 1480 is 1122
9999 mem: location 1122 is 0
9999 mem: location 1480 is 1122
9999 mem: storing 1 in location 1122
 103 run: next:address:duplex-list <- next-duplex *before-cursor
9999 mem: location 1478 is 1118
9999 mem: location 1118 is 1504
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1504 in location 1471
 104 run: jump-if in, 1:offset
9999 mem: location 1471 is 1504
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1471 is 1504
9999 mem: location 1504 is 48
9999 mem: location 1505 is 1177
9999 mem: location 1506 is 1174
9999 mem: location 1471 is 1504
9999 run: address to copy is 1505
9999 run: its type is address
9999 mem: location 1505 is 1177
9999 mem: storing 1177 in location 1472
 104 run: reply result
9999 mem: location 1472 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1494
 103 run: at-end?:boolean <- equal next, 0/null
9999 mem: location 1494 is 1177
9999 mem: storing 0 in location 1495
 103 run: break-unless at-end?, 
9999 mem: location 1495 is 0
9999 run: jumping to instruction 52
 103 run: break-unless next, 
9999 mem: location 1494 is 1177
9999 run: jump-unless fell through
 103 run: at-right?:boolean <- greater-or-equal *cursor-column, screen-width
9999 mem: location 1480 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1485 is 10
9999 mem: storing 0 in location 1498
 103 run: break-if at-right?, 
9999 mem: location 1498 is 0
9999 run: jump-if fell through
 103 run: curr:address:duplex-list <- copy *before-cursor
9999 mem: location 1478 is 1118
9999 mem: location 1118 is 1504
9999 mem: location 1478 is 1118
9999 mem: location 1478 is 1118
9999 mem: storing 1504 in location 1500
 103 run: move-cursor screen, save-row, save-column
9999 mem: location 1477 is 1009
9999 mem: location 1483 is 2
9999 mem: location 1484 is 0
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1227
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 2 in location 1228
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1229
 104 run: break-unless sc, 
9999 mem: location 1227 is 1009
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 6
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1230
 104 run: *row <- copy new-row
9999 mem: location 1228 is 2
9999 mem: location 1230 is 1011
9999 mem: location 1230 is 1011
9999 mem: storing 2 in location 1011
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1227 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1227 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1231
 104 run: *column <- copy new-column
9999 mem: location 1229 is 0
9999 mem: location 1231 is 1012
9999 mem: location 1231 is 1012
9999 mem: storing 0 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1227 is 1009
 103 run: curr-column:number <- copy save-column
9999 mem: location 1484 is 0
9999 mem: storing 0 in location 1501
 103 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1501 is 0
9999 mem: location 1485 is 10
9999 mem: storing 0 in location 1498
 103 run: jump-unless at-right?, 1:offset
9999 mem: location 1498 is 0
9999 run: jumping to instruction 64
 103 run: break-unless curr, 
9999 mem: location 1500 is 1504
9999 run: jump-unless fell through
 103 run: currc:character <- get *curr, value:offset
9999 mem: location 1500 is 1504
9999 mem: location 1504 is 48
9999 mem: location 1505 is 1177
9999 mem: location 1506 is 1174
9999 mem: location 1500 is 1504
9999 run: address to copy is 1504
9999 run: its type is number
9999 mem: location 1504 is 48
9999 mem: storing 48 in location 1502
 103 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1502 is 48
9999 mem: storing 0 in location 1503
 103 run: break-if at-newline?, 
9999 mem: location 1503 is 0
9999 run: jump-if fell through
 103 run: print-character screen, currc
9999 mem: location 1477 is 1009
9999 mem: location 1502 is 48
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 48 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 48
  90 print-character: 48 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 48
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: storing 20 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 0
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 48
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 20
9999 mem: storing 1055 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1055
9999 mem: location 1055 is 100
9999 mem: location 1056 is 7
9999 mem: location 1264 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 48
9999 mem: location 1265 is 1055
9999 mem: location 1265 is 1055
9999 mem: storing 48 in location 1055
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1055
9999 mem: location 1055 is 48
9999 mem: location 1056 is 7
9999 mem: location 1264 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1056
9999 mem: location 1266 is 1056
9999 mem: storing 7 in location 1056
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 0
9999 mem: location 1255 is 1012
9999 mem: storing 1 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr-column <- add curr-column, 1
9999 mem: location 1501 is 0
9999 mem: storing 1 in location 1501
 103 run: curr <- next-duplex curr
9999 mem: location 1500 is 1504
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1504 in location 1471
 104 run: jump-if in, 1:offset
9999 mem: location 1471 is 1504
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1471 is 1504
9999 mem: location 1504 is 48
9999 mem: location 1505 is 1177
9999 mem: location 1506 is 1174
9999 mem: location 1471 is 1504
9999 run: address to copy is 1505
9999 run: its type is address
9999 mem: location 1505 is 1177
9999 mem: storing 1177 in location 1472
 104 run: reply result
9999 mem: location 1472 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1500
 103 run: loop 
9999 run: jumping to instruction 61
 103 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1501 is 1
9999 mem: location 1485 is 10
9999 mem: storing 0 in location 1498
 103 run: jump-unless at-right?, 1:offset
9999 mem: location 1498 is 0
9999 run: jumping to instruction 64
 103 run: break-unless curr, 
9999 mem: location 1500 is 1177
9999 run: jump-unless fell through
 103 run: currc:character <- get *curr, value:offset
9999 mem: location 1500 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1504
9999 mem: location 1500 is 1177
9999 run: address to copy is 1177
9999 run: its type is number
9999 mem: location 1177 is 100
9999 mem: storing 100 in location 1502
 103 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1502 is 100
9999 mem: storing 0 in location 1503
 103 run: break-if at-newline?, 
9999 mem: location 1503 is 0
9999 run: jump-if fell through
 103 run: print-character screen, currc
9999 mem: location 1477 is 1009
9999 mem: location 1502 is 100
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 100
  90 print-character: 100 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: storing 21 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 1
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 100
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 21
9999 mem: storing 1057 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1057
9999 mem: location 1057 is 101
9999 mem: location 1058 is 7
9999 mem: location 1264 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 100
9999 mem: location 1265 is 1057
9999 mem: location 1265 is 1057
9999 mem: storing 100 in location 1057
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1057
9999 mem: location 1057 is 100
9999 mem: location 1058 is 7
9999 mem: location 1264 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1058
9999 mem: location 1266 is 1058
9999 mem: storing 7 in location 1058
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 1
9999 mem: location 1255 is 1012
9999 mem: storing 2 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr-column <- add curr-column, 1
9999 mem: location 1501 is 1
9999 mem: storing 2 in location 1501
 103 run: curr <- next-duplex curr
9999 mem: location 1500 is 1177
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1177 in location 1471
 104 run: jump-if in, 1:offset
9999 mem: location 1471 is 1177
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1471 is 1177
9999 mem: location 1177 is 100
9999 mem: location 1178 is 1180
9999 mem: location 1179 is 1504
9999 mem: location 1471 is 1177
9999 run: address to copy is 1178
9999 run: its type is address
9999 mem: location 1178 is 1180
9999 mem: storing 1180 in location 1472
 104 run: reply result
9999 mem: location 1472 is 1180
9999 run: result 0 is 1180
9999 mem: storing 1180 in location 1500
 103 run: loop 
9999 run: jumping to instruction 61
 103 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1501 is 2
9999 mem: location 1485 is 10
9999 mem: storing 0 in location 1498
 103 run: jump-unless at-right?, 1:offset
9999 mem: location 1498 is 0
9999 run: jumping to instruction 64
 103 run: break-unless curr, 
9999 mem: location 1500 is 1180
9999 run: jump-unless fell through
 103 run: currc:character <- get *curr, value:offset
9999 mem: location 1500 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1500 is 1180
9999 run: address to copy is 1180
9999 run: its type is number
9999 mem: location 1180 is 101
9999 mem: storing 101 in location 1502
 103 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1502 is 101
9999 mem: storing 0 in location 1503
 103 run: break-if at-newline?, 
9999 mem: location 1503 is 0
9999 run: jump-if fell through
 103 run: print-character screen, currc
9999 mem: location 1477 is 1009
9999 mem: location 1502 is 101
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 101
  90 print-character: 101 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 101
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: storing 22 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 2
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 101
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 22
9999 mem: storing 1059 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1059
9999 mem: location 1059 is 102
9999 mem: location 1060 is 7
9999 mem: location 1264 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 101
9999 mem: location 1265 is 1059
9999 mem: location 1265 is 1059
9999 mem: storing 101 in location 1059
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1059
9999 mem: location 1059 is 101
9999 mem: location 1060 is 7
9999 mem: location 1264 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1060
9999 mem: location 1266 is 1060
9999 mem: storing 7 in location 1060
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 2
9999 mem: location 1255 is 1012
9999 mem: storing 3 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr-column <- add curr-column, 1
9999 mem: location 1501 is 2
9999 mem: storing 3 in location 1501
 103 run: curr <- next-duplex curr
9999 mem: location 1500 is 1180
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1180 in location 1471
 104 run: jump-if in, 1:offset
9999 mem: location 1471 is 1180
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1471 is 1180
9999 mem: location 1180 is 101
9999 mem: location 1181 is 1183
9999 mem: location 1182 is 1177
9999 mem: location 1471 is 1180
9999 run: address to copy is 1181
9999 run: its type is address
9999 mem: location 1181 is 1183
9999 mem: storing 1183 in location 1472
 104 run: reply result
9999 mem: location 1472 is 1183
9999 run: result 0 is 1183
9999 mem: storing 1183 in location 1500
 103 run: loop 
9999 run: jumping to instruction 61
 103 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1501 is 3
9999 mem: location 1485 is 10
9999 mem: storing 0 in location 1498
 103 run: jump-unless at-right?, 1:offset
9999 mem: location 1498 is 0
9999 run: jumping to instruction 64
 103 run: break-unless curr, 
9999 mem: location 1500 is 1183
9999 run: jump-unless fell through
 103 run: currc:character <- get *curr, value:offset
9999 mem: location 1500 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1500 is 1183
9999 run: address to copy is 1183
9999 run: its type is number
9999 mem: location 1183 is 102
9999 mem: storing 102 in location 1502
 103 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1502 is 102
9999 mem: storing 0 in location 1503
 103 run: break-if at-newline?, 
9999 mem: location 1503 is 0
9999 run: jump-if fell through
 103 run: print-character screen, currc
9999 mem: location 1477 is 1009
9999 mem: location 1502 is 102
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 25
 104 run: sc:address:screen <- next-ingredient 
9999 mem: storing 1009 in location 1245
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1246
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1247
9999 mem: storing 0 in location 1248
 104 run: break-if color-found?, 
9999 mem: location 1248 is 0
9999 run: jump-if fell through
 104 run: color <- copy 7/white
9999 mem: storing 7 in location 1247
 104 run: bg-color:number, bg-color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1249
9999 mem: storing 0 in location 1250
 104 run: break-if bg-color-found?, 
9999 mem: location 1250 is 0
9999 run: jump-if fell through
 104 run: bg-color <- copy 0/black
9999 mem: storing 0 in location 1249
 104 run: trace 90, [print-character], c
9999 mem: location 1246 is 102
  90 print-character: 102 
 104 run: break-unless sc, 
9999 mem: location 1245 is 1009
9999 run: jump-unless fell through
 104 run: width:number <- get *sc, num-columns:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1010
9999 run: its type is number
9999 mem: location 1010 is 10
9999 mem: storing 10 in location 1251
 104 run: height:number <- get *sc, num-rows:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1009
9999 run: its type is number
9999 mem: location 1009 is 5
9999 mem: storing 5 in location 1252
 104 run: row:address:number <- get-address *sc, cursor-row:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1011
9999 mem: storing 1011 in location 1253
 104 run: legal?:boolean <- greater-or-equal *row, 0
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 22
 104 run: legal? <- lesser-than *row, height
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1252 is 5
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 25
 104 run: column:address:number <- get-address *sc, cursor-column:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1012
9999 mem: storing 1012 in location 1255
 104 run: legal? <- greater-or-equal *column, 0
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 29
 104 run: legal? <- lesser-than *column, width
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1251 is 10
9999 mem: storing 1 in location 1254
 104 run: jump-if legal?, 1:offset
9999 mem: location 1254 is 1
9999 run: jumping to instruction 32
 104 run: newline?:boolean <- equal c, 10/newline
9999 mem: location 1246 is 102
9999 mem: storing 0 in location 1256
 104 run: break-unless newline?, 
9999 mem: location 1256 is 0
9999 run: jumping to instruction 43
 104 run: index:number <- multiply *row, width
9999 mem: location 1253 is 1011
9999 mem: location 1011 is 2
9999 mem: location 1251 is 10
9999 mem: storing 20 in location 1259
 104 run: index <- add index, *column
9999 mem: location 1259 is 20
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: storing 23 in location 1259
 104 run: buf:address:array:screen-cell <- get *sc, data:offset
9999 mem: location 1245 is 1009
9999 mem: location 1009 is 5
9999 mem: location 1010 is 10
9999 mem: location 1011 is 2
9999 mem: location 1012 is 3
9999 mem: location 1013 is 1014
9999 mem: location 1245 is 1009
9999 run: address to copy is 1013
9999 run: its type is address
9999 mem: location 1013 is 1014
9999 mem: storing 1014 in location 1260
 104 run: len:number <- length *buf
9999 mem: location 1260 is 1014
9999 mem: storing 50 in location 1261
 104 run: backspace?:boolean <- equal c, 8
9999 mem: location 1246 is 102
9999 mem: storing 0 in location 1262
 104 run: break-unless backspace?, 
9999 mem: location 1262 is 0
9999 run: jumping to instruction 63
 104 run: cursor:address:screen-cell <- index-address *buf, index
9999 mem: location 1260 is 1014
9999 mem: location 1259 is 23
9999 mem: storing 1061 in location 1264
 104 run: cursor-contents:address:character <- get-address *cursor, contents:offset
9999 mem: location 1264 is 1061
9999 mem: location 1061 is 32
9999 mem: location 1062 is 7
9999 mem: location 1264 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1265
 104 run: *cursor-contents <- copy c
9999 mem: location 1246 is 102
9999 mem: location 1265 is 1061
9999 mem: location 1265 is 1061
9999 mem: storing 102 in location 1061
 104 run: cursor-color:address:number <- get-address *cursor, color:offset
9999 mem: location 1264 is 1061
9999 mem: location 1061 is 102
9999 mem: location 1062 is 7
9999 mem: location 1264 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1266
 104 run: *cursor-color <- copy color
9999 mem: location 1247 is 7
9999 mem: location 1266 is 1062
9999 mem: location 1266 is 1062
9999 mem: storing 7 in location 1062
 104 run: right:number <- subtract width, 1
9999 mem: location 1251 is 10
9999 mem: storing 9 in location 1267
 104 run: at-right?:boolean <- greater-or-equal *column, right
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1267 is 9
9999 mem: storing 0 in location 1268
 104 run: break-if at-right?, 
9999 mem: location 1268 is 0
9999 run: jump-if fell through
 104 run: *column <- add *column, 1
9999 mem: location 1255 is 1012
9999 mem: location 1012 is 3
9999 mem: location 1255 is 1012
9999 mem: storing 4 in location 1012
 104 run: reply sc/same-as-ingredient:0
9999 mem: location 1245 is 1009
 103 run: curr-column <- add curr-column, 1
9999 mem: location 1501 is 3
9999 mem: storing 4 in location 1501
 103 run: curr <- next-duplex curr
9999 mem: location 1500 is 1183
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 104 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1183 in location 1471
 104 run: jump-if in, 1:offset
9999 mem: location 1471 is 1183
9999 run: jumping to instruction 4
 104 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1471 is 1183
9999 mem: location 1183 is 102
9999 mem: location 1184 is 1186
9999 mem: location 1185 is 1180
9999 mem: location 1471 is 1183
9999 run: address to copy is 1184
9999 run: its type is address
9999 mem: location 1184 is 1186
9999 mem: storing 1186 in location 1472
 104 run: reply result
9999 mem: location 1472 is 1186
9999 run: result 0 is 1186
9999 mem: storing 1186 in location 1500
 103 run: loop 
9999 run: jumping to instruction 61
 103 run: at-right?:boolean <- greater-or-equal curr-column, screen-width
9999 mem: location 1501 is 4
9999 mem: location 1485 is 10
9999 mem: storing 0 in location 1498
 103 run: jump-unless at-right?, 1:offset
9999 mem: location 1498 is 0
9999 run: jumping to instruction 64
 103 run: break-unless curr, 
9999 mem: location 1500 is 1186
9999 run: jump-unless fell through
 103 run: currc:character <- get *curr, value:offset
9999 mem: location 1500 is 1186
9999 mem: location 1186 is 10
9999 mem: location 1187 is 1189
9999 mem: location 1188 is 1183
9999 mem: location 1500 is 1186
9999 run: address to copy is 1186
9999 run: its type is number
9999 mem: location 1186 is 10
9999 mem: storing 10 in location 1502
 103 run: at-newline?:boolean <- equal currc, 10/newline
9999 mem: location 1502 is 10
9999 mem: storing 1 in location 1503
 103 run: break-if at-newline?, 
9999 mem: location 1503 is 1
9999 run: jumping to instruction 72
 103 run: reply editor/same-as-ingredient:0, screen/same-as-ingredient:2, 0/no-more-render
9999 mem: location 1475 is 1115
9999 mem: location 1477 is 1009
9999 run: result 0 is 1115
9999 run: result 1 is 1009
9999 run: result 2 is 0
9999 mem: storing 1115 in location 1362
9999 mem: storing 1009 in location 1361
9999 mem: storing 0 in location 1404
 102 run: top-after:address:duplex-list <- get *editor, top-of-screen:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1504
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1116
9999 run: its type is address
9999 mem: location 1116 is 1158
9999 mem: storing 1158 in location 1408
 102 run: undo:address:address:list <- get-address *editor, undo:offset
9999 mem: location 1362 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1504
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1362 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1380
 102 run: break-unless *undo, 
9999 mem: location 1380 is 1124
9999 mem: location 1124 is 1460
9999 run: jump-unless fell through
 102 run: op:address:operation <- first *undo
9999 mem: location 1380 is 1124
9999 mem: location 1124 is 1460
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:list <- next-ingredient 
9999 mem: storing 1460 in location 1471
 103 run: result:location <- get *in, value:offset
9999 mem: location 1471 is 1460
9999 mem: location 1460 is 1450
9999 mem: location 1461 is 1357
9999 mem: location 1471 is 1460
9999 run: address to copy is 1460
9999 run: its type is number
9999 mem: location 1460 is 1450
9999 mem: storing 1450 in location 1472
 103 run: reply result
9999 mem: location 1472 is 1450
9999 run: result 0 is 1450
9999 mem: storing 1450 in location 1379
 102 run: typing:address:insert-operation <- maybe-convert *op, typing:variant
9999 mem: location 1379 is 1450
9999 mem: location 1450 is 1
9999 mem: location 1451 is 3
9999 mem: location 1452 is 0
9999 mem: location 1453 is 1158
9999 mem: location 1454 is 2
9999 mem: location 1455 is 0
9999 mem: location 1456 is 1158
9999 mem: location 1457 is 0
9999 mem: location 1458 is 0
9999 mem: location 1459 is 0
9999 mem: location 1379 is 1450
9999 mem: storing 0 in location 1383
 102 run: break-unless typing, 
9999 mem: location 1383 is 0
9999 run: jumping to instruction 257
 102 run: insert-from:address:duplex-list <- next-duplex cursor-before
9999 mem: location 1407 is 1174
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1174 in location 1471
 103 run: jump-if in, 1:offset
9999 mem: location 1471 is 1174
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1471 is 1174
9999 mem: location 1174 is 10
9999 mem: location 1175 is 1504
9999 mem: location 1176 is 1171
9999 mem: location 1471 is 1174
9999 run: address to copy is 1175
9999 run: its type is address
9999 mem: location 1175 is 1504
9999 mem: storing 1504 in location 1472
 103 run: reply result
9999 mem: location 1472 is 1504
9999 run: result 0 is 1504
9999 mem: storing 1504 in location 1384
 102 run: insert-to:address:duplex-list <- next-duplex insert-from
9999 mem: location 1384 is 1504
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 3
 103 run: in:address:duplex-list <- next-ingredient 
9999 mem: storing 1504 in location 1471
 103 run: jump-if in, 1:offset
9999 mem: location 1471 is 1504
9999 run: jumping to instruction 4
 103 run: result:address:duplex-list <- get *in, next:offset
9999 mem: location 1471 is 1504
9999 mem: location 1504 is 48
9999 mem: location 1505 is 1177
9999 mem: location 1506 is 1174
9999 mem: location 1471 is 1504
9999 run: address to copy is 1505
9999 run: its type is address
9999 mem: location 1505 is 1177
9999 mem: storing 1177 in location 1472
 103 run: reply result
9999 mem: location 1472 is 1177
9999 run: result 0 is 1177
9999 mem: storing 1177 in location 1414
 102 run: op:address:operation <- new operation:type
9999 mem: new alloc: 1507
9999 mem: storing 1507 in location 1379
 102 run: *op <- merge 0/insert-operation, save-row/before, save-column/before, top-before, *cursor-row/after, *cursor-column/after, top-after, insert-from, insert-to, 1/coalesce
9999 mem: location 1374 is 2
9999 mem: location 1375 is 0
9999 mem: location 1406 is 1158
9999 mem: location 1372 is 1121
9999 mem: location 1121 is 2
9999 mem: location 1373 is 1122
9999 mem: location 1122 is 1
9999 mem: location 1408 is 1158
9999 mem: location 1384 is 1504
9999 mem: location 1414 is 1177
9999 mem: location 1379 is 1507
9999 mem: storing 0 in location 1507
9999 mem: storing 2 in location 1508
9999 mem: storing 0 in location 1509
9999 mem: storing 1158 in location 1510
9999 mem: storing 2 in location 1511
9999 mem: storing 1 in location 1512
9999 mem: storing 1158 in location 1513
9999 mem: storing 1504 in location 1514
9999 mem: storing 1177 in location 1515
9999 mem: storing 1 in location 1516
 102 run: editor <- add-operation editor, op
9999 mem: location 1362 is 1115
9999 mem: location 1379 is 1507
 103 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 5
 103 run: editor:address:editor-data <- next-ingredient 
9999 mem: storing 1115 in location 1271
 103 run: op:address:operation <- next-ingredient 
9999 mem: storing 1507 in location 1272
 103 run: undo:address:address:list:address:operation <- get-address *editor, undo:offset
9999 mem: location 1271 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1504
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1460
9999 mem: location 1125 is 0
9999 mem: location 1271 is 1115
9999 run: address to copy is 1124
9999 mem: storing 1124 in location 1273
 103 run: *undo <- push op, *undo
9999 mem: location 1272 is 1507
9999 mem: location 1273 is 1124
9999 mem: location 1124 is 1460
 104 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 6
 104 run: x:location <- next-ingredient 
9999 mem: storing 1507 in location 1227
 104 run: in:address:list <- next-ingredient 
9999 mem: storing 1460 in location 1228
 104 run: result:address:list <- new list:type
9999 mem: new alloc: 1517
9999 mem: storing 1517 in location 1229
 104 run: val:address:location <- get-address *result, value:offset
9999 mem: location 1229 is 1517
9999 mem: location 1517 is 0
9999 mem: location 1518 is 0
9999 mem: location 1229 is 1517
9999 run: address to copy is 1517
9999 mem: storing 1517 in location 1230
 104 run: *val <- copy x
9999 mem: location 1227 is 1507
9999 mem: location 1230 is 1517
9999 mem: location 1230 is 1517
9999 mem: storing 1507 in location 1517
 104 run: next:address:address:list <- get-address *result, next:offset
9999 mem: location 1229 is 1517
9999 mem: location 1517 is 1507
9999 mem: location 1518 is 0
9999 mem: location 1229 is 1517
9999 run: address to copy is 1518
9999 mem: storing 1518 in location 1231
 104 run: *next <- copy in
9999 mem: location 1228 is 1460
9999 mem: location 1231 is 1518
9999 mem: location 1231 is 1518
9999 mem: storing 1460 in location 1518
 104 run: reply result
9999 mem: location 1229 is 1517
9999 run: result 0 is 1517
9999 mem: location 1273 is 1124
9999 mem: storing 1517 in location 1124
 103 run: redo:address:address:list:address:operation <- get-address *editor, redo:offset
9999 mem: location 1271 is 1115
9999 mem: location 1115 is 1158
9999 mem: location 1116 is 1158
9999 mem: location 1117 is 0
9999 mem: location 1118 is 1504
9999 mem: location 1119 is 0
9999 mem: location 1120 is 9
9999 mem: location 1121 is 2
9999 mem: location 1122 is 1
9999 mem: location 1123 is 1
9999 mem: location 1124 is 1517
9999 mem: location 1125 is 0
9999 mem: location 1271 is 1115
9999 run: address to copy is 1125
9999 mem: storing 1125 in location 1274
 103 run: *redo <- copy 0
9999 mem: location 1274 is 1125
9999 mem: location 1274 is 1125
9999 mem: storing 0 in location 1125
 103 run: reply editor/same-as-ingredient:0
9999 mem: location 1271 is 1115
9999 run: result 0 is 1115
9999 mem: storing 1115 in location 1362
 102 run: reply screen/same-as-ingredient:0, editor/same-as-ingredient:1, go-render?
9999 mem: location 1361 is 1009
9999 mem: location 1362 is 1115
9999 mem: location 1404 is 0
9999 run: result 0 is 1009
9999 run: result 1 is 1115
9999 run: result 2 is 0
9999 mem: storing 1009 in location 1277
9999 mem: storing 1115 in location 1279
9999 mem: storing 0 in location 1287
 101 run: break-unless go-render?, 
9999 mem: location 1287 is 0
9999 run: jumping to instruction 22
 101 run: loop 
9999 run: jumping to instruction 5
 101 run: e:event, console:address, found?:boolean, quit?:boolean <- read-event console
9999 mem: location 1278 is 1467
 102 run: default-space:address:array:location <- local-scope location:type, number-of-locals:literal
9999 mem: array size is 12
 102 run: x:address:console <- next-ingredient 
9999 mem: storing 1467 in location 1316
 102 run: break-unless x, 
9999 mem: location 1316 is 1467
9999 run: jump-unless fell through
 102 run: idx:address:number <- get-address *x, index:offset
9999 mem: location 1316 is 1467
9999 mem: location 1467 is 1
9999 mem: location 1468 is 1462
9999 mem: location 1316 is 1467
9999 run: address to copy is 1467
9999 mem: storing 1467 in location 1317
 102 run: buf:address:array:event <- get *x, data:offset
9999 mem: location 1316 is 1467
9999 mem: location 1467 is 1
9999 mem: location 1468 is 1462
9999 mem: location 1316 is 1467
9999 run: address to copy is 1468
9999 run: its type is address
9999 mem: location 1468 is 1462
9999 mem: storing 1462 in location 1318
 102 run: max:number <- length *buf
9999 mem: location 1318 is 1462
9999 mem: storing 1 in location 1319
 102 run: done?:boolean <- greater-or-equal *idx, max
9999 mem: location 1317 is 1467
9999 mem: location 1467 is 1
9999 mem: location 1319 is 1
9999 mem: storing 1 in location 1320
 102 run: break-unless done?, 
9999 mem: location 1320 is 1
9999 run: jump-unless fell through
 102 run: dummy:address:event <- new event:type
9999 mem: storing 1469 in location 1321
 102 run: reply *dummy, x/same-as-ingredient:0, 1/found, 1/quit
9999 mem: location 1321 is 1469
9999 mem: location 1469 is 0
9999 mem: location 1470 is 0
9999 mem: location 1471 is 0
9999 mem: location 1472 is 0
9999 mem: location 1316 is 1467
9999 run: result 0 is [0, 0, 0, 0]
9999 run: result 1 is 1467
9999 run: result 2 is 1
9999 run: result 3 is 1
9999 mem: storing 0 in location 1280
9999 mem: storing 0 in location 1281
9999 mem: storing 0 in location 1282
9999 mem: storing 0 in location 1283
9999 mem: storing 1467 in location 1278
9999 mem: storing 1 in location 1284
9999 mem: storing 1 in location 1285
 101 run: loop-unless found?, 
9999 mem: location 1284 is 1
9999 run: jump-unless fell through
 101 run: break-if quit?, 
9999 mem: location 1285 is 1
9999 run: jumping to instruction 25
  99 run: screen-should-contain [
    .          .
    .abc       .
    .0def      .
    .ghi       .
    .┈┈┈┈┈┈┈┈┈┈.
  ]
