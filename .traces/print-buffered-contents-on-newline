schedule: main
run: 1 main 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2 main 1: (((1 string-address)) <- ((new)) foo
line2)
run: 1031 => ((1 string-address))
setm: ((1 string-address)) <= 1031
setm: size of ((1 string-address)) is 1
setm: ((1 string-address)): setting 1002 to 1031
run: 3 main 2: (((2 keyboard-address)) <- ((init-keyboard)) ((1 string-address)))
m: ((1 string-address))
sizeof: ((1 string-address))
run: 4 init-keyboard 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1041 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 5 init-keyboard 1: (((1 keyboard-address)) <- ((new)) ((keyboard literal)))
sizeof: ((_ keyboard))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 1072 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1072
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 1043 to 1072
run: 6 init-keyboard 2: (((2 string-address-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1073 => ((2 string-address-address))
setm: ((2 string-address-address)) <= 1073
setm: size of ((2 string-address-address)) is 1
setm: ((2 string-address-address)): setting 1044 to 1073
run: 7 init-keyboard 3: (((2 string-address-address) (deref)) <- ((next-input)))
arg: nil 0 (1031)
run: 1031 => ((2 string-address-address) (deref))
setm: ((2 string-address-address) (deref)) <= 1031
setm: size of ((2 string-address-address) (deref)) is 1
setm: ((2 string-address-address) (deref)): setting 1073 to 1031
run: 8 init-keyboard 4: (((3 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1072 => ((3 integer-address))
setm: ((3 integer-address)) <= 1072
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1045 to 1072
run: 9 init-keyboard 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1072 to 0
run: 10 init-keyboard 6: (((reply)) ((1 keyboard-address)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
reply: (((1 keyboard-address))) (((2 keyboard-address)))
reply: 1072 => ((2 keyboard-address))
setm: ((2 keyboard-address)) <= 1072
setm: size of ((2 keyboard-address)) is 1
setm: ((2 keyboard-address)): setting 1003 to 1072
run: 11 main 3: (((3 channel-address)) <- ((init-channel)) ((1 literal)))
run: 12 init-channel 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1074 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 13 init-channel 1: (((1 channel-address)) <- ((new)) ((channel literal)))
sizeof: ((_ channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1076 to 1105
run: 14 init-channel 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((2 integer-address))
setm: ((2 integer-address)) <= 1105
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1077 to 1105
run: 15 init-channel 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1105 to 0
run: 16 init-channel 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((3 integer-address))
setm: ((3 integer-address)) <= 1106
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1078 to 1106
run: 17 init-channel 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1106 to 0
run: 18 init-channel 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (1)
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1079 to 1
run: 19 init-channel 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1079 to 2
run: 20 init-channel 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1107 => ((5 tagged-value-array-address-address))
setm: ((5 tagged-value-array-address-address)) <= 1107
setm: size of ((5 tagged-value-array-address-address)) is 1
setm: ((5 tagged-value-array-address-address)): setting 1080 to 1107
run: 21 init-channel 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1108 => ((5 tagged-value-array-address-address) (deref))
setm: ((5 tagged-value-array-address-address) (deref)) <= 1108
setm: size of ((5 tagged-value-array-address-address) (deref)) is 1
setm: ((5 tagged-value-array-address-address) (deref)): setting 1107 to 1108
run: 22 init-channel 10: (((reply)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
reply: (((1 channel-address))) (((3 channel-address)))
reply: 1105 => ((3 channel-address))
setm: ((3 channel-address)) <= 1105
setm: size of ((3 channel-address)) is 1
setm: ((3 channel-address)): setting 1004 to 1105
run: 23 main 4: (((fork)) ((send-keys-to-stdin fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((2 keyboard-address)) ((3 channel-address)))
m: ((2 keyboard-address))
sizeof: ((2 keyboard-address))
m: ((3 channel-address))
sizeof: ((3 channel-address))
run: 24 main 5: (((4 channel-address)) <- ((init-channel)) ((1 literal)))
run: 25 init-channel 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1113 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 26 init-channel 1: (((1 channel-address)) <- ((new)) ((channel literal)))
sizeof: ((_ channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1144 => ((1 channel-address))
setm: ((1 channel-address)) <= 1144
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 1115 to 1144
run: 27 init-channel 2: (((2 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1144 => ((2 integer-address))
setm: ((2 integer-address)) <= 1144
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1116 to 1144
run: 28 init-channel 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1144 to 0
run: 29 init-channel 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1145 => ((3 integer-address))
setm: ((3 integer-address)) <= 1145
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1117 to 1145
run: 30 init-channel 5: (((3 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 0
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1145 to 0
run: 31 init-channel 6: (((4 integer)) <- ((next-input)))
arg: nil 0 (1)
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1118 to 1
run: 32 init-channel 7: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1118 to 2
run: 33 init-channel 8: (((5 tagged-value-array-address-address)) <- ((get-address)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1146 => ((5 tagged-value-array-address-address))
setm: ((5 tagged-value-array-address-address)) <= 1146
setm: size of ((5 tagged-value-array-address-address)) is 1
setm: ((5 tagged-value-array-address-address)): setting 1119 to 1146
run: 34 init-channel 9: (((5 tagged-value-array-address-address) (deref)) <- ((new)) ((tagged-value-array literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1147 => ((5 tagged-value-array-address-address) (deref))
setm: ((5 tagged-value-array-address-address) (deref)) <= 1147
setm: size of ((5 tagged-value-array-address-address) (deref)) is 1
setm: ((5 tagged-value-array-address-address) (deref)): setting 1146 to 1147
run: 35 init-channel 10: (((reply)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
reply: (((1 channel-address))) (((4 channel-address)))
reply: 1144 => ((4 channel-address))
setm: ((4 channel-address)) <= 1144
setm: size of ((4 channel-address)) is 1
setm: ((4 channel-address)): setting 1005 to 1144
run: 36 main 6: (((5 integer) (routine)) <- ((fork)) ((buffer-stdin fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((3 channel-address)) ((4 channel-address)))
m: ((3 channel-address))
sizeof: ((3 channel-address))
m: ((4 channel-address))
sizeof: ((4 channel-address))
run: 2 => ((5 integer) (routine))
setm: ((5 integer) (routine)) <= 2
setm: size of ((5 integer) (routine)) is 1
setm: ((5 integer) (routine)): setting 1006 to 2
run: 37 main 7: (((6 terminal-address)) <- ((init-fake-terminal)) ((20 literal)) ((10 literal)))
run: 38 init-fake-terminal 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal) (capacity)))
sizeof: ((_ location))
run: 1152 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 39 init-fake-terminal 1: (((1 terminal-address)) <- ((new)) ((terminal literal)))
sizeof: ((_ terminal))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 1183 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1183
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 1154 to 1183
run: 40 init-fake-terminal 2: (((2 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1184 => ((2 integer-address))
setm: ((2 integer-address)) <= 1184
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 1155 to 1184
run: 41 init-fake-terminal 3: (((2 integer-address) (deref)) <- ((next-input)))
arg: nil 0 (20 10)
run: 20 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 20
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1184 to 20
run: 42 init-fake-terminal 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((0 offset)))
run: 1183 => ((3 integer-address))
setm: ((3 integer-address)) <= 1183
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 1156 to 1183
run: 43 init-fake-terminal 5: (((3 integer-address) (deref)) <- ((next-input)))
arg: nil 1 (20 10)
run: 10 => ((3 integer-address) (deref))
setm: ((3 integer-address) (deref)) <= 10
setm: size of ((3 integer-address) (deref)) is 1
setm: ((3 integer-address) (deref)): setting 1183 to 10
run: 44 init-fake-terminal 6: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1185 => ((4 integer-address))
setm: ((4 integer-address)) <= 1185
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 1157 to 1185
run: 45 init-fake-terminal 7: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1185 to 0
run: 46 init-fake-terminal 8: (((5 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1186 => ((5 integer-address))
setm: ((5 integer-address)) <= 1186
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 1158 to 1186
run: 47 init-fake-terminal 9: (((5 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((5 integer-address) (deref))
setm: ((5 integer-address) (deref)) <= 0
setm: size of ((5 integer-address) (deref)) is 1
setm: ((5 integer-address) (deref)): setting 1186 to 0
run: 48 init-fake-terminal 10: (((6 integer)) <- ((multiply)) ((2 integer-address) (deref)) ((3 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
run: 200 => ((6 integer))
setm: ((6 integer)) <= 200
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 1159 to 200
run: 49 init-fake-terminal 11: (((7 string-address-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1187 => ((7 string-address-address))
setm: ((7 string-address-address)) <= 1187
setm: size of ((7 string-address-address)) is 1
setm: ((7 string-address-address)): setting 1160 to 1187
run: 50 init-fake-terminal 12: (((7 string-address-address) (deref)) <- ((new)) ((string literal)) ((6 integer)))
m: ((6 integer))
sizeof: ((6 integer))
sizeof: ((_ byte))
run: 1188 => ((7 string-address-address) (deref))
setm: ((7 string-address-address) (deref)) <= 1188
setm: size of ((7 string-address-address) (deref)) is 1
setm: ((7 string-address-address) (deref)): setting 1187 to 1188
run: 51 init-fake-terminal 13: (((clear-screen)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 52 clear-screen 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 1389 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 53 clear-screen 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1183)
run: 1183 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1183
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 1391 to 1183
run: 54 clear-screen 2: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 55 clear-screen 3: (((2 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1187 string-address) (raw))
sizeof: ((1187 string-address) (raw))
run: 1188 => ((2 string-address))
setm: ((2 string-address)) <= 1188
setm: size of ((2 string-address)) is 1
setm: ((2 string-address)): setting 1392 to 1188
run: 56 clear-screen 4: (((3 integer)) <- ((length)) ((2 string-address) (deref)))
array-len: ((2 string-address) (deref))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
run: 200 => ((3 integer))
setm: ((3 integer)) <= 200
setm: size of ((3 integer)) is 1
setm: ((3 integer)): setting 1393 to 200
run: 57 clear-screen 5: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 0
run: 58 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 59 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 60 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1189 => ((1 byte-address))
setm: ((1 byte-address)) <= 1189
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1189
run: 61 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1189 to #\space
run: 62 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 1
run: 63 clear-screen 11: (((jump)) ((-6 offset)))
run: 64 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 65 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 66 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1190 => ((1 byte-address))
setm: ((1 byte-address)) <= 1190
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1190
run: 67 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1190 to #\space
run: 68 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 2
run: 69 clear-screen 11: (((jump)) ((-6 offset)))
run: 70 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 71 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 72 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1191 => ((1 byte-address))
setm: ((1 byte-address)) <= 1191
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1191
run: 73 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1191 to #\space
run: 74 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 3 => ((4 integer))
setm: ((4 integer)) <= 3
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 3
run: 75 clear-screen 11: (((jump)) ((-6 offset)))
run: 76 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 77 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 78 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1192 => ((1 byte-address))
setm: ((1 byte-address)) <= 1192
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1192
run: 79 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1192 to #\space
run: 80 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 4 => ((4 integer))
setm: ((4 integer)) <= 4
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 4
run: 81 clear-screen 11: (((jump)) ((-6 offset)))
run: 82 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 83 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 84 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1193 => ((1 byte-address))
setm: ((1 byte-address)) <= 1193
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1193
run: 85 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1193 to #\space
run: 86 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 5 => ((4 integer))
setm: ((4 integer)) <= 5
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 5
run: 87 clear-screen 11: (((jump)) ((-6 offset)))
run: 88 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 89 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 90 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1194 => ((1 byte-address))
setm: ((1 byte-address)) <= 1194
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1194
run: 91 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1194 to #\space
run: 92 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 6 => ((4 integer))
setm: ((4 integer)) <= 6
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 6
run: 93 clear-screen 11: (((jump)) ((-6 offset)))
run: 94 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 95 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 96 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1195 => ((1 byte-address))
setm: ((1 byte-address)) <= 1195
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1195
run: 97 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1195 to #\space
run: 98 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 7 => ((4 integer))
setm: ((4 integer)) <= 7
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 7
run: 99 clear-screen 11: (((jump)) ((-6 offset)))
run: 100 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 101 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 102 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1196 => ((1 byte-address))
setm: ((1 byte-address)) <= 1196
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1196
run: 103 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1196 to #\space
run: 104 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 8 => ((4 integer))
setm: ((4 integer)) <= 8
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 8
run: 105 clear-screen 11: (((jump)) ((-6 offset)))
run: 106 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 107 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 108 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1197 => ((1 byte-address))
setm: ((1 byte-address)) <= 1197
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1197
run: 109 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1197 to #\space
run: 110 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 9
run: 111 clear-screen 11: (((jump)) ((-6 offset)))
run: 112 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 113 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 114 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1198 => ((1 byte-address))
setm: ((1 byte-address)) <= 1198
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1198
run: 115 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1198 to #\space
run: 116 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 10 => ((4 integer))
setm: ((4 integer)) <= 10
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 10
run: 117 clear-screen 11: (((jump)) ((-6 offset)))
run: 118 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 119 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 120 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1199 => ((1 byte-address))
setm: ((1 byte-address)) <= 1199
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1199
run: 121 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1199 to #\space
run: 122 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 11 => ((4 integer))
setm: ((4 integer)) <= 11
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 11
run: 123 clear-screen 11: (((jump)) ((-6 offset)))
run: 124 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 125 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 126 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1200 => ((1 byte-address))
setm: ((1 byte-address)) <= 1200
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1200
run: 127 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1200 to #\space
run: 128 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 12 => ((4 integer))
setm: ((4 integer)) <= 12
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 12
run: 129 clear-screen 11: (((jump)) ((-6 offset)))
run: 130 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 131 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 132 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1201 => ((1 byte-address))
setm: ((1 byte-address)) <= 1201
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1201
run: 133 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1201 to #\space
run: 134 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 13 => ((4 integer))
setm: ((4 integer)) <= 13
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 13
run: 135 clear-screen 11: (((jump)) ((-6 offset)))
run: 136 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 137 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 138 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1202 => ((1 byte-address))
setm: ((1 byte-address)) <= 1202
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1202
run: 139 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1202 to #\space
run: 140 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 14 => ((4 integer))
setm: ((4 integer)) <= 14
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 14
run: 141 clear-screen 11: (((jump)) ((-6 offset)))
run: 142 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 143 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 144 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1203 => ((1 byte-address))
setm: ((1 byte-address)) <= 1203
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1203
run: 145 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1203 to #\space
run: 146 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 15 => ((4 integer))
setm: ((4 integer)) <= 15
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 15
run: 147 clear-screen 11: (((jump)) ((-6 offset)))
run: 148 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 149 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 150 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1204 => ((1 byte-address))
setm: ((1 byte-address)) <= 1204
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1204
run: 151 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1204 to #\space
run: 152 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 16 => ((4 integer))
setm: ((4 integer)) <= 16
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 16
run: 153 clear-screen 11: (((jump)) ((-6 offset)))
run: 154 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 155 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 156 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1205 => ((1 byte-address))
setm: ((1 byte-address)) <= 1205
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1205
run: 157 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1205 to #\space
run: 158 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 17 => ((4 integer))
setm: ((4 integer)) <= 17
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 17
run: 159 clear-screen 11: (((jump)) ((-6 offset)))
run: 160 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 161 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 162 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1206 => ((1 byte-address))
setm: ((1 byte-address)) <= 1206
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1206
run: 163 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1206 to #\space
run: 164 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 18 => ((4 integer))
setm: ((4 integer)) <= 18
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 18
run: 165 clear-screen 11: (((jump)) ((-6 offset)))
run: 166 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 167 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 168 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1207 => ((1 byte-address))
setm: ((1 byte-address)) <= 1207
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1207
run: 169 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1207 to #\space
run: 170 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 19 => ((4 integer))
setm: ((4 integer)) <= 19
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 19
run: 171 clear-screen 11: (((jump)) ((-6 offset)))
run: 172 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 173 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 174 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1208 => ((1 byte-address))
setm: ((1 byte-address)) <= 1208
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1208
run: 175 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1208 to #\space
run: 176 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 20 => ((4 integer))
setm: ((4 integer)) <= 20
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 20
run: 177 clear-screen 11: (((jump)) ((-6 offset)))
run: 178 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 179 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 180 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1209 => ((1 byte-address))
setm: ((1 byte-address)) <= 1209
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1209
run: 181 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1209 to #\space
run: 182 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 21 => ((4 integer))
setm: ((4 integer)) <= 21
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 21
run: 183 clear-screen 11: (((jump)) ((-6 offset)))
run: 184 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 185 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 186 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1210 => ((1 byte-address))
setm: ((1 byte-address)) <= 1210
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1210
run: 187 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1210 to #\space
run: 188 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 22 => ((4 integer))
setm: ((4 integer)) <= 22
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 22
run: 189 clear-screen 11: (((jump)) ((-6 offset)))
run: 190 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 191 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 192 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1211 => ((1 byte-address))
setm: ((1 byte-address)) <= 1211
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1211
run: 193 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1211 to #\space
run: 194 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 23 => ((4 integer))
setm: ((4 integer)) <= 23
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 23
run: 195 clear-screen 11: (((jump)) ((-6 offset)))
run: 196 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 197 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 198 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1212 => ((1 byte-address))
setm: ((1 byte-address)) <= 1212
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1212
run: 199 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1212 to #\space
run: 200 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 24 => ((4 integer))
setm: ((4 integer)) <= 24
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 24
run: 201 clear-screen 11: (((jump)) ((-6 offset)))
run: 202 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 203 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 204 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1213 => ((1 byte-address))
setm: ((1 byte-address)) <= 1213
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1213
run: 205 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1213 to #\space
run: 206 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 25 => ((4 integer))
setm: ((4 integer)) <= 25
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 25
run: 207 clear-screen 11: (((jump)) ((-6 offset)))
run: 208 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 209 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 210 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1214 => ((1 byte-address))
setm: ((1 byte-address)) <= 1214
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1214
run: 211 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1214 to #\space
run: 212 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 26 => ((4 integer))
setm: ((4 integer)) <= 26
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 26
run: 213 clear-screen 11: (((jump)) ((-6 offset)))
run: 214 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 215 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 216 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1215 => ((1 byte-address))
setm: ((1 byte-address)) <= 1215
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1215
run: 217 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1215 to #\space
run: 218 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 27 => ((4 integer))
setm: ((4 integer)) <= 27
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 27
run: 219 clear-screen 11: (((jump)) ((-6 offset)))
run: 220 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 221 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 222 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1216 => ((1 byte-address))
setm: ((1 byte-address)) <= 1216
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1216
run: 223 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1216 to #\space
run: 224 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 28 => ((4 integer))
setm: ((4 integer)) <= 28
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 28
run: 225 clear-screen 11: (((jump)) ((-6 offset)))
run: 226 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 227 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 228 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1217 => ((1 byte-address))
setm: ((1 byte-address)) <= 1217
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1217
run: 229 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1217 to #\space
run: 230 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 29 => ((4 integer))
setm: ((4 integer)) <= 29
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 29
run: 231 clear-screen 11: (((jump)) ((-6 offset)))
run: 232 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 233 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 234 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1218 => ((1 byte-address))
setm: ((1 byte-address)) <= 1218
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1218
run: 235 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1218 to #\space
run: 236 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 30
run: 237 clear-screen 11: (((jump)) ((-6 offset)))
run: 238 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 239 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 240 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1219 => ((1 byte-address))
setm: ((1 byte-address)) <= 1219
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1219
run: 241 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1219 to #\space
run: 242 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 31 => ((4 integer))
setm: ((4 integer)) <= 31
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 31
run: 243 clear-screen 11: (((jump)) ((-6 offset)))
run: 244 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 245 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 246 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1220 => ((1 byte-address))
setm: ((1 byte-address)) <= 1220
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1220
run: 247 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1220 to #\space
run: 248 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 32 => ((4 integer))
setm: ((4 integer)) <= 32
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 32
run: 249 clear-screen 11: (((jump)) ((-6 offset)))
run: 250 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 251 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 252 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1221 => ((1 byte-address))
setm: ((1 byte-address)) <= 1221
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1221
run: 253 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1221 to #\space
run: 254 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 33 => ((4 integer))
setm: ((4 integer)) <= 33
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 33
run: 255 clear-screen 11: (((jump)) ((-6 offset)))
run: 256 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 257 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 258 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1222 => ((1 byte-address))
setm: ((1 byte-address)) <= 1222
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1222
run: 259 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1222 to #\space
run: 260 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 34 => ((4 integer))
setm: ((4 integer)) <= 34
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 34
run: 261 clear-screen 11: (((jump)) ((-6 offset)))
run: 262 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 263 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 264 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1223 => ((1 byte-address))
setm: ((1 byte-address)) <= 1223
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1223
run: 265 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1223 to #\space
run: 266 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 35 => ((4 integer))
setm: ((4 integer)) <= 35
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 35
run: 267 clear-screen 11: (((jump)) ((-6 offset)))
run: 268 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 269 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 270 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1224 => ((1 byte-address))
setm: ((1 byte-address)) <= 1224
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1224
run: 271 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1224 to #\space
run: 272 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 36 => ((4 integer))
setm: ((4 integer)) <= 36
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 36
run: 273 clear-screen 11: (((jump)) ((-6 offset)))
run: 274 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 275 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 276 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1225 => ((1 byte-address))
setm: ((1 byte-address)) <= 1225
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1225
run: 277 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1225 to #\space
run: 278 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 37 => ((4 integer))
setm: ((4 integer)) <= 37
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 37
run: 279 clear-screen 11: (((jump)) ((-6 offset)))
run: 280 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 281 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 282 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1226 => ((1 byte-address))
setm: ((1 byte-address)) <= 1226
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1226
run: 283 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1226 to #\space
run: 284 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 38 => ((4 integer))
setm: ((4 integer)) <= 38
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 38
run: 285 clear-screen 11: (((jump)) ((-6 offset)))
run: 286 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 287 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 288 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1227 => ((1 byte-address))
setm: ((1 byte-address)) <= 1227
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1227
run: 289 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1227 to #\space
run: 290 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 39 => ((4 integer))
setm: ((4 integer)) <= 39
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 39
run: 291 clear-screen 11: (((jump)) ((-6 offset)))
run: 292 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 293 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 294 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1228 => ((1 byte-address))
setm: ((1 byte-address)) <= 1228
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1228
run: 295 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1228 to #\space
run: 296 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 40 => ((4 integer))
setm: ((4 integer)) <= 40
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 40
run: 297 clear-screen 11: (((jump)) ((-6 offset)))
run: 298 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 299 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 300 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1229 => ((1 byte-address))
setm: ((1 byte-address)) <= 1229
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1229
run: 301 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1229 to #\space
run: 302 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 41 => ((4 integer))
setm: ((4 integer)) <= 41
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 41
run: 303 clear-screen 11: (((jump)) ((-6 offset)))
run: 304 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 305 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 306 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1230 => ((1 byte-address))
setm: ((1 byte-address)) <= 1230
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1230
run: 307 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1230 to #\space
run: 308 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 42 => ((4 integer))
setm: ((4 integer)) <= 42
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 42
run: 309 clear-screen 11: (((jump)) ((-6 offset)))
run: 310 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 311 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 312 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1231 => ((1 byte-address))
setm: ((1 byte-address)) <= 1231
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1231
run: 313 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1231 to #\space
run: 314 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 43 => ((4 integer))
setm: ((4 integer)) <= 43
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 43
run: 315 clear-screen 11: (((jump)) ((-6 offset)))
run: 316 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 317 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 318 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1232 => ((1 byte-address))
setm: ((1 byte-address)) <= 1232
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1232
run: 319 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1232 to #\space
run: 320 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 44 => ((4 integer))
setm: ((4 integer)) <= 44
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 44
run: 321 clear-screen 11: (((jump)) ((-6 offset)))
run: 322 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 323 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 324 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1233 => ((1 byte-address))
setm: ((1 byte-address)) <= 1233
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1233
run: 325 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1233 to #\space
run: 326 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 45 => ((4 integer))
setm: ((4 integer)) <= 45
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 45
run: 327 clear-screen 11: (((jump)) ((-6 offset)))
run: 328 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 329 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 330 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1234 => ((1 byte-address))
setm: ((1 byte-address)) <= 1234
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1234
run: 331 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1234 to #\space
run: 332 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 46 => ((4 integer))
setm: ((4 integer)) <= 46
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 46
run: 333 clear-screen 11: (((jump)) ((-6 offset)))
run: 334 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 335 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 336 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1235 => ((1 byte-address))
setm: ((1 byte-address)) <= 1235
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1235
run: 337 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1235 to #\space
run: 338 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 47 => ((4 integer))
setm: ((4 integer)) <= 47
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 47
run: 339 clear-screen 11: (((jump)) ((-6 offset)))
run: 340 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 341 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 342 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1236 => ((1 byte-address))
setm: ((1 byte-address)) <= 1236
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1236
run: 343 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1236 to #\space
run: 344 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 48 => ((4 integer))
setm: ((4 integer)) <= 48
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 48
run: 345 clear-screen 11: (((jump)) ((-6 offset)))
run: 346 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 347 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 348 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1237 => ((1 byte-address))
setm: ((1 byte-address)) <= 1237
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1237
run: 349 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1237 to #\space
run: 350 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 49 => ((4 integer))
setm: ((4 integer)) <= 49
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 49
run: 351 clear-screen 11: (((jump)) ((-6 offset)))
run: 352 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 353 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 354 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1238 => ((1 byte-address))
setm: ((1 byte-address)) <= 1238
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1238
run: 355 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1238 to #\space
run: 356 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 50 => ((4 integer))
setm: ((4 integer)) <= 50
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 50
run: 357 clear-screen 11: (((jump)) ((-6 offset)))
run: 358 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 359 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 360 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1239 => ((1 byte-address))
setm: ((1 byte-address)) <= 1239
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1239
run: 361 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1239 to #\space
run: 362 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 51 => ((4 integer))
setm: ((4 integer)) <= 51
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 51
run: 363 clear-screen 11: (((jump)) ((-6 offset)))
run: 364 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 365 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 366 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1240 => ((1 byte-address))
setm: ((1 byte-address)) <= 1240
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1240
run: 367 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1240 to #\space
run: 368 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 52 => ((4 integer))
setm: ((4 integer)) <= 52
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 52
run: 369 clear-screen 11: (((jump)) ((-6 offset)))
run: 370 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 371 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 372 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1241 => ((1 byte-address))
setm: ((1 byte-address)) <= 1241
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1241
run: 373 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1241 to #\space
run: 374 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 53 => ((4 integer))
setm: ((4 integer)) <= 53
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 53
run: 375 clear-screen 11: (((jump)) ((-6 offset)))
run: 376 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 377 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 378 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1242 => ((1 byte-address))
setm: ((1 byte-address)) <= 1242
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1242
run: 379 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1242 to #\space
run: 380 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 54 => ((4 integer))
setm: ((4 integer)) <= 54
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 54
run: 381 clear-screen 11: (((jump)) ((-6 offset)))
run: 382 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 383 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 384 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1243 => ((1 byte-address))
setm: ((1 byte-address)) <= 1243
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1243
run: 385 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1243 to #\space
run: 386 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 55 => ((4 integer))
setm: ((4 integer)) <= 55
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 55
run: 387 clear-screen 11: (((jump)) ((-6 offset)))
run: 388 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 389 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 390 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1244 => ((1 byte-address))
setm: ((1 byte-address)) <= 1244
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1244
run: 391 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1244 to #\space
run: 392 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 56 => ((4 integer))
setm: ((4 integer)) <= 56
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 56
run: 393 clear-screen 11: (((jump)) ((-6 offset)))
run: 394 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 395 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 396 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1245 => ((1 byte-address))
setm: ((1 byte-address)) <= 1245
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1245
run: 397 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1245 to #\space
run: 398 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 57 => ((4 integer))
setm: ((4 integer)) <= 57
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 57
run: 399 clear-screen 11: (((jump)) ((-6 offset)))
run: 400 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 401 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 402 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1246 => ((1 byte-address))
setm: ((1 byte-address)) <= 1246
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1246
run: 403 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1246 to #\space
run: 404 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 58 => ((4 integer))
setm: ((4 integer)) <= 58
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 58
run: 405 clear-screen 11: (((jump)) ((-6 offset)))
run: 406 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 407 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 408 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1247 => ((1 byte-address))
setm: ((1 byte-address)) <= 1247
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1247
run: 409 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1247 to #\space
run: 410 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 59 => ((4 integer))
setm: ((4 integer)) <= 59
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 59
run: 411 clear-screen 11: (((jump)) ((-6 offset)))
run: 412 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 413 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 414 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1248 => ((1 byte-address))
setm: ((1 byte-address)) <= 1248
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1248
run: 415 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1248 to #\space
run: 416 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 60 => ((4 integer))
setm: ((4 integer)) <= 60
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 60
run: 417 clear-screen 11: (((jump)) ((-6 offset)))
run: 418 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 419 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 420 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1249 => ((1 byte-address))
setm: ((1 byte-address)) <= 1249
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1249
run: 421 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1249 to #\space
run: 422 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 61 => ((4 integer))
setm: ((4 integer)) <= 61
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 61
run: 423 clear-screen 11: (((jump)) ((-6 offset)))
run: 424 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 425 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 426 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1250 => ((1 byte-address))
setm: ((1 byte-address)) <= 1250
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1250
run: 427 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1250 to #\space
run: 428 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 62 => ((4 integer))
setm: ((4 integer)) <= 62
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 62
run: 429 clear-screen 11: (((jump)) ((-6 offset)))
run: 430 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 431 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 432 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1251 => ((1 byte-address))
setm: ((1 byte-address)) <= 1251
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1251
run: 433 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1251 to #\space
run: 434 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 63 => ((4 integer))
setm: ((4 integer)) <= 63
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 63
run: 435 clear-screen 11: (((jump)) ((-6 offset)))
run: 436 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 437 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 438 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1252 => ((1 byte-address))
setm: ((1 byte-address)) <= 1252
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1252
run: 439 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1252 to #\space
run: 440 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 64 => ((4 integer))
setm: ((4 integer)) <= 64
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 64
run: 441 clear-screen 11: (((jump)) ((-6 offset)))
run: 442 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 443 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 444 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1253 => ((1 byte-address))
setm: ((1 byte-address)) <= 1253
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1253
run: 445 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1253 to #\space
run: 446 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 65 => ((4 integer))
setm: ((4 integer)) <= 65
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 65
run: 447 clear-screen 11: (((jump)) ((-6 offset)))
run: 448 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 449 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 450 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1254 => ((1 byte-address))
setm: ((1 byte-address)) <= 1254
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1254
run: 451 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1254 to #\space
run: 452 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 66 => ((4 integer))
setm: ((4 integer)) <= 66
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 66
run: 453 clear-screen 11: (((jump)) ((-6 offset)))
run: 454 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 455 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 456 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1255 => ((1 byte-address))
setm: ((1 byte-address)) <= 1255
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1255
run: 457 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1255 to #\space
run: 458 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 67 => ((4 integer))
setm: ((4 integer)) <= 67
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 67
run: 459 clear-screen 11: (((jump)) ((-6 offset)))
run: 460 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 461 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 462 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1256 => ((1 byte-address))
setm: ((1 byte-address)) <= 1256
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1256
run: 463 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1256 to #\space
run: 464 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 68 => ((4 integer))
setm: ((4 integer)) <= 68
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 68
run: 465 clear-screen 11: (((jump)) ((-6 offset)))
run: 466 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 467 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 468 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1257 => ((1 byte-address))
setm: ((1 byte-address)) <= 1257
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1257
run: 469 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1257 to #\space
run: 470 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 69 => ((4 integer))
setm: ((4 integer)) <= 69
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 69
run: 471 clear-screen 11: (((jump)) ((-6 offset)))
run: 472 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 473 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 474 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1258 => ((1 byte-address))
setm: ((1 byte-address)) <= 1258
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1258
run: 475 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1258 to #\space
run: 476 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 70 => ((4 integer))
setm: ((4 integer)) <= 70
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 70
run: 477 clear-screen 11: (((jump)) ((-6 offset)))
run: 478 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 479 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 480 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1259 => ((1 byte-address))
setm: ((1 byte-address)) <= 1259
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1259
run: 481 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1259 to #\space
run: 482 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 71 => ((4 integer))
setm: ((4 integer)) <= 71
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 71
run: 483 clear-screen 11: (((jump)) ((-6 offset)))
run: 484 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 485 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 486 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1260 => ((1 byte-address))
setm: ((1 byte-address)) <= 1260
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1260
run: 487 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1260 to #\space
run: 488 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 72 => ((4 integer))
setm: ((4 integer)) <= 72
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 72
run: 489 clear-screen 11: (((jump)) ((-6 offset)))
run: 490 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 491 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 492 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1261 => ((1 byte-address))
setm: ((1 byte-address)) <= 1261
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1261
run: 493 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1261 to #\space
run: 494 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 73 => ((4 integer))
setm: ((4 integer)) <= 73
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 73
run: 495 clear-screen 11: (((jump)) ((-6 offset)))
run: 496 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 497 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 498 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1262 => ((1 byte-address))
setm: ((1 byte-address)) <= 1262
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1262
run: 499 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1262 to #\space
run: 500 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 74 => ((4 integer))
setm: ((4 integer)) <= 74
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 74
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: send-keys-to-stdin
run: 501 send-keys-to-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 502 send-keys-to-stdin 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1072 1105)
run: 1072 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1072
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 101002 to 1072
run: 503 send-keys-to-stdin 2: (((2 channel-address)) <- ((next-input)))
arg: nil 1 (1072 1105)
run: 1105 => ((2 channel-address))
setm: ((2 channel-address)) <= 1105
setm: size of ((2 channel-address)) is 1
setm: ((2 channel-address)): setting 101003 to 1105
run: 504 send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 505 read-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 506 read-key 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1072)
run: 1072 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1072
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 101033 to 1072
run: 507 read-key 2: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 508 read-key 3: (((2 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1072 => ((2 integer-address))
setm: ((2 integer-address)) <= 1072
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 101034 to 1072
run: 509 read-key 4: (((3 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1073 string-address) (raw))
sizeof: ((1073 string-address) (raw))
run: 1031 => ((3 string-address))
setm: ((3 string-address)) <= 1031
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 101035 to 1031
run: 510 read-key 5: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101036 to 9
run: 511 read-key 6: (((5 boolean)) <- ((greater-or-equal)) ((2 integer-address) (deref)) ((4 integer)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 101037 to nil
run: 512 read-key 7: (((jump-unless)) ((5 boolean)) ((1 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 513 read-key 9: (((6 character)) <- ((index)) ((3 string-address) (deref)) ((2 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
array-len: ((1031 string) (raw))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
sizeof: ((_ byte))
m: ((1032 byte) (raw))
sizeof: ((1032 byte) (raw))
run: #\f => ((6 character))
setm: ((6 character)) <= #\f
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 101038 to #\f
run: 514 read-key 10: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 1 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 1
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1072 to 1
run: 515 read-key 11: (((reply)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
reply: (((6 character))) (((3 character)))
reply: #\f => ((3 character))
setm: ((3 character)) <= #\f
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101004 to #\f
run: 516 send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
m: ((3 character))
sizeof: ((3 character))
run: 517 send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\f)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\f))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 101005 to character
setm: ((4 tagged-value)): setting 101006 to #\f
run: 518 send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 519 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101062 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 520 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105 #(tagged record (character #\f . nil)))
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101064 to 1105
run: 521 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1105 #(tagged record (character #\f . nil)))
run: #(tagged record (character #\f . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\f . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101065 to character
setm: ((2 tagged-value)): setting 101066 to #\f
run: 522 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 523 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101093 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 524 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1108 . nil)))
run: #(tagged record (0 0 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101095 to 0
setm: ((1 channel)): setting 101096 to 0
setm: ((1 channel)): setting 101097 to 1108
run: 525 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101096 integer) (raw))
sizeof: ((101096 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101098 to 0
run: 526 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101098 to 1
run: 527 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 528 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101124 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 529 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1108 . nil)))
run: #(tagged record (0 0 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101126 to 0
setm: ((1 channel)): setting 101127 to 0
setm: ((1 channel)): setting 101128 to 1108
run: 530 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((101128 tagged-value-array-address) (raw))
sizeof: ((101128 tagged-value-array-address) (raw))
run: 1108 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1108
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 101129 to 1108
run: 531 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101130 to 2
run: 532 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101099 to 2
run: 533 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101100 to t
run: 534 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 535 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101095 integer) (raw))
sizeof: ((101095 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101101 to 0
run: 536 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 101102 to nil
run: 537 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101067 to nil
run: 538 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 539 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1108
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 101069 to 1108
run: 540 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((7 integer-address))
setm: ((7 integer-address)) <= 1106
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 101070 to 1106
run: 541 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1109 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1109
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 101071 to 1109
run: 542 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\f . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\f . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1109 to character
setm: ((8 tagged-value-address) (deref)): setting 1110 to #\f
run: 543 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 1
run: 544 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 101072 to 2
run: 545 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101073 to t
run: 546 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 547 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (0 1 1108 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1105 to 0
setm: ((2 channel-address) (deref)): setting 1106 to 1
setm: ((2 channel-address) (deref)): setting 1107 to 1108
run: 548 send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
m: ((3 character))
sizeof: ((3 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101007 to nil
run: 549 send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 550 send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: 551 send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 552 read-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101155 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 553 read-key 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1072)
run: 1072 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1072
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 101157 to 1072
run: 554 read-key 2: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 555 read-key 3: (((2 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1072 => ((2 integer-address))
setm: ((2 integer-address)) <= 1072
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 101158 to 1072
run: 556 read-key 4: (((3 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1073 string-address) (raw))
sizeof: ((1073 string-address) (raw))
run: 1031 => ((3 string-address))
setm: ((3 string-address)) <= 1031
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 101159 to 1031
run: 557 read-key 5: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101160 to 9
run: 558 read-key 6: (((5 boolean)) <- ((greater-or-equal)) ((2 integer-address) (deref)) ((4 integer)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 101161 to nil
run: 559 read-key 7: (((jump-unless)) ((5 boolean)) ((1 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 560 read-key 9: (((6 character)) <- ((index)) ((3 string-address) (deref)) ((2 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
array-len: ((1031 string) (raw))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
sizeof: ((_ byte))
m: ((1033 byte) (raw))
sizeof: ((1033 byte) (raw))
run: #\o => ((6 character))
setm: ((6 character)) <= #\o
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 101162 to #\o
run: 561 read-key 10: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 2 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 2
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1072 to 2
run: 562 read-key 11: (((reply)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
reply: (((6 character))) (((3 character)))
reply: #\o => ((3 character))
setm: ((3 character)) <= #\o
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101004 to #\o
run: 563 send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
m: ((3 character))
sizeof: ((3 character))
run: 564 send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\o)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\o))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 101005 to character
setm: ((4 tagged-value)): setting 101006 to #\o
run: 565 send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 566 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101186 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 567 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105 #(tagged record (character #\o . nil)))
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101188 to 1105
run: 568 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1105 #(tagged record (character #\o . nil)))
run: #(tagged record (character #\o . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\o . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101189 to character
setm: ((2 tagged-value)): setting 101190 to #\o
run: 569 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 570 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101217 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 571 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1108 . nil)))
run: #(tagged record (0 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101219 to 0
setm: ((1 channel)): setting 101220 to 1
setm: ((1 channel)): setting 101221 to 1108
run: 572 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101220 integer) (raw))
sizeof: ((101220 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101222 to 1
run: 573 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101222 to 2
run: 574 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 575 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101248 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 576 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1108 . nil)))
run: #(tagged record (0 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101250 to 0
setm: ((1 channel)): setting 101251 to 1
setm: ((1 channel)): setting 101252 to 1108
run: 577 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((101252 tagged-value-array-address) (raw))
sizeof: ((101252 tagged-value-array-address) (raw))
run: 1108 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1108
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 101253 to 1108
run: 578 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101254 to 2
run: 579 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101223 to 2
run: 580 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101224 to nil
run: 581 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 582 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101222 to 0
run: 583 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101219 integer) (raw))
sizeof: ((101219 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101225 to 0
run: 584 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 101226 to t
run: 585 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101191 to t
run: 586 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 587 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((5 integer-address))
setm: ((5 integer-address)) <= 1105
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 101192 to 1105
run: 588 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: buffer-stdin
run: 589 buffer-stdin 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 590 buffer-stdin 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105 1144)
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 201002 to 1105
run: 591 buffer-stdin 2: (((2 channel-address)) <- ((next-input)))
arg: nil 1 (1105 1144)
run: 1144 => ((2 channel-address))
setm: ((2 channel-address)) <= 1144
setm: size of ((2 channel-address)) is 1
setm: ((2 channel-address)): setting 201003 to 1144
run: 592 buffer-stdin 3: (((3 buffer-address)) <- ((init-buffer)) ((30 literal)))
run: 593 init-buffer 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 594 init-buffer 1: (((1 buffer-address)) <- ((new)) ((buffer literal)))
sizeof: ((_ buffer))
sizeof: ((_ integer))
sizeof: ((_ string-address))
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 201033 to 201062
run: 595 init-buffer 2: (((2 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 201062 => ((2 integer-address))
setm: ((2 integer-address)) <= 201062
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 201034 to 201062
run: 596 init-buffer 3: (((2 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 0
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 201062 to 0
run: 597 init-buffer 4: (((3 string-address-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 201063 => ((3 string-address-address))
setm: ((3 string-address-address)) <= 201063
setm: size of ((3 string-address-address)) is 1
setm: ((3 string-address-address)): setting 201035 to 201063
run: 598 init-buffer 5: (((4 integer)) <- ((next-input)))
arg: nil 0 (30)
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201036 to 30
run: 599 init-buffer 6: (((3 string-address-address) (deref)) <- ((new)) ((string literal)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
sizeof: ((_ byte))
run: 201064 => ((3 string-address-address) (deref))
setm: ((3 string-address-address) (deref)) <= 201064
setm: size of ((3 string-address-address) (deref)) is 1
setm: ((3 string-address-address) (deref)): setting 201063 to 201064
run: 600 init-buffer 7: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((3 buffer-address)))
reply: 201062 => ((3 buffer-address))
setm: ((3 buffer-address)) <= 201062
setm: size of ((3 buffer-address)) is 1
setm: ((3 buffer-address)): setting 201004 to 201062
run: 601 buffer-stdin 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 602 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201095 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 603 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105)
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 201097 to 1105
run: 604 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 605 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201126 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 606 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1108 . nil)))
run: #(tagged record (0 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 201128 to 0
setm: ((1 channel)): setting 201129 to 1
setm: ((1 channel)): setting 201130 to 1108
run: 607 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((201128 integer) (raw))
sizeof: ((201128 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201131 to 0
run: 608 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((201129 integer) (raw))
sizeof: ((201129 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 201132 to 1
run: 609 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 201133 to nil
run: 610 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 201098 to nil
run: 611 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 612 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((4 integer-address))
setm: ((4 integer-address)) <= 1105
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 201100 to 1105
run: 613 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1108
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 201101 to 1108
run: 614 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1109 tagged-value) (raw))
sizeof: ((1109 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\f . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\f . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 201102 to character
setm: ((6 tagged-value)): setting 201103 to #\f
run: 615 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 1
run: 616 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 201104 to 2
run: 617 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 201105 to t
run: 618 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 619 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((4 tagged-value)) ((1 channel-address) (deref)))
reply: #(tagged record (character #\f . nil)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\f . nil))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 201005 to character
setm: ((4 tagged-value)): setting 201006 to #\f
reply: #(tagged record (1 1 1108 . nil)) => ((1 channel-address) (deref))
setm: ((1 channel-address) (deref)) <= #(tagged record (1 1 1108 . nil))
setm: size of ((1 channel-address) (deref)) is 3
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref)): setting 1105 to 1
setm: ((1 channel-address) (deref)): setting 1106 to 1
setm: ((1 channel-address) (deref)): setting 1107 to 1108
run: 620 buffer-stdin 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 621 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201157 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 622 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 201188 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 201188
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 201159 to 201188
run: 623 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\f . nil)) character)
run: #(tagged record (character #\f . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\f . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 201188 to character
setm: ((1 tagged-value-address) (deref)): setting 201189 to #\f
run: 624 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\f . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 201160 to character
run: 625 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((201188 type) (raw))
sizeof: ((201188 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 201161 to character
run: 626 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 201162 to t
run: 627 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 628 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((201189 location) (raw))
sizeof: ((201189 location) (raw))
run: #\f => ((5 location))
setm: ((5 location)) <= #\f
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 201163 to #\f
run: 629 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((6 character)))
reply: #\f => ((6 character))
setm: ((6 character)) <= #\f
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\f
run: 630 buffer-stdin 6: (((assert)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 631 buffer-stdin 7: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
m: ((3 buffer-address))
sizeof: ((3 buffer-address))
m: ((6 character))
sizeof: ((6 character))
run: 632 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201190 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 633 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\f)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 201192 to 201062
run: 634 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\f)
run: #\f => ((2 character))
setm: ((2 character)) <= #\f
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 201193 to #\f
run: 635 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 636 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201221 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 637 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 201223 to 201062
run: 638 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((201062 integer) (raw))
sizeof: ((201062 integer) (raw))
run: 0 => ((2 integer))
setm: ((2 integer)) <= 0
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 201224 to 0
run: 639 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((3 string-address))
setm: ((3 string-address)) <= 201064
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 201225 to 201064
run: 640 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201226 to 30
run: 641 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 201227 to nil
run: 642 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 201194 to nil
run: 643 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 644 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 201062 => ((4 integer-address))
setm: ((4 integer-address)) <= 201062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 201195 to 201062
run: 645 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((5 string-address))
setm: ((5 string-address)) <= 201064
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 201196 to 201064
run: 646 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
run: 201065 => ((6 byte-address))
setm: ((6 byte-address)) <= 201065
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 201197 to 201065
run: 647 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\f => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\f
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 201065 to #\f
run: 648 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 201062 to 1
run: 649 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((3 buffer-address)))
reply: 201062 => ((3 buffer-address))
setm: ((3 buffer-address)) <= 201062
setm: size of ((3 buffer-address)) is 1
setm: ((3 buffer-address)): setting 201004 to 201062
run: 650 buffer-stdin 8: (((7 string-address)) <- ((get)) ((3 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((7 string-address))
setm: ((7 string-address)) <= 201064
setm: size of ((7 string-address)) is 1
setm: ((7 string-address)): setting 201008 to 201064
run: 651 buffer-stdin 9: (((8 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 201009 to nil
run: 652 buffer-stdin 10: (((jump-if)) ((8 boolean)) ((3 offset)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 653 buffer-stdin 11: (((9 boolean)) <- ((equal)) ((6 character)) ((  literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 201010 to nil
run: 654 buffer-stdin 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 655 buffer-stdin 13: (((jump)) ((-10 offset)))
run: 656 buffer-stdin 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 657 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201252 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 658 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105)
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 201254 to 1105
run: 659 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 660 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201283 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 661 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1108 . nil)))
run: #(tagged record (1 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 201285 to 1
setm: ((1 channel)): setting 201286 to 1
setm: ((1 channel)): setting 201287 to 1108
run: 662 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((201285 integer) (raw))
sizeof: ((201285 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201288 to 1
run: 663 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((201286 integer) (raw))
sizeof: ((201286 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 201289 to 1
run: 664 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 201290 to t
run: 665 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 201255 to t
run: 666 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 667 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((3 integer-address))
setm: ((3 integer-address)) <= 1106
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 201256 to 1106
run: 668 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/buffer-stdin to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: clear-screen/init-fake-terminal/main
run: 669 clear-screen 11: (((jump)) ((-6 offset)))
run: 670 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 671 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 672 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1263 => ((1 byte-address))
setm: ((1 byte-address)) <= 1263
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1263
run: 673 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1263 to #\space
run: 674 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 75 => ((4 integer))
setm: ((4 integer)) <= 75
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 75
run: 675 clear-screen 11: (((jump)) ((-6 offset)))
run: 676 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 677 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 678 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1264 => ((1 byte-address))
setm: ((1 byte-address)) <= 1264
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1264
run: 679 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1264 to #\space
run: 680 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 76 => ((4 integer))
setm: ((4 integer)) <= 76
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 76
run: 681 clear-screen 11: (((jump)) ((-6 offset)))
run: 682 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 683 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 684 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1265 => ((1 byte-address))
setm: ((1 byte-address)) <= 1265
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1265
run: 685 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1265 to #\space
run: 686 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 77 => ((4 integer))
setm: ((4 integer)) <= 77
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 77
run: 687 clear-screen 11: (((jump)) ((-6 offset)))
run: 688 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 689 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 690 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1266 => ((1 byte-address))
setm: ((1 byte-address)) <= 1266
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1266
run: 691 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1266 to #\space
run: 692 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 78 => ((4 integer))
setm: ((4 integer)) <= 78
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 78
run: 693 clear-screen 11: (((jump)) ((-6 offset)))
run: 694 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 695 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 696 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1267 => ((1 byte-address))
setm: ((1 byte-address)) <= 1267
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1267
run: 697 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1267 to #\space
run: 698 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 79 => ((4 integer))
setm: ((4 integer)) <= 79
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 79
run: 699 clear-screen 11: (((jump)) ((-6 offset)))
run: 700 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 701 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 702 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1268 => ((1 byte-address))
setm: ((1 byte-address)) <= 1268
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1268
run: 703 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1268 to #\space
run: 704 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 80 => ((4 integer))
setm: ((4 integer)) <= 80
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 80
run: 705 clear-screen 11: (((jump)) ((-6 offset)))
run: 706 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 707 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 708 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1269 => ((1 byte-address))
setm: ((1 byte-address)) <= 1269
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1269
run: 709 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1269 to #\space
run: 710 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 81 => ((4 integer))
setm: ((4 integer)) <= 81
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 81
run: 711 clear-screen 11: (((jump)) ((-6 offset)))
run: 712 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 713 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 714 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1270 => ((1 byte-address))
setm: ((1 byte-address)) <= 1270
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1270
run: 715 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1270 to #\space
run: 716 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 82 => ((4 integer))
setm: ((4 integer)) <= 82
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 82
run: 717 clear-screen 11: (((jump)) ((-6 offset)))
run: 718 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 719 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 720 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1271 => ((1 byte-address))
setm: ((1 byte-address)) <= 1271
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1271
run: 721 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1271 to #\space
run: 722 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 83 => ((4 integer))
setm: ((4 integer)) <= 83
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 83
run: 723 clear-screen 11: (((jump)) ((-6 offset)))
run: 724 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 725 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 726 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1272 => ((1 byte-address))
setm: ((1 byte-address)) <= 1272
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1272
run: 727 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1272 to #\space
run: 728 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 84 => ((4 integer))
setm: ((4 integer)) <= 84
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 84
run: 729 clear-screen 11: (((jump)) ((-6 offset)))
run: 730 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 731 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 732 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1273 => ((1 byte-address))
setm: ((1 byte-address)) <= 1273
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1273
run: 733 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1273 to #\space
run: 734 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 85 => ((4 integer))
setm: ((4 integer)) <= 85
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 85
run: 735 clear-screen 11: (((jump)) ((-6 offset)))
run: 736 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 737 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 738 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1274 => ((1 byte-address))
setm: ((1 byte-address)) <= 1274
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1274
run: 739 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1274 to #\space
run: 740 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 86 => ((4 integer))
setm: ((4 integer)) <= 86
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 86
run: 741 clear-screen 11: (((jump)) ((-6 offset)))
run: 742 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 743 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 744 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1275 => ((1 byte-address))
setm: ((1 byte-address)) <= 1275
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1275
run: 745 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1275 to #\space
run: 746 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 87 => ((4 integer))
setm: ((4 integer)) <= 87
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 87
run: 747 clear-screen 11: (((jump)) ((-6 offset)))
run: 748 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 749 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 750 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1276 => ((1 byte-address))
setm: ((1 byte-address)) <= 1276
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1276
run: 751 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1276 to #\space
run: 752 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 88 => ((4 integer))
setm: ((4 integer)) <= 88
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 88
run: 753 clear-screen 11: (((jump)) ((-6 offset)))
run: 754 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 755 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 756 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1277 => ((1 byte-address))
setm: ((1 byte-address)) <= 1277
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1277
run: 757 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1277 to #\space
run: 758 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 89 => ((4 integer))
setm: ((4 integer)) <= 89
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 89
run: 759 clear-screen 11: (((jump)) ((-6 offset)))
run: 760 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 761 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 762 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1278 => ((1 byte-address))
setm: ((1 byte-address)) <= 1278
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1278
run: 763 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1278 to #\space
run: 764 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 90 => ((4 integer))
setm: ((4 integer)) <= 90
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 90
run: 765 clear-screen 11: (((jump)) ((-6 offset)))
run: 766 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 767 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 768 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1279 => ((1 byte-address))
setm: ((1 byte-address)) <= 1279
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1279
run: 769 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1279 to #\space
run: 770 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 91 => ((4 integer))
setm: ((4 integer)) <= 91
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 91
run: 771 clear-screen 11: (((jump)) ((-6 offset)))
run: 772 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 773 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 774 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1280 => ((1 byte-address))
setm: ((1 byte-address)) <= 1280
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1280
run: 775 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1280 to #\space
run: 776 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 92 => ((4 integer))
setm: ((4 integer)) <= 92
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 92
run: 777 clear-screen 11: (((jump)) ((-6 offset)))
run: 778 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 779 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 780 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1281 => ((1 byte-address))
setm: ((1 byte-address)) <= 1281
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1281
run: 781 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1281 to #\space
run: 782 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 93 => ((4 integer))
setm: ((4 integer)) <= 93
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 93
run: 783 clear-screen 11: (((jump)) ((-6 offset)))
run: 784 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 785 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 786 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1282 => ((1 byte-address))
setm: ((1 byte-address)) <= 1282
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1282
run: 787 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1282 to #\space
run: 788 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 94 => ((4 integer))
setm: ((4 integer)) <= 94
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 94
run: 789 clear-screen 11: (((jump)) ((-6 offset)))
run: 790 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 791 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 792 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1283 => ((1 byte-address))
setm: ((1 byte-address)) <= 1283
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1283
run: 793 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1283 to #\space
run: 794 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 95 => ((4 integer))
setm: ((4 integer)) <= 95
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 95
run: 795 clear-screen 11: (((jump)) ((-6 offset)))
run: 796 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 797 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 798 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1284 => ((1 byte-address))
setm: ((1 byte-address)) <= 1284
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1284
run: 799 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1284 to #\space
run: 800 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 96 => ((4 integer))
setm: ((4 integer)) <= 96
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 96
run: 801 clear-screen 11: (((jump)) ((-6 offset)))
run: 802 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 803 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 804 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1285 => ((1 byte-address))
setm: ((1 byte-address)) <= 1285
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1285
run: 805 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1285 to #\space
run: 806 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 97 => ((4 integer))
setm: ((4 integer)) <= 97
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 97
run: 807 clear-screen 11: (((jump)) ((-6 offset)))
run: 808 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 809 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 810 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1286 => ((1 byte-address))
setm: ((1 byte-address)) <= 1286
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1286
run: 811 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1286 to #\space
run: 812 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 98 => ((4 integer))
setm: ((4 integer)) <= 98
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 98
run: 813 clear-screen 11: (((jump)) ((-6 offset)))
run: 814 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 815 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 816 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1287 => ((1 byte-address))
setm: ((1 byte-address)) <= 1287
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1287
run: 817 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1287 to #\space
run: 818 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 99 => ((4 integer))
setm: ((4 integer)) <= 99
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 99
run: 819 clear-screen 11: (((jump)) ((-6 offset)))
run: 820 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 821 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 822 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1288 => ((1 byte-address))
setm: ((1 byte-address)) <= 1288
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1288
run: 823 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1288 to #\space
run: 824 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 100 => ((4 integer))
setm: ((4 integer)) <= 100
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 100
run: 825 clear-screen 11: (((jump)) ((-6 offset)))
run: 826 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 827 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 828 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1289 => ((1 byte-address))
setm: ((1 byte-address)) <= 1289
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1289
run: 829 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1289 to #\space
run: 830 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 101 => ((4 integer))
setm: ((4 integer)) <= 101
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 101
run: 831 clear-screen 11: (((jump)) ((-6 offset)))
run: 832 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 833 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 834 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1290 => ((1 byte-address))
setm: ((1 byte-address)) <= 1290
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1290
run: 835 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1290 to #\space
run: 836 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 102 => ((4 integer))
setm: ((4 integer)) <= 102
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 102
run: 837 clear-screen 11: (((jump)) ((-6 offset)))
run: 838 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 839 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 840 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1291 => ((1 byte-address))
setm: ((1 byte-address)) <= 1291
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1291
run: 841 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1291 to #\space
run: 842 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 103 => ((4 integer))
setm: ((4 integer)) <= 103
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 103
run: 843 clear-screen 11: (((jump)) ((-6 offset)))
run: 844 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 845 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 846 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1292 => ((1 byte-address))
setm: ((1 byte-address)) <= 1292
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1292
run: 847 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1292 to #\space
run: 848 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 104 => ((4 integer))
setm: ((4 integer)) <= 104
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 104
run: 849 clear-screen 11: (((jump)) ((-6 offset)))
run: 850 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 851 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 852 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1293 => ((1 byte-address))
setm: ((1 byte-address)) <= 1293
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1293
run: 853 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1293 to #\space
run: 854 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 105 => ((4 integer))
setm: ((4 integer)) <= 105
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 105
run: 855 clear-screen 11: (((jump)) ((-6 offset)))
run: 856 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 857 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 858 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1294 => ((1 byte-address))
setm: ((1 byte-address)) <= 1294
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1294
run: 859 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1294 to #\space
run: 860 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 106 => ((4 integer))
setm: ((4 integer)) <= 106
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 106
run: 861 clear-screen 11: (((jump)) ((-6 offset)))
run: 862 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 863 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 864 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1295 => ((1 byte-address))
setm: ((1 byte-address)) <= 1295
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1295
run: 865 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1295 to #\space
run: 866 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 107 => ((4 integer))
setm: ((4 integer)) <= 107
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 107
run: 867 clear-screen 11: (((jump)) ((-6 offset)))
run: 868 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 869 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 870 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1296 => ((1 byte-address))
setm: ((1 byte-address)) <= 1296
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1296
run: 871 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1296 to #\space
run: 872 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 108 => ((4 integer))
setm: ((4 integer)) <= 108
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 108
run: 873 clear-screen 11: (((jump)) ((-6 offset)))
run: 874 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 875 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 876 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1297 => ((1 byte-address))
setm: ((1 byte-address)) <= 1297
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1297
run: 877 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1297 to #\space
run: 878 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 109 => ((4 integer))
setm: ((4 integer)) <= 109
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 109
run: 879 clear-screen 11: (((jump)) ((-6 offset)))
run: 880 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 881 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 882 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1298 => ((1 byte-address))
setm: ((1 byte-address)) <= 1298
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1298
run: 883 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1298 to #\space
run: 884 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 110 => ((4 integer))
setm: ((4 integer)) <= 110
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 110
run: 885 clear-screen 11: (((jump)) ((-6 offset)))
run: 886 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 887 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 888 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1299 => ((1 byte-address))
setm: ((1 byte-address)) <= 1299
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1299
run: 889 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1299 to #\space
run: 890 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 111 => ((4 integer))
setm: ((4 integer)) <= 111
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 111
run: 891 clear-screen 11: (((jump)) ((-6 offset)))
run: 892 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 893 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 894 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1300 => ((1 byte-address))
setm: ((1 byte-address)) <= 1300
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1300
run: 895 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1300 to #\space
run: 896 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 112 => ((4 integer))
setm: ((4 integer)) <= 112
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 112
run: 897 clear-screen 11: (((jump)) ((-6 offset)))
run: 898 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 899 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 900 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1301 => ((1 byte-address))
setm: ((1 byte-address)) <= 1301
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1301
run: 901 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1301 to #\space
run: 902 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 113 => ((4 integer))
setm: ((4 integer)) <= 113
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 113
run: 903 clear-screen 11: (((jump)) ((-6 offset)))
run: 904 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 905 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 906 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1302 => ((1 byte-address))
setm: ((1 byte-address)) <= 1302
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1302
run: 907 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1302 to #\space
run: 908 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 114 => ((4 integer))
setm: ((4 integer)) <= 114
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 114
run: 909 clear-screen 11: (((jump)) ((-6 offset)))
run: 910 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 911 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 912 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1303 => ((1 byte-address))
setm: ((1 byte-address)) <= 1303
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1303
run: 913 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1303 to #\space
run: 914 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 115 => ((4 integer))
setm: ((4 integer)) <= 115
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 115
run: 915 clear-screen 11: (((jump)) ((-6 offset)))
run: 916 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 917 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 918 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1304 => ((1 byte-address))
setm: ((1 byte-address)) <= 1304
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1304
run: 919 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1304 to #\space
run: 920 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 116 => ((4 integer))
setm: ((4 integer)) <= 116
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 116
run: 921 clear-screen 11: (((jump)) ((-6 offset)))
run: 922 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 923 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 924 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1305 => ((1 byte-address))
setm: ((1 byte-address)) <= 1305
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1305
run: 925 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1305 to #\space
run: 926 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 117 => ((4 integer))
setm: ((4 integer)) <= 117
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 117
run: 927 clear-screen 11: (((jump)) ((-6 offset)))
run: 928 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 929 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 930 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1306 => ((1 byte-address))
setm: ((1 byte-address)) <= 1306
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1306
run: 931 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1306 to #\space
run: 932 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 118 => ((4 integer))
setm: ((4 integer)) <= 118
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 118
run: 933 clear-screen 11: (((jump)) ((-6 offset)))
run: 934 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 935 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 936 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1307 => ((1 byte-address))
setm: ((1 byte-address)) <= 1307
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1307
run: 937 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1307 to #\space
run: 938 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 119 => ((4 integer))
setm: ((4 integer)) <= 119
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 119
run: 939 clear-screen 11: (((jump)) ((-6 offset)))
run: 940 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 941 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 942 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1308 => ((1 byte-address))
setm: ((1 byte-address)) <= 1308
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1308
run: 943 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1308 to #\space
run: 944 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 120 => ((4 integer))
setm: ((4 integer)) <= 120
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 120
run: 945 clear-screen 11: (((jump)) ((-6 offset)))
run: 946 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 947 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 948 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1309 => ((1 byte-address))
setm: ((1 byte-address)) <= 1309
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1309
run: 949 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1309 to #\space
run: 950 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 121 => ((4 integer))
setm: ((4 integer)) <= 121
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 121
run: 951 clear-screen 11: (((jump)) ((-6 offset)))
run: 952 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 953 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 954 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1310 => ((1 byte-address))
setm: ((1 byte-address)) <= 1310
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1310
run: 955 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1310 to #\space
run: 956 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 122 => ((4 integer))
setm: ((4 integer)) <= 122
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 122
run: 957 clear-screen 11: (((jump)) ((-6 offset)))
run: 958 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 959 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 960 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1311 => ((1 byte-address))
setm: ((1 byte-address)) <= 1311
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1311
run: 961 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1311 to #\space
run: 962 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 123 => ((4 integer))
setm: ((4 integer)) <= 123
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 123
run: 963 clear-screen 11: (((jump)) ((-6 offset)))
run: 964 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 965 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 966 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1312 => ((1 byte-address))
setm: ((1 byte-address)) <= 1312
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1312
run: 967 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1312 to #\space
run: 968 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 124 => ((4 integer))
setm: ((4 integer)) <= 124
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 124
run: 969 clear-screen 11: (((jump)) ((-6 offset)))
run: 970 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 971 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 972 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1313 => ((1 byte-address))
setm: ((1 byte-address)) <= 1313
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1313
run: 973 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1313 to #\space
run: 974 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 125 => ((4 integer))
setm: ((4 integer)) <= 125
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 125
run: 975 clear-screen 11: (((jump)) ((-6 offset)))
run: 976 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 977 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 978 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1314 => ((1 byte-address))
setm: ((1 byte-address)) <= 1314
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1314
run: 979 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1314 to #\space
run: 980 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 126 => ((4 integer))
setm: ((4 integer)) <= 126
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 126
run: 981 clear-screen 11: (((jump)) ((-6 offset)))
run: 982 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 983 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 984 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1315 => ((1 byte-address))
setm: ((1 byte-address)) <= 1315
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1315
run: 985 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1315 to #\space
run: 986 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 127 => ((4 integer))
setm: ((4 integer)) <= 127
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 127
run: 987 clear-screen 11: (((jump)) ((-6 offset)))
run: 988 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 989 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 990 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1316 => ((1 byte-address))
setm: ((1 byte-address)) <= 1316
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1316
run: 991 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1316 to #\space
run: 992 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 128 => ((4 integer))
setm: ((4 integer)) <= 128
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 128
run: 993 clear-screen 11: (((jump)) ((-6 offset)))
run: 994 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 995 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 996 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1317 => ((1 byte-address))
setm: ((1 byte-address)) <= 1317
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1317
run: 997 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1317 to #\space
run: 998 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 129 => ((4 integer))
setm: ((4 integer)) <= 129
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 129
run: 999 clear-screen 11: (((jump)) ((-6 offset)))
run: 1000 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1001 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1002 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1318 => ((1 byte-address))
setm: ((1 byte-address)) <= 1318
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1318
run: 1003 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1318 to #\space
run: 1004 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 130 => ((4 integer))
setm: ((4 integer)) <= 130
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 130
run: 1005 clear-screen 11: (((jump)) ((-6 offset)))
run: 1006 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1007 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1008 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1319 => ((1 byte-address))
setm: ((1 byte-address)) <= 1319
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1319
run: 1009 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1319 to #\space
run: 1010 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 131 => ((4 integer))
setm: ((4 integer)) <= 131
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 131
run: 1011 clear-screen 11: (((jump)) ((-6 offset)))
run: 1012 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1013 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1014 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1320 => ((1 byte-address))
setm: ((1 byte-address)) <= 1320
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1320
run: 1015 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1320 to #\space
run: 1016 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 132 => ((4 integer))
setm: ((4 integer)) <= 132
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 132
run: 1017 clear-screen 11: (((jump)) ((-6 offset)))
run: 1018 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1019 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1020 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1321 => ((1 byte-address))
setm: ((1 byte-address)) <= 1321
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1321
run: 1021 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1321 to #\space
run: 1022 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 133 => ((4 integer))
setm: ((4 integer)) <= 133
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 133
run: 1023 clear-screen 11: (((jump)) ((-6 offset)))
run: 1024 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1025 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1026 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1322 => ((1 byte-address))
setm: ((1 byte-address)) <= 1322
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1322
run: 1027 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1322 to #\space
run: 1028 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 134 => ((4 integer))
setm: ((4 integer)) <= 134
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 134
run: 1029 clear-screen 11: (((jump)) ((-6 offset)))
run: 1030 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1031 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1032 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1323 => ((1 byte-address))
setm: ((1 byte-address)) <= 1323
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1323
run: 1033 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1323 to #\space
run: 1034 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 135 => ((4 integer))
setm: ((4 integer)) <= 135
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 135
run: 1035 clear-screen 11: (((jump)) ((-6 offset)))
run: 1036 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1037 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1038 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1324 => ((1 byte-address))
setm: ((1 byte-address)) <= 1324
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1324
run: 1039 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1324 to #\space
run: 1040 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 136 => ((4 integer))
setm: ((4 integer)) <= 136
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 136
run: 1041 clear-screen 11: (((jump)) ((-6 offset)))
run: 1042 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1043 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1044 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1325 => ((1 byte-address))
setm: ((1 byte-address)) <= 1325
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1325
run: 1045 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1325 to #\space
run: 1046 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 137 => ((4 integer))
setm: ((4 integer)) <= 137
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 137
run: 1047 clear-screen 11: (((jump)) ((-6 offset)))
run: 1048 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1049 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1050 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1326 => ((1 byte-address))
setm: ((1 byte-address)) <= 1326
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1326
run: 1051 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1326 to #\space
run: 1052 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 138 => ((4 integer))
setm: ((4 integer)) <= 138
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 138
run: 1053 clear-screen 11: (((jump)) ((-6 offset)))
run: 1054 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1055 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1056 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1327 => ((1 byte-address))
setm: ((1 byte-address)) <= 1327
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1327
run: 1057 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1327 to #\space
run: 1058 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 139 => ((4 integer))
setm: ((4 integer)) <= 139
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 139
run: 1059 clear-screen 11: (((jump)) ((-6 offset)))
run: 1060 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1061 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1062 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1328 => ((1 byte-address))
setm: ((1 byte-address)) <= 1328
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1328
run: 1063 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1328 to #\space
run: 1064 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 140 => ((4 integer))
setm: ((4 integer)) <= 140
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 140
run: 1065 clear-screen 11: (((jump)) ((-6 offset)))
run: 1066 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1067 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1068 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1329 => ((1 byte-address))
setm: ((1 byte-address)) <= 1329
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1329
run: 1069 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1329 to #\space
run: 1070 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 141 => ((4 integer))
setm: ((4 integer)) <= 141
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 141
run: 1071 clear-screen 11: (((jump)) ((-6 offset)))
run: 1072 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1073 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1074 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1330 => ((1 byte-address))
setm: ((1 byte-address)) <= 1330
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1330
run: 1075 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1330 to #\space
run: 1076 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 142 => ((4 integer))
setm: ((4 integer)) <= 142
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 142
run: 1077 clear-screen 11: (((jump)) ((-6 offset)))
run: 1078 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1079 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1080 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1331 => ((1 byte-address))
setm: ((1 byte-address)) <= 1331
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1331
run: 1081 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1331 to #\space
run: 1082 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 143 => ((4 integer))
setm: ((4 integer)) <= 143
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 143
run: 1083 clear-screen 11: (((jump)) ((-6 offset)))
run: 1084 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1085 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1086 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1332 => ((1 byte-address))
setm: ((1 byte-address)) <= 1332
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1332
run: 1087 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1332 to #\space
run: 1088 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 144 => ((4 integer))
setm: ((4 integer)) <= 144
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 144
run: 1089 clear-screen 11: (((jump)) ((-6 offset)))
run: 1090 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1091 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1092 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1333 => ((1 byte-address))
setm: ((1 byte-address)) <= 1333
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1333
run: 1093 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1333 to #\space
run: 1094 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 145 => ((4 integer))
setm: ((4 integer)) <= 145
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 145
run: 1095 clear-screen 11: (((jump)) ((-6 offset)))
run: 1096 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1097 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1098 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1334 => ((1 byte-address))
setm: ((1 byte-address)) <= 1334
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1334
run: 1099 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1334 to #\space
run: 1100 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 146 => ((4 integer))
setm: ((4 integer)) <= 146
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 146
run: 1101 clear-screen 11: (((jump)) ((-6 offset)))
run: 1102 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1103 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1104 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1335 => ((1 byte-address))
setm: ((1 byte-address)) <= 1335
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1335
run: 1105 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1335 to #\space
run: 1106 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 147 => ((4 integer))
setm: ((4 integer)) <= 147
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 147
run: 1107 clear-screen 11: (((jump)) ((-6 offset)))
run: 1108 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1109 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1110 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1336 => ((1 byte-address))
setm: ((1 byte-address)) <= 1336
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1336
run: 1111 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1336 to #\space
run: 1112 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 148 => ((4 integer))
setm: ((4 integer)) <= 148
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 148
run: 1113 clear-screen 11: (((jump)) ((-6 offset)))
run: 1114 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1115 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1116 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1337 => ((1 byte-address))
setm: ((1 byte-address)) <= 1337
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1337
run: 1117 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1337 to #\space
run: 1118 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 149 => ((4 integer))
setm: ((4 integer)) <= 149
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 149
run: 1119 clear-screen 11: (((jump)) ((-6 offset)))
run: 1120 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1121 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1122 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1338 => ((1 byte-address))
setm: ((1 byte-address)) <= 1338
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1338
run: 1123 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1338 to #\space
run: 1124 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 150 => ((4 integer))
setm: ((4 integer)) <= 150
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 150
run: 1125 clear-screen 11: (((jump)) ((-6 offset)))
run: 1126 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1127 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1128 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1339 => ((1 byte-address))
setm: ((1 byte-address)) <= 1339
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1339
run: 1129 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1339 to #\space
run: 1130 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 151 => ((4 integer))
setm: ((4 integer)) <= 151
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 151
run: 1131 clear-screen 11: (((jump)) ((-6 offset)))
run: 1132 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1133 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1134 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1340 => ((1 byte-address))
setm: ((1 byte-address)) <= 1340
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1340
run: 1135 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1340 to #\space
run: 1136 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 152 => ((4 integer))
setm: ((4 integer)) <= 152
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 152
run: 1137 clear-screen 11: (((jump)) ((-6 offset)))
run: 1138 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1139 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1140 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1341 => ((1 byte-address))
setm: ((1 byte-address)) <= 1341
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1341
run: 1141 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1341 to #\space
run: 1142 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 153 => ((4 integer))
setm: ((4 integer)) <= 153
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 153
run: 1143 clear-screen 11: (((jump)) ((-6 offset)))
run: 1144 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1145 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1146 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1342 => ((1 byte-address))
setm: ((1 byte-address)) <= 1342
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1342
run: 1147 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1342 to #\space
run: 1148 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 154 => ((4 integer))
setm: ((4 integer)) <= 154
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 154
run: 1149 clear-screen 11: (((jump)) ((-6 offset)))
run: 1150 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1151 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1152 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1343 => ((1 byte-address))
setm: ((1 byte-address)) <= 1343
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1343
run: 1153 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1343 to #\space
run: 1154 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 155 => ((4 integer))
setm: ((4 integer)) <= 155
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 155
run: 1155 clear-screen 11: (((jump)) ((-6 offset)))
run: 1156 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1157 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1158 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1344 => ((1 byte-address))
setm: ((1 byte-address)) <= 1344
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1344
run: 1159 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1344 to #\space
run: 1160 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 156 => ((4 integer))
setm: ((4 integer)) <= 156
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 156
run: 1161 clear-screen 11: (((jump)) ((-6 offset)))
run: 1162 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1163 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1164 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1345 => ((1 byte-address))
setm: ((1 byte-address)) <= 1345
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1345
run: 1165 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1345 to #\space
run: 1166 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 157 => ((4 integer))
setm: ((4 integer)) <= 157
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 157
run: 1167 clear-screen 11: (((jump)) ((-6 offset)))
run: 1168 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
schedule: scheduling clear-screen/init-fake-terminal/main for further processing
schedule: write/send-keys-to-stdin
run: 1169 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1108
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 101193 to 1108
run: 1170 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((7 integer-address))
setm: ((7 integer-address)) <= 1106
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 101194 to 1106
run: 1171 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1111 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1111
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 101195 to 1111
run: 1172 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\o . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\o . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1111 to character
setm: ((8 tagged-value-address) (deref)): setting 1112 to #\o
run: 1173 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 2
run: 1174 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 101196 to 2
run: 1175 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101197 to nil
run: 1176 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 1177 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 0
run: 1178 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (1 0 1108 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (1 0 1108 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1105 to 1
setm: ((2 channel-address) (deref)): setting 1106 to 0
setm: ((2 channel-address) (deref)): setting 1107 to 1108
run: 1179 send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
m: ((3 character))
sizeof: ((3 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101007 to nil
run: 1180 send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1181 send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: 1182 send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 1183 read-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101279 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1184 read-key 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1072)
run: 1072 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1072
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 101281 to 1072
run: 1185 read-key 2: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 1186 read-key 3: (((2 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1072 => ((2 integer-address))
setm: ((2 integer-address)) <= 1072
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 101282 to 1072
run: 1187 read-key 4: (((3 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1073 string-address) (raw))
sizeof: ((1073 string-address) (raw))
run: 1031 => ((3 string-address))
setm: ((3 string-address)) <= 1031
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 101283 to 1031
run: 1188 read-key 5: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101284 to 9
run: 1189 read-key 6: (((5 boolean)) <- ((greater-or-equal)) ((2 integer-address) (deref)) ((4 integer)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 101285 to nil
run: 1190 read-key 7: (((jump-unless)) ((5 boolean)) ((1 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1191 read-key 9: (((6 character)) <- ((index)) ((3 string-address) (deref)) ((2 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
array-len: ((1031 string) (raw))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
sizeof: ((_ byte))
m: ((1034 byte) (raw))
sizeof: ((1034 byte) (raw))
run: #\o => ((6 character))
setm: ((6 character)) <= #\o
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 101286 to #\o
run: 1192 read-key 10: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 3 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 3
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1072 to 3
run: 1193 read-key 11: (((reply)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
reply: (((6 character))) (((3 character)))
reply: #\o => ((3 character))
setm: ((3 character)) <= #\o
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101004 to #\o
run: 1194 send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
m: ((3 character))
sizeof: ((3 character))
run: 1195 send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\o)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\o))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 101005 to character
setm: ((4 tagged-value)): setting 101006 to #\o
run: 1196 send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1197 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101310 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1198 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105 #(tagged record (character #\o . nil)))
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101312 to 1105
run: 1199 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1105 #(tagged record (character #\o . nil)))
run: #(tagged record (character #\o . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\o . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101313 to character
setm: ((2 tagged-value)): setting 101314 to #\o
run: 1200 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1201 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101341 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1202 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1108 . nil)))
run: #(tagged record (1 0 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101343 to 1
setm: ((1 channel)): setting 101344 to 0
setm: ((1 channel)): setting 101345 to 1108
run: 1203 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101344 integer) (raw))
sizeof: ((101344 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101346 to 0
run: 1204 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101346 to 1
run: 1205 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1206 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101372 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1207 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1108 . nil)))
run: #(tagged record (1 0 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101374 to 1
setm: ((1 channel)): setting 101375 to 0
setm: ((1 channel)): setting 101376 to 1108
run: 1208 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((101376 tagged-value-array-address) (raw))
sizeof: ((101376 tagged-value-array-address) (raw))
run: 1108 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1108
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 101377 to 1108
run: 1209 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101378 to 2
run: 1210 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101347 to 2
run: 1211 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101348 to t
run: 1212 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1213 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101343 integer) (raw))
sizeof: ((101343 integer) (raw))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101349 to 1
run: 1214 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 101350 to t
run: 1215 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101315 to t
run: 1216 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1217 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((5 integer-address))
setm: ((5 integer-address)) <= 1105
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 101316 to 1105
run: 1218 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-stdin
schedule: clear-screen/init-fake-terminal/main
run: 1219 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1220 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1346 => ((1 byte-address))
setm: ((1 byte-address)) <= 1346
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1346
run: 1221 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1346 to #\space
run: 1222 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 158 => ((4 integer))
setm: ((4 integer)) <= 158
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 158
run: 1223 clear-screen 11: (((jump)) ((-6 offset)))
run: 1224 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1225 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1226 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1347 => ((1 byte-address))
setm: ((1 byte-address)) <= 1347
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1347
run: 1227 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1347 to #\space
run: 1228 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 159 => ((4 integer))
setm: ((4 integer)) <= 159
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 159
run: 1229 clear-screen 11: (((jump)) ((-6 offset)))
run: 1230 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1231 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1232 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1348 => ((1 byte-address))
setm: ((1 byte-address)) <= 1348
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1348
run: 1233 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1348 to #\space
run: 1234 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 160 => ((4 integer))
setm: ((4 integer)) <= 160
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 160
run: 1235 clear-screen 11: (((jump)) ((-6 offset)))
run: 1236 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1237 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1238 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1349 => ((1 byte-address))
setm: ((1 byte-address)) <= 1349
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1349
run: 1239 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1349 to #\space
run: 1240 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 161 => ((4 integer))
setm: ((4 integer)) <= 161
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 161
run: 1241 clear-screen 11: (((jump)) ((-6 offset)))
run: 1242 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1243 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1244 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1350 => ((1 byte-address))
setm: ((1 byte-address)) <= 1350
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1350
run: 1245 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1350 to #\space
run: 1246 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 162 => ((4 integer))
setm: ((4 integer)) <= 162
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 162
run: 1247 clear-screen 11: (((jump)) ((-6 offset)))
run: 1248 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1249 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1250 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1351 => ((1 byte-address))
setm: ((1 byte-address)) <= 1351
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1351
run: 1251 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1351 to #\space
run: 1252 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 163 => ((4 integer))
setm: ((4 integer)) <= 163
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 163
run: 1253 clear-screen 11: (((jump)) ((-6 offset)))
run: 1254 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1255 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1256 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1352 => ((1 byte-address))
setm: ((1 byte-address)) <= 1352
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1352
run: 1257 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1352 to #\space
run: 1258 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 164 => ((4 integer))
setm: ((4 integer)) <= 164
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 164
run: 1259 clear-screen 11: (((jump)) ((-6 offset)))
run: 1260 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1261 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1262 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1353 => ((1 byte-address))
setm: ((1 byte-address)) <= 1353
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1353
run: 1263 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1353 to #\space
run: 1264 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 165 => ((4 integer))
setm: ((4 integer)) <= 165
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 165
run: 1265 clear-screen 11: (((jump)) ((-6 offset)))
run: 1266 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1267 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1268 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1354 => ((1 byte-address))
setm: ((1 byte-address)) <= 1354
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1354
run: 1269 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1354 to #\space
run: 1270 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 166 => ((4 integer))
setm: ((4 integer)) <= 166
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 166
run: 1271 clear-screen 11: (((jump)) ((-6 offset)))
run: 1272 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1273 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1274 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1355 => ((1 byte-address))
setm: ((1 byte-address)) <= 1355
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1355
run: 1275 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1355 to #\space
run: 1276 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 167 => ((4 integer))
setm: ((4 integer)) <= 167
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 167
run: 1277 clear-screen 11: (((jump)) ((-6 offset)))
run: 1278 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1279 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1280 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1356 => ((1 byte-address))
setm: ((1 byte-address)) <= 1356
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1356
run: 1281 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1356 to #\space
run: 1282 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 168 => ((4 integer))
setm: ((4 integer)) <= 168
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 168
run: 1283 clear-screen 11: (((jump)) ((-6 offset)))
run: 1284 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1285 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1286 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1357 => ((1 byte-address))
setm: ((1 byte-address)) <= 1357
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1357
run: 1287 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1357 to #\space
run: 1288 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 169 => ((4 integer))
setm: ((4 integer)) <= 169
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 169
run: 1289 clear-screen 11: (((jump)) ((-6 offset)))
run: 1290 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1291 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1292 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1358 => ((1 byte-address))
setm: ((1 byte-address)) <= 1358
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1358
run: 1293 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1358 to #\space
run: 1294 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 170 => ((4 integer))
setm: ((4 integer)) <= 170
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 170
run: 1295 clear-screen 11: (((jump)) ((-6 offset)))
run: 1296 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1297 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1298 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1359 => ((1 byte-address))
setm: ((1 byte-address)) <= 1359
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1359
run: 1299 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1359 to #\space
run: 1300 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 171 => ((4 integer))
setm: ((4 integer)) <= 171
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 171
run: 1301 clear-screen 11: (((jump)) ((-6 offset)))
run: 1302 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1303 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1304 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1360 => ((1 byte-address))
setm: ((1 byte-address)) <= 1360
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1360
run: 1305 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1360 to #\space
run: 1306 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 172 => ((4 integer))
setm: ((4 integer)) <= 172
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 172
run: 1307 clear-screen 11: (((jump)) ((-6 offset)))
run: 1308 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1309 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1310 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1361 => ((1 byte-address))
setm: ((1 byte-address)) <= 1361
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1361
run: 1311 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1361 to #\space
run: 1312 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 173 => ((4 integer))
setm: ((4 integer)) <= 173
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 173
run: 1313 clear-screen 11: (((jump)) ((-6 offset)))
run: 1314 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1315 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1316 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1362 => ((1 byte-address))
setm: ((1 byte-address)) <= 1362
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1362
run: 1317 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1362 to #\space
run: 1318 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 174 => ((4 integer))
setm: ((4 integer)) <= 174
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 174
run: 1319 clear-screen 11: (((jump)) ((-6 offset)))
run: 1320 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1321 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1322 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1363 => ((1 byte-address))
setm: ((1 byte-address)) <= 1363
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1363
run: 1323 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1363 to #\space
run: 1324 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 175 => ((4 integer))
setm: ((4 integer)) <= 175
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 175
run: 1325 clear-screen 11: (((jump)) ((-6 offset)))
run: 1326 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1327 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1328 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1364 => ((1 byte-address))
setm: ((1 byte-address)) <= 1364
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1364
run: 1329 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1364 to #\space
run: 1330 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 176 => ((4 integer))
setm: ((4 integer)) <= 176
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 176
run: 1331 clear-screen 11: (((jump)) ((-6 offset)))
run: 1332 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1333 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1334 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1365 => ((1 byte-address))
setm: ((1 byte-address)) <= 1365
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1365
run: 1335 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1365 to #\space
run: 1336 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 177 => ((4 integer))
setm: ((4 integer)) <= 177
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 177
run: 1337 clear-screen 11: (((jump)) ((-6 offset)))
run: 1338 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1339 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1340 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1366 => ((1 byte-address))
setm: ((1 byte-address)) <= 1366
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1366
run: 1341 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1366 to #\space
run: 1342 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 178 => ((4 integer))
setm: ((4 integer)) <= 178
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 178
run: 1343 clear-screen 11: (((jump)) ((-6 offset)))
run: 1344 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1345 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1346 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1367 => ((1 byte-address))
setm: ((1 byte-address)) <= 1367
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1367
run: 1347 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1367 to #\space
run: 1348 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 179 => ((4 integer))
setm: ((4 integer)) <= 179
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 179
run: 1349 clear-screen 11: (((jump)) ((-6 offset)))
run: 1350 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1351 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1352 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1368 => ((1 byte-address))
setm: ((1 byte-address)) <= 1368
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1368
run: 1353 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1368 to #\space
run: 1354 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 180 => ((4 integer))
setm: ((4 integer)) <= 180
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 180
run: 1355 clear-screen 11: (((jump)) ((-6 offset)))
run: 1356 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1357 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1358 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1369 => ((1 byte-address))
setm: ((1 byte-address)) <= 1369
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1369
run: 1359 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1369 to #\space
run: 1360 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 181 => ((4 integer))
setm: ((4 integer)) <= 181
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 181
run: 1361 clear-screen 11: (((jump)) ((-6 offset)))
run: 1362 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1363 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1364 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1370 => ((1 byte-address))
setm: ((1 byte-address)) <= 1370
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1370
run: 1365 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1370 to #\space
run: 1366 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 182 => ((4 integer))
setm: ((4 integer)) <= 182
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 182
run: 1367 clear-screen 11: (((jump)) ((-6 offset)))
run: 1368 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1369 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1370 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1371 => ((1 byte-address))
setm: ((1 byte-address)) <= 1371
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1371
run: 1371 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1371 to #\space
run: 1372 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 183 => ((4 integer))
setm: ((4 integer)) <= 183
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 183
run: 1373 clear-screen 11: (((jump)) ((-6 offset)))
run: 1374 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1375 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1376 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1372 => ((1 byte-address))
setm: ((1 byte-address)) <= 1372
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1372
run: 1377 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1372 to #\space
run: 1378 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 184 => ((4 integer))
setm: ((4 integer)) <= 184
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 184
run: 1379 clear-screen 11: (((jump)) ((-6 offset)))
run: 1380 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1381 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1382 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1373 => ((1 byte-address))
setm: ((1 byte-address)) <= 1373
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1373
run: 1383 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1373 to #\space
run: 1384 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 185 => ((4 integer))
setm: ((4 integer)) <= 185
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 185
run: 1385 clear-screen 11: (((jump)) ((-6 offset)))
run: 1386 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1387 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1388 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1374 => ((1 byte-address))
setm: ((1 byte-address)) <= 1374
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1374
run: 1389 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1374 to #\space
run: 1390 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 186 => ((4 integer))
setm: ((4 integer)) <= 186
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 186
run: 1391 clear-screen 11: (((jump)) ((-6 offset)))
run: 1392 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1393 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1394 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1375 => ((1 byte-address))
setm: ((1 byte-address)) <= 1375
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1375
run: 1395 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1375 to #\space
run: 1396 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 187 => ((4 integer))
setm: ((4 integer)) <= 187
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 187
run: 1397 clear-screen 11: (((jump)) ((-6 offset)))
run: 1398 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1399 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1400 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1376 => ((1 byte-address))
setm: ((1 byte-address)) <= 1376
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1376
run: 1401 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1376 to #\space
run: 1402 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 188 => ((4 integer))
setm: ((4 integer)) <= 188
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 188
run: 1403 clear-screen 11: (((jump)) ((-6 offset)))
run: 1404 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1405 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1406 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1377 => ((1 byte-address))
setm: ((1 byte-address)) <= 1377
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1377
run: 1407 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1377 to #\space
run: 1408 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 189 => ((4 integer))
setm: ((4 integer)) <= 189
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 189
run: 1409 clear-screen 11: (((jump)) ((-6 offset)))
run: 1410 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1411 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1412 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1378 => ((1 byte-address))
setm: ((1 byte-address)) <= 1378
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1378
run: 1413 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1378 to #\space
run: 1414 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 190 => ((4 integer))
setm: ((4 integer)) <= 190
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 190
run: 1415 clear-screen 11: (((jump)) ((-6 offset)))
run: 1416 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1417 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1418 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1379 => ((1 byte-address))
setm: ((1 byte-address)) <= 1379
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1379
run: 1419 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1379 to #\space
run: 1420 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 191 => ((4 integer))
setm: ((4 integer)) <= 191
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 191
run: 1421 clear-screen 11: (((jump)) ((-6 offset)))
run: 1422 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1423 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1424 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1380 => ((1 byte-address))
setm: ((1 byte-address)) <= 1380
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1380
run: 1425 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1380 to #\space
run: 1426 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 192 => ((4 integer))
setm: ((4 integer)) <= 192
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 192
run: 1427 clear-screen 11: (((jump)) ((-6 offset)))
run: 1428 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1429 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1430 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1381 => ((1 byte-address))
setm: ((1 byte-address)) <= 1381
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1381
run: 1431 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1381 to #\space
run: 1432 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 193 => ((4 integer))
setm: ((4 integer)) <= 193
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 193
run: 1433 clear-screen 11: (((jump)) ((-6 offset)))
run: 1434 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1435 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1436 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1382 => ((1 byte-address))
setm: ((1 byte-address)) <= 1382
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1382
run: 1437 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1382 to #\space
run: 1438 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 194 => ((4 integer))
setm: ((4 integer)) <= 194
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 194
run: 1439 clear-screen 11: (((jump)) ((-6 offset)))
run: 1440 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1441 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1442 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1383 => ((1 byte-address))
setm: ((1 byte-address)) <= 1383
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1383
run: 1443 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1383 to #\space
run: 1444 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 195 => ((4 integer))
setm: ((4 integer)) <= 195
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 195
run: 1445 clear-screen 11: (((jump)) ((-6 offset)))
run: 1446 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1447 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1448 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1384 => ((1 byte-address))
setm: ((1 byte-address)) <= 1384
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1384
run: 1449 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1384 to #\space
run: 1450 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 196 => ((4 integer))
setm: ((4 integer)) <= 196
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 196
run: 1451 clear-screen 11: (((jump)) ((-6 offset)))
run: 1452 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1453 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1454 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1385 => ((1 byte-address))
setm: ((1 byte-address)) <= 1385
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1385
run: 1455 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1385 to #\space
run: 1456 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 197 => ((4 integer))
setm: ((4 integer)) <= 197
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 197
run: 1457 clear-screen 11: (((jump)) ((-6 offset)))
run: 1458 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1459 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1460 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1386 => ((1 byte-address))
setm: ((1 byte-address)) <= 1386
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1386
run: 1461 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1386 to #\space
run: 1462 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 198 => ((4 integer))
setm: ((4 integer)) <= 198
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 198
run: 1463 clear-screen 11: (((jump)) ((-6 offset)))
run: 1464 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1465 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1466 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1387 => ((1 byte-address))
setm: ((1 byte-address)) <= 1387
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1387
run: 1467 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1387 to #\space
run: 1468 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 199 => ((4 integer))
setm: ((4 integer)) <= 199
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 199
run: 1469 clear-screen 11: (((jump)) ((-6 offset)))
run: 1470 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to nil
run: 1471 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1472 clear-screen 8: (((1 byte-address)) <- ((index-address)) ((2 string-address) (deref)) ((4 integer)))
m: ((4 integer))
sizeof: ((4 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1388 => ((1 byte-address))
setm: ((1 byte-address)) <= 1388
setm: size of ((1 byte-address)) is 1
setm: ((1 byte-address)): setting 1391 to 1388
run: 1473 clear-screen 9: (((1 byte-address) (deref)) <- ((copy)) ((  literal)))
run: #\space => ((1 byte-address) (deref))
setm: ((1 byte-address) (deref)) <= #\space
setm: size of ((1 byte-address) (deref)) is 1
setm: ((1 byte-address) (deref)): setting 1388 to #\space
run: 1474 clear-screen 10: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 200 => ((4 integer))
setm: ((4 integer)) <= 200
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 1394 to 200
run: 1475 clear-screen 11: (((jump)) ((-6 offset)))
run: 1476 clear-screen 6: (((5 boolean)) <- ((greater-or-equal)) ((4 integer)) ((3 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((3 integer))
sizeof: ((3 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 1395 to t
run: 1477 clear-screen 7: (((jump-if)) ((5 boolean)) ((4 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1478 clear-screen 12: (((reply)))
reply: nil nil
run: 1479 init-fake-terminal 14: (((reply)) ((1 terminal-address)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
reply: (((1 terminal-address))) (((6 terminal-address)))
reply: 1183 => ((6 terminal-address))
setm: ((6 terminal-address)) <= 1183
setm: size of ((6 terminal-address)) is 1
setm: ((6 terminal-address)): setting 1007 to 1183
run: 1480 main 8: (((5 string-address) (raw)) <- ((get)) ((6 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1187 string-address) (raw))
sizeof: ((1187 string-address) (raw))
run: 1188 => ((5 string-address) (raw))
setm: ((5 string-address) (raw)) <= 1188
setm: size of ((5 string-address) (raw)) is 1
setm: ((5 string-address) (raw)): setting 5 to 1188
run: 1481 main 9: (((fork-helper)) ((send-prints-to-stdout fn)) ((nil literal) (globals)) ((nil literal) (limit)) ((6 terminal-address)) ((4 channel-address)))
m: ((6 terminal-address))
sizeof: ((6 terminal-address))
m: ((4 channel-address))
sizeof: ((4 channel-address))
run: 1482 main 10: (((sleep)) ((until-routine-done literal)) ((5 integer) (routine)))
m: ((5 integer) (routine))
sizeof: ((5 integer) (routine))
schedule: pushing main to sleep queue
schedule: read/buffer-stdin
run: 1483 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((4 integer-address))
setm: ((4 integer-address)) <= 1105
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 201257 to 1105
run: 1484 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1108
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 201258 to 1108
run: 1485 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1111 tagged-value) (raw))
sizeof: ((1111 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\o . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\o . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 201259 to character
setm: ((6 tagged-value)): setting 201260 to #\o
run: 1486 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 2
run: 1487 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 201261 to 2
run: 1488 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 201262 to nil
run: 1489 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 1490 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 0
run: 1491 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((4 tagged-value)) ((1 channel-address) (deref)))
reply: #(tagged record (character #\o . nil)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\o . nil))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 201005 to character
setm: ((4 tagged-value)): setting 201006 to #\o
reply: #(tagged record (0 0 1108 . nil)) => ((1 channel-address) (deref))
setm: ((1 channel-address) (deref)) <= #(tagged record (0 0 1108 . nil))
setm: size of ((1 channel-address) (deref)) is 3
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref)): setting 1105 to 0
setm: ((1 channel-address) (deref)): setting 1106 to 0
setm: ((1 channel-address) (deref)): setting 1107 to 1108
run: 1492 buffer-stdin 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1493 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201314 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1494 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 201345 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 201345
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 201316 to 201345
run: 1495 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\o . nil)) character)
run: #(tagged record (character #\o . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\o . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 201345 to character
setm: ((1 tagged-value-address) (deref)): setting 201346 to #\o
run: 1496 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\o . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 201317 to character
run: 1497 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((201345 type) (raw))
sizeof: ((201345 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 201318 to character
run: 1498 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 201319 to t
run: 1499 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1500 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((201346 location) (raw))
sizeof: ((201346 location) (raw))
run: #\o => ((5 location))
setm: ((5 location)) <= #\o
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 201320 to #\o
run: 1501 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((6 character)))
reply: #\o => ((6 character))
setm: ((6 character)) <= #\o
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\o
run: 1502 buffer-stdin 6: (((assert)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 1503 buffer-stdin 7: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
m: ((3 buffer-address))
sizeof: ((3 buffer-address))
m: ((6 character))
sizeof: ((6 character))
run: 1504 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201347 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1505 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\o)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 201349 to 201062
run: 1506 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\o)
run: #\o => ((2 character))
setm: ((2 character)) <= #\o
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 201350 to #\o
run: 1507 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 1508 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201378 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1509 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 201380 to 201062
run: 1510 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((201062 integer) (raw))
sizeof: ((201062 integer) (raw))
run: 1 => ((2 integer))
setm: ((2 integer)) <= 1
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 201381 to 1
run: 1511 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((3 string-address))
setm: ((3 string-address)) <= 201064
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 201382 to 201064
run: 1512 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201383 to 30
run: 1513 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 201384 to nil
run: 1514 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 201351 to nil
run: 1515 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 1516 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 201062 => ((4 integer-address))
setm: ((4 integer-address)) <= 201062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 201352 to 201062
run: 1517 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((5 string-address))
setm: ((5 string-address)) <= 201064
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 201353 to 201064
run: 1518 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
run: 201066 => ((6 byte-address))
setm: ((6 byte-address)) <= 201066
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 201354 to 201066
run: 1519 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\o => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\o
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 201066 to #\o
run: 1520 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 201062 to 2
run: 1521 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((3 buffer-address)))
reply: 201062 => ((3 buffer-address))
setm: ((3 buffer-address)) <= 201062
setm: size of ((3 buffer-address)) is 1
setm: ((3 buffer-address)): setting 201004 to 201062
run: 1522 buffer-stdin 8: (((7 string-address)) <- ((get)) ((3 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((7 string-address))
setm: ((7 string-address)) <= 201064
setm: size of ((7 string-address)) is 1
setm: ((7 string-address)): setting 201008 to 201064
run: 1523 buffer-stdin 9: (((8 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 201009 to nil
run: 1524 buffer-stdin 10: (((jump-if)) ((8 boolean)) ((3 offset)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 1525 buffer-stdin 11: (((9 boolean)) <- ((equal)) ((6 character)) ((  literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 201010 to nil
run: 1526 buffer-stdin 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 1527 buffer-stdin 13: (((jump)) ((-10 offset)))
run: 1528 buffer-stdin 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 1529 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201409 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1530 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105)
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 201411 to 1105
run: 1531 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1532 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201440 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1533 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1108 . nil)))
run: #(tagged record (0 0 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 201442 to 0
setm: ((1 channel)): setting 201443 to 0
setm: ((1 channel)): setting 201444 to 1108
run: 1534 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((201442 integer) (raw))
sizeof: ((201442 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201445 to 0
run: 1535 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((201443 integer) (raw))
sizeof: ((201443 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 201446 to 0
run: 1536 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 201447 to t
run: 1537 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 201412 to t
run: 1538 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 1539 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((3 integer-address))
setm: ((3 integer-address)) <= 1106
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 201413 to 1106
run: 1540 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/buffer-stdin to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: send-prints-to-stdout
run: 1541 send-prints-to-stdout 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301000 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1542 send-prints-to-stdout 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1183 1144)
run: 1183 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1183
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 301002 to 1183
run: 1543 send-prints-to-stdout 2: (((2 channel-address)) <- ((next-input)))
arg: nil 1 (1183 1144)
run: 1144 => ((2 channel-address))
setm: ((2 channel-address)) <= 1144
setm: size of ((2 channel-address)) is 1
setm: ((2 channel-address)): setting 301003 to 1144
run: 1544 send-prints-to-stdout 3: (((3 tagged-value)) ((2 channel-address) (deref)) <- ((read)) ((2 channel-address)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
run: 1545 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301031 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1546 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1144)
run: 1144 => ((1 channel-address))
setm: ((1 channel-address)) <= 1144
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 301033 to 1144
run: 1547 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1548 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301062 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1549 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1147 . nil)))
run: #(tagged record (0 0 1147 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1147 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 301064 to 0
setm: ((1 channel)): setting 301065 to 0
setm: ((1 channel)): setting 301066 to 1147
run: 1550 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((301064 integer) (raw))
sizeof: ((301064 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 301067 to 0
run: 1551 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((301065 integer) (raw))
sizeof: ((301065 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 301068 to 0
run: 1552 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 301069 to t
run: 1553 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 301034 to t
run: 1554 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 1555 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1145 => ((3 integer-address))
setm: ((3 integer-address)) <= 1145
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 301035 to 1145
run: 1556 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/send-prints-to-stdout to sleep queue
schedule: write/send-keys-to-stdin
run: 1557 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1108
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 101317 to 1108
run: 1558 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((7 integer-address))
setm: ((7 integer-address)) <= 1106
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 101318 to 1106
run: 1559 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1109 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1109
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 101319 to 1109
run: 1560 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\o . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\o . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1109 to character
setm: ((8 tagged-value-address) (deref)): setting 1110 to #\o
run: 1561 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 1
run: 1562 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 101320 to 2
run: 1563 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101321 to t
run: 1564 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 1565 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (0 1 1108 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1105 to 0
setm: ((2 channel-address) (deref)): setting 1106 to 1
setm: ((2 channel-address) (deref)): setting 1107 to 1108
run: 1566 send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
m: ((3 character))
sizeof: ((3 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101007 to nil
run: 1567 send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1568 send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: 1569 send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 1570 read-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101403 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1571 read-key 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1072)
run: 1072 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1072
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 101405 to 1072
run: 1572 read-key 2: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 1573 read-key 3: (((2 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1072 => ((2 integer-address))
setm: ((2 integer-address)) <= 1072
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 101406 to 1072
run: 1574 read-key 4: (((3 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1073 string-address) (raw))
sizeof: ((1073 string-address) (raw))
run: 1031 => ((3 string-address))
setm: ((3 string-address)) <= 1031
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 101407 to 1031
run: 1575 read-key 5: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101408 to 9
run: 1576 read-key 6: (((5 boolean)) <- ((greater-or-equal)) ((2 integer-address) (deref)) ((4 integer)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 101409 to nil
run: 1577 read-key 7: (((jump-unless)) ((5 boolean)) ((1 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1578 read-key 9: (((6 character)) <- ((index)) ((3 string-address) (deref)) ((2 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
array-len: ((1031 string) (raw))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
sizeof: ((_ byte))
m: ((1035 byte) (raw))
sizeof: ((1035 byte) (raw))
run: #\newline => ((6 character))
setm: ((6 character)) <= #\newline
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 101410 to #\newline
run: 1579 read-key 10: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 4 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 4
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1072 to 4
run: 1580 read-key 11: (((reply)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
reply: (((6 character))) (((3 character)))
reply: #\newline => ((3 character))
setm: ((3 character)) <= #\newline
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101004 to #\newline
run: 1581 send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
m: ((3 character))
sizeof: ((3 character))
run: 1582 send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\newline)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\newline))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 101005 to character
setm: ((4 tagged-value)): setting 101006 to #\newline
run: 1583 send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1584 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101434 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1585 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105 #(tagged record (character #\newline . nil)))
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101436 to 1105
run: 1586 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1105 #(tagged record (character #\newline . nil)))
run: #(tagged record (character #\newline . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\newline . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101437 to character
setm: ((2 tagged-value)): setting 101438 to #\newline
run: 1587 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1588 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101465 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1589 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1108 . nil)))
run: #(tagged record (0 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101467 to 0
setm: ((1 channel)): setting 101468 to 1
setm: ((1 channel)): setting 101469 to 1108
run: 1590 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101468 integer) (raw))
sizeof: ((101468 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101470 to 1
run: 1591 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101470 to 2
run: 1592 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1593 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101496 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1594 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1108 . nil)))
run: #(tagged record (0 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101498 to 0
setm: ((1 channel)): setting 101499 to 1
setm: ((1 channel)): setting 101500 to 1108
run: 1595 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((101500 tagged-value-array-address) (raw))
sizeof: ((101500 tagged-value-array-address) (raw))
run: 1108 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1108
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 101501 to 1108
run: 1596 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101502 to 2
run: 1597 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101471 to 2
run: 1598 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101472 to nil
run: 1599 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1600 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101470 to 0
run: 1601 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101467 integer) (raw))
sizeof: ((101467 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101473 to 0
run: 1602 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 101474 to t
run: 1603 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101439 to t
run: 1604 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1605 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((5 integer-address))
setm: ((5 integer-address)) <= 1105
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 101440 to 1105
run: 1606 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-stdin
schedule: read/buffer-stdin
run: 1607 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((4 integer-address))
setm: ((4 integer-address)) <= 1105
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 201414 to 1105
run: 1608 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1108
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 201415 to 1108
run: 1609 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1109 tagged-value) (raw))
sizeof: ((1109 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\o . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\o . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 201416 to character
setm: ((6 tagged-value)): setting 201417 to #\o
run: 1610 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 1
run: 1611 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 201418 to 2
run: 1612 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 201419 to t
run: 1613 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 1614 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((4 tagged-value)) ((1 channel-address) (deref)))
reply: #(tagged record (character #\o . nil)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\o . nil))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 201005 to character
setm: ((4 tagged-value)): setting 201006 to #\o
reply: #(tagged record (1 1 1108 . nil)) => ((1 channel-address) (deref))
setm: ((1 channel-address) (deref)) <= #(tagged record (1 1 1108 . nil))
setm: size of ((1 channel-address) (deref)) is 3
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref)): setting 1105 to 1
setm: ((1 channel-address) (deref)): setting 1106 to 1
setm: ((1 channel-address) (deref)): setting 1107 to 1108
run: 1615 buffer-stdin 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1616 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201471 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1617 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 201502 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 201502
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 201473 to 201502
run: 1618 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\o . nil)) character)
run: #(tagged record (character #\o . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\o . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 201502 to character
setm: ((1 tagged-value-address) (deref)): setting 201503 to #\o
run: 1619 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\o . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 201474 to character
run: 1620 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((201502 type) (raw))
sizeof: ((201502 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 201475 to character
run: 1621 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 201476 to t
run: 1622 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1623 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((201503 location) (raw))
sizeof: ((201503 location) (raw))
run: #\o => ((5 location))
setm: ((5 location)) <= #\o
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 201477 to #\o
run: 1624 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((6 character)))
reply: #\o => ((6 character))
setm: ((6 character)) <= #\o
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\o
run: 1625 buffer-stdin 6: (((assert)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 1626 buffer-stdin 7: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
m: ((3 buffer-address))
sizeof: ((3 buffer-address))
m: ((6 character))
sizeof: ((6 character))
run: 1627 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201504 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1628 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\o)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 201506 to 201062
run: 1629 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\o)
run: #\o => ((2 character))
setm: ((2 character)) <= #\o
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 201507 to #\o
run: 1630 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 1631 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201535 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1632 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 201537 to 201062
run: 1633 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((201062 integer) (raw))
sizeof: ((201062 integer) (raw))
run: 2 => ((2 integer))
setm: ((2 integer)) <= 2
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 201538 to 2
run: 1634 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((3 string-address))
setm: ((3 string-address)) <= 201064
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 201539 to 201064
run: 1635 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201540 to 30
run: 1636 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 201541 to nil
run: 1637 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 201508 to nil
run: 1638 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 1639 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 201062 => ((4 integer-address))
setm: ((4 integer-address)) <= 201062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 201509 to 201062
run: 1640 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((5 string-address))
setm: ((5 string-address)) <= 201064
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 201510 to 201064
run: 1641 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
run: 201067 => ((6 byte-address))
setm: ((6 byte-address)) <= 201067
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 201511 to 201067
run: 1642 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\o => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\o
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 201067 to #\o
run: 1643 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 201062 to 3
run: 1644 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((3 buffer-address)))
reply: 201062 => ((3 buffer-address))
setm: ((3 buffer-address)) <= 201062
setm: size of ((3 buffer-address)) is 1
setm: ((3 buffer-address)): setting 201004 to 201062
run: 1645 buffer-stdin 8: (((7 string-address)) <- ((get)) ((3 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((7 string-address))
setm: ((7 string-address)) <= 201064
setm: size of ((7 string-address)) is 1
setm: ((7 string-address)): setting 201008 to 201064
run: 1646 buffer-stdin 9: (((8 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 201009 to nil
run: 1647 buffer-stdin 10: (((jump-if)) ((8 boolean)) ((3 offset)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 1648 buffer-stdin 11: (((9 boolean)) <- ((equal)) ((6 character)) ((  literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 201010 to nil
run: 1649 buffer-stdin 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 1650 buffer-stdin 13: (((jump)) ((-10 offset)))
run: 1651 buffer-stdin 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 1652 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201566 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1653 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105)
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 201568 to 1105
run: 1654 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1655 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201597 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1656 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1108 . nil)))
run: #(tagged record (1 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 201599 to 1
setm: ((1 channel)): setting 201600 to 1
setm: ((1 channel)): setting 201601 to 1108
run: 1657 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((201599 integer) (raw))
sizeof: ((201599 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201602 to 1
run: 1658 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((201600 integer) (raw))
sizeof: ((201600 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 201603 to 1
run: 1659 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 201604 to t
run: 1660 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 201569 to t
run: 1661 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 1662 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((3 integer-address))
setm: ((3 integer-address)) <= 1106
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 201570 to 1106
run: 1663 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/buffer-stdin to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: write/send-keys-to-stdin
run: 1664 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1108
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 101441 to 1108
run: 1665 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((7 integer-address))
setm: ((7 integer-address)) <= 1106
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 101442 to 1106
run: 1666 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1111 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1111
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 101443 to 1111
run: 1667 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\newline . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\newline . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1111 to character
setm: ((8 tagged-value-address) (deref)): setting 1112 to #\newline
run: 1668 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 2
run: 1669 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 101444 to 2
run: 1670 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101445 to nil
run: 1671 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 1672 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 0
run: 1673 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (1 0 1108 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (1 0 1108 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1105 to 1
setm: ((2 channel-address) (deref)): setting 1106 to 0
setm: ((2 channel-address) (deref)): setting 1107 to 1108
run: 1674 send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
m: ((3 character))
sizeof: ((3 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101007 to nil
run: 1675 send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1676 send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: 1677 send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 1678 read-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101527 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1679 read-key 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1072)
run: 1072 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1072
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 101529 to 1072
run: 1680 read-key 2: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 1681 read-key 3: (((2 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1072 => ((2 integer-address))
setm: ((2 integer-address)) <= 1072
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 101530 to 1072
run: 1682 read-key 4: (((3 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1073 string-address) (raw))
sizeof: ((1073 string-address) (raw))
run: 1031 => ((3 string-address))
setm: ((3 string-address)) <= 1031
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 101531 to 1031
run: 1683 read-key 5: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101532 to 9
run: 1684 read-key 6: (((5 boolean)) <- ((greater-or-equal)) ((2 integer-address) (deref)) ((4 integer)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 101533 to nil
run: 1685 read-key 7: (((jump-unless)) ((5 boolean)) ((1 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1686 read-key 9: (((6 character)) <- ((index)) ((3 string-address) (deref)) ((2 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
array-len: ((1031 string) (raw))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
sizeof: ((_ byte))
m: ((1036 byte) (raw))
sizeof: ((1036 byte) (raw))
run: #\l => ((6 character))
setm: ((6 character)) <= #\l
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 101534 to #\l
run: 1687 read-key 10: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 5 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 5
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1072 to 5
run: 1688 read-key 11: (((reply)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
reply: (((6 character))) (((3 character)))
reply: #\l => ((3 character))
setm: ((3 character)) <= #\l
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101004 to #\l
run: 1689 send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
m: ((3 character))
sizeof: ((3 character))
run: 1690 send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\l)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\l))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 101005 to character
setm: ((4 tagged-value)): setting 101006 to #\l
run: 1691 send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1692 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101558 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1693 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105 #(tagged record (character #\l . nil)))
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101560 to 1105
run: 1694 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1105 #(tagged record (character #\l . nil)))
run: #(tagged record (character #\l . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\l . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101561 to character
setm: ((2 tagged-value)): setting 101562 to #\l
run: 1695 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1696 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101589 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1697 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1108 . nil)))
run: #(tagged record (1 0 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101591 to 1
setm: ((1 channel)): setting 101592 to 0
setm: ((1 channel)): setting 101593 to 1108
run: 1698 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101592 integer) (raw))
sizeof: ((101592 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101594 to 0
run: 1699 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101594 to 1
run: 1700 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1701 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101620 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1702 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1108 . nil)))
run: #(tagged record (1 0 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101622 to 1
setm: ((1 channel)): setting 101623 to 0
setm: ((1 channel)): setting 101624 to 1108
run: 1703 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((101624 tagged-value-array-address) (raw))
sizeof: ((101624 tagged-value-array-address) (raw))
run: 1108 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1108
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 101625 to 1108
run: 1704 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101626 to 2
run: 1705 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101595 to 2
run: 1706 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101596 to t
run: 1707 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1708 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101591 integer) (raw))
sizeof: ((101591 integer) (raw))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101597 to 1
run: 1709 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 101598 to t
run: 1710 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101563 to t
run: 1711 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1712 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((5 integer-address))
setm: ((5 integer-address)) <= 1105
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 101564 to 1105
run: 1713 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-stdin
schedule: read/buffer-stdin
run: 1714 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((4 integer-address))
setm: ((4 integer-address)) <= 1105
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 201571 to 1105
run: 1715 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1108
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 201572 to 1108
run: 1716 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1111 tagged-value) (raw))
sizeof: ((1111 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\newline . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\newline . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 201573 to character
setm: ((6 tagged-value)): setting 201574 to #\newline
run: 1717 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 2
run: 1718 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 201575 to 2
run: 1719 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 201576 to nil
run: 1720 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 1721 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 0
run: 1722 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((4 tagged-value)) ((1 channel-address) (deref)))
reply: #(tagged record (character #\newline . nil)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\newline . nil))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 201005 to character
setm: ((4 tagged-value)): setting 201006 to #\newline
reply: #(tagged record (0 0 1108 . nil)) => ((1 channel-address) (deref))
setm: ((1 channel-address) (deref)) <= #(tagged record (0 0 1108 . nil))
setm: size of ((1 channel-address) (deref)) is 3
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref)): setting 1105 to 0
setm: ((1 channel-address) (deref)): setting 1106 to 0
setm: ((1 channel-address) (deref)): setting 1107 to 1108
run: 1723 buffer-stdin 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1724 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201628 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1725 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 201659 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 201659
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 201630 to 201659
run: 1726 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\newline . nil)) character)
run: #(tagged record (character #\newline . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\newline . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 201659 to character
setm: ((1 tagged-value-address) (deref)): setting 201660 to #\newline
run: 1727 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\newline . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 201631 to character
run: 1728 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((201659 type) (raw))
sizeof: ((201659 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 201632 to character
run: 1729 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 201633 to t
run: 1730 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1731 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((201660 location) (raw))
sizeof: ((201660 location) (raw))
run: #\newline => ((5 location))
setm: ((5 location)) <= #\newline
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 201634 to #\newline
run: 1732 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((6 character)))
reply: #\newline => ((6 character))
setm: ((6 character)) <= #\newline
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\newline
run: 1733 buffer-stdin 6: (((assert)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 1734 buffer-stdin 7: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
m: ((3 buffer-address))
sizeof: ((3 buffer-address))
m: ((6 character))
sizeof: ((6 character))
run: 1735 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201661 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1736 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\newline)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 201663 to 201062
run: 1737 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\newline)
run: #\newline => ((2 character))
setm: ((2 character)) <= #\newline
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 201664 to #\newline
run: 1738 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 1739 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201692 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1740 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 201694 to 201062
run: 1741 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((201062 integer) (raw))
sizeof: ((201062 integer) (raw))
run: 3 => ((2 integer))
setm: ((2 integer)) <= 3
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 201695 to 3
run: 1742 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((3 string-address))
setm: ((3 string-address)) <= 201064
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 201696 to 201064
run: 1743 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201697 to 30
run: 1744 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 201698 to nil
run: 1745 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 201665 to nil
run: 1746 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 1747 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 201062 => ((4 integer-address))
setm: ((4 integer-address)) <= 201062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 201666 to 201062
run: 1748 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((5 string-address))
setm: ((5 string-address)) <= 201064
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 201667 to 201064
run: 1749 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
run: 201068 => ((6 byte-address))
setm: ((6 byte-address)) <= 201068
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 201668 to 201068
run: 1750 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\newline => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\newline
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 201068 to #\newline
run: 1751 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 201062 to 4
run: 1752 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((3 buffer-address)))
reply: 201062 => ((3 buffer-address))
setm: ((3 buffer-address)) <= 201062
setm: size of ((3 buffer-address)) is 1
setm: ((3 buffer-address)): setting 201004 to 201062
run: 1753 buffer-stdin 8: (((7 string-address)) <- ((get)) ((3 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((7 string-address))
setm: ((7 string-address)) <= 201064
setm: size of ((7 string-address)) is 1
setm: ((7 string-address)): setting 201008 to 201064
run: 1754 buffer-stdin 9: (((8 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
m: ((6 character))
sizeof: ((6 character))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 201009 to t
run: 1755 buffer-stdin 10: (((jump-if)) ((8 boolean)) ((3 offset)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 1756 buffer-stdin 14: (((jump-if)) ((9 boolean)) ((11 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 1757 buffer-stdin 15: (((10 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((10 integer))
setm: ((10 integer)) <= 0
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 201011 to 0
run: 1758 buffer-stdin 16: (((7 string-address)) <- ((get)) ((3 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((7 string-address))
setm: ((7 string-address)) <= 201064
setm: size of ((7 string-address)) is 1
setm: ((7 string-address)): setting 201008 to 201064
run: 1759 buffer-stdin 17: (((11 integer)) <- ((get)) ((3 buffer-address) (deref)) ((0 offset)))
m: ((201062 integer) (raw))
sizeof: ((201062 integer) (raw))
run: 4 => ((11 integer))
setm: ((11 integer)) <= 4
setm: size of ((11 integer)) is 1
setm: ((11 integer)): setting 201012 to 4
run: 1760 buffer-stdin 18: (((12 boolean)) <- ((greater-or-equal)) ((10 integer)) ((11 integer)))
m: ((10 integer))
sizeof: ((10 integer))
m: ((11 integer))
sizeof: ((11 integer))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 201013 to nil
run: 1761 buffer-stdin 19: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
run: 1762 buffer-stdin 20: (((6 character)) <- ((index)) ((7 string-address) (deref)) ((10 integer)))
m: ((10 integer))
sizeof: ((10 integer))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
m: ((201065 byte) (raw))
sizeof: ((201065 byte) (raw))
run: #\f => ((6 character))
setm: ((6 character)) <= #\f
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\f
run: 1763 buffer-stdin 21: (((13 tagged-value)) <- ((save-type)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: #(tagged record (character #\f)) => ((13 tagged-value))
setm: ((13 tagged-value)) <= #(tagged record (character #\f))
setm: size of ((13 tagged-value)) is 2
sizeof: ((13 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((13 tagged-value)): setting 201014 to character
setm: ((13 tagged-value)): setting 201015 to #\f
run: 1764 buffer-stdin 22: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((13 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((13 tagged-value))
sizeof: ((13 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1765 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201723 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1766 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1144 #(tagged record (character #\f . nil)))
run: 1144 => ((1 channel-address))
setm: ((1 channel-address)) <= 1144
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 201725 to 1144
run: 1767 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1144 #(tagged record (character #\f . nil)))
run: #(tagged record (character #\f . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\f . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 201726 to character
setm: ((2 tagged-value)): setting 201727 to #\f
run: 1768 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1769 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201754 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1770 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1147 . nil)))
run: #(tagged record (0 0 1147 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1147 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 201756 to 0
setm: ((1 channel)): setting 201757 to 0
setm: ((1 channel)): setting 201758 to 1147
run: 1771 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((201757 integer) (raw))
sizeof: ((201757 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201759 to 0
run: 1772 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201759 to 1
run: 1773 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1774 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201785 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1775 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1147 . nil)))
run: #(tagged record (0 0 1147 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1147 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 201787 to 0
setm: ((1 channel)): setting 201788 to 0
setm: ((1 channel)): setting 201789 to 1147
run: 1776 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((201789 tagged-value-array-address) (raw))
sizeof: ((201789 tagged-value-array-address) (raw))
run: 1147 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1147
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 201790 to 1147
run: 1777 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 201791 to 2
run: 1778 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 201760 to 2
run: 1779 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 201761 to t
run: 1780 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1781 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((201756 integer) (raw))
sizeof: ((201756 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 201762 to 0
run: 1782 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 201763 to nil
run: 1783 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: nil => ((4 boolean))
setm: ((4 boolean)) <= nil
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 201728 to nil
run: 1784 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1785 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1146 tagged-value-array-address) (raw))
sizeof: ((1146 tagged-value-array-address) (raw))
run: 1147 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1147
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 201730 to 1147
run: 1786 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1145 => ((7 integer-address))
setm: ((7 integer-address)) <= 1145
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 201731 to 1145
run: 1787 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1147 tagged-value-array) (raw))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1148 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1148
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 201732 to 1148
run: 1788 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\f . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\f . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1148 to character
setm: ((8 tagged-value-address) (deref)): setting 1149 to #\f
run: 1789 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1145 to 1
run: 1790 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 201733 to 2
run: 1791 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 201734 to t
run: 1792 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 1793 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (0 1 1147 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (0 1 1147 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1144 to 0
setm: ((2 channel-address) (deref)): setting 1145 to 1
setm: ((2 channel-address) (deref)): setting 1146 to 1147
run: 1794 buffer-stdin 23: (((10 integer)) <- ((add)) ((10 integer)) ((1 literal)))
m: ((10 integer))
sizeof: ((10 integer))
run: 1 => ((10 integer))
setm: ((10 integer)) <= 1
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 201011 to 1
run: 1795 buffer-stdin 24: (((jump)) ((-7 offset)))
run: 1796 buffer-stdin 18: (((12 boolean)) <- ((greater-or-equal)) ((10 integer)) ((11 integer)))
m: ((10 integer))
sizeof: ((10 integer))
m: ((11 integer))
sizeof: ((11 integer))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 201013 to nil
run: 1797 buffer-stdin 19: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
run: 1798 buffer-stdin 20: (((6 character)) <- ((index)) ((7 string-address) (deref)) ((10 integer)))
m: ((10 integer))
sizeof: ((10 integer))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
m: ((201066 byte) (raw))
sizeof: ((201066 byte) (raw))
run: #\o => ((6 character))
setm: ((6 character)) <= #\o
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\o
run: 1799 buffer-stdin 21: (((13 tagged-value)) <- ((save-type)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: #(tagged record (character #\o)) => ((13 tagged-value))
setm: ((13 tagged-value)) <= #(tagged record (character #\o))
setm: size of ((13 tagged-value)) is 2
sizeof: ((13 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((13 tagged-value)): setting 201014 to character
setm: ((13 tagged-value)): setting 201015 to #\o
run: 1800 buffer-stdin 22: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((13 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((13 tagged-value))
sizeof: ((13 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1801 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201816 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1802 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1144 #(tagged record (character #\o . nil)))
run: 1144 => ((1 channel-address))
setm: ((1 channel-address)) <= 1144
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 201818 to 1144
run: 1803 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1144 #(tagged record (character #\o . nil)))
run: #(tagged record (character #\o . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\o . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 201819 to character
setm: ((2 tagged-value)): setting 201820 to #\o
run: 1804 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1805 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201847 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1806 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1147 . nil)))
run: #(tagged record (0 1 1147 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1147 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 201849 to 0
setm: ((1 channel)): setting 201850 to 1
setm: ((1 channel)): setting 201851 to 1147
run: 1807 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((201850 integer) (raw))
sizeof: ((201850 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201852 to 1
run: 1808 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201852 to 2
run: 1809 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1810 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201878 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1811 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1147 . nil)))
run: #(tagged record (0 1 1147 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1147 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 201880 to 0
setm: ((1 channel)): setting 201881 to 1
setm: ((1 channel)): setting 201882 to 1147
run: 1812 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((201882 tagged-value-array-address) (raw))
sizeof: ((201882 tagged-value-array-address) (raw))
run: 1147 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1147
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 201883 to 1147
run: 1813 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 201884 to 2
run: 1814 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 201853 to 2
run: 1815 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 201854 to nil
run: 1816 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1817 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201852 to 0
run: 1818 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((201849 integer) (raw))
sizeof: ((201849 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 201855 to 0
run: 1819 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 201856 to t
run: 1820 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 201821 to t
run: 1821 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1822 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1144 => ((5 integer-address))
setm: ((5 integer-address)) <= 1144
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 201822 to 1144
run: 1823 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/buffer-stdin to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: waking up read/send-prints-to-stdout
schedule: write/send-keys-to-stdin
run: 1824 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1108
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 101565 to 1108
run: 1825 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((7 integer-address))
setm: ((7 integer-address)) <= 1106
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 101566 to 1106
run: 1826 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1109 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1109
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 101567 to 1109
run: 1827 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\l . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\l . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1109 to character
setm: ((8 tagged-value-address) (deref)): setting 1110 to #\l
run: 1828 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 1
run: 1829 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 101568 to 2
run: 1830 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101569 to t
run: 1831 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 1832 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (0 1 1108 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1105 to 0
setm: ((2 channel-address) (deref)): setting 1106 to 1
setm: ((2 channel-address) (deref)): setting 1107 to 1108
run: 1833 send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
m: ((3 character))
sizeof: ((3 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101007 to nil
run: 1834 send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1835 send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: 1836 send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 1837 read-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101651 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1838 read-key 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1072)
run: 1072 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1072
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 101653 to 1072
run: 1839 read-key 2: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 1840 read-key 3: (((2 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1072 => ((2 integer-address))
setm: ((2 integer-address)) <= 1072
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 101654 to 1072
run: 1841 read-key 4: (((3 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1073 string-address) (raw))
sizeof: ((1073 string-address) (raw))
run: 1031 => ((3 string-address))
setm: ((3 string-address)) <= 1031
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 101655 to 1031
run: 1842 read-key 5: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101656 to 9
run: 1843 read-key 6: (((5 boolean)) <- ((greater-or-equal)) ((2 integer-address) (deref)) ((4 integer)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 101657 to nil
run: 1844 read-key 7: (((jump-unless)) ((5 boolean)) ((1 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 1845 read-key 9: (((6 character)) <- ((index)) ((3 string-address) (deref)) ((2 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
array-len: ((1031 string) (raw))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
sizeof: ((_ byte))
m: ((1037 byte) (raw))
sizeof: ((1037 byte) (raw))
run: #\i => ((6 character))
setm: ((6 character)) <= #\i
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 101658 to #\i
run: 1846 read-key 10: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 6 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 6
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1072 to 6
run: 1847 read-key 11: (((reply)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
reply: (((6 character))) (((3 character)))
reply: #\i => ((3 character))
setm: ((3 character)) <= #\i
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101004 to #\i
run: 1848 send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
m: ((3 character))
sizeof: ((3 character))
run: 1849 send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\i)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\i))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 101005 to character
setm: ((4 tagged-value)): setting 101006 to #\i
run: 1850 send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1851 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101682 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1852 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105 #(tagged record (character #\i . nil)))
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101684 to 1105
run: 1853 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1105 #(tagged record (character #\i . nil)))
run: #(tagged record (character #\i . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\i . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101685 to character
setm: ((2 tagged-value)): setting 101686 to #\i
run: 1854 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1855 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101713 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1856 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1108 . nil)))
run: #(tagged record (0 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101715 to 0
setm: ((1 channel)): setting 101716 to 1
setm: ((1 channel)): setting 101717 to 1108
run: 1857 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101716 integer) (raw))
sizeof: ((101716 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101718 to 1
run: 1858 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101718 to 2
run: 1859 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1860 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101744 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1861 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1108 . nil)))
run: #(tagged record (0 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101746 to 0
setm: ((1 channel)): setting 101747 to 1
setm: ((1 channel)): setting 101748 to 1108
run: 1862 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((101748 tagged-value-array-address) (raw))
sizeof: ((101748 tagged-value-array-address) (raw))
run: 1108 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1108
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 101749 to 1108
run: 1863 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101750 to 2
run: 1864 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101719 to 2
run: 1865 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101720 to nil
run: 1866 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1867 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101718 to 0
run: 1868 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101715 integer) (raw))
sizeof: ((101715 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101721 to 0
run: 1869 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 101722 to t
run: 1870 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101687 to t
run: 1871 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1872 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((5 integer-address))
setm: ((5 integer-address)) <= 1105
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 101688 to 1105
run: 1873 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: read/send-prints-to-stdout
run: 1874 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1144 => ((4 integer-address))
setm: ((4 integer-address)) <= 1144
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 301036 to 1144
run: 1875 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1146 tagged-value-array-address) (raw))
sizeof: ((1146 tagged-value-array-address) (raw))
run: 1147 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1147
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 301037 to 1147
run: 1876 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1147 tagged-value-array) (raw))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1148 tagged-value) (raw))
sizeof: ((1148 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\f . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\f . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 301038 to character
setm: ((6 tagged-value)): setting 301039 to #\f
run: 1877 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1144 to 1
run: 1878 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 301040 to 2
run: 1879 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 301041 to t
run: 1880 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 1881 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((3 tagged-value)) ((2 channel-address) (deref)))
reply: #(tagged record (character #\f . nil)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character #\f . nil))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 301004 to character
setm: ((3 tagged-value)): setting 301005 to #\f
reply: #(tagged record (1 1 1147 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (1 1 1147 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1144 to 1
setm: ((2 channel-address) (deref)): setting 1145 to 1
setm: ((2 channel-address) (deref)): setting 1146 to 1147
run: 1882 send-prints-to-stdout 4: (((5 character)) <- ((maybe-coerce)) ((3 tagged-value)) ((character literal)))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1883 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301093 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1884 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 301124 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 301124
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 301095 to 301124
run: 1885 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\f . nil)) character)
run: #(tagged record (character #\f . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\f . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 301124 to character
setm: ((1 tagged-value-address) (deref)): setting 301125 to #\f
run: 1886 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\f . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 301096 to character
run: 1887 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((301124 type) (raw))
sizeof: ((301124 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 301097 to character
run: 1888 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 301098 to t
run: 1889 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1890 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((301125 location) (raw))
sizeof: ((301125 location) (raw))
run: #\f => ((5 location))
setm: ((5 location)) <= #\f
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 301099 to #\f
run: 1891 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((5 character)))
reply: #\f => ((5 character))
setm: ((5 character)) <= #\f
setm: size of ((5 character)) is 1
setm: ((5 character)): setting 301006 to #\f
run: 1892 send-prints-to-stdout 5: (((6 boolean)) <- ((equal)) ((5 character)) ((  literal)))
m: ((5 character))
sizeof: ((5 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 301007 to nil
run: 1893 send-prints-to-stdout 6: (((jump-if)) ((6 boolean)) ((2 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1894 send-prints-to-stdout 7: (((print-character)) ((1 terminal-address)) ((5 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 character))
sizeof: ((5 character))
run: 1895 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301126 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1896 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1183 #\f)
run: 1183 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1183
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 301128 to 1183
run: 1897 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1183 #\f)
run: #\f => ((2 character))
setm: ((2 character)) <= #\f
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 301129 to #\f
run: 1898 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 1899 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1185 => ((3 integer-address))
setm: ((3 integer-address)) <= 1185
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 301130 to 1185
run: 1900 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1186 => ((4 integer-address))
setm: ((4 integer-address)) <= 1186
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 301131 to 1186
run: 1901 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1184 integer) (raw))
sizeof: ((1184 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 301132 to 20
run: 1902 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 301133 to 0
run: 1903 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 301134 to 0
run: 1904 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1187 string-address) (raw))
sizeof: ((1187 string-address) (raw))
run: 1188 => ((8 string-address))
setm: ((8 string-address)) <= 1188
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 301135 to 1188
run: 1905 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1189 => ((9 byte-address))
setm: ((9 byte-address)) <= 1189
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 301136 to 1189
run: 1906 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\f => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\f
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1189 to #\f
run: 1907 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1186 to 1
run: 1908 print-character 13: (((reply)))
reply: nil nil
run: 1909 send-prints-to-stdout 8: (((jump)) ((-6 offset)))
run: 1910 send-prints-to-stdout 3: (((3 tagged-value)) ((2 channel-address) (deref)) <- ((read)) ((2 channel-address)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
run: 1911 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301157 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1912 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1144)
run: 1144 => ((1 channel-address))
setm: ((1 channel-address)) <= 1144
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 301159 to 1144
run: 1913 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1914 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301188 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1915 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1147 . nil)))
run: #(tagged record (1 1 1147 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 1 1147 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 301190 to 1
setm: ((1 channel)): setting 301191 to 1
setm: ((1 channel)): setting 301192 to 1147
run: 1916 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((301190 integer) (raw))
sizeof: ((301190 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 301193 to 1
run: 1917 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((301191 integer) (raw))
sizeof: ((301191 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 301194 to 1
run: 1918 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 301195 to t
run: 1919 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 301160 to t
run: 1920 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 1921 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1145 => ((3 integer-address))
setm: ((3 integer-address)) <= 1145
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 301161 to 1145
run: 1922 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/send-prints-to-stdout to sleep queue
schedule: waking up write/buffer-stdin
schedule: write/buffer-stdin
run: 1923 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1146 tagged-value-array-address) (raw))
sizeof: ((1146 tagged-value-array-address) (raw))
run: 1147 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1147
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 201823 to 1147
run: 1924 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1145 => ((7 integer-address))
setm: ((7 integer-address)) <= 1145
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 201824 to 1145
run: 1925 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1147 tagged-value-array) (raw))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1150 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1150
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 201825 to 1150
run: 1926 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\o . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\o . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1150 to character
setm: ((8 tagged-value-address) (deref)): setting 1151 to #\o
run: 1927 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1145 to 2
run: 1928 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 201826 to 2
run: 1929 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 201827 to nil
run: 1930 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 1931 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1145 to 0
run: 1932 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (1 0 1147 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (1 0 1147 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1144 to 1
setm: ((2 channel-address) (deref)): setting 1145 to 0
setm: ((2 channel-address) (deref)): setting 1146 to 1147
run: 1933 buffer-stdin 23: (((10 integer)) <- ((add)) ((10 integer)) ((1 literal)))
m: ((10 integer))
sizeof: ((10 integer))
run: 2 => ((10 integer))
setm: ((10 integer)) <= 2
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 201011 to 2
run: 1934 buffer-stdin 24: (((jump)) ((-7 offset)))
run: 1935 buffer-stdin 18: (((12 boolean)) <- ((greater-or-equal)) ((10 integer)) ((11 integer)))
m: ((10 integer))
sizeof: ((10 integer))
m: ((11 integer))
sizeof: ((11 integer))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 201013 to nil
run: 1936 buffer-stdin 19: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
run: 1937 buffer-stdin 20: (((6 character)) <- ((index)) ((7 string-address) (deref)) ((10 integer)))
m: ((10 integer))
sizeof: ((10 integer))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
m: ((201067 byte) (raw))
sizeof: ((201067 byte) (raw))
run: #\o => ((6 character))
setm: ((6 character)) <= #\o
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\o
run: 1938 buffer-stdin 21: (((13 tagged-value)) <- ((save-type)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: #(tagged record (character #\o)) => ((13 tagged-value))
setm: ((13 tagged-value)) <= #(tagged record (character #\o))
setm: size of ((13 tagged-value)) is 2
sizeof: ((13 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((13 tagged-value)): setting 201014 to character
setm: ((13 tagged-value)): setting 201015 to #\o
run: 1939 buffer-stdin 22: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((13 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((13 tagged-value))
sizeof: ((13 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1940 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201909 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1941 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1144 #(tagged record (character #\o . nil)))
run: 1144 => ((1 channel-address))
setm: ((1 channel-address)) <= 1144
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 201911 to 1144
run: 1942 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1144 #(tagged record (character #\o . nil)))
run: #(tagged record (character #\o . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\o . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 201912 to character
setm: ((2 tagged-value)): setting 201913 to #\o
run: 1943 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1944 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201940 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1945 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1147 . nil)))
run: #(tagged record (1 0 1147 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1147 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 201942 to 1
setm: ((1 channel)): setting 201943 to 0
setm: ((1 channel)): setting 201944 to 1147
run: 1946 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((201943 integer) (raw))
sizeof: ((201943 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201945 to 0
run: 1947 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 201945 to 1
run: 1948 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 1949 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 201971 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1950 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1147 . nil)))
run: #(tagged record (1 0 1147 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1147 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 201973 to 1
setm: ((1 channel)): setting 201974 to 0
setm: ((1 channel)): setting 201975 to 1147
run: 1951 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((201975 tagged-value-array-address) (raw))
sizeof: ((201975 tagged-value-array-address) (raw))
run: 1147 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1147
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 201976 to 1147
run: 1952 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 201977 to 2
run: 1953 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 201946 to 2
run: 1954 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 201947 to t
run: 1955 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1956 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((201942 integer) (raw))
sizeof: ((201942 integer) (raw))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 201948 to 1
run: 1957 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 201949 to t
run: 1958 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 201914 to t
run: 1959 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1960 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1144 => ((5 integer-address))
setm: ((5 integer-address)) <= 1144
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 201915 to 1144
run: 1961 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/buffer-stdin to sleep queue
schedule: waking up read/send-prints-to-stdout
schedule: read/send-prints-to-stdout
run: 1962 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1144 => ((4 integer-address))
setm: ((4 integer-address)) <= 1144
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 301162 to 1144
run: 1963 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1146 tagged-value-array-address) (raw))
sizeof: ((1146 tagged-value-array-address) (raw))
run: 1147 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1147
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 301163 to 1147
run: 1964 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1147 tagged-value-array) (raw))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1150 tagged-value) (raw))
sizeof: ((1150 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\o . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\o . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 301164 to character
setm: ((6 tagged-value)): setting 301165 to #\o
run: 1965 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1144 to 2
run: 1966 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 301166 to 2
run: 1967 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 301167 to nil
run: 1968 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 1969 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1144 to 0
run: 1970 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((3 tagged-value)) ((2 channel-address) (deref)))
reply: #(tagged record (character #\o . nil)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character #\o . nil))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 301004 to character
setm: ((3 tagged-value)): setting 301005 to #\o
reply: #(tagged record (0 0 1147 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (0 0 1147 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1144 to 0
setm: ((2 channel-address) (deref)): setting 1145 to 0
setm: ((2 channel-address) (deref)): setting 1146 to 1147
run: 1971 send-prints-to-stdout 4: (((5 character)) <- ((maybe-coerce)) ((3 tagged-value)) ((character literal)))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1972 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301219 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1973 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 301250 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 301250
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 301221 to 301250
run: 1974 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\o . nil)) character)
run: #(tagged record (character #\o . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\o . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 301250 to character
setm: ((1 tagged-value-address) (deref)): setting 301251 to #\o
run: 1975 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\o . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 301222 to character
run: 1976 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((301250 type) (raw))
sizeof: ((301250 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 301223 to character
run: 1977 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 301224 to t
run: 1978 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 1979 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((301251 location) (raw))
sizeof: ((301251 location) (raw))
run: #\o => ((5 location))
setm: ((5 location)) <= #\o
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 301225 to #\o
run: 1980 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((5 character)))
reply: #\o => ((5 character))
setm: ((5 character)) <= #\o
setm: size of ((5 character)) is 1
setm: ((5 character)): setting 301006 to #\o
run: 1981 send-prints-to-stdout 5: (((6 boolean)) <- ((equal)) ((5 character)) ((  literal)))
m: ((5 character))
sizeof: ((5 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 301007 to nil
run: 1982 send-prints-to-stdout 6: (((jump-if)) ((6 boolean)) ((2 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 1983 send-prints-to-stdout 7: (((print-character)) ((1 terminal-address)) ((5 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 character))
sizeof: ((5 character))
run: 1984 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301252 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 1985 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1183 #\o)
run: 1183 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1183
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 301254 to 1183
run: 1986 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1183 #\o)
run: #\o => ((2 character))
setm: ((2 character)) <= #\o
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 301255 to #\o
run: 1987 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 1988 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1185 => ((3 integer-address))
setm: ((3 integer-address)) <= 1185
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 301256 to 1185
run: 1989 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1186 => ((4 integer-address))
setm: ((4 integer-address)) <= 1186
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 301257 to 1186
run: 1990 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1184 integer) (raw))
sizeof: ((1184 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 301258 to 20
run: 1991 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 301259 to 0
run: 1992 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 301260 to 1
run: 1993 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1187 string-address) (raw))
sizeof: ((1187 string-address) (raw))
run: 1188 => ((8 string-address))
setm: ((8 string-address)) <= 1188
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 301261 to 1188
run: 1994 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1190 => ((9 byte-address))
setm: ((9 byte-address)) <= 1190
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 301262 to 1190
run: 1995 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\o => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\o
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1190 to #\o
run: 1996 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1186 to 2
run: 1997 print-character 13: (((reply)))
reply: nil nil
run: 1998 send-prints-to-stdout 8: (((jump)) ((-6 offset)))
run: 1999 send-prints-to-stdout 3: (((3 tagged-value)) ((2 channel-address) (deref)) <- ((read)) ((2 channel-address)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
run: 2000 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301283 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2001 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1144)
run: 1144 => ((1 channel-address))
setm: ((1 channel-address)) <= 1144
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 301285 to 1144
run: 2002 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2003 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301314 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2004 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1147 . nil)))
run: #(tagged record (0 0 1147 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1147 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 301316 to 0
setm: ((1 channel)): setting 301317 to 0
setm: ((1 channel)): setting 301318 to 1147
run: 2005 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((301316 integer) (raw))
sizeof: ((301316 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 301319 to 0
run: 2006 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((301317 integer) (raw))
sizeof: ((301317 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 301320 to 0
run: 2007 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 301321 to t
run: 2008 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 301286 to t
run: 2009 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 2010 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1145 => ((3 integer-address))
setm: ((3 integer-address)) <= 1145
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 301287 to 1145
run: 2011 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/send-prints-to-stdout to sleep queue
schedule: waking up write/buffer-stdin
schedule: write/buffer-stdin
run: 2012 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1146 tagged-value-array-address) (raw))
sizeof: ((1146 tagged-value-array-address) (raw))
run: 1147 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1147
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 201916 to 1147
run: 2013 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1145 => ((7 integer-address))
setm: ((7 integer-address)) <= 1145
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 201917 to 1145
run: 2014 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1147 tagged-value-array) (raw))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1148 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1148
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 201918 to 1148
run: 2015 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\o . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\o . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1148 to character
setm: ((8 tagged-value-address) (deref)): setting 1149 to #\o
run: 2016 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1145 to 1
run: 2017 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 201919 to 2
run: 2018 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 201920 to t
run: 2019 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 2020 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (0 1 1147 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (0 1 1147 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1144 to 0
setm: ((2 channel-address) (deref)): setting 1145 to 1
setm: ((2 channel-address) (deref)): setting 1146 to 1147
run: 2021 buffer-stdin 23: (((10 integer)) <- ((add)) ((10 integer)) ((1 literal)))
m: ((10 integer))
sizeof: ((10 integer))
run: 3 => ((10 integer))
setm: ((10 integer)) <= 3
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 201011 to 3
run: 2022 buffer-stdin 24: (((jump)) ((-7 offset)))
run: 2023 buffer-stdin 18: (((12 boolean)) <- ((greater-or-equal)) ((10 integer)) ((11 integer)))
m: ((10 integer))
sizeof: ((10 integer))
m: ((11 integer))
sizeof: ((11 integer))
run: nil => ((12 boolean))
setm: ((12 boolean)) <= nil
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 201013 to nil
run: 2024 buffer-stdin 19: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
run: 2025 buffer-stdin 20: (((6 character)) <- ((index)) ((7 string-address) (deref)) ((10 integer)))
m: ((10 integer))
sizeof: ((10 integer))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
m: ((201068 byte) (raw))
sizeof: ((201068 byte) (raw))
run: #\newline => ((6 character))
setm: ((6 character)) <= #\newline
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\newline
run: 2026 buffer-stdin 21: (((13 tagged-value)) <- ((save-type)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: #(tagged record (character #\newline)) => ((13 tagged-value))
setm: ((13 tagged-value)) <= #(tagged record (character #\newline))
setm: size of ((13 tagged-value)) is 2
sizeof: ((13 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((13 tagged-value)): setting 201014 to character
setm: ((13 tagged-value)): setting 201015 to #\newline
run: 2027 buffer-stdin 22: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((13 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((13 tagged-value))
sizeof: ((13 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2028 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202002 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2029 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1144 #(tagged record (character #\newline . nil)))
run: 1144 => ((1 channel-address))
setm: ((1 channel-address)) <= 1144
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 202004 to 1144
run: 2030 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1144 #(tagged record (character #\newline . nil)))
run: #(tagged record (character #\newline . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\newline . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 202005 to character
setm: ((2 tagged-value)): setting 202006 to #\newline
run: 2031 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2032 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202033 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2033 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1147 . nil)))
run: #(tagged record (0 1 1147 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1147 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 202035 to 0
setm: ((1 channel)): setting 202036 to 1
setm: ((1 channel)): setting 202037 to 1147
run: 2034 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((202036 integer) (raw))
sizeof: ((202036 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202038 to 1
run: 2035 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202038 to 2
run: 2036 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2037 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202064 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2038 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1147 . nil)))
run: #(tagged record (0 1 1147 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1147 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 202066 to 0
setm: ((1 channel)): setting 202067 to 1
setm: ((1 channel)): setting 202068 to 1147
run: 2039 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((202068 tagged-value-array-address) (raw))
sizeof: ((202068 tagged-value-array-address) (raw))
run: 1147 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1147
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 202069 to 1147
run: 2040 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 202070 to 2
run: 2041 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 202039 to 2
run: 2042 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 202040 to nil
run: 2043 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 2044 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202038 to 0
run: 2045 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((202035 integer) (raw))
sizeof: ((202035 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 202041 to 0
run: 2046 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 202042 to t
run: 2047 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 202007 to t
run: 2048 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2049 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1144 => ((5 integer-address))
setm: ((5 integer-address)) <= 1144
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 202008 to 1144
run: 2050 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/buffer-stdin to sleep queue
schedule: waking up read/send-prints-to-stdout
schedule: read/send-prints-to-stdout
run: 2051 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1144 => ((4 integer-address))
setm: ((4 integer-address)) <= 1144
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 301288 to 1144
run: 2052 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1146 tagged-value-array-address) (raw))
sizeof: ((1146 tagged-value-array-address) (raw))
run: 1147 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1147
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 301289 to 1147
run: 2053 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1147 tagged-value-array) (raw))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1148 tagged-value) (raw))
sizeof: ((1148 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\o . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\o . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 301290 to character
setm: ((6 tagged-value)): setting 301291 to #\o
run: 2054 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1144 to 1
run: 2055 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 301292 to 2
run: 2056 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 301293 to t
run: 2057 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2058 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((3 tagged-value)) ((2 channel-address) (deref)))
reply: #(tagged record (character #\o . nil)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character #\o . nil))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 301004 to character
setm: ((3 tagged-value)): setting 301005 to #\o
reply: #(tagged record (1 1 1147 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (1 1 1147 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1144 to 1
setm: ((2 channel-address) (deref)): setting 1145 to 1
setm: ((2 channel-address) (deref)): setting 1146 to 1147
run: 2059 send-prints-to-stdout 4: (((5 character)) <- ((maybe-coerce)) ((3 tagged-value)) ((character literal)))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2060 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301345 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2061 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 301376 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 301376
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 301347 to 301376
run: 2062 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\o . nil)) character)
run: #(tagged record (character #\o . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\o . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 301376 to character
setm: ((1 tagged-value-address) (deref)): setting 301377 to #\o
run: 2063 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\o . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 301348 to character
run: 2064 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((301376 type) (raw))
sizeof: ((301376 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 301349 to character
run: 2065 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 301350 to t
run: 2066 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2067 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((301377 location) (raw))
sizeof: ((301377 location) (raw))
run: #\o => ((5 location))
setm: ((5 location)) <= #\o
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 301351 to #\o
run: 2068 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((5 character)))
reply: #\o => ((5 character))
setm: ((5 character)) <= #\o
setm: size of ((5 character)) is 1
setm: ((5 character)): setting 301006 to #\o
run: 2069 send-prints-to-stdout 5: (((6 boolean)) <- ((equal)) ((5 character)) ((  literal)))
m: ((5 character))
sizeof: ((5 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 301007 to nil
run: 2070 send-prints-to-stdout 6: (((jump-if)) ((6 boolean)) ((2 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 2071 send-prints-to-stdout 7: (((print-character)) ((1 terminal-address)) ((5 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 character))
sizeof: ((5 character))
run: 2072 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301378 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2073 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1183 #\o)
run: 1183 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1183
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 301380 to 1183
run: 2074 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1183 #\o)
run: #\o => ((2 character))
setm: ((2 character)) <= #\o
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 301381 to #\o
run: 2075 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 2076 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1185 => ((3 integer-address))
setm: ((3 integer-address)) <= 1185
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 301382 to 1185
run: 2077 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1186 => ((4 integer-address))
setm: ((4 integer-address)) <= 1186
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 301383 to 1186
run: 2078 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1184 integer) (raw))
sizeof: ((1184 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 301384 to 20
run: 2079 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 301385 to 0
run: 2080 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((7 integer))
setm: ((7 integer)) <= 2
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 301386 to 2
run: 2081 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1187 string-address) (raw))
sizeof: ((1187 string-address) (raw))
run: 1188 => ((8 string-address))
setm: ((8 string-address)) <= 1188
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 301387 to 1188
run: 2082 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1191 => ((9 byte-address))
setm: ((9 byte-address)) <= 1191
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 301388 to 1191
run: 2083 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\o => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\o
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1191 to #\o
run: 2084 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 3
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1186 to 3
run: 2085 print-character 13: (((reply)))
reply: nil nil
run: 2086 send-prints-to-stdout 8: (((jump)) ((-6 offset)))
run: 2087 send-prints-to-stdout 3: (((3 tagged-value)) ((2 channel-address) (deref)) <- ((read)) ((2 channel-address)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
run: 2088 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301409 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2089 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1144)
run: 1144 => ((1 channel-address))
setm: ((1 channel-address)) <= 1144
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 301411 to 1144
run: 2090 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2091 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301440 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2092 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1147 . nil)))
run: #(tagged record (1 1 1147 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 1 1147 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 301442 to 1
setm: ((1 channel)): setting 301443 to 1
setm: ((1 channel)): setting 301444 to 1147
run: 2093 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((301442 integer) (raw))
sizeof: ((301442 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 301445 to 1
run: 2094 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((301443 integer) (raw))
sizeof: ((301443 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 301446 to 1
run: 2095 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 301447 to t
run: 2096 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 301412 to t
run: 2097 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 2098 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1145 => ((3 integer-address))
setm: ((3 integer-address)) <= 1145
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 301413 to 1145
run: 2099 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/send-prints-to-stdout to sleep queue
schedule: waking up write/buffer-stdin
schedule: write/buffer-stdin
run: 2100 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1146 tagged-value-array-address) (raw))
sizeof: ((1146 tagged-value-array-address) (raw))
run: 1147 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1147
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 202009 to 1147
run: 2101 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1145 => ((7 integer-address))
setm: ((7 integer-address)) <= 1145
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 202010 to 1145
run: 2102 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1147 tagged-value-array) (raw))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1150 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1150
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 202011 to 1150
run: 2103 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\newline . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\newline . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1150 to character
setm: ((8 tagged-value-address) (deref)): setting 1151 to #\newline
run: 2104 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1145 to 2
run: 2105 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 202012 to 2
run: 2106 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 202013 to nil
run: 2107 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 2108 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1145 to 0
run: 2109 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (1 0 1147 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (1 0 1147 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1144 to 1
setm: ((2 channel-address) (deref)): setting 1145 to 0
setm: ((2 channel-address) (deref)): setting 1146 to 1147
run: 2110 buffer-stdin 23: (((10 integer)) <- ((add)) ((10 integer)) ((1 literal)))
m: ((10 integer))
sizeof: ((10 integer))
run: 4 => ((10 integer))
setm: ((10 integer)) <= 4
setm: size of ((10 integer)) is 1
setm: ((10 integer)): setting 201011 to 4
run: 2111 buffer-stdin 24: (((jump)) ((-7 offset)))
run: 2112 buffer-stdin 18: (((12 boolean)) <- ((greater-or-equal)) ((10 integer)) ((11 integer)))
m: ((10 integer))
sizeof: ((10 integer))
m: ((11 integer))
sizeof: ((11 integer))
run: t => ((12 boolean))
setm: ((12 boolean)) <= t
setm: size of ((12 boolean)) is 1
setm: ((12 boolean)): setting 201013 to t
run: 2113 buffer-stdin 19: (((jump-if)) ((12 boolean)) ((5 offset)))
m: ((12 boolean))
sizeof: ((12 boolean))
run: 2114 buffer-stdin 25: (((jump)) ((-22 offset)))
run: 2115 buffer-stdin 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 2116 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202095 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2117 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105)
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 202097 to 1105
run: 2118 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2119 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202126 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2120 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1108 . nil)))
run: #(tagged record (0 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 202128 to 0
setm: ((1 channel)): setting 202129 to 1
setm: ((1 channel)): setting 202130 to 1108
run: 2121 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((202128 integer) (raw))
sizeof: ((202128 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202131 to 0
run: 2122 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((202129 integer) (raw))
sizeof: ((202129 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 202132 to 1
run: 2123 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 202133 to nil
run: 2124 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: nil => ((2 boolean))
setm: ((2 boolean)) <= nil
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 202098 to nil
run: 2125 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 2126 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((4 integer-address))
setm: ((4 integer-address)) <= 1105
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 202100 to 1105
run: 2127 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1108
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 202101 to 1108
run: 2128 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1109 tagged-value) (raw))
sizeof: ((1109 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\l . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\l . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 202102 to character
setm: ((6 tagged-value)): setting 202103 to #\l
run: 2129 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 1
run: 2130 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 202104 to 2
run: 2131 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 202105 to t
run: 2132 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2133 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((4 tagged-value)) ((1 channel-address) (deref)))
reply: #(tagged record (character #\l . nil)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\l . nil))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 201005 to character
setm: ((4 tagged-value)): setting 201006 to #\l
reply: #(tagged record (1 1 1108 . nil)) => ((1 channel-address) (deref))
setm: ((1 channel-address) (deref)) <= #(tagged record (1 1 1108 . nil))
setm: size of ((1 channel-address) (deref)) is 3
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref)): setting 1105 to 1
setm: ((1 channel-address) (deref)): setting 1106 to 1
setm: ((1 channel-address) (deref)): setting 1107 to 1108
run: 2134 buffer-stdin 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2135 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202157 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2136 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 202188 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 202188
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 202159 to 202188
run: 2137 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\l . nil)) character)
run: #(tagged record (character #\l . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\l . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 202188 to character
setm: ((1 tagged-value-address) (deref)): setting 202189 to #\l
run: 2138 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\l . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 202160 to character
run: 2139 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((202188 type) (raw))
sizeof: ((202188 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 202161 to character
run: 2140 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 202162 to t
run: 2141 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2142 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((202189 location) (raw))
sizeof: ((202189 location) (raw))
run: #\l => ((5 location))
setm: ((5 location)) <= #\l
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 202163 to #\l
run: 2143 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((6 character)))
reply: #\l => ((6 character))
setm: ((6 character)) <= #\l
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\l
run: 2144 buffer-stdin 6: (((assert)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 2145 buffer-stdin 7: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
m: ((3 buffer-address))
sizeof: ((3 buffer-address))
m: ((6 character))
sizeof: ((6 character))
run: 2146 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202190 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2147 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\l)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 202192 to 201062
run: 2148 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\l)
run: #\l => ((2 character))
setm: ((2 character)) <= #\l
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 202193 to #\l
run: 2149 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 2150 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202221 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2151 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 202223 to 201062
run: 2152 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((201062 integer) (raw))
sizeof: ((201062 integer) (raw))
run: 4 => ((2 integer))
setm: ((2 integer)) <= 4
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 202224 to 4
run: 2153 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((3 string-address))
setm: ((3 string-address)) <= 201064
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 202225 to 201064
run: 2154 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202226 to 30
run: 2155 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 202227 to nil
run: 2156 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 202194 to nil
run: 2157 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 2158 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 201062 => ((4 integer-address))
setm: ((4 integer-address)) <= 201062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 202195 to 201062
run: 2159 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((5 string-address))
setm: ((5 string-address)) <= 201064
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 202196 to 201064
run: 2160 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
run: 201069 => ((6 byte-address))
setm: ((6 byte-address)) <= 201069
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 202197 to 201069
run: 2161 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\l => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\l
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 201069 to #\l
run: 2162 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 5 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 5
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 201062 to 5
run: 2163 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((3 buffer-address)))
reply: 201062 => ((3 buffer-address))
setm: ((3 buffer-address)) <= 201062
setm: size of ((3 buffer-address)) is 1
setm: ((3 buffer-address)): setting 201004 to 201062
run: 2164 buffer-stdin 8: (((7 string-address)) <- ((get)) ((3 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((7 string-address))
setm: ((7 string-address)) <= 201064
setm: size of ((7 string-address)) is 1
setm: ((7 string-address)): setting 201008 to 201064
run: 2165 buffer-stdin 9: (((8 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 201009 to nil
run: 2166 buffer-stdin 10: (((jump-if)) ((8 boolean)) ((3 offset)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 2167 buffer-stdin 11: (((9 boolean)) <- ((equal)) ((6 character)) ((  literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 201010 to nil
run: 2168 buffer-stdin 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2169 buffer-stdin 13: (((jump)) ((-10 offset)))
run: 2170 buffer-stdin 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 2171 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202252 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2172 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105)
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 202254 to 1105
run: 2173 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2174 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202283 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2175 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1108 . nil)))
run: #(tagged record (1 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 202285 to 1
setm: ((1 channel)): setting 202286 to 1
setm: ((1 channel)): setting 202287 to 1108
run: 2176 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((202285 integer) (raw))
sizeof: ((202285 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202288 to 1
run: 2177 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((202286 integer) (raw))
sizeof: ((202286 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 202289 to 1
run: 2178 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 202290 to t
run: 2179 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 202255 to t
run: 2180 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 2181 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((3 integer-address))
setm: ((3 integer-address)) <= 1106
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 202256 to 1106
run: 2182 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/buffer-stdin to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: waking up read/send-prints-to-stdout
schedule: write/send-keys-to-stdin
run: 2183 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1108
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 101689 to 1108
run: 2184 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((7 integer-address))
setm: ((7 integer-address)) <= 1106
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 101690 to 1106
run: 2185 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1111 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1111
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 101691 to 1111
run: 2186 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\i . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\i . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1111 to character
setm: ((8 tagged-value-address) (deref)): setting 1112 to #\i
run: 2187 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 2
run: 2188 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 101692 to 2
run: 2189 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101693 to nil
run: 2190 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 2191 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 0
run: 2192 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (1 0 1108 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (1 0 1108 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1105 to 1
setm: ((2 channel-address) (deref)): setting 1106 to 0
setm: ((2 channel-address) (deref)): setting 1107 to 1108
run: 2193 send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
m: ((3 character))
sizeof: ((3 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101007 to nil
run: 2194 send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 2195 send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: 2196 send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 2197 read-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101775 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2198 read-key 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1072)
run: 1072 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1072
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 101777 to 1072
run: 2199 read-key 2: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 2200 read-key 3: (((2 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1072 => ((2 integer-address))
setm: ((2 integer-address)) <= 1072
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 101778 to 1072
run: 2201 read-key 4: (((3 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1073 string-address) (raw))
sizeof: ((1073 string-address) (raw))
run: 1031 => ((3 string-address))
setm: ((3 string-address)) <= 1031
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 101779 to 1031
run: 2202 read-key 5: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101780 to 9
run: 2203 read-key 6: (((5 boolean)) <- ((greater-or-equal)) ((2 integer-address) (deref)) ((4 integer)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 101781 to nil
run: 2204 read-key 7: (((jump-unless)) ((5 boolean)) ((1 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 2205 read-key 9: (((6 character)) <- ((index)) ((3 string-address) (deref)) ((2 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
array-len: ((1031 string) (raw))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
sizeof: ((_ byte))
m: ((1038 byte) (raw))
sizeof: ((1038 byte) (raw))
run: #\n => ((6 character))
setm: ((6 character)) <= #\n
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 101782 to #\n
run: 2206 read-key 10: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 7 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 7
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1072 to 7
run: 2207 read-key 11: (((reply)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
reply: (((6 character))) (((3 character)))
reply: #\n => ((3 character))
setm: ((3 character)) <= #\n
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101004 to #\n
run: 2208 send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
m: ((3 character))
sizeof: ((3 character))
run: 2209 send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\n)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\n))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 101005 to character
setm: ((4 tagged-value)): setting 101006 to #\n
run: 2210 send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2211 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101806 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2212 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105 #(tagged record (character #\n . nil)))
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101808 to 1105
run: 2213 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1105 #(tagged record (character #\n . nil)))
run: #(tagged record (character #\n . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\n . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101809 to character
setm: ((2 tagged-value)): setting 101810 to #\n
run: 2214 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2215 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101837 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2216 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1108 . nil)))
run: #(tagged record (1 0 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101839 to 1
setm: ((1 channel)): setting 101840 to 0
setm: ((1 channel)): setting 101841 to 1108
run: 2217 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101840 integer) (raw))
sizeof: ((101840 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101842 to 0
run: 2218 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101842 to 1
run: 2219 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2220 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101868 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2221 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1108 . nil)))
run: #(tagged record (1 0 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101870 to 1
setm: ((1 channel)): setting 101871 to 0
setm: ((1 channel)): setting 101872 to 1108
run: 2222 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((101872 tagged-value-array-address) (raw))
sizeof: ((101872 tagged-value-array-address) (raw))
run: 1108 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1108
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 101873 to 1108
run: 2223 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101874 to 2
run: 2224 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101843 to 2
run: 2225 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101844 to t
run: 2226 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 2227 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101839 integer) (raw))
sizeof: ((101839 integer) (raw))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101845 to 1
run: 2228 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 101846 to t
run: 2229 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101811 to t
run: 2230 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2231 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((5 integer-address))
setm: ((5 integer-address)) <= 1105
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 101812 to 1105
run: 2232 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-stdin
schedule: read/send-prints-to-stdout
run: 2233 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1144 => ((4 integer-address))
setm: ((4 integer-address)) <= 1144
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 301414 to 1144
run: 2234 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1146 tagged-value-array-address) (raw))
sizeof: ((1146 tagged-value-array-address) (raw))
run: 1147 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1147
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 301415 to 1147
run: 2235 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1147 tagged-value-array) (raw))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1150 tagged-value) (raw))
sizeof: ((1150 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\newline . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\newline . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 301416 to character
setm: ((6 tagged-value)): setting 301417 to #\newline
run: 2236 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1144 to 2
run: 2237 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1147 integer) (raw))
sizeof: ((1147 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 301418 to 2
run: 2238 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 301419 to nil
run: 2239 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2240 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1144 to 0
run: 2241 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((3 tagged-value)) ((2 channel-address) (deref)))
reply: #(tagged record (character #\newline . nil)) => ((3 tagged-value))
setm: ((3 tagged-value)) <= #(tagged record (character #\newline . nil))
setm: size of ((3 tagged-value)) is 2
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((3 tagged-value)): setting 301004 to character
setm: ((3 tagged-value)): setting 301005 to #\newline
reply: #(tagged record (0 0 1147 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (0 0 1147 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1144 to 0
setm: ((2 channel-address) (deref)): setting 1145 to 0
setm: ((2 channel-address) (deref)): setting 1146 to 1147
run: 2242 send-prints-to-stdout 4: (((5 character)) <- ((maybe-coerce)) ((3 tagged-value)) ((character literal)))
m: ((3 tagged-value))
sizeof: ((3 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2243 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301471 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2244 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 301502 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 301502
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 301473 to 301502
run: 2245 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\newline . nil)) character)
run: #(tagged record (character #\newline . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\newline . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 301502 to character
setm: ((1 tagged-value-address) (deref)): setting 301503 to #\newline
run: 2246 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\newline . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 301474 to character
run: 2247 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((301502 type) (raw))
sizeof: ((301502 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 301475 to character
run: 2248 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 301476 to t
run: 2249 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2250 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((301503 location) (raw))
sizeof: ((301503 location) (raw))
run: #\newline => ((5 location))
setm: ((5 location)) <= #\newline
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 301477 to #\newline
run: 2251 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((5 character)))
reply: #\newline => ((5 character))
setm: ((5 character)) <= #\newline
setm: size of ((5 character)) is 1
setm: ((5 character)): setting 301006 to #\newline
run: 2252 send-prints-to-stdout 5: (((6 boolean)) <- ((equal)) ((5 character)) ((  literal)))
m: ((5 character))
sizeof: ((5 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 301007 to nil
run: 2253 send-prints-to-stdout 6: (((jump-if)) ((6 boolean)) ((2 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 2254 send-prints-to-stdout 7: (((print-character)) ((1 terminal-address)) ((5 character)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
m: ((5 character))
sizeof: ((5 character))
run: 2255 print-character 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301504 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2256 print-character 1: (((1 terminal-address)) <- ((next-input)))
arg: nil 0 (1183 #\newline)
run: 1183 => ((1 terminal-address))
setm: ((1 terminal-address)) <= 1183
setm: size of ((1 terminal-address)) is 1
setm: ((1 terminal-address)): setting 301506 to 1183
run: 2257 print-character 2: (((2 character)) <- ((next-input)))
arg: nil 1 (1183 #\newline)
run: #\newline => ((2 character))
setm: ((2 character)) <= #\newline
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 301507 to #\newline
run: 2258 print-character 3: (((jump-unless)) ((1 terminal-address)) ((10 offset)))
m: ((1 terminal-address))
sizeof: ((1 terminal-address))
run: 2259 print-character 4: (((3 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1185 => ((3 integer-address))
setm: ((3 integer-address)) <= 1185
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 301508 to 1185
run: 2260 print-character 5: (((4 integer-address)) <- ((get-address)) ((1 terminal-address) (deref)) ((3 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
run: 1186 => ((4 integer-address))
setm: ((4 integer-address)) <= 1186
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 301509 to 1186
run: 2261 print-character 6: (((5 integer)) <- ((get)) ((1 terminal-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1184 integer) (raw))
sizeof: ((1184 integer) (raw))
run: 20 => ((5 integer))
setm: ((5 integer)) <= 20
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 301510 to 20
run: 2262 print-character 7: (((6 integer)) <- ((multiply)) ((3 integer-address) (deref)) ((5 integer)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
m: ((5 integer))
sizeof: ((5 integer))
run: 0 => ((6 integer))
setm: ((6 integer)) <= 0
setm: size of ((6 integer)) is 1
setm: ((6 integer)): setting 301511 to 0
run: 2263 print-character 8: (((7 integer)) <- ((add)) ((6 integer)) ((4 integer-address) (deref)))
m: ((6 integer))
sizeof: ((6 integer))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 3 => ((7 integer))
setm: ((7 integer)) <= 3
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 301512 to 3
run: 2264 print-character 9: (((8 string-address)) <- ((get)) ((1 terminal-address) (deref)) ((4 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1187 string-address) (raw))
sizeof: ((1187 string-address) (raw))
run: 1188 => ((8 string-address))
setm: ((8 string-address)) <= 1188
setm: size of ((8 string-address)) is 1
setm: ((8 string-address)): setting 301513 to 1188
run: 2265 print-character 10: (((9 byte-address)) <- ((index-address)) ((8 string-address) (deref)) ((7 integer)))
m: ((7 integer))
sizeof: ((7 integer))
array-len: ((1188 string) (raw))
m: ((1188 integer) (raw))
sizeof: ((1188 integer) (raw))
sizeof: ((_ byte))
run: 1192 => ((9 byte-address))
setm: ((9 byte-address)) <= 1192
setm: size of ((9 byte-address)) is 1
setm: ((9 byte-address)): setting 301514 to 1192
run: 2266 print-character 11: (((9 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\newline => ((9 byte-address) (deref))
setm: ((9 byte-address) (deref)) <= #\newline
setm: size of ((9 byte-address) (deref)) is 1
setm: ((9 byte-address) (deref)): setting 1192 to #\newline
run: 2267 print-character 12: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 4 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 4
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1186 to 4
run: 2268 print-character 13: (((reply)))
reply: nil nil
run: 2269 send-prints-to-stdout 8: (((jump)) ((-6 offset)))
run: 2270 send-prints-to-stdout 3: (((3 tagged-value)) ((2 channel-address) (deref)) <- ((read)) ((2 channel-address)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
run: 2271 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301535 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2272 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1144)
run: 1144 => ((1 channel-address))
setm: ((1 channel-address)) <= 1144
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 301537 to 1144
run: 2273 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2274 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 301566 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2275 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1147 . nil)))
run: #(tagged record (0 0 1147 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1147 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 301568 to 0
setm: ((1 channel)): setting 301569 to 0
setm: ((1 channel)): setting 301570 to 1147
run: 2276 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((301568 integer) (raw))
sizeof: ((301568 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 301571 to 0
run: 2277 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((301569 integer) (raw))
sizeof: ((301569 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 301572 to 0
run: 2278 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 301573 to t
run: 2279 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 301538 to t
run: 2280 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 2281 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1145 => ((3 integer-address))
setm: ((3 integer-address)) <= 1145
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 301539 to 1145
run: 2282 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/send-prints-to-stdout to sleep queue
schedule: read/buffer-stdin
run: 2283 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((4 integer-address))
setm: ((4 integer-address)) <= 1105
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 202257 to 1105
run: 2284 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1108
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 202258 to 1108
run: 2285 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1111 tagged-value) (raw))
sizeof: ((1111 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\i . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\i . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 202259 to character
setm: ((6 tagged-value)): setting 202260 to #\i
run: 2286 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 2
run: 2287 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 202261 to 2
run: 2288 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 202262 to nil
run: 2289 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2290 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 0
run: 2291 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((4 tagged-value)) ((1 channel-address) (deref)))
reply: #(tagged record (character #\i . nil)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\i . nil))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 201005 to character
setm: ((4 tagged-value)): setting 201006 to #\i
reply: #(tagged record (0 0 1108 . nil)) => ((1 channel-address) (deref))
setm: ((1 channel-address) (deref)) <= #(tagged record (0 0 1108 . nil))
setm: size of ((1 channel-address) (deref)) is 3
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref)): setting 1105 to 0
setm: ((1 channel-address) (deref)): setting 1106 to 0
setm: ((1 channel-address) (deref)): setting 1107 to 1108
run: 2292 buffer-stdin 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2293 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202314 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2294 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 202345 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 202345
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 202316 to 202345
run: 2295 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\i . nil)) character)
run: #(tagged record (character #\i . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\i . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 202345 to character
setm: ((1 tagged-value-address) (deref)): setting 202346 to #\i
run: 2296 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\i . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 202317 to character
run: 2297 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((202345 type) (raw))
sizeof: ((202345 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 202318 to character
run: 2298 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 202319 to t
run: 2299 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2300 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((202346 location) (raw))
sizeof: ((202346 location) (raw))
run: #\i => ((5 location))
setm: ((5 location)) <= #\i
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 202320 to #\i
run: 2301 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((6 character)))
reply: #\i => ((6 character))
setm: ((6 character)) <= #\i
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\i
run: 2302 buffer-stdin 6: (((assert)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 2303 buffer-stdin 7: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
m: ((3 buffer-address))
sizeof: ((3 buffer-address))
m: ((6 character))
sizeof: ((6 character))
run: 2304 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202347 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2305 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\i)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 202349 to 201062
run: 2306 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\i)
run: #\i => ((2 character))
setm: ((2 character)) <= #\i
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 202350 to #\i
run: 2307 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 2308 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202378 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2309 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 202380 to 201062
run: 2310 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((201062 integer) (raw))
sizeof: ((201062 integer) (raw))
run: 5 => ((2 integer))
setm: ((2 integer)) <= 5
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 202381 to 5
run: 2311 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((3 string-address))
setm: ((3 string-address)) <= 201064
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 202382 to 201064
run: 2312 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202383 to 30
run: 2313 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 202384 to nil
run: 2314 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 202351 to nil
run: 2315 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 2316 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 201062 => ((4 integer-address))
setm: ((4 integer-address)) <= 201062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 202352 to 201062
run: 2317 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((5 string-address))
setm: ((5 string-address)) <= 201064
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 202353 to 201064
run: 2318 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
run: 201070 => ((6 byte-address))
setm: ((6 byte-address)) <= 201070
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 202354 to 201070
run: 2319 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\i => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\i
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 201070 to #\i
run: 2320 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 6 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 6
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 201062 to 6
run: 2321 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((3 buffer-address)))
reply: 201062 => ((3 buffer-address))
setm: ((3 buffer-address)) <= 201062
setm: size of ((3 buffer-address)) is 1
setm: ((3 buffer-address)): setting 201004 to 201062
run: 2322 buffer-stdin 8: (((7 string-address)) <- ((get)) ((3 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((7 string-address))
setm: ((7 string-address)) <= 201064
setm: size of ((7 string-address)) is 1
setm: ((7 string-address)): setting 201008 to 201064
run: 2323 buffer-stdin 9: (((8 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 201009 to nil
run: 2324 buffer-stdin 10: (((jump-if)) ((8 boolean)) ((3 offset)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 2325 buffer-stdin 11: (((9 boolean)) <- ((equal)) ((6 character)) ((  literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 201010 to nil
run: 2326 buffer-stdin 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2327 buffer-stdin 13: (((jump)) ((-10 offset)))
run: 2328 buffer-stdin 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 2329 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202409 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2330 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105)
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 202411 to 1105
run: 2331 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2332 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202440 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2333 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1108 . nil)))
run: #(tagged record (0 0 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 202442 to 0
setm: ((1 channel)): setting 202443 to 0
setm: ((1 channel)): setting 202444 to 1108
run: 2334 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((202442 integer) (raw))
sizeof: ((202442 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202445 to 0
run: 2335 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((202443 integer) (raw))
sizeof: ((202443 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 202446 to 0
run: 2336 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 202447 to t
run: 2337 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 202412 to t
run: 2338 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 2339 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((3 integer-address))
setm: ((3 integer-address)) <= 1106
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 202413 to 1106
run: 2340 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/buffer-stdin to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: write/send-keys-to-stdin
run: 2341 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1108
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 101813 to 1108
run: 2342 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((7 integer-address))
setm: ((7 integer-address)) <= 1106
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 101814 to 1106
run: 2343 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1109 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1109
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 101815 to 1109
run: 2344 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\n . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\n . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1109 to character
setm: ((8 tagged-value-address) (deref)): setting 1110 to #\n
run: 2345 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 1
run: 2346 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 101816 to 2
run: 2347 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101817 to t
run: 2348 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 2349 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (0 1 1108 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1105 to 0
setm: ((2 channel-address) (deref)): setting 1106 to 1
setm: ((2 channel-address) (deref)): setting 1107 to 1108
run: 2350 send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
m: ((3 character))
sizeof: ((3 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101007 to nil
run: 2351 send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 2352 send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: 2353 send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 2354 read-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101899 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2355 read-key 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1072)
run: 1072 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1072
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 101901 to 1072
run: 2356 read-key 2: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 2357 read-key 3: (((2 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1072 => ((2 integer-address))
setm: ((2 integer-address)) <= 1072
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 101902 to 1072
run: 2358 read-key 4: (((3 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1073 string-address) (raw))
sizeof: ((1073 string-address) (raw))
run: 1031 => ((3 string-address))
setm: ((3 string-address)) <= 1031
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 101903 to 1031
run: 2359 read-key 5: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101904 to 9
run: 2360 read-key 6: (((5 boolean)) <- ((greater-or-equal)) ((2 integer-address) (deref)) ((4 integer)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 101905 to nil
run: 2361 read-key 7: (((jump-unless)) ((5 boolean)) ((1 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 2362 read-key 9: (((6 character)) <- ((index)) ((3 string-address) (deref)) ((2 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
array-len: ((1031 string) (raw))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
sizeof: ((_ byte))
m: ((1039 byte) (raw))
sizeof: ((1039 byte) (raw))
run: #\e => ((6 character))
setm: ((6 character)) <= #\e
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 101906 to #\e
run: 2363 read-key 10: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 8 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 8
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1072 to 8
run: 2364 read-key 11: (((reply)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
reply: (((6 character))) (((3 character)))
reply: #\e => ((3 character))
setm: ((3 character)) <= #\e
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101004 to #\e
run: 2365 send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
m: ((3 character))
sizeof: ((3 character))
run: 2366 send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\e)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\e))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 101005 to character
setm: ((4 tagged-value)): setting 101006 to #\e
run: 2367 send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2368 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101930 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2369 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105 #(tagged record (character #\e . nil)))
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 101932 to 1105
run: 2370 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1105 #(tagged record (character #\e . nil)))
run: #(tagged record (character #\e . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\e . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 101933 to character
setm: ((2 tagged-value)): setting 101934 to #\e
run: 2371 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2372 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101961 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2373 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1108 . nil)))
run: #(tagged record (0 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101963 to 0
setm: ((1 channel)): setting 101964 to 1
setm: ((1 channel)): setting 101965 to 1108
run: 2374 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((101964 integer) (raw))
sizeof: ((101964 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101966 to 1
run: 2375 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101966 to 2
run: 2376 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2377 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 101992 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2378 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1108 . nil)))
run: #(tagged record (0 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 101994 to 0
setm: ((1 channel)): setting 101995 to 1
setm: ((1 channel)): setting 101996 to 1108
run: 2379 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((101996 tagged-value-array-address) (raw))
sizeof: ((101996 tagged-value-array-address) (raw))
run: 1108 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1108
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 101997 to 1108
run: 2380 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101998 to 2
run: 2381 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 101967 to 2
run: 2382 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101968 to nil
run: 2383 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 2384 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 101966 to 0
run: 2385 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((101963 integer) (raw))
sizeof: ((101963 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 101969 to 0
run: 2386 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 101970 to t
run: 2387 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 101935 to t
run: 2388 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2389 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((5 integer-address))
setm: ((5 integer-address)) <= 1105
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 101936 to 1105
run: 2390 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-stdin
schedule: read/buffer-stdin
run: 2391 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((4 integer-address))
setm: ((4 integer-address)) <= 1105
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 202414 to 1105
run: 2392 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1108
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 202415 to 1108
run: 2393 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1109 tagged-value) (raw))
sizeof: ((1109 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\n . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\n . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 202416 to character
setm: ((6 tagged-value)): setting 202417 to #\n
run: 2394 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 1
run: 2395 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 202418 to 2
run: 2396 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 202419 to t
run: 2397 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2398 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((4 tagged-value)) ((1 channel-address) (deref)))
reply: #(tagged record (character #\n . nil)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\n . nil))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 201005 to character
setm: ((4 tagged-value)): setting 201006 to #\n
reply: #(tagged record (1 1 1108 . nil)) => ((1 channel-address) (deref))
setm: ((1 channel-address) (deref)) <= #(tagged record (1 1 1108 . nil))
setm: size of ((1 channel-address) (deref)) is 3
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref)): setting 1105 to 1
setm: ((1 channel-address) (deref)): setting 1106 to 1
setm: ((1 channel-address) (deref)): setting 1107 to 1108
run: 2399 buffer-stdin 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2400 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202471 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2401 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 202502 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 202502
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 202473 to 202502
run: 2402 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\n . nil)) character)
run: #(tagged record (character #\n . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\n . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 202502 to character
setm: ((1 tagged-value-address) (deref)): setting 202503 to #\n
run: 2403 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\n . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 202474 to character
run: 2404 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((202502 type) (raw))
sizeof: ((202502 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 202475 to character
run: 2405 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 202476 to t
run: 2406 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2407 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((202503 location) (raw))
sizeof: ((202503 location) (raw))
run: #\n => ((5 location))
setm: ((5 location)) <= #\n
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 202477 to #\n
run: 2408 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((6 character)))
reply: #\n => ((6 character))
setm: ((6 character)) <= #\n
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\n
run: 2409 buffer-stdin 6: (((assert)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 2410 buffer-stdin 7: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
m: ((3 buffer-address))
sizeof: ((3 buffer-address))
m: ((6 character))
sizeof: ((6 character))
run: 2411 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202504 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2412 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\n)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 202506 to 201062
run: 2413 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\n)
run: #\n => ((2 character))
setm: ((2 character)) <= #\n
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 202507 to #\n
run: 2414 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 2415 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202535 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2416 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 202537 to 201062
run: 2417 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((201062 integer) (raw))
sizeof: ((201062 integer) (raw))
run: 6 => ((2 integer))
setm: ((2 integer)) <= 6
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 202538 to 6
run: 2418 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((3 string-address))
setm: ((3 string-address)) <= 201064
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 202539 to 201064
run: 2419 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202540 to 30
run: 2420 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 202541 to nil
run: 2421 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 202508 to nil
run: 2422 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 2423 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 201062 => ((4 integer-address))
setm: ((4 integer-address)) <= 201062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 202509 to 201062
run: 2424 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((5 string-address))
setm: ((5 string-address)) <= 201064
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 202510 to 201064
run: 2425 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
run: 201071 => ((6 byte-address))
setm: ((6 byte-address)) <= 201071
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 202511 to 201071
run: 2426 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\n => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\n
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 201071 to #\n
run: 2427 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 7 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 7
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 201062 to 7
run: 2428 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((3 buffer-address)))
reply: 201062 => ((3 buffer-address))
setm: ((3 buffer-address)) <= 201062
setm: size of ((3 buffer-address)) is 1
setm: ((3 buffer-address)): setting 201004 to 201062
run: 2429 buffer-stdin 8: (((7 string-address)) <- ((get)) ((3 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((7 string-address))
setm: ((7 string-address)) <= 201064
setm: size of ((7 string-address)) is 1
setm: ((7 string-address)): setting 201008 to 201064
run: 2430 buffer-stdin 9: (((8 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 201009 to nil
run: 2431 buffer-stdin 10: (((jump-if)) ((8 boolean)) ((3 offset)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 2432 buffer-stdin 11: (((9 boolean)) <- ((equal)) ((6 character)) ((  literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 201010 to nil
run: 2433 buffer-stdin 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2434 buffer-stdin 13: (((jump)) ((-10 offset)))
run: 2435 buffer-stdin 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 2436 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202566 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2437 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105)
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 202568 to 1105
run: 2438 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2439 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202597 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2440 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1108 . nil)))
run: #(tagged record (1 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 202599 to 1
setm: ((1 channel)): setting 202600 to 1
setm: ((1 channel)): setting 202601 to 1108
run: 2441 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((202599 integer) (raw))
sizeof: ((202599 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202602 to 1
run: 2442 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((202600 integer) (raw))
sizeof: ((202600 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 202603 to 1
run: 2443 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 202604 to t
run: 2444 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 202569 to t
run: 2445 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 2446 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((3 integer-address))
setm: ((3 integer-address)) <= 1106
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 202570 to 1106
run: 2447 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/buffer-stdin to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: write/send-keys-to-stdin
run: 2448 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1108
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 101937 to 1108
run: 2449 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((7 integer-address))
setm: ((7 integer-address)) <= 1106
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 101938 to 1106
run: 2450 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1111 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1111
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 101939 to 1111
run: 2451 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\e . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\e . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1111 to character
setm: ((8 tagged-value-address) (deref)): setting 1112 to #\e
run: 2452 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 2
run: 2453 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 101940 to 2
run: 2454 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 101941 to nil
run: 2455 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 2456 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 0
run: 2457 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (1 0 1108 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (1 0 1108 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1105 to 1
setm: ((2 channel-address) (deref)): setting 1106 to 0
setm: ((2 channel-address) (deref)): setting 1107 to 1108
run: 2458 send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
m: ((3 character))
sizeof: ((3 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101007 to nil
run: 2459 send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 2460 send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: 2461 send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 2462 read-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 102023 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2463 read-key 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1072)
run: 1072 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1072
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 102025 to 1072
run: 2464 read-key 2: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 2465 read-key 3: (((2 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1072 => ((2 integer-address))
setm: ((2 integer-address)) <= 1072
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 102026 to 1072
run: 2466 read-key 4: (((3 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1073 string-address) (raw))
sizeof: ((1073 string-address) (raw))
run: 1031 => ((3 string-address))
setm: ((3 string-address)) <= 1031
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 102027 to 1031
run: 2467 read-key 5: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 102028 to 9
run: 2468 read-key 6: (((5 boolean)) <- ((greater-or-equal)) ((2 integer-address) (deref)) ((4 integer)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 102029 to nil
run: 2469 read-key 7: (((jump-unless)) ((5 boolean)) ((1 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 2470 read-key 9: (((6 character)) <- ((index)) ((3 string-address) (deref)) ((2 integer-address) (deref)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
array-len: ((1031 string) (raw))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
sizeof: ((_ byte))
m: ((1040 byte) (raw))
sizeof: ((1040 byte) (raw))
run: #\2 => ((6 character))
setm: ((6 character)) <= #\2
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 102030 to #\2
run: 2471 read-key 10: (((2 integer-address) (deref)) <- ((add)) ((2 integer-address) (deref)) ((1 literal)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
run: 9 => ((2 integer-address) (deref))
setm: ((2 integer-address) (deref)) <= 9
setm: size of ((2 integer-address) (deref)) is 1
setm: ((2 integer-address) (deref)): setting 1072 to 9
run: 2472 read-key 11: (((reply)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
reply: (((6 character))) (((3 character)))
reply: #\2 => ((3 character))
setm: ((3 character)) <= #\2
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101004 to #\2
run: 2473 send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
m: ((3 character))
sizeof: ((3 character))
run: 2474 send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\2)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\2))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 101005 to character
setm: ((4 tagged-value)): setting 101006 to #\2
run: 2475 send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2476 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 102054 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2477 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105 #(tagged record (character #\2 . nil)))
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 102056 to 1105
run: 2478 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1105 #(tagged record (character #\2 . nil)))
run: #(tagged record (character #\2 . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\2 . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 102057 to character
setm: ((2 tagged-value)): setting 102058 to #\2
run: 2479 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2480 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 102085 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2481 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1108 . nil)))
run: #(tagged record (1 0 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 102087 to 1
setm: ((1 channel)): setting 102088 to 0
setm: ((1 channel)): setting 102089 to 1108
run: 2482 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((102088 integer) (raw))
sizeof: ((102088 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 102090 to 0
run: 2483 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 102090 to 1
run: 2484 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2485 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 102116 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2486 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 0 1108 . nil)))
run: #(tagged record (1 0 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 0 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 102118 to 1
setm: ((1 channel)): setting 102119 to 0
setm: ((1 channel)): setting 102120 to 1108
run: 2487 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((102120 tagged-value-array-address) (raw))
sizeof: ((102120 tagged-value-array-address) (raw))
run: 1108 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1108
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 102121 to 1108
run: 2488 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 102122 to 2
run: 2489 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 102091 to 2
run: 2490 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 102092 to t
run: 2491 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 2492 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((102087 integer) (raw))
sizeof: ((102087 integer) (raw))
run: 1 => ((7 integer))
setm: ((7 integer)) <= 1
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 102093 to 1
run: 2493 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 102094 to t
run: 2494 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 102059 to t
run: 2495 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2496 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((5 integer-address))
setm: ((5 integer-address)) <= 1105
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 102060 to 1105
run: 2497 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-stdin
schedule: read/buffer-stdin
run: 2498 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((4 integer-address))
setm: ((4 integer-address)) <= 1105
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 202571 to 1105
run: 2499 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1108
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 202572 to 1108
run: 2500 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1111 tagged-value) (raw))
sizeof: ((1111 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\e . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\e . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 202573 to character
setm: ((6 tagged-value)): setting 202574 to #\e
run: 2501 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 2
run: 2502 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 202575 to 2
run: 2503 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 202576 to nil
run: 2504 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2505 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 0
run: 2506 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((4 tagged-value)) ((1 channel-address) (deref)))
reply: #(tagged record (character #\e . nil)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\e . nil))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 201005 to character
setm: ((4 tagged-value)): setting 201006 to #\e
reply: #(tagged record (0 0 1108 . nil)) => ((1 channel-address) (deref))
setm: ((1 channel-address) (deref)) <= #(tagged record (0 0 1108 . nil))
setm: size of ((1 channel-address) (deref)) is 3
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref)): setting 1105 to 0
setm: ((1 channel-address) (deref)): setting 1106 to 0
setm: ((1 channel-address) (deref)): setting 1107 to 1108
run: 2507 buffer-stdin 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2508 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202628 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2509 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 202659 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 202659
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 202630 to 202659
run: 2510 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\e . nil)) character)
run: #(tagged record (character #\e . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\e . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 202659 to character
setm: ((1 tagged-value-address) (deref)): setting 202660 to #\e
run: 2511 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\e . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 202631 to character
run: 2512 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((202659 type) (raw))
sizeof: ((202659 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 202632 to character
run: 2513 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 202633 to t
run: 2514 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2515 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((202660 location) (raw))
sizeof: ((202660 location) (raw))
run: #\e => ((5 location))
setm: ((5 location)) <= #\e
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 202634 to #\e
run: 2516 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((6 character)))
reply: #\e => ((6 character))
setm: ((6 character)) <= #\e
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\e
run: 2517 buffer-stdin 6: (((assert)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 2518 buffer-stdin 7: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
m: ((3 buffer-address))
sizeof: ((3 buffer-address))
m: ((6 character))
sizeof: ((6 character))
run: 2519 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202661 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2520 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\e)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 202663 to 201062
run: 2521 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\e)
run: #\e => ((2 character))
setm: ((2 character)) <= #\e
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 202664 to #\e
run: 2522 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 2523 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202692 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2524 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 202694 to 201062
run: 2525 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((201062 integer) (raw))
sizeof: ((201062 integer) (raw))
run: 7 => ((2 integer))
setm: ((2 integer)) <= 7
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 202695 to 7
run: 2526 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((3 string-address))
setm: ((3 string-address)) <= 201064
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 202696 to 201064
run: 2527 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202697 to 30
run: 2528 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 202698 to nil
run: 2529 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 202665 to nil
run: 2530 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 2531 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 201062 => ((4 integer-address))
setm: ((4 integer-address)) <= 201062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 202666 to 201062
run: 2532 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((5 string-address))
setm: ((5 string-address)) <= 201064
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 202667 to 201064
run: 2533 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
run: 201072 => ((6 byte-address))
setm: ((6 byte-address)) <= 201072
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 202668 to 201072
run: 2534 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\e => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\e
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 201072 to #\e
run: 2535 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 8 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 8
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 201062 to 8
run: 2536 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((3 buffer-address)))
reply: 201062 => ((3 buffer-address))
setm: ((3 buffer-address)) <= 201062
setm: size of ((3 buffer-address)) is 1
setm: ((3 buffer-address)): setting 201004 to 201062
run: 2537 buffer-stdin 8: (((7 string-address)) <- ((get)) ((3 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((7 string-address))
setm: ((7 string-address)) <= 201064
setm: size of ((7 string-address)) is 1
setm: ((7 string-address)): setting 201008 to 201064
run: 2538 buffer-stdin 9: (((8 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 201009 to nil
run: 2539 buffer-stdin 10: (((jump-if)) ((8 boolean)) ((3 offset)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 2540 buffer-stdin 11: (((9 boolean)) <- ((equal)) ((6 character)) ((  literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 201010 to nil
run: 2541 buffer-stdin 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2542 buffer-stdin 13: (((jump)) ((-10 offset)))
run: 2543 buffer-stdin 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 2544 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202723 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2545 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105)
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 202725 to 1105
run: 2546 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2547 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202754 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2548 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 0 1108 . nil)))
run: #(tagged record (0 0 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 0 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 202756 to 0
setm: ((1 channel)): setting 202757 to 0
setm: ((1 channel)): setting 202758 to 1108
run: 2549 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((202756 integer) (raw))
sizeof: ((202756 integer) (raw))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202759 to 0
run: 2550 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((202757 integer) (raw))
sizeof: ((202757 integer) (raw))
run: 0 => ((5 integer))
setm: ((5 integer)) <= 0
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 202760 to 0
run: 2551 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 202761 to t
run: 2552 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 202726 to t
run: 2553 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 2554 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((3 integer-address))
setm: ((3 integer-address)) <= 1106
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 202727 to 1106
run: 2555 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/buffer-stdin to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: write/send-keys-to-stdin
run: 2556 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1108
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 102061 to 1108
run: 2557 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((7 integer-address))
setm: ((7 integer-address)) <= 1106
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 102062 to 1106
run: 2558 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1109 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1109
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 102063 to 1109
run: 2559 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\2 . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\2 . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1109 to character
setm: ((8 tagged-value-address) (deref)): setting 1110 to #\2
run: 2560 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 1 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 1
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 1
run: 2561 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 102064 to 2
run: 2562 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: t => ((10 boolean))
setm: ((10 boolean)) <= t
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 102065 to t
run: 2563 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 2564 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (0 1 1108 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1105 to 0
setm: ((2 channel-address) (deref)): setting 1106 to 1
setm: ((2 channel-address) (deref)): setting 1107 to 1108
run: 2565 send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
m: ((3 character))
sizeof: ((3 character))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101007 to nil
run: 2566 send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 2567 send-keys-to-stdin 9: (((jump)) ((-7 offset)))
run: 2568 send-keys-to-stdin 3: (((3 character)) <- ((read-key)) ((1 keyboard-address)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 2569 read-key 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 102147 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2570 read-key 1: (((1 keyboard-address)) <- ((next-input)))
arg: nil 0 (1072)
run: 1072 => ((1 keyboard-address))
setm: ((1 keyboard-address)) <= 1072
setm: size of ((1 keyboard-address)) is 1
setm: ((1 keyboard-address)): setting 102149 to 1072
run: 2571 read-key 2: (((jump-unless)) ((1 keyboard-address)) ((9 offset)))
m: ((1 keyboard-address))
sizeof: ((1 keyboard-address))
run: 2572 read-key 3: (((2 integer-address)) <- ((get-address)) ((1 keyboard-address) (deref)) ((0 offset)))
run: 1072 => ((2 integer-address))
setm: ((2 integer-address)) <= 1072
setm: size of ((2 integer-address)) is 1
setm: ((2 integer-address)): setting 102150 to 1072
run: 2573 read-key 4: (((3 string-address)) <- ((get)) ((1 keyboard-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((1073 string-address) (raw))
sizeof: ((1073 string-address) (raw))
run: 1031 => ((3 string-address))
setm: ((3 string-address)) <= 1031
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 102151 to 1031
run: 2574 read-key 5: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((1031 integer) (raw))
sizeof: ((1031 integer) (raw))
run: 9 => ((4 integer))
setm: ((4 integer)) <= 9
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 102152 to 9
run: 2575 read-key 6: (((5 boolean)) <- ((greater-or-equal)) ((2 integer-address) (deref)) ((4 integer)))
m: ((2 integer-address) (deref))
sizeof: ((2 integer-address) (deref))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((5 boolean))
setm: ((5 boolean)) <= t
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 102153 to t
run: 2576 read-key 7: (((jump-unless)) ((5 boolean)) ((1 offset)))
m: ((5 boolean))
sizeof: ((5 boolean))
run: 2577 read-key 8: (((reply)) ((  literal)))
reply: (((#\nul literal))) (((3 character)))
reply: #\nul => ((3 character))
setm: ((3 character)) <= #\nul
setm: size of ((3 character)) is 1
setm: ((3 character)): setting 101004 to #\nul
run: 2578 send-keys-to-stdin 4: (((jump-unless)) ((3 character)) ((-2 offset)))
m: ((3 character))
sizeof: ((3 character))
run: 2579 send-keys-to-stdin 5: (((4 tagged-value)) <- ((save-type)) ((3 character)))
m: ((3 character))
sizeof: ((3 character))
run: #(tagged record (character #\nul)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\nul))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 101005 to character
setm: ((4 tagged-value)): setting 101006 to #\nul
run: 2580 send-keys-to-stdin 6: (((2 channel-address) (deref)) <- ((write)) ((2 channel-address)) ((4 tagged-value)))
m: ((2 channel-address))
sizeof: ((2 channel-address))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2581 write 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 102178 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2582 write 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105 #(tagged record (character #\nul . nil)))
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 102180 to 1105
run: 2583 write 2: (((2 tagged-value)) <- ((next-input)))
arg: nil 1 (1105 #(tagged record (character #\nul . nil)))
run: #(tagged record (character #\nul . nil)) => ((2 tagged-value))
setm: ((2 tagged-value)) <= #(tagged record (character #\nul . nil))
setm: size of ((2 tagged-value)) is 2
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((2 tagged-value)): setting 102181 to character
setm: ((2 tagged-value)): setting 102182 to #\nul
run: 2584 write 3: (((4 boolean)) <- ((full?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2585 full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 102209 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2586 full? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1108 . nil)))
run: #(tagged record (0 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 102211 to 0
setm: ((1 channel)): setting 102212 to 1
setm: ((1 channel)): setting 102213 to 1108
run: 2587 full? 2: (((4 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((102212 integer) (raw))
sizeof: ((102212 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 102214 to 1
run: 2588 full? 3: (((4 integer)) <- ((add)) ((4 integer)) ((1 literal)))
m: ((4 integer))
sizeof: ((4 integer))
run: 2 => ((4 integer))
setm: ((4 integer)) <= 2
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 102214 to 2
run: 2589 full? 4: (((5 integer)) <- ((capacity)) ((1 channel)))
m: ((1 channel))
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2590 capacity 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 102240 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2591 capacity 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (0 1 1108 . nil)))
run: #(tagged record (0 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (0 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 102242 to 0
setm: ((1 channel)): setting 102243 to 1
setm: ((1 channel)): setting 102244 to 1108
run: 2592 capacity 2: (((4 tagged-value-array-address)) <- ((get)) ((1 channel)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((102244 tagged-value-array-address) (raw))
sizeof: ((102244 tagged-value-array-address) (raw))
run: 1108 => ((4 tagged-value-array-address))
setm: ((4 tagged-value-array-address)) <= 1108
setm: size of ((4 tagged-value-array-address)) is 1
setm: ((4 tagged-value-array-address)): setting 102245 to 1108
run: 2593 capacity 3: (((5 integer)) <- ((length)) ((4 tagged-value-array-address) (deref)))
array-len: ((4 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 102246 to 2
run: 2594 capacity 4: (((reply)) ((5 integer)))
m: ((5 integer))
sizeof: ((5 integer))
reply: (((5 integer))) (((5 integer)))
reply: 2 => ((5 integer))
setm: ((5 integer)) <= 2
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 102215 to 2
run: 2595 full? 5: (((6 boolean)) <- ((less-than)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: nil => ((6 boolean))
setm: ((6 boolean)) <= nil
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 102216 to nil
run: 2596 full? 6: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
run: 2597 full? 7: (((4 integer)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer))
setm: ((4 integer)) <= 0
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 102214 to 0
run: 2598 full? 8: (((7 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((102211 integer) (raw))
sizeof: ((102211 integer) (raw))
run: 0 => ((7 integer))
setm: ((7 integer)) <= 0
setm: size of ((7 integer)) is 1
setm: ((7 integer)): setting 102217 to 0
run: 2599 full? 9: (((8 boolean)) <- ((equal)) ((7 integer)) ((4 integer)))
m: ((7 integer))
sizeof: ((7 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: t => ((8 boolean))
setm: ((8 boolean)) <= t
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 102218 to t
run: 2600 full? 10: (((reply)) ((8 boolean)))
m: ((8 boolean))
sizeof: ((8 boolean))
reply: (((8 boolean))) (((4 boolean)))
reply: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 102183 to t
run: 2601 write 4: (((jump-unless)) ((4 boolean)) ((2 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2602 write 5: (((5 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((5 integer-address))
setm: ((5 integer-address)) <= 1105
setm: size of ((5 integer-address)) is 1
setm: ((5 integer-address)): setting 102184 to 1105
run: 2603 write 6: (((sleep)) ((until-location-changes literal)) ((5 integer-address) (deref)))
m: ((5 integer-address) (deref))
sizeof: ((5 integer-address) (deref))
schedule: pushing write/send-keys-to-stdin to sleep queue
schedule: waking up read/buffer-stdin
schedule: read/buffer-stdin
run: 2604 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((4 integer-address))
setm: ((4 integer-address)) <= 1105
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 202728 to 1105
run: 2605 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1108
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 202729 to 1108
run: 2606 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1109 tagged-value) (raw))
sizeof: ((1109 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\2 . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\2 . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 202730 to character
setm: ((6 tagged-value)): setting 202731 to #\2
run: 2607 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 1 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 1
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 1
run: 2608 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 202732 to 2
run: 2609 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 202733 to t
run: 2610 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2611 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((4 tagged-value)) ((1 channel-address) (deref)))
reply: #(tagged record (character #\2 . nil)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\2 . nil))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 201005 to character
setm: ((4 tagged-value)): setting 201006 to #\2
reply: #(tagged record (1 1 1108 . nil)) => ((1 channel-address) (deref))
setm: ((1 channel-address) (deref)) <= #(tagged record (1 1 1108 . nil))
setm: size of ((1 channel-address) (deref)) is 3
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref)): setting 1105 to 1
setm: ((1 channel-address) (deref)): setting 1106 to 1
setm: ((1 channel-address) (deref)): setting 1107 to 1108
run: 2612 buffer-stdin 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2613 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202785 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2614 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 202816 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 202816
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 202787 to 202816
run: 2615 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\2 . nil)) character)
run: #(tagged record (character #\2 . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\2 . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 202816 to character
setm: ((1 tagged-value-address) (deref)): setting 202817 to #\2
run: 2616 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\2 . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 202788 to character
run: 2617 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((202816 type) (raw))
sizeof: ((202816 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 202789 to character
run: 2618 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 202790 to t
run: 2619 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2620 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((202817 location) (raw))
sizeof: ((202817 location) (raw))
run: #\2 => ((5 location))
setm: ((5 location)) <= #\2
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 202791 to #\2
run: 2621 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((6 character)))
reply: #\2 => ((6 character))
setm: ((6 character)) <= #\2
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\2
run: 2622 buffer-stdin 6: (((assert)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 2623 buffer-stdin 7: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
m: ((3 buffer-address))
sizeof: ((3 buffer-address))
m: ((6 character))
sizeof: ((6 character))
run: 2624 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202818 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2625 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\2)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 202820 to 201062
run: 2626 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\2)
run: #\2 => ((2 character))
setm: ((2 character)) <= #\2
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 202821 to #\2
run: 2627 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 2628 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202849 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2629 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 202851 to 201062
run: 2630 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((201062 integer) (raw))
sizeof: ((201062 integer) (raw))
run: 8 => ((2 integer))
setm: ((2 integer)) <= 8
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 202852 to 8
run: 2631 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((3 string-address))
setm: ((3 string-address)) <= 201064
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 202853 to 201064
run: 2632 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202854 to 30
run: 2633 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 202855 to nil
run: 2634 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 202822 to nil
run: 2635 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 2636 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 201062 => ((4 integer-address))
setm: ((4 integer-address)) <= 201062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 202823 to 201062
run: 2637 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((5 string-address))
setm: ((5 string-address)) <= 201064
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 202824 to 201064
run: 2638 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
run: 201073 => ((6 byte-address))
setm: ((6 byte-address)) <= 201073
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 202825 to 201073
run: 2639 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\2 => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\2
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 201073 to #\2
run: 2640 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 9 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 9
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 201062 to 9
run: 2641 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((3 buffer-address)))
reply: 201062 => ((3 buffer-address))
setm: ((3 buffer-address)) <= 201062
setm: size of ((3 buffer-address)) is 1
setm: ((3 buffer-address)): setting 201004 to 201062
run: 2642 buffer-stdin 8: (((7 string-address)) <- ((get)) ((3 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((7 string-address))
setm: ((7 string-address)) <= 201064
setm: size of ((7 string-address)) is 1
setm: ((7 string-address)): setting 201008 to 201064
run: 2643 buffer-stdin 9: (((8 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 201009 to nil
run: 2644 buffer-stdin 10: (((jump-if)) ((8 boolean)) ((3 offset)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 2645 buffer-stdin 11: (((9 boolean)) <- ((equal)) ((6 character)) ((  literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 201010 to nil
run: 2646 buffer-stdin 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2647 buffer-stdin 13: (((jump)) ((-10 offset)))
run: 2648 buffer-stdin 4: (((4 tagged-value)) ((1 channel-address) (deref)) <- ((read)) ((1 channel-address)))
m: ((1 channel-address))
sizeof: ((1 channel-address))
run: 2649 read 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202880 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2650 read 1: (((1 channel-address)) <- ((next-input)))
arg: nil 0 (1105)
run: 1105 => ((1 channel-address))
setm: ((1 channel-address)) <= 1105
setm: size of ((1 channel-address)) is 1
setm: ((1 channel-address)): setting 202882 to 1105
run: 2651 read 2: (((2 boolean)) <- ((empty?)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
run: 2652 empty? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202911 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2653 empty? 1: (((1 channel)) <- ((next-input)))
arg: nil 0 (#(tagged record (1 1 1108 . nil)))
run: #(tagged record (1 1 1108 . nil)) => ((1 channel))
setm: ((1 channel)) <= #(tagged record (1 1 1108 . nil))
setm: size of ((1 channel)) is 3
sizeof: ((1 channel))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel)): setting 202913 to 1
setm: ((1 channel)): setting 202914 to 1
setm: ((1 channel)): setting 202915 to 1108
run: 2654 empty? 2: (((4 integer)) <- ((get)) ((1 channel)) ((0 offset)))
m: ((202913 integer) (raw))
sizeof: ((202913 integer) (raw))
run: 1 => ((4 integer))
setm: ((4 integer)) <= 1
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 202916 to 1
run: 2655 empty? 3: (((5 integer)) <- ((get)) ((1 channel)) ((1 offset)))
sizeof: ((_ integer))
m: ((202914 integer) (raw))
sizeof: ((202914 integer) (raw))
run: 1 => ((5 integer))
setm: ((5 integer)) <= 1
setm: size of ((5 integer)) is 1
setm: ((5 integer)): setting 202917 to 1
run: 2656 empty? 4: (((6 boolean)) <- ((equal)) ((4 integer)) ((5 integer)))
m: ((4 integer))
sizeof: ((4 integer))
m: ((5 integer))
sizeof: ((5 integer))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 202918 to t
run: 2657 empty? 5: (((reply)) ((6 boolean)))
m: ((6 boolean))
sizeof: ((6 boolean))
reply: (((6 boolean))) (((2 boolean)))
reply: t => ((2 boolean))
setm: ((2 boolean)) <= t
setm: size of ((2 boolean)) is 1
setm: ((2 boolean)): setting 202883 to t
run: 2658 read 3: (((jump-unless)) ((2 boolean)) ((2 offset)))
m: ((2 boolean))
sizeof: ((2 boolean))
run: 2659 read 4: (((3 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((3 integer-address))
setm: ((3 integer-address)) <= 1106
setm: size of ((3 integer-address)) is 1
setm: ((3 integer-address)): setting 202884 to 1106
run: 2660 read 5: (((sleep)) ((until-location-changes literal)) ((3 integer-address) (deref)))
m: ((3 integer-address) (deref))
sizeof: ((3 integer-address) (deref))
schedule: pushing read/buffer-stdin to sleep queue
schedule: waking up write/send-keys-to-stdin
schedule: write/send-keys-to-stdin
run: 2661 write 7: (((6 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((6 tagged-value-array-address))
setm: ((6 tagged-value-array-address)) <= 1108
setm: size of ((6 tagged-value-array-address)) is 1
setm: ((6 tagged-value-array-address)): setting 102185 to 1108
run: 2662 write 8: (((7 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
run: 1106 => ((7 integer-address))
setm: ((7 integer-address)) <= 1106
setm: size of ((7 integer-address)) is 1
setm: ((7 integer-address)): setting 102186 to 1106
run: 2663 write 9: (((8 tagged-value-address)) <- ((index-address)) ((6 tagged-value-array-address) (deref)) ((7 integer-address) (deref)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 1111 => ((8 tagged-value-address))
setm: ((8 tagged-value-address)) <= 1111
setm: size of ((8 tagged-value-address)) is 1
setm: ((8 tagged-value-address)): setting 102187 to 1111
run: 2664 write 10: (((8 tagged-value-address) (deref)) <- ((copy)) ((2 tagged-value)))
m: ((2 tagged-value))
sizeof: ((2 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\nul . nil)) => ((8 tagged-value-address) (deref))
setm: ((8 tagged-value-address) (deref)) <= #(tagged record (character #\nul . nil))
setm: size of ((8 tagged-value-address) (deref)) is 2
sizeof: ((8 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((8 tagged-value-address) (deref)): setting 1111 to character
setm: ((8 tagged-value-address) (deref)): setting 1112 to #\nul
run: 2665 write 11: (((7 integer-address) (deref)) <- ((add)) ((7 integer-address) (deref)) ((1 literal)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
run: 2 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 2
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 2
run: 2666 write 12: (((9 integer)) <- ((length)) ((6 tagged-value-array-address) (deref)))
array-len: ((6 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((9 integer))
setm: ((9 integer)) <= 2
setm: size of ((9 integer)) is 1
setm: ((9 integer)): setting 102188 to 2
run: 2667 write 13: (((10 boolean)) <- ((less-than)) ((7 integer-address) (deref)) ((9 integer)))
m: ((7 integer-address) (deref))
sizeof: ((7 integer-address) (deref))
m: ((9 integer))
sizeof: ((9 integer))
run: nil => ((10 boolean))
setm: ((10 boolean)) <= nil
setm: size of ((10 boolean)) is 1
setm: ((10 boolean)): setting 102189 to nil
run: 2668 write 14: (((jump-if)) ((10 boolean)) ((1 offset)))
m: ((10 boolean))
sizeof: ((10 boolean))
run: 2669 write 15: (((7 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((7 integer-address) (deref))
setm: ((7 integer-address) (deref)) <= 0
setm: size of ((7 integer-address) (deref)) is 1
setm: ((7 integer-address) (deref)): setting 1106 to 0
run: 2670 write 16: (((reply)) ((1 channel-address) (deref)))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((1 channel-address) (deref))) (((2 channel-address) (deref)))
reply: #(tagged record (1 0 1108 . nil)) => ((2 channel-address) (deref))
setm: ((2 channel-address) (deref)) <= #(tagged record (1 0 1108 . nil))
setm: size of ((2 channel-address) (deref)) is 3
sizeof: ((2 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((2 channel-address) (deref)): setting 1105 to 1
setm: ((2 channel-address) (deref)): setting 1106 to 0
setm: ((2 channel-address) (deref)): setting 1107 to 1108
run: 2671 send-keys-to-stdin 7: (((6 boolean)) <- ((equal)) ((3 character)) ((  literal)))
m: ((3 character))
sizeof: ((3 character))
run: t => ((6 boolean))
setm: ((6 boolean)) <= t
setm: size of ((6 boolean)) is 1
setm: ((6 boolean)): setting 101007 to t
run: 2672 send-keys-to-stdin 8: (((jump-if)) ((6 boolean)) ((1 offset)))
m: ((6 boolean))
sizeof: ((6 boolean))
schedule: done with routine 
schedule: waking up read/buffer-stdin
schedule: read/buffer-stdin
run: 2673 read 6: (((4 integer-address)) <- ((get-address)) ((1 channel-address) (deref)) ((0 offset)))
run: 1105 => ((4 integer-address))
setm: ((4 integer-address)) <= 1105
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 202885 to 1105
run: 2674 read 7: (((5 tagged-value-array-address)) <- ((get)) ((1 channel-address) (deref)) ((2 offset)))
sizeof: ((_ integer))
sizeof: ((_ integer))
m: ((1107 tagged-value-array-address) (raw))
sizeof: ((1107 tagged-value-array-address) (raw))
run: 1108 => ((5 tagged-value-array-address))
setm: ((5 tagged-value-array-address)) <= 1108
setm: size of ((5 tagged-value-array-address)) is 1
setm: ((5 tagged-value-array-address)): setting 202886 to 1108
run: 2675 read 8: (((6 tagged-value)) <- ((index)) ((5 tagged-value-array-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((1108 tagged-value-array) (raw))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1111 tagged-value) (raw))
sizeof: ((1111 tagged-value) (raw))
sizeof: ((_ type))
sizeof: ((_ location))
run: #(tagged record (character #\nul . nil)) => ((6 tagged-value))
setm: ((6 tagged-value)) <= #(tagged record (character #\nul . nil))
setm: size of ((6 tagged-value)) is 2
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((6 tagged-value)): setting 202887 to character
setm: ((6 tagged-value)): setting 202888 to #\nul
run: 2676 read 9: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 2 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 2
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 2
run: 2677 read 10: (((8 integer)) <- ((length)) ((5 tagged-value-array-address) (deref)))
array-len: ((5 tagged-value-array-address) (deref))
m: ((1108 integer) (raw))
sizeof: ((1108 integer) (raw))
run: 2 => ((8 integer))
setm: ((8 integer)) <= 2
setm: size of ((8 integer)) is 1
setm: ((8 integer)): setting 202889 to 2
run: 2678 read 11: (((9 boolean)) <- ((less-than)) ((4 integer-address) (deref)) ((8 integer)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
m: ((8 integer))
sizeof: ((8 integer))
run: nil => ((9 boolean))
setm: ((9 boolean)) <= nil
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 202890 to nil
run: 2679 read 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2680 read 13: (((4 integer-address) (deref)) <- ((copy)) ((0 literal)))
run: 0 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 0
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 1105 to 0
run: 2681 read 14: (((reply)) ((6 tagged-value)) ((1 channel-address) (deref)))
m: ((6 tagged-value))
sizeof: ((6 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
m: ((1 channel-address) (deref))
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
reply: (((6 tagged-value)) ((1 channel-address) (deref))) (((4 tagged-value)) ((1 channel-address) (deref)))
reply: #(tagged record (character #\nul . nil)) => ((4 tagged-value))
setm: ((4 tagged-value)) <= #(tagged record (character #\nul . nil))
setm: size of ((4 tagged-value)) is 2
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((4 tagged-value)): setting 201005 to character
setm: ((4 tagged-value)): setting 201006 to #\nul
reply: #(tagged record (0 0 1108 . nil)) => ((1 channel-address) (deref))
setm: ((1 channel-address) (deref)) <= #(tagged record (0 0 1108 . nil))
setm: size of ((1 channel-address) (deref)) is 3
sizeof: ((1 channel-address) (deref))
sizeof: ((_ integer))
sizeof: ((_ integer))
sizeof: ((_ tagged-value-array-address))
setm: ((1 channel-address) (deref)): setting 1105 to 0
setm: ((1 channel-address) (deref)): setting 1106 to 0
setm: ((1 channel-address) (deref)): setting 1107 to 1108
run: 2682 buffer-stdin 5: (((6 character)) <- ((maybe-coerce)) ((4 tagged-value)) ((character literal)))
m: ((4 tagged-value))
sizeof: ((4 tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 2683 maybe-coerce 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202942 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2684 maybe-coerce 1: (((1 tagged-value-address)) <- ((new)) ((tagged-value literal)))
sizeof: ((_ tagged-value))
sizeof: ((_ type))
sizeof: ((_ location))
run: 202973 => ((1 tagged-value-address))
setm: ((1 tagged-value-address)) <= 202973
setm: size of ((1 tagged-value-address)) is 1
setm: ((1 tagged-value-address)): setting 202944 to 202973
run: 2685 maybe-coerce 2: (((1 tagged-value-address) (deref)) <- ((next-input)))
arg: nil 0 (#(tagged record (character #\nul . nil)) character)
run: #(tagged record (character #\nul . nil)) => ((1 tagged-value-address) (deref))
setm: ((1 tagged-value-address) (deref)) <= #(tagged record (character #\nul . nil))
setm: size of ((1 tagged-value-address) (deref)) is 2
sizeof: ((1 tagged-value-address) (deref))
sizeof: ((_ type))
sizeof: ((_ location))
setm: ((1 tagged-value-address) (deref)): setting 202973 to character
setm: ((1 tagged-value-address) (deref)): setting 202974 to #\nul
run: 2686 maybe-coerce 3: (((2 type)) <- ((next-input)))
arg: nil 1 (#(tagged record (character #\nul . nil)) character)
run: character => ((2 type))
setm: ((2 type)) <= character
setm: size of ((2 type)) is 1
setm: ((2 type)): setting 202945 to character
run: 2687 maybe-coerce 4: (((3 type)) <- ((get)) ((1 tagged-value-address) (deref)) ((0 offset)))
m: ((202973 type) (raw))
sizeof: ((202973 type) (raw))
run: character => ((3 type))
setm: ((3 type)) <= character
setm: size of ((3 type)) is 1
setm: ((3 type)): setting 202946 to character
run: 2688 maybe-coerce 5: (((4 boolean)) <- ((equal)) ((3 type)) ((2 type)))
m: ((3 type))
sizeof: ((3 type))
m: ((2 type))
sizeof: ((2 type))
run: t => ((4 boolean))
setm: ((4 boolean)) <= t
setm: size of ((4 boolean)) is 1
setm: ((4 boolean)): setting 202947 to t
run: 2689 maybe-coerce 6: (((jump-if)) ((4 boolean)) ((1 offset)))
m: ((4 boolean))
sizeof: ((4 boolean))
run: 2690 maybe-coerce 8: (((5 location)) <- ((get)) ((1 tagged-value-address) (deref)) ((1 offset)))
sizeof: ((_ type))
m: ((202974 location) (raw))
sizeof: ((202974 location) (raw))
run: #\nul => ((5 location))
setm: ((5 location)) <= #\nul
setm: size of ((5 location)) is 1
setm: ((5 location)): setting 202948 to #\nul
run: 2691 maybe-coerce 9: (((reply)) ((5 location)) ((4 boolean)))
m: ((5 location))
sizeof: ((5 location))
m: ((4 boolean))
sizeof: ((4 boolean))
reply: (((5 location)) ((4 boolean))) (((6 character)))
reply: #\nul => ((6 character))
setm: ((6 character)) <= #\nul
setm: size of ((6 character)) is 1
setm: ((6 character)): setting 201007 to #\nul
run: 2692 buffer-stdin 6: (((assert)) ((6 character)))
m: ((6 character))
sizeof: ((6 character))
run: 2693 buffer-stdin 7: (((3 buffer-address)) <- ((append)) ((3 buffer-address)) ((6 character)))
m: ((3 buffer-address))
sizeof: ((3 buffer-address))
m: ((6 character))
sizeof: ((6 character))
run: 2694 append 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 202975 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2695 append 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062 #\nul)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 202977 to 201062
run: 2696 append 2: (((2 character)) <- ((next-input)))
arg: nil 1 (201062 #\nul)
run: #\nul => ((2 character))
setm: ((2 character)) <= #\nul
setm: size of ((2 character)) is 1
setm: ((2 character)): setting 202978 to #\nul
run: 2697 append 3: (((3 boolean)) <- ((buffer-full?)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
run: 2698 buffer-full? 0: (((default-space space-address)) <- ((new)) ((space literal)) ((30 literal)))
sizeof: ((_ location))
run: 203006 => ((default-space space-address))
sizeof: ((default-space space-address))
run: 2699 buffer-full? 1: (((1 buffer-address)) <- ((next-input)))
arg: nil 0 (201062)
run: 201062 => ((1 buffer-address))
setm: ((1 buffer-address)) <= 201062
setm: size of ((1 buffer-address)) is 1
setm: ((1 buffer-address)): setting 203008 to 201062
run: 2700 buffer-full? 2: (((2 integer)) <- ((get)) ((1 buffer-address) (deref)) ((0 offset)))
m: ((201062 integer) (raw))
sizeof: ((201062 integer) (raw))
run: 9 => ((2 integer))
setm: ((2 integer)) <= 9
setm: size of ((2 integer)) is 1
setm: ((2 integer)): setting 203009 to 9
run: 2701 buffer-full? 3: (((3 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((3 string-address))
setm: ((3 string-address)) <= 201064
setm: size of ((3 string-address)) is 1
setm: ((3 string-address)): setting 203010 to 201064
run: 2702 buffer-full? 4: (((4 integer)) <- ((length)) ((3 string-address) (deref)))
array-len: ((3 string-address) (deref))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
run: 30 => ((4 integer))
setm: ((4 integer)) <= 30
setm: size of ((4 integer)) is 1
setm: ((4 integer)): setting 203011 to 30
run: 2703 buffer-full? 5: (((5 boolean)) <- ((greater-or-equal)) ((2 integer)) ((4 integer)))
m: ((2 integer))
sizeof: ((2 integer))
m: ((4 integer))
sizeof: ((4 integer))
run: nil => ((5 boolean))
setm: ((5 boolean)) <= nil
setm: size of ((5 boolean)) is 1
setm: ((5 boolean)): setting 203012 to nil
run: 2704 buffer-full? 6: (((reply)) ((5 boolean)))
m: ((5 boolean))
sizeof: ((5 boolean))
reply: (((5 boolean))) (((3 boolean)))
reply: nil => ((3 boolean))
setm: ((3 boolean)) <= nil
setm: size of ((3 boolean)) is 1
setm: ((3 boolean)): setting 202979 to nil
run: 2705 append 4: (((jump-unless)) ((3 boolean)) ((1 offset)))
m: ((3 boolean))
sizeof: ((3 boolean))
run: 2706 append 6: (((4 integer-address)) <- ((get-address)) ((1 buffer-address) (deref)) ((0 offset)))
run: 201062 => ((4 integer-address))
setm: ((4 integer-address)) <= 201062
setm: size of ((4 integer-address)) is 1
setm: ((4 integer-address)): setting 202980 to 201062
run: 2707 append 7: (((5 string-address)) <- ((get)) ((1 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((5 string-address))
setm: ((5 string-address)) <= 201064
setm: size of ((5 string-address)) is 1
setm: ((5 string-address)): setting 202981 to 201064
run: 2708 append 8: (((6 byte-address)) <- ((index-address)) ((5 string-address) (deref)) ((4 integer-address) (deref)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
array-len: ((201064 string) (raw))
m: ((201064 integer) (raw))
sizeof: ((201064 integer) (raw))
sizeof: ((_ byte))
run: 201074 => ((6 byte-address))
setm: ((6 byte-address)) <= 201074
setm: size of ((6 byte-address)) is 1
setm: ((6 byte-address)): setting 202982 to 201074
run: 2709 append 9: (((6 byte-address) (deref)) <- ((copy)) ((2 character)))
m: ((2 character))
sizeof: ((2 character))
run: #\nul => ((6 byte-address) (deref))
setm: ((6 byte-address) (deref)) <= #\nul
setm: size of ((6 byte-address) (deref)) is 1
setm: ((6 byte-address) (deref)): setting 201074 to #\nul
run: 2710 append 10: (((4 integer-address) (deref)) <- ((add)) ((4 integer-address) (deref)) ((1 literal)))
m: ((4 integer-address) (deref))
sizeof: ((4 integer-address) (deref))
run: 10 => ((4 integer-address) (deref))
setm: ((4 integer-address) (deref)) <= 10
setm: size of ((4 integer-address) (deref)) is 1
setm: ((4 integer-address) (deref)): setting 201062 to 10
run: 2711 append 11: (((reply)) ((1 buffer-address)))
m: ((1 buffer-address))
sizeof: ((1 buffer-address))
reply: (((1 buffer-address))) (((3 buffer-address)))
reply: 201062 => ((3 buffer-address))
setm: ((3 buffer-address)) <= 201062
setm: size of ((3 buffer-address)) is 1
setm: ((3 buffer-address)): setting 201004 to 201062
run: 2712 buffer-stdin 8: (((7 string-address)) <- ((get)) ((3 buffer-address) (deref)) ((1 offset)))
sizeof: ((_ integer))
m: ((201063 string-address) (raw))
sizeof: ((201063 string-address) (raw))
run: 201064 => ((7 string-address))
setm: ((7 string-address)) <= 201064
setm: size of ((7 string-address)) is 1
setm: ((7 string-address)): setting 201008 to 201064
run: 2713 buffer-stdin 9: (((8 boolean)) <- ((equal)) ((6 character)) ((
 literal)))
m: ((6 character))
sizeof: ((6 character))
run: nil => ((8 boolean))
setm: ((8 boolean)) <= nil
setm: size of ((8 boolean)) is 1
setm: ((8 boolean)): setting 201009 to nil
run: 2714 buffer-stdin 10: (((jump-if)) ((8 boolean)) ((3 offset)))
m: ((8 boolean))
sizeof: ((8 boolean))
run: 2715 buffer-stdin 11: (((9 boolean)) <- ((equal)) ((6 character)) ((  literal)))
m: ((6 character))
sizeof: ((6 character))
run: t => ((9 boolean))
setm: ((9 boolean)) <= t
setm: size of ((9 boolean)) is 1
setm: ((9 boolean)): setting 201010 to t
run: 2716 buffer-stdin 12: (((jump-if)) ((9 boolean)) ((1 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
run: 2717 buffer-stdin 14: (((jump-if)) ((9 boolean)) ((11 offset)))
m: ((9 boolean))
sizeof: ((9 boolean))
schedule: done with routine 
schedule: waking up main
schedule: main
schedule: done with routine 
schedule: just helpers left; stopping everything
