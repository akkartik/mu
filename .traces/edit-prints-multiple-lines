parse: instruction: assume-screen
parse:   ingredient: {name: "5", properties: ["5": "literal", "width": ]}
parse:   ingredient: {name: "3", properties: ["3": "literal", "height": ]}
parse: instruction: assume-keyboard
parse:   ingredient: {name: "", properties: [_: "literal-string"]}
parse: instruction: run
parse:   ingredient: {name: "\n    s:address:array:character <- new [abc\ndef]\n    s2:address:array:character, screen:address, keyboard:address <- edit s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 10:literal/bottom, 5:literal/right, keyboard:address\n  ", properties: [_: "literal-string"]}
parse: instruction: screen-should-contain
parse:   ingredient: {name: "\n    .abc  .\n    .def  .\n    .     .\n  ", properties: [_: "literal-string"]}
after-brace: recipe edit-prints-multiple-lines
after-brace: assume-screen ...
after-brace: assume-keyboard ...
after-brace: init-fake-keyboard ...
after-brace: run ...
after-brace: screen-should-contain ...
9999 new: routine allocated memory from 1000 to 101000
schedule: edit-prints-multiple-lines
 101 run: screen:address <- assume-screen 5:literal/width, 3:literal/height
 102 run: default-space:address:array:location <- new location:type, 30:literal/capacity
9999 mem: array size is 30
9999 mem: new alloc: 1000
 102 run: result:address:screen <- new screen:type
9999 mem: new alloc: 1031
9999 mem: storing 1031 in location 1002
 102 run: width:address:number <- get-address result:address:screen/deref, num-columns:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 0
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1032
9999 mem: storing 1032 in location 1003
 102 run: width:address:number/deref <- next-ingredient 
9999 mem: location 1003 is 1032
9999 mem: storing 5 in location 1032
 102 run: height:address:number <- get-address result:address:screen/deref, num-rows:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 0
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1031
9999 mem: storing 1031 in location 1004
 102 run: height:address:number/deref <- next-ingredient 
9999 mem: location 1004 is 1031
9999 mem: storing 3 in location 1031
 102 run: row:address:number <- get-address result:address:screen/deref, cursor-row:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1005
 102 run: row:address:number/deref <- copy 0:literal
9999 mem: location 1005 is 1033
9999 mem: storing 0 in location 1033
 102 run: column:address:number <- get-address result:address:screen/deref, cursor-column:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1006
 102 run: column:address:number/deref <- copy 0:literal
9999 mem: location 1006 is 1034
9999 mem: storing 0 in location 1034
 102 run: bufsize:number <- multiply width:address:number/deref, height:address:number/deref
9999 mem: location 1003 is 1032
9999 mem: location 1032 is 5
9999 mem: location 1004 is 1031
9999 mem: location 1031 is 3
9999 mem: storing 15 in location 1007
 102 run: buf:address:address:array:screen-cell <- get-address result:address:screen/deref, data:offset
9999 mem: location 1002 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 0
9999 mem: location 1002 is 1031
9999 run: address to copy is 1035
9999 mem: storing 1035 in location 1008
 102 run: buf:address:address:array:screen-cell/deref <- new screen-cell:type, bufsize:number
9999 mem: location 1007 is 15
9999 mem: array size is 15
9999 mem: new alloc: 1036
9999 mem: location 1008 is 1035
9999 mem: storing 1036 in location 1035
 102 run: clear-screen result:address:screen
9999 mem: location 1002 is 1031
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1067
 103 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1069
 103 run: break-unless x:address:screen, 
9999 mem: location 1069 is 1031
9999 run: jump-unless fell through
 103 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1070
 103 run: max:number <- length buf:address:array:screen-cell/deref
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1070 is 1036
9999 mem: storing 15 in location 1071
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1072
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 0
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 0
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 0
9999 mem: storing 1037 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1037
9999 mem: storing 0 in location 1037
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 0
9999 mem: location 1074 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1038
9999 mem: storing 7 in location 1038
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 0
9999 mem: storing 1 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 1
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 1
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 1
9999 mem: storing 1039 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1039
9999 mem: storing 0 in location 1039
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 0
9999 mem: location 1074 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1040
9999 mem: storing 7 in location 1040
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 1
9999 mem: storing 2 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 2
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 2
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 2
9999 mem: storing 1041 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1041
9999 mem: storing 0 in location 1041
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 0
9999 mem: location 1074 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1042
9999 mem: storing 7 in location 1042
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 2
9999 mem: storing 3 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 3
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 3
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 3
9999 mem: storing 1043 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1043
9999 mem: storing 1043 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1043
9999 mem: storing 0 in location 1043
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1043
9999 mem: location 1043 is 0
9999 mem: location 1044 is 0
9999 mem: location 1074 is 1043
9999 run: address to copy is 1044
9999 mem: storing 1044 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1044
9999 mem: storing 7 in location 1044
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 3
9999 mem: storing 4 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 4
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 4
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 4
9999 mem: storing 1045 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1045
9999 mem: storing 1045 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1045
9999 mem: storing 0 in location 1045
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1045
9999 mem: location 1045 is 0
9999 mem: location 1046 is 0
9999 mem: location 1074 is 1045
9999 run: address to copy is 1046
9999 mem: storing 1046 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1046
9999 mem: storing 7 in location 1046
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 4
9999 mem: storing 5 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 5
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 5
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 5
9999 mem: storing 1047 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1047
9999 mem: storing 0 in location 1047
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 0
9999 mem: location 1074 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1048
9999 mem: storing 7 in location 1048
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 5
9999 mem: storing 6 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 6
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 6
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 6
9999 mem: storing 1049 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1049
9999 mem: storing 0 in location 1049
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 0
9999 mem: location 1074 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1050
9999 mem: storing 7 in location 1050
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 6
9999 mem: storing 7 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 7
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 7
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 7
9999 mem: storing 1051 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1051
9999 mem: storing 0 in location 1051
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 0
9999 mem: location 1074 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1052
9999 mem: storing 7 in location 1052
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 7
9999 mem: storing 8 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 8
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 8
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 8
9999 mem: storing 1053 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1053
9999 mem: storing 1053 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1053
9999 mem: storing 0 in location 1053
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1053
9999 mem: location 1053 is 0
9999 mem: location 1054 is 0
9999 mem: location 1074 is 1053
9999 run: address to copy is 1054
9999 mem: storing 1054 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1054
9999 mem: storing 7 in location 1054
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 8
9999 mem: storing 9 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 9
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 9
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 9
9999 mem: storing 1055 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1055
9999 mem: storing 1055 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1055
9999 mem: storing 0 in location 1055
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1055
9999 mem: location 1055 is 0
9999 mem: location 1056 is 0
9999 mem: location 1074 is 1055
9999 run: address to copy is 1056
9999 mem: storing 1056 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1056
9999 mem: storing 7 in location 1056
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 9
9999 mem: storing 10 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 10
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 10
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 10
9999 mem: storing 1057 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1057
9999 mem: storing 1057 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1057
9999 mem: storing 0 in location 1057
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1057
9999 mem: location 1057 is 0
9999 mem: location 1058 is 0
9999 mem: location 1074 is 1057
9999 run: address to copy is 1058
9999 mem: storing 1058 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1058
9999 mem: storing 7 in location 1058
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 10
9999 mem: storing 11 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 11
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 11
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 11
9999 mem: storing 1059 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1059
9999 mem: storing 1059 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1059
9999 mem: storing 0 in location 1059
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1059
9999 mem: location 1059 is 0
9999 mem: location 1060 is 0
9999 mem: location 1074 is 1059
9999 run: address to copy is 1060
9999 mem: storing 1060 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1060
9999 mem: storing 7 in location 1060
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 11
9999 mem: storing 12 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 12
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 12
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 12
9999 mem: storing 1061 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1061
9999 mem: storing 1061 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1061
9999 mem: storing 0 in location 1061
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1061
9999 mem: location 1061 is 0
9999 mem: location 1062 is 0
9999 mem: location 1074 is 1061
9999 run: address to copy is 1062
9999 mem: storing 1062 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1062
9999 mem: storing 7 in location 1062
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 12
9999 mem: storing 13 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 13
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 13
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 13
9999 mem: storing 1063 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1063
9999 mem: storing 1063 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1063
9999 mem: storing 0 in location 1063
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1063
9999 mem: location 1063 is 0
9999 mem: location 1064 is 0
9999 mem: location 1074 is 1063
9999 run: address to copy is 1064
9999 mem: storing 1064 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1064
9999 mem: storing 7 in location 1064
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 13
9999 mem: storing 14 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 14
9999 mem: location 1071 is 15
9999 mem: storing 0 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 0
9999 run: jump-if fell through
 103 run: curr:address:screen-cell <- index-address buf:address:array:screen-cell/deref, i:number
9999 mem: location 1070 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1072 is 14
9999 mem: location 1070 is 1036
9999 mem: location 1072 is 14
9999 mem: storing 1065 in location 1074
 103 run: curr-content:address:character <- get-address curr:address:screen-cell/deref, contents:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1065
9999 mem: storing 1065 in location 1075
 103 run: curr-content:address:character/deref <- copy [ ]
9999 mem: location 1075 is 1065
9999 mem: storing 0 in location 1065
 103 run: curr-color:address:character <- get-address curr:address:screen-cell/deref, color:offset
9999 mem: location 1074 is 1065
9999 mem: location 1065 is 0
9999 mem: location 1066 is 0
9999 mem: location 1074 is 1065
9999 run: address to copy is 1066
9999 mem: storing 1066 in location 1076
 103 run: curr-color:address:character/deref <- copy 7:literal/white
9999 mem: location 1076 is 1066
9999 mem: storing 7 in location 1066
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1072 is 14
9999 mem: storing 15 in location 1072
 103 run: loop 
9999 run: jumping to instruction 8
 103 run: done?:boolean <- greater-or-equal i:number, max:number
9999 mem: location 1072 is 15
9999 mem: location 1071 is 15
9999 mem: storing 1 in location 1073
 103 run: break-if done?:boolean, 
9999 mem: location 1073 is 1
9999 run: jumping to instruction 17
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1033
9999 mem: storing 0 in location 1033
 103 run: cur:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1069 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1069 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1077
 103 run: cur:address:number/deref <- copy 0:literal
9999 mem: location 1077 is 1034
9999 mem: storing 0 in location 1034
 103 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1069 is 1031
 102 run: reply result:address:screen
9999 mem: location 1002 is 1031
9999 run: result 0 is 1031
9999 mem: storing 1031 in location 900
 101 run: keyboard:address <- assume-keyboard []
9999 mem: storing 1098 in location 901
 101 run: keyboard:address <- init-fake-keyboard keyboard:address
9999 mem: location 901 is 1098
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1099
 102 run: result:address:keyboard <- new keyboard:type
9999 mem: new alloc: 1130
9999 mem: storing 1130 in location 1101
 102 run: buf:address:address:array:character <- get-address result:address:keyboard/deref, data:offset
9999 mem: location 1101 is 1130
9999 mem: location 1130 is 0
9999 mem: location 1131 is 0
9999 mem: location 1101 is 1130
9999 run: address to copy is 1131
9999 mem: storing 1131 in location 1102
 102 run: buf:address:address:array:character/deref <- next-ingredient 
9999 mem: location 1102 is 1131
9999 mem: storing 1098 in location 1131
 102 run: idx:address:number <- get-address result:address:keyboard/deref, index:offset
9999 mem: location 1101 is 1130
9999 mem: location 1130 is 0
9999 mem: location 1131 is 1098
9999 mem: location 1101 is 1130
9999 run: address to copy is 1130
9999 mem: storing 1130 in location 1103
 102 run: idx:address:number/deref <- copy 0:literal
9999 mem: location 1103 is 1130
9999 mem: storing 0 in location 1130
 102 run: reply result:address:keyboard
9999 mem: location 1101 is 1130
9999 run: result 0 is 1130
9999 mem: storing 1130 in location 901
 101 run: run [
    s:address:array:character <- new [abc
def]
    s2:address:array:character, screen:address, keyboard:address <- edit s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 10:literal/bottom, 5:literal/right, keyboard:address
  ]
parse: instruction: new
parse:   ingredient: {name: "abc\ndef", properties: [_: "literal-string"]}
parse:   product: {name: "s", properties: ["s": "address":"array":"character"]}
parse: instruction: edit
parse:   ingredient: {name: "s", properties: ["s": "address":"array":"character"]}
parse:   ingredient: {name: "screen", properties: ["screen": "address"]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "top": ]}
parse:   ingredient: {name: "0", properties: ["0": "literal", "left": ]}
parse:   ingredient: {name: "10", properties: ["10": "literal", "bottom": ]}
parse:   ingredient: {name: "5", properties: ["5": "literal", "right": ]}
parse:   ingredient: {name: "keyboard", properties: ["keyboard": "address"]}
parse:   product: {name: "s2", properties: ["s2": "address":"array":"character"]}
parse:   product: {name: "screen", properties: ["screen": "address"]}
parse:   product: {name: "keyboard", properties: ["keyboard": "address"]}
name: assign s 1
name: assign s2 2
after-brace: recipe run1001
after-brace: new ...
after-brace: edit ...
 101 run: s:address:array:character <- new [abc
def]
9999 mem: storing 1132 in location 1
 101 run: s2:address:array:character, screen:address, keyboard:address <- edit s:address:array:character, screen:address, 0:literal/top, 0:literal/left, 10:literal/bottom, 5:literal/right, keyboard:address
9999 mem: location 1 is 1132
9999 mem: location 900 is 1031
9999 mem: location 901 is 1130
 102 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1140
 102 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1132 in location 1142
 102 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1143
 102 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1144
 102 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1145
 102 run: bottom:number <- next-ingredient 
9999 mem: storing 10 in location 1146
 102 run: bottom:number <- subtract bottom:number, 1:literal
9999 mem: location 1146 is 10
9999 mem: storing 9 in location 1146
 102 run: right:number <- next-ingredient 
9999 mem: storing 5 in location 1147
 102 run: right:number <- subtract right:number, 1:literal
9999 mem: location 1147 is 5
9999 mem: storing 4 in location 1147
 102 run: keyboard:address <- next-ingredient 
9999 mem: storing 1130 in location 1148
 102 run: render s:address:array:character, screen:address, top:number, left:number, bottom:number, right:number
9999 mem: location 1142 is 1132
9999 mem: location 1143 is 1031
9999 mem: location 1144 is 0
9999 mem: location 1145 is 0
9999 mem: location 1146 is 9
9999 mem: location 1147 is 4
 103 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1171
 103 run: s:address:array:character <- next-ingredient 
9999 mem: storing 1132 in location 1173
 103 run: screen:address <- next-ingredient 
9999 mem: storing 1031 in location 1174
 103 run: top:number <- next-ingredient 
9999 mem: storing 0 in location 1175
 103 run: left:number <- next-ingredient 
9999 mem: storing 0 in location 1176
 103 run: bottom:number <- next-ingredient 
9999 mem: storing 9 in location 1177
 103 run: right:number <- next-ingredient 
9999 mem: storing 4 in location 1178
 103 run: len:number <- length s:address:array:character/deref
9999 mem: location 1173 is 1132
9999 mem: location 1132 is 7
9999 mem: location 1133 is 97
9999 mem: location 1134 is 98
9999 mem: location 1135 is 99
9999 mem: location 1136 is 10
9999 mem: location 1137 is 100
9999 mem: location 1138 is 101
9999 mem: location 1139 is 102
9999 mem: location 1173 is 1132
9999 mem: storing 7 in location 1179
 103 run: i:number <- copy 0:literal
9999 mem: storing 0 in location 1180
 103 run: row:number <- copy top:number
9999 mem: location 1175 is 0
9999 mem: storing 0 in location 1181
 103 run: column:number <- copy left:number
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1182
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1174 is 1031
9999 mem: location 1181 is 0
9999 mem: location 1182 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1202
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1204
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 0 in location 1205
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1206
 104 run: break-unless x:address:screen, 
9999 mem: location 1204 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1204 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1204 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1207
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1205 is 0
9999 mem: location 1207 is 1033
9999 mem: storing 0 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1204 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1204 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1208
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1206 is 0
9999 mem: location 1208 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1204 is 1031
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 1180 is 0
9999 mem: location 1179 is 7
9999 mem: storing 0 in location 1183
 103 run: break-if done?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: off-screen?:boolean <- greater-than row:number, bottom:number
9999 mem: location 1181 is 0
9999 mem: location 1177 is 9
9999 mem: storing 0 in location 1184
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 1173 is 1132
9999 mem: location 1132 is 7
9999 mem: location 1133 is 97
9999 mem: location 1134 is 98
9999 mem: location 1135 is 99
9999 mem: location 1136 is 10
9999 mem: location 1137 is 100
9999 mem: location 1138 is 101
9999 mem: location 1139 is 102
9999 mem: location 1180 is 0
9999 mem: location 1173 is 1132
9999 mem: location 1180 is 0
9999 run: address to copy is 1133
9999 run: its type is 4
9999 mem: location 1133 is 97
9999 mem: storing 97 in location 1185
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1185 is 97
9999 mem: storing 0 in location 1186
 103 run: break-unless newline?:boolean, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 27
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1182 is 0
9999 mem: location 1178 is 4
9999 mem: storing 0 in location 1187
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1187 is 0
9999 run: jumping to instruction 42
 103 run: print-character screen:address, c:character
9999 mem: location 1174 is 1031
9999 mem: location 1185 is 97
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1233
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1235
 104 run: c:character <- next-ingredient 
9999 mem: storing 97 in location 1236
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1237
9999 mem: storing 0 in location 1238
 104 run: break-if color-found?:boolean, 
9999 mem: location 1238 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1237
 104 run: break-unless x:address:screen, 
9999 mem: location 1235 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1235 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1235 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1239
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1235 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1235 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1240
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1235 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1235 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1241
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1235 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1235 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1242
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1243
 104 run: break-unless newline?:boolean, 
9999 mem: location 1243 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1239 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1241 is 5
9999 mem: storing 0 in location 1246
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1246 is 0
9999 mem: location 1240 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 0 in location 1246
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1235 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1235 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1247
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1236 is 97
9999 mem: storing 0 in location 1248
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1248 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1247 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1246 is 0
9999 mem: location 1247 is 1036
9999 mem: location 1246 is 0
9999 mem: storing 1037 in location 1250
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1250 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1250 is 1037
9999 run: address to copy is 1037
9999 mem: storing 1037 in location 1251
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1250 is 1037
9999 mem: location 1037 is 0
9999 mem: location 1038 is 7
9999 mem: location 1250 is 1037
9999 run: address to copy is 1038
9999 mem: storing 1038 in location 1252
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1236 is 97
9999 mem: location 1251 is 1037
9999 mem: storing 97 in location 1037
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1237 is 7
9999 mem: location 1252 is 1038
9999 mem: storing 7 in location 1038
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1241 is 5
9999 mem: storing 4 in location 1253
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1240 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1253 is 4
9999 mem: storing 0 in location 1254
 104 run: break-if at-right?:boolean, 
9999 mem: location 1254 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1240 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1240 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1235 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1180 is 0
9999 mem: storing 1 in location 1180
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1182 is 0
9999 mem: storing 1 in location 1182
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 1180 is 1
9999 mem: location 1179 is 7
9999 mem: storing 0 in location 1183
 103 run: break-if done?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: off-screen?:boolean <- greater-than row:number, bottom:number
9999 mem: location 1181 is 0
9999 mem: location 1177 is 9
9999 mem: storing 0 in location 1184
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 1173 is 1132
9999 mem: location 1132 is 7
9999 mem: location 1133 is 97
9999 mem: location 1134 is 98
9999 mem: location 1135 is 99
9999 mem: location 1136 is 10
9999 mem: location 1137 is 100
9999 mem: location 1138 is 101
9999 mem: location 1139 is 102
9999 mem: location 1180 is 1
9999 mem: location 1173 is 1132
9999 mem: location 1180 is 1
9999 run: address to copy is 1134
9999 run: its type is 4
9999 mem: location 1134 is 98
9999 mem: storing 98 in location 1185
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1185 is 98
9999 mem: storing 0 in location 1186
 103 run: break-unless newline?:boolean, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 27
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1182 is 1
9999 mem: location 1178 is 4
9999 mem: storing 0 in location 1187
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1187 is 0
9999 run: jumping to instruction 42
 103 run: print-character screen:address, c:character
9999 mem: location 1174 is 1031
9999 mem: location 1185 is 98
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1264
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1266
 104 run: c:character <- next-ingredient 
9999 mem: storing 98 in location 1267
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1268
9999 mem: storing 0 in location 1269
 104 run: break-if color-found?:boolean, 
9999 mem: location 1269 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1268
 104 run: break-unless x:address:screen, 
9999 mem: location 1266 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1266 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1266 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1270
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1266 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1266 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1271
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1266 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1266 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1272
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1266 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1266 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1273
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1267 is 98
9999 mem: storing 0 in location 1274
 104 run: break-unless newline?:boolean, 
9999 mem: location 1274 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1270 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1272 is 5
9999 mem: storing 0 in location 1277
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1277 is 0
9999 mem: location 1271 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 1 in location 1277
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1266 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1266 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1278
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1267 is 98
9999 mem: storing 0 in location 1279
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1279 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1278 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1277 is 1
9999 mem: location 1278 is 1036
9999 mem: location 1277 is 1
9999 mem: storing 1039 in location 1281
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1281 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1281 is 1039
9999 run: address to copy is 1039
9999 mem: storing 1039 in location 1282
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1281 is 1039
9999 mem: location 1039 is 0
9999 mem: location 1040 is 7
9999 mem: location 1281 is 1039
9999 run: address to copy is 1040
9999 mem: storing 1040 in location 1283
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1267 is 98
9999 mem: location 1282 is 1039
9999 mem: storing 98 in location 1039
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1268 is 7
9999 mem: location 1283 is 1040
9999 mem: storing 7 in location 1040
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1272 is 5
9999 mem: storing 4 in location 1284
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1271 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1284 is 4
9999 mem: storing 0 in location 1285
 104 run: break-if at-right?:boolean, 
9999 mem: location 1285 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1271 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1271 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1266 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1180 is 1
9999 mem: storing 2 in location 1180
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1182 is 1
9999 mem: storing 2 in location 1182
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 1180 is 2
9999 mem: location 1179 is 7
9999 mem: storing 0 in location 1183
 103 run: break-if done?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: off-screen?:boolean <- greater-than row:number, bottom:number
9999 mem: location 1181 is 0
9999 mem: location 1177 is 9
9999 mem: storing 0 in location 1184
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 1173 is 1132
9999 mem: location 1132 is 7
9999 mem: location 1133 is 97
9999 mem: location 1134 is 98
9999 mem: location 1135 is 99
9999 mem: location 1136 is 10
9999 mem: location 1137 is 100
9999 mem: location 1138 is 101
9999 mem: location 1139 is 102
9999 mem: location 1180 is 2
9999 mem: location 1173 is 1132
9999 mem: location 1180 is 2
9999 run: address to copy is 1135
9999 run: its type is 4
9999 mem: location 1135 is 99
9999 mem: storing 99 in location 1185
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1185 is 99
9999 mem: storing 0 in location 1186
 103 run: break-unless newline?:boolean, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 27
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1182 is 2
9999 mem: location 1178 is 4
9999 mem: storing 0 in location 1187
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1187 is 0
9999 run: jumping to instruction 42
 103 run: print-character screen:address, c:character
9999 mem: location 1174 is 1031
9999 mem: location 1185 is 99
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1295
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1297
 104 run: c:character <- next-ingredient 
9999 mem: storing 99 in location 1298
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1299
9999 mem: storing 0 in location 1300
 104 run: break-if color-found?:boolean, 
9999 mem: location 1300 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1299
 104 run: break-unless x:address:screen, 
9999 mem: location 1297 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1297 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1297 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1301
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1297 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1297 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1302
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1297 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1297 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1303
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1297 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1297 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1304
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1298 is 99
9999 mem: storing 0 in location 1305
 104 run: break-unless newline?:boolean, 
9999 mem: location 1305 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1301 is 1033
9999 mem: location 1033 is 0
9999 mem: location 1303 is 5
9999 mem: storing 0 in location 1308
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1308 is 0
9999 mem: location 1302 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 2 in location 1308
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1297 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1297 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1309
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1298 is 99
9999 mem: storing 0 in location 1310
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1310 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1309 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1308 is 2
9999 mem: location 1309 is 1036
9999 mem: location 1308 is 2
9999 mem: storing 1041 in location 1312
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1312 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1312 is 1041
9999 run: address to copy is 1041
9999 mem: storing 1041 in location 1313
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1312 is 1041
9999 mem: location 1041 is 0
9999 mem: location 1042 is 7
9999 mem: location 1312 is 1041
9999 run: address to copy is 1042
9999 mem: storing 1042 in location 1314
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1298 is 99
9999 mem: location 1313 is 1041
9999 mem: storing 99 in location 1041
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1299 is 7
9999 mem: location 1314 is 1042
9999 mem: storing 7 in location 1042
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1303 is 5
9999 mem: storing 4 in location 1315
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1302 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1315 is 4
9999 mem: storing 0 in location 1316
 104 run: break-if at-right?:boolean, 
9999 mem: location 1316 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1302 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1302 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1297 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1180 is 2
9999 mem: storing 3 in location 1180
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1182 is 2
9999 mem: storing 3 in location 1182
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 1180 is 3
9999 mem: location 1179 is 7
9999 mem: storing 0 in location 1183
 103 run: break-if done?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: off-screen?:boolean <- greater-than row:number, bottom:number
9999 mem: location 1181 is 0
9999 mem: location 1177 is 9
9999 mem: storing 0 in location 1184
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 1173 is 1132
9999 mem: location 1132 is 7
9999 mem: location 1133 is 97
9999 mem: location 1134 is 98
9999 mem: location 1135 is 99
9999 mem: location 1136 is 10
9999 mem: location 1137 is 100
9999 mem: location 1138 is 101
9999 mem: location 1139 is 102
9999 mem: location 1180 is 3
9999 mem: location 1173 is 1132
9999 mem: location 1180 is 3
9999 run: address to copy is 1136
9999 run: its type is 4
9999 mem: location 1136 is 10
9999 mem: storing 10 in location 1185
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1185 is 10
9999 mem: storing 1 in location 1186
 103 run: break-unless newline?:boolean, 
9999 mem: location 1186 is 1
9999 run: jump-unless fell through
 103 run: row:number <- add row:number, 1:literal
9999 mem: location 1181 is 0
9999 mem: storing 1 in location 1181
 103 run: column:number <- copy left:number
9999 mem: location 1176 is 0
9999 mem: storing 0 in location 1182
 103 run: move-cursor screen:address, row:number, column:number
9999 mem: location 1174 is 1031
9999 mem: location 1181 is 1
9999 mem: location 1182 is 0
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1326
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1328
 104 run: new-row:number <- next-ingredient 
9999 mem: storing 1 in location 1329
 104 run: new-column:number <- next-ingredient 
9999 mem: storing 0 in location 1330
 104 run: break-unless x:address:screen, 
9999 mem: location 1328 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1328 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 0
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1328 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1331
 104 run: row:address:number/deref <- copy new-row:number
9999 mem: location 1329 is 1
9999 mem: location 1331 is 1033
9999 mem: storing 1 in location 1033
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1328 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 3
9999 mem: location 1035 is 1036
9999 mem: location 1328 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1332
 104 run: column:address:number/deref <- copy new-column:number
9999 mem: location 1330 is 0
9999 mem: location 1332 is 1034
9999 mem: storing 0 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1328 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1180 is 3
9999 mem: storing 4 in location 1180
 103 run: loop +next-character:label
9999 run: jumping to instruction 14
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 1180 is 4
9999 mem: location 1179 is 7
9999 mem: storing 0 in location 1183
 103 run: break-if done?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: off-screen?:boolean <- greater-than row:number, bottom:number
9999 mem: location 1181 is 1
9999 mem: location 1177 is 9
9999 mem: storing 0 in location 1184
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 1173 is 1132
9999 mem: location 1132 is 7
9999 mem: location 1133 is 97
9999 mem: location 1134 is 98
9999 mem: location 1135 is 99
9999 mem: location 1136 is 10
9999 mem: location 1137 is 100
9999 mem: location 1138 is 101
9999 mem: location 1139 is 102
9999 mem: location 1180 is 4
9999 mem: location 1173 is 1132
9999 mem: location 1180 is 4
9999 run: address to copy is 1137
9999 run: its type is 4
9999 mem: location 1137 is 100
9999 mem: storing 100 in location 1185
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1185 is 100
9999 mem: storing 0 in location 1186
 103 run: break-unless newline?:boolean, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 27
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1182 is 0
9999 mem: location 1178 is 4
9999 mem: storing 0 in location 1187
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1187 is 0
9999 run: jumping to instruction 42
 103 run: print-character screen:address, c:character
9999 mem: location 1174 is 1031
9999 mem: location 1185 is 100
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1357
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1359
 104 run: c:character <- next-ingredient 
9999 mem: storing 100 in location 1360
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1361
9999 mem: storing 0 in location 1362
 104 run: break-if color-found?:boolean, 
9999 mem: location 1362 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1361
 104 run: break-unless x:address:screen, 
9999 mem: location 1359 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1359 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1359 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1363
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1359 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1359 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1364
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1359 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1359 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1365
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1359 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1359 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1366
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1360 is 100
9999 mem: storing 0 in location 1367
 104 run: break-unless newline?:boolean, 
9999 mem: location 1367 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1363 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1365 is 5
9999 mem: storing 5 in location 1370
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1370 is 5
9999 mem: location 1364 is 1034
9999 mem: location 1034 is 0
9999 mem: storing 5 in location 1370
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1359 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 0
9999 mem: location 1035 is 1036
9999 mem: location 1359 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1371
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1360 is 100
9999 mem: storing 0 in location 1372
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1372 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1371 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1370 is 5
9999 mem: location 1371 is 1036
9999 mem: location 1370 is 5
9999 mem: storing 1047 in location 1374
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1374 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1374 is 1047
9999 run: address to copy is 1047
9999 mem: storing 1047 in location 1375
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1374 is 1047
9999 mem: location 1047 is 0
9999 mem: location 1048 is 7
9999 mem: location 1374 is 1047
9999 run: address to copy is 1048
9999 mem: storing 1048 in location 1376
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1360 is 100
9999 mem: location 1375 is 1047
9999 mem: storing 100 in location 1047
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1361 is 7
9999 mem: location 1376 is 1048
9999 mem: storing 7 in location 1048
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1365 is 5
9999 mem: storing 4 in location 1377
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1364 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1377 is 4
9999 mem: storing 0 in location 1378
 104 run: break-if at-right?:boolean, 
9999 mem: location 1378 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1364 is 1034
9999 mem: location 1034 is 0
9999 mem: location 1364 is 1034
9999 mem: storing 1 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1359 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1180 is 4
9999 mem: storing 5 in location 1180
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1182 is 0
9999 mem: storing 1 in location 1182
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 1180 is 5
9999 mem: location 1179 is 7
9999 mem: storing 0 in location 1183
 103 run: break-if done?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: off-screen?:boolean <- greater-than row:number, bottom:number
9999 mem: location 1181 is 1
9999 mem: location 1177 is 9
9999 mem: storing 0 in location 1184
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 1173 is 1132
9999 mem: location 1132 is 7
9999 mem: location 1133 is 97
9999 mem: location 1134 is 98
9999 mem: location 1135 is 99
9999 mem: location 1136 is 10
9999 mem: location 1137 is 100
9999 mem: location 1138 is 101
9999 mem: location 1139 is 102
9999 mem: location 1180 is 5
9999 mem: location 1173 is 1132
9999 mem: location 1180 is 5
9999 run: address to copy is 1138
9999 run: its type is 4
9999 mem: location 1138 is 101
9999 mem: storing 101 in location 1185
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1185 is 101
9999 mem: storing 0 in location 1186
 103 run: break-unless newline?:boolean, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 27
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1182 is 1
9999 mem: location 1178 is 4
9999 mem: storing 0 in location 1187
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1187 is 0
9999 run: jumping to instruction 42
 103 run: print-character screen:address, c:character
9999 mem: location 1174 is 1031
9999 mem: location 1185 is 101
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1388
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1390
 104 run: c:character <- next-ingredient 
9999 mem: storing 101 in location 1391
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1392
9999 mem: storing 0 in location 1393
 104 run: break-if color-found?:boolean, 
9999 mem: location 1393 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1392
 104 run: break-unless x:address:screen, 
9999 mem: location 1390 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1390 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1390 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1394
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1390 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1390 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1395
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1390 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1390 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1396
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1390 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1390 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1397
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1391 is 101
9999 mem: storing 0 in location 1398
 104 run: break-unless newline?:boolean, 
9999 mem: location 1398 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1394 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1396 is 5
9999 mem: storing 5 in location 1401
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1401 is 5
9999 mem: location 1395 is 1034
9999 mem: location 1034 is 1
9999 mem: storing 6 in location 1401
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1390 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 1
9999 mem: location 1035 is 1036
9999 mem: location 1390 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1402
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1391 is 101
9999 mem: storing 0 in location 1403
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1403 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1402 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1401 is 6
9999 mem: location 1402 is 1036
9999 mem: location 1401 is 6
9999 mem: storing 1049 in location 1405
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1405 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1405 is 1049
9999 run: address to copy is 1049
9999 mem: storing 1049 in location 1406
schedule: print-character/render/edit/run1001/edit-prints-multiple-lines
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1405 is 1049
9999 mem: location 1049 is 0
9999 mem: location 1050 is 7
9999 mem: location 1405 is 1049
9999 run: address to copy is 1050
9999 mem: storing 1050 in location 1407
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1391 is 101
9999 mem: location 1406 is 1049
9999 mem: storing 101 in location 1049
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1392 is 7
9999 mem: location 1407 is 1050
9999 mem: storing 7 in location 1050
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1396 is 5
9999 mem: storing 4 in location 1408
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1395 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1408 is 4
9999 mem: storing 0 in location 1409
 104 run: break-if at-right?:boolean, 
9999 mem: location 1409 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1395 is 1034
9999 mem: location 1034 is 1
9999 mem: location 1395 is 1034
9999 mem: storing 2 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1390 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1180 is 5
9999 mem: storing 6 in location 1180
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1182 is 1
9999 mem: storing 2 in location 1182
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 1180 is 6
9999 mem: location 1179 is 7
9999 mem: storing 0 in location 1183
 103 run: break-if done?:boolean, 
9999 mem: location 1183 is 0
9999 run: jump-if fell through
 103 run: off-screen?:boolean <- greater-than row:number, bottom:number
9999 mem: location 1181 is 1
9999 mem: location 1177 is 9
9999 mem: storing 0 in location 1184
 103 run: break-if off-screen?:boolean, 
9999 mem: location 1184 is 0
9999 run: jump-if fell through
 103 run: c:character <- index s:address:array:character/deref, i:number
9999 mem: location 1173 is 1132
9999 mem: location 1132 is 7
9999 mem: location 1133 is 97
9999 mem: location 1134 is 98
9999 mem: location 1135 is 99
9999 mem: location 1136 is 10
9999 mem: location 1137 is 100
9999 mem: location 1138 is 101
9999 mem: location 1139 is 102
9999 mem: location 1180 is 6
9999 mem: location 1173 is 1132
9999 mem: location 1180 is 6
9999 run: address to copy is 1139
9999 run: its type is 4
9999 mem: location 1139 is 102
9999 mem: storing 102 in location 1185
 103 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1185 is 102
9999 mem: storing 0 in location 1186
 103 run: break-unless newline?:boolean, 
9999 mem: location 1186 is 0
9999 run: jumping to instruction 27
 103 run: at-right?:boolean <- equal column:number, right:number
9999 mem: location 1182 is 2
9999 mem: location 1178 is 4
9999 mem: storing 0 in location 1187
 103 run: break-unless at-right?:boolean, 
9999 mem: location 1187 is 0
9999 run: jumping to instruction 42
 103 run: print-character screen:address, c:character
9999 mem: location 1174 is 1031
9999 mem: location 1185 is 102
 104 run: default-space:address:array:location <- new location:type, 30:literal
9999 mem: array size is 30
9999 mem: new alloc: 1419
 104 run: x:address:screen <- next-ingredient 
9999 mem: storing 1031 in location 1421
 104 run: c:character <- next-ingredient 
9999 mem: storing 102 in location 1422
 104 run: color:number, color-found?:boolean <- next-ingredient 
9999 mem: storing 0 in location 1423
9999 mem: storing 0 in location 1424
 104 run: break-if color-found?:boolean, 
9999 mem: location 1424 is 0
9999 run: jump-if fell through
 104 run: color:number <- copy 7:literal/white
9999 mem: storing 7 in location 1423
 104 run: break-unless x:address:screen, 
9999 mem: location 1421 is 1031
9999 run: jump-unless fell through
 104 run: row:address:number <- get-address x:address:screen/deref, cursor-row:offset
9999 mem: location 1421 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1421 is 1031
9999 run: address to copy is 1033
9999 mem: storing 1033 in location 1425
 104 run: column:address:number <- get-address x:address:screen/deref, cursor-column:offset
9999 mem: location 1421 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1421 is 1031
9999 run: address to copy is 1034
9999 mem: storing 1034 in location 1426
 104 run: width:number <- get x:address:screen/deref, num-columns:offset
9999 mem: location 1421 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1421 is 1031
9999 run: address to copy is 1032
9999 run: its type is 1
9999 mem: location 1032 is 5
9999 mem: storing 5 in location 1427
 104 run: height:number <- get x:address:screen/deref, num-rows:offset
9999 mem: location 1421 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1421 is 1031
9999 run: address to copy is 1031
9999 run: its type is 1
9999 mem: location 1031 is 3
9999 mem: storing 3 in location 1428
 104 run: newline?:boolean <- equal c:character, 10:literal/newline
9999 mem: location 1422 is 102
9999 mem: storing 0 in location 1429
 104 run: break-unless newline?:boolean, 
9999 mem: location 1429 is 0
9999 run: jumping to instruction 25
 104 run: index:number <- multiply row:address:number/deref, width:number
9999 mem: location 1425 is 1033
9999 mem: location 1033 is 1
9999 mem: location 1427 is 5
9999 mem: storing 5 in location 1432
 104 run: index:number <- add index:number, column:address:number/deref
9999 mem: location 1432 is 5
9999 mem: location 1426 is 1034
9999 mem: location 1034 is 2
9999 mem: storing 7 in location 1432
 104 run: buf:address:array:screen-cell <- get x:address:screen/deref, data:offset
9999 mem: location 1421 is 1031
9999 mem: location 1031 is 3
9999 mem: location 1032 is 5
9999 mem: location 1033 is 1
9999 mem: location 1034 is 2
9999 mem: location 1035 is 1036
9999 mem: location 1421 is 1031
9999 run: address to copy is 1035
9999 run: its type is 2
9999 mem: location 1035 is 1036
9999 mem: storing 1036 in location 1433
 104 run: backspace?:boolean <- equal c:character, 8:literal
9999 mem: location 1422 is 102
9999 mem: storing 0 in location 1434
 104 run: break-unless backspace?:boolean, 
9999 mem: location 1434 is 0
9999 run: jumping to instruction 44
 104 run: cursor:address:screen-cell <- index-address buf:address:array:screen-cell/deref, index:number
9999 mem: location 1433 is 1036
9999 mem: location 1036 is 15
9999 mem: location 1037 is 97
9999 mem: location 1038 is 7
9999 mem: location 1039 is 98
9999 mem: location 1040 is 7
9999 mem: location 1041 is 99
9999 mem: location 1042 is 7
9999 mem: location 1043 is 0
9999 mem: location 1044 is 7
9999 mem: location 1045 is 0
9999 mem: location 1046 is 7
9999 mem: location 1047 is 100
9999 mem: location 1048 is 7
9999 mem: location 1049 is 101
9999 mem: location 1050 is 7
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1053 is 0
9999 mem: location 1054 is 7
9999 mem: location 1055 is 0
9999 mem: location 1056 is 7
9999 mem: location 1057 is 0
9999 mem: location 1058 is 7
9999 mem: location 1059 is 0
9999 mem: location 1060 is 7
9999 mem: location 1061 is 0
9999 mem: location 1062 is 7
9999 mem: location 1063 is 0
9999 mem: location 1064 is 7
9999 mem: location 1065 is 0
9999 mem: location 1066 is 7
9999 mem: location 1432 is 7
9999 mem: location 1433 is 1036
9999 mem: location 1432 is 7
9999 mem: storing 1051 in location 1436
 104 run: cursor-contents:address:character <- get-address cursor:address:screen-cell/deref, contents:offset
9999 mem: location 1436 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1436 is 1051
9999 run: address to copy is 1051
9999 mem: storing 1051 in location 1437
 104 run: cursor-color:address:number <- get-address cursor:address:screen-cell/deref, color:offset
9999 mem: location 1436 is 1051
9999 mem: location 1051 is 0
9999 mem: location 1052 is 7
9999 mem: location 1436 is 1051
9999 run: address to copy is 1052
9999 mem: storing 1052 in location 1438
 104 run: cursor-contents:address:character/deref <- copy c:character
9999 mem: location 1422 is 102
9999 mem: location 1437 is 1051
9999 mem: storing 102 in location 1051
 104 run: cursor-color:address:number/deref <- copy color:number
9999 mem: location 1423 is 7
9999 mem: location 1438 is 1052
9999 mem: storing 7 in location 1052
 104 run: right:number <- subtract width:number, 1:literal
9999 mem: location 1427 is 5
9999 mem: storing 4 in location 1439
 104 run: at-right?:boolean <- greater-or-equal column:address:number/deref, right:number
9999 mem: location 1426 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1439 is 4
9999 mem: storing 0 in location 1440
 104 run: break-if at-right?:boolean, 
9999 mem: location 1440 is 0
9999 run: jump-if fell through
 104 run: column:address:number/deref <- add column:address:number/deref, 1:literal
9999 mem: location 1426 is 1034
9999 mem: location 1034 is 2
9999 mem: location 1426 is 1034
9999 mem: storing 3 in location 1034
 104 run: reply x:address:screen/same-as-ingredient:0
9999 mem: location 1421 is 1031
 103 run: i:number <- add i:number, 1:literal
9999 mem: location 1180 is 6
9999 mem: storing 7 in location 1180
 103 run: column:number <- add column:number, 1:literal
9999 mem: location 1182 is 2
9999 mem: storing 3 in location 1182
 103 run: loop 
9999 run: jumping to instruction 13
 103 run: done?:boolean <- greater-or-equal i:number, len:number
9999 mem: location 1180 is 7
9999 mem: location 1179 is 7
9999 mem: storing 1 in location 1183
 103 run: break-if done?:boolean, 
9999 mem: location 1183 is 1
9999 run: jumping to instruction 47
 100 run: screen-should-contain [
    .abc  .
    .def  .
    .     .
  ]
