9991 parse: --- defining main
9993 parse: instruction: new
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"number": "type"}
9993 parse:   product: {"k": <"address" : <"shared" : <"number" : <>>>>}
9992 load: after rewriting: k:address:shared:number <- new number:type
9993 parse: instruction: test
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"k": <>}
9992 load: after rewriting: test k
9999 parse: recipe main has a header
9999 parse: recipe has a header; parsing
9999 parse: header ingredient: k:address:shared:number
9991 parse: --- defining test
9993 parse: instruction: local-scope
9993 parse:   number of ingredients: 0
9992 load: after rewriting: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 parse: instruction: load-ingredients
9993 parse:   number of ingredients: 0
9992 load: after rewriting:  
9993 parse: instruction: foo
9993 parse:   number of ingredients: 1
9993 parse:   ingredient: {"k": <>}
9992 load: after rewriting: foo k
9999 parse: recipe test has a header
9999 parse: recipe has a header; parsing
9991 parse: --- defining foo
9993 parse: instruction: local-scope
9993 parse:   number of ingredients: 0
9992 load: after rewriting: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9993 parse: instruction: load-ingredients
9993 parse:   number of ingredients: 0
9992 load: after rewriting:  
9993 parse: instruction: next-ingredient
9993 parse:   number of ingredients: 0
9993 parse:   product: {"k": <"address" : <"shared" : <"number" : <>>>>}
9993 parse:   product: {"found?": "boolean"}
9992 load: after rewriting: k:address:shared:number, found?:boolean <- next-ingredient 
9999 parse: recipe foo has a header
9990 transform: === transform_all()
9991 transform: --- fill in reply ingredients from header for recipe main
9991 transform: --- fill in reply ingredients from header for recipe test
9991 transform: --- fill in reply ingredients from header for recipe foo
9991 transform: --- deduce types for recipe main
9992 transform: k => <address : <shared : <number : <>>>>
9992 transform: k <= <address : <shared : <number : <>>>>
9991 transform: --- deduce types for recipe test
9992 transform: default-space => <address : <shared : <array : <number : <>>>>>
9992 transform: k => <address : <shared : <number : <>>>>
9992 transform: k <= <address : <shared : <number : <>>>>
9991 transform: --- deduce types for recipe foo
9992 transform: default-space => <address : <shared : <array : <number : <>>>>>
9992 transform: k => <address : <shared : <number : <>>>>
9992 transform: found? => boolean
9991 transform: --- collect surrounding spaces for recipe main
9991 transform: --- collect surrounding spaces for recipe test
9991 transform: --- collect surrounding spaces for recipe foo
9991 transform: --- transform names for recipe main
9993 name: assign k 1
9991 transform: --- transform names for recipe test
9993 name: assign k 1
9991 transform: --- transform names for recipe foo
9993 name: assign k 1
9993 name: assign found? 2
9991 transform: --- resolve ambiguous calls for recipe main
9992 transform: instruction test k
9992 transform: checking variant (strict) 9: recipe test {"k": <"address" : <"shared" : <"number" : <>>>>}
9991 transform: --- resolve ambiguous calls for recipe test
9992 transform: instruction foo k
9992 transform: checking variant (strict) 60: recipe foo
9991 transform: --- resolve ambiguous calls for recipe foo
9991 transform: --- compute instruction operations for recipe main
9991 transform: --- compute instruction operations for recipe test
9991 transform: --- compute instruction operations for recipe foo
9991 transform: --- transform braces for recipe main
9992 transform: new ...
9992 transform: test ...
9992 transform:  ...
9991 transform: --- transform braces for recipe test
9992 transform: local-scope ...
9992 transform:  ...
9992 transform: foo ...
9992 transform:  ...
9991 transform: --- transform braces for recipe foo
9992 transform: local-scope ...
9992 transform: next-ingredient ...
9992 transform:  ...
9991 transform: --- perform checks for recipe main
9991 transform: --- perform checks for recipe test
9991 transform: --- perform checks for recipe foo
9991 transform: --- type-check 'call' instructions inside recipe main
9991 transform: --- type-check 'call' instructions inside recipe test
9991 transform: --- type-check 'call' instructions inside recipe foo
9991 transform: --- type-check calls inside recipe main
9991 transform: --- type-check calls inside recipe test
9991 transform: --- type-check calls inside recipe foo
9991 transform: --- convert 'new' to 'allocate' for recipe main
9992 new: size of "number" is 1
9991 transform: --- convert 'new' to 'allocate' for recipe test
9992 new: size of "location" is 1
9991 transform: --- convert 'new' to 'allocate' for recipe foo
9992 new: size of "location" is 1
9991 transform: --- parsing any uninitialized reagents as integers
9999 trace: new routine; incrementing callstack depth to 1
9999 new: routine allocated memory from 1000 to 101000
9990 schedule: main
 102 run: k:address:shared:number <- new number:type
9999 mem: allocating size 2
9999 mem: new alloc: 1000
9999 mem: storing 1000 in location 1
9999 mem: incrementing refcount of 1000: 0 -> 1
 102 run: test k
9999 mem: location 1 is 1000
9999 trace: incrementing callstack depth to 2
 103 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 2
9999 mem: allocating size 4
9999 mem: new alloc: 1002
9999 mem: storing 2 in location 1003
 103 run: k:address:shared:number <- next-ingredient-without-typechecking 
9999 mem: storing 1000 in location 1005
9999 mem: incrementing refcount of 1000: 1 -> 2
 103 run: foo k
9999 mem: location 1005 is 1000
9999 trace: incrementing callstack depth to 3
 104 run: default-space:address:shared:array:location <- new location:type, number-of-locals:literal
9999 mem: array size is 3
9999 mem: allocating size 5
9999 mem: new alloc: 1006
9999 mem: storing 3 in location 1007
 104 run: k:address:shared:number, found?:boolean <- next-ingredient 
9999 mem: storing 1000 in location 1009
9999 mem: incrementing refcount of 1000: 2 -> 3
9999 mem: storing 1 in location 1010
 104 run: reply 
9999 abandon: saving in free-list of size 5
9999 trace: reply: decrementing callstack depth from 3
 103 run: reply 
9999 abandon: saving in free-list of size 4
9999 trace: reply: decrementing callstack depth from 2
 102 run: reply 
9999 trace: reply: decrementing callstack depth from 1
